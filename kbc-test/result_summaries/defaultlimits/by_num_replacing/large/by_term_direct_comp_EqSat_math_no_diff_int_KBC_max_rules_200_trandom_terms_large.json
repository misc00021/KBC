[
  {
    "base_term": "(* (pow (* 1 (* 0 (/ (+ (* (* (pow a a) a) (* a 0)) (+ 0 a)) 1))) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.010595821
    },
    "Extended": {
      "iterations": 27,
      "stop_reason": "TimeLimit(5.001212426)",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 5.3679962660000005
    },
    "speedup": 0.001973887550390483,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- 0 (* (- (/ a a) (+ (- a a) (+ (pow a a) 0))) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.00891225
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(26312)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 3.374775091
    },
    "speedup": 0.0026408426516385,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ -1 (pow -1 -1)) (* 0 (/ 0 (* (pow (+ (- (pow a 0) 1) a) (+ -1 -1)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0049136810000000005
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13585)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.7935215690000001
    },
    "speedup": 0.002739683249384998,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* 0 (+ (- 1 (pow 1 0)) (pow a (pow (+ (- (/ a a) -1) (+ 0 a)) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.006623877
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13631)",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 2.4059277679999997
    },
    "speedup": 0.002753148738752992,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ -1 -1) (- (- (pow -1 (pow (- (* (- a -1) -1) (- a a)) a)) b) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 (pow (+ -1 (* -1 a)) a)) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.008904872999999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15982)",
      "output_term": "(- (pow -1 (pow (- -1 a) a)) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 3.209148729
    },
    "speedup": 0.0027748396076285437,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 0 (+ (- a a) (pow (* (/ -1 (* (* (* 1 a) 0) (- 1 -1))) 1) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 (/ -1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.004779591
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10662)",
      "output_term": "(pow 0 (/ 1 (/ -1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 1.445966086
    },
    "speedup": 0.0033054654920862364,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow -1 (- 0 (pow (+ 0 (+ a (- (- (* 1 a) a) (pow b b)))) 1))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ (pow b b) (* -1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.0073511819999999995
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12402)",
      "output_term": "(pow -1 (- (pow b b) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.897563734
    },
    "speedup": 0.0038740105896227037,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* -1 0) (* 1 (- (- a a) (+ (+ (pow (+ 0 1) -1) (* -1 0)) (/ 0 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ 1 (/ 0 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.006821377
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11190)",
      "output_term": "(- -1 (/ 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.561534025
    },
    "speedup": 0.0043683819185432095,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (/ a 1) (pow (+ a a) (/ (pow 0 -1) (- (* (* b a) 1) (- a a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (+ a a) (/ (pow 0 -1) (* a b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.012281815000000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15544)",
      "output_term": "(- (/ a 1) (pow (+ a a) (/ (pow 0 -1) (* a b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 2.7401479350000004
    },
    "speedup": 0.004482172237171567,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- (- (- (* 1 a) a) (* (- (+ (pow a a) 0) 0) a)) -1) 0) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011249189
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10123)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.462054621
    },
    "speedup": 0.0045690249534069945,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (- a a) (+ 0 (+ (pow (+ 1 (+ (+ 1 0) 1)) a) (pow (pow a a) 1)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008808357
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11717)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.822762162
    },
    "speedup": 0.004832422563750804,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow (pow (+ (- a a) (+ (/ (pow a (/ 1 -1)) 1) (* a b))) -1) (/ 0 -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007807579
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11276)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.4138244899999999
    },
    "speedup": 0.005522311330170834,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (- (- a a) (- (/ -1 (* (/ (pow (- a 0) 0) (pow 1 0)) (* -1 a))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (/ 1 (* a -1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.008876619
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12422)",
      "output_term": "(/ 1 (- a (/ -1 (- 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.548134047
    },
    "speedup": 0.005733753493246441,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ a (+ 0 (+ b (* 0 (pow b (/ (+ (pow 1 0) a) -1)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.017057222
    },
    "Extended": {
      "iterations": 30,
      "stop_reason": "IterationLimit(30)",
      "output_term": "(- 1 (+ a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 2.900584293
    },
    "speedup": 0.005880615861143671,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (- a a) (pow a (+ (/ (- (+ (* 0 a) a) (+ 0 0)) 1) -1))) (/ a 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (- 0 (pow a (+ a -1))) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 11,
      "output_depth": 5,
      "simplification_time": 0.012013860999999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13350)",
      "output_term": "(- (- 0 (/ a 1)) (pow a (+ -1 (/ a 1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.764114321
    },
    "speedup": 0.006810137448002724,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ a (- (pow 0 (- (pow a (/ (+ a c) 0)) (- a a))) 1)) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ c (/ a (+ (pow 0 (pow a (/ (+ a c) 0))) -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.011474739000000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10245)",
      "output_term": "(+ c (/ a (- (pow 0 (pow a (/ (+ a c) 0))) 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.5825527249999998
    },
    "speedup": 0.007250778327148628,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 1 a) (- (* (+ (/ a a) (- (* (/ -1 -1) b) (/ c 1))) 0) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.011155357
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11083)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.357803937
    },
    "speedup": 0.008215734758176652,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (- a a) (* b (+ (pow (- (/ (- 1 a) 0) a) (+ -1 -1)) b))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* b (+ b (pow (- (/ (- 1 a) 0) a) -2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.013836226
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10579)",
      "output_term": "(/ 1 (* b (+ b (pow (- (/ (- 1 a) 0) a) -2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 1.555189162
    },
    "speedup": 0.008896812258006207,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (/ (pow (* a 0) (+ 0 (+ (- a a) (* (+ a b) c)))) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* (+ a b) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.014177411999999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10072)",
      "output_term": "(- 0 (/ (pow 0 (* (+ a b) c)) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.5233089359999998
    },
    "speedup": 0.00930698406931685,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ 0 (+ (* (- a a) (+ a a)) (* (pow (pow (* b a) -1) b) (* c a)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (pow (/ 1 (* a b)) b) (* a c)) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.052564828
    },
    "Extended": {
      "iterations": 24,
      "stop_reason": "TimeLimit(5.005915805)",
      "output_term": "(/ (* a (* (pow (/ 1 (* a b)) b) c)) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 5.362685619
    },
    "speedup": 0.00980195964010323,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (- a a) a) (pow (* (pow (/ b (/ -1 (* (/ b a) b))) -1) b) (/ a e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 0 a) (pow (* b (/ 1 (/ b (/ -1 (* b (/ b a)))))) (/ a e)))",
      "output_weight_simple": 16,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.017882868
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13542)",
      "output_term": "(- (pow (/ b (/ b (/ -1 (* b (/ b a))))) (/ a e)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 1.680628279
    },
    "speedup": 0.010640584966617713,
    "weight_simple_diff": 4,
    "weight_complex_diff": 5,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (+ (- b b) (pow b (+ a (/ -1 (- (/ (- c 0) d) (- -1 1)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (+ a (/ -1 (+ (/ c d) 2)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.013537513000000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10150)",
      "output_term": "(- a (pow b (+ a (/ -1 (- (/ c d) -2)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.18151453
    },
    "speedup": 0.0114577626057633,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (pow (pow -1 (/ (pow a a) (- (* (+ c (- b e)) (pow d 0)) (- b b)))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019820295
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11795)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.651469187
    },
    "speedup": 0.012001613566890001,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a (pow (pow a (- a 1)) (* 1 (pow (- -1 (+ (- b b) d)) -1)))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (pow (pow a (+ a -1)) (/ 1 (- -1 d)))) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.022851441
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10251)",
      "output_term": "(- (- a d) (pow (pow a (- a 1)) (/ 1 (- -1 d))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 1.835984445
    },
    "speedup": 0.012446424076321627,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ (+ (* -1 (- (pow (- (+ (pow -1 1) a) (- b b)) b) -1)) c) -1) (+ -1 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.027523649999999997
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14236)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.048554633
    },
    "speedup": 0.013435643627279328,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- a a) (- (/ 1 (+ -1 c)) (pow b (/ (pow (* 1 1) a) (* e 0))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ c (+ (pow b (/ (pow 1 a) 0)) (* -1 (/ 1 (+ -1 c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.028585641
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16674)",
      "output_term": "(+ c (- (pow b (/ (pow 1 a) 0)) (/ 1 (+ -1 c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 2.102192217
    },
    "speedup": 0.013598014857458679,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a 0) (/ (+ b (* 0 (+ c (- (+ (* 1 c) a) (- b b))))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ b d))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.015969242
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10559)",
      "output_term": "(pow 0 (/ b d))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 1.147757398
    },
    "speedup": 0.013913429813501408,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ 1 (* (* (+ 0 (+ a (* (* (pow 0 0) -1) (+ a a)))) (- 0 0)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.05113427799999999
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(/ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 3.050214006
    },
    "speedup": 0.0167641607767242,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (- (+ (pow (- (- a a) (- (+ (pow -1 1) a) (/ -1 a))) a) 0) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (pow (+ 1 (+ (/ -1 a) (* a -1))) a) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.025424928
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10910)",
      "output_term": "(/ 1 (- (pow (+ (/ -1 a) (- 1 a)) a) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.417522516
    },
    "speedup": 0.017936172239256337,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- 0 (+ (+ (/ 1 -1) (/ a a)) (- a (/ (- -1 (* a 1)) (+ 0 -1))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024815483
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10457)",
      "output_term": "(- (/ (- -1 a) -1) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 1.292098716
    },
    "speedup": 0.019205562773734697,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(- (- a (pow (* 0 (- b (* (- (pow (+ a b) c) c) (+ 0 -1)))) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025184695
    },
    "Extended": {
      "iterations": 16,
      "stop_reason": "NodeLimit(10063)",
      "output_term": "(- 0 (pow 0 0))",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 1.260687646
    },
    "speedup": 0.01997695073788325,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(* 0 (* (- (* -1 (- (- a a) (- a (pow 0 b)))) (pow 0 1)) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.043483074
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10833)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.762310161
    },
    "speedup": 0.02467390528766292,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (pow (* -1 b) 1)) (- (- c c) (/ 1 (+ (+ -1 (/ c b)) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (* -1 b)) (/ 1 (+ -1 (+ c (/ c b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.033064698
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10012)",
      "output_term": "(- (/ 1 (+ -1 (+ c (/ c b)))) (* a b))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.308407246
    },
    "speedup": 0.025270952985841227,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 0 (/ (/ 0 (pow a (+ (+ (+ (/ b 1) a) (/ -1 1)) -1))) -1)) (- c 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.038909541000000006
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10478)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.486094049
    },
    "speedup": 0.026182421648335397,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (pow (* a (+ (pow -1 a) b)) c) (+ (- d d) (* -1 (/ (/ e c) c)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* e (pow c -2)) (* -1 (pow (* a (+ (pow -1 a) b)) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.051605786
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12912)",
      "output_term": "(- (/ (/ e c) c) (pow (* a (+ (pow -1 a) b)) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 1.923602957
    },
    "speedup": 0.02682767034236785,
    "weight_simple_diff": 2,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ (- b b) (+ (/ (/ -1 (/ (* -1 (pow 1 b)) (- d -1))) b) (- -1 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (/ (/ -1 (/ (* -1 (pow 1 b)) (+ 1 d))) b) -2))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.07156741600000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15108)",
      "output_term": "(* a (+ (/ (/ -1 (/ (- 0 (pow 1 b)) (+ 1 d))) b) -2))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 2.358257172
    },
    "speedup": 0.030347587553101695,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow 1 -1) a) (pow (* (+ 0 a) (/ (+ a (/ a a)) (+ (- a a) b))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (/ 1 (* a (/ (+ 1 a) b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.040181925
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12132)",
      "output_term": "(/ (pow 1 a) (/ 1 (* a (/ (+ a 1) b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.3093655260000001
    },
    "speedup": 0.030688088392515075,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (* 0 0) (+ (pow (+ (+ (/ (/ a a) -1) 1) (* -1 b)) a) 0)) (+ b c))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.034189677
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11168)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.101021495
    },
    "speedup": 0.031052688031308603,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (+ (+ (- a 0) (* (pow (* a -1) (* a c)) -1)) -1) 0) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (pow (* a -1) (* a c))) (+ a -1))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.010334062
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- -1 (pow (- 0 a) (* a c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.321973129
    },
    "speedup": 0.032096038672842164,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a a) (* c (+ (- -1 (pow (pow 1 (+ b (pow 1 -1))) (/ 1 a))) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* c (+ d (- -1 (pow (pow 1 (+ 1 b)) (/ 1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.077280386
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12385)",
      "output_term": "(* c (- (+ -1 d) (pow (pow 1 (+ 1 b)) (/ 1 a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 1.981768952
    },
    "speedup": 0.0389956588642731,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (pow a -1) (- (- (- b b) (pow (* (* 1 b) b) (/ b b))) b)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (* -1 (+ (* b b) (+ a b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.074118908
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(17681)",
      "output_term": "(- (pow a -1) (+ (* b b) (+ a b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.74619428
    },
    "speedup": 0.04244596884145102,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* (- (* (pow a 0) (+ (* (- (- a a) c) 1) (- a a))) 1) a) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* -1 (+ a (* a c))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.050088124000000005
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10505)",
      "output_term": "(- (* a (- -1 c)) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.164300089
    },
    "speedup": 0.04301994346064162,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ -1 (+ 0 (/ -1 (- (/ 1 1) (- (- (- (pow a 0) -1) (/ b 0)) (/ b 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -1 (+ b (+ -1 (/ b 0)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.050708344
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11062)",
      "output_term": "(+ -1 (/ -1 (+ -1 (+ (/ b 0) (/ b 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.131406992
    },
    "speedup": 0.044818835625509375,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ -1 (+ (- (+ 0 (* -1 (* (- a (- a -1)) (/ 0 c)))) a) (pow a 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ -1 (+ (- 0 a) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.063800876
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12303)",
      "output_term": "(/ a (/ -1 (- 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.39634816
    },
    "speedup": 0.04569123792163697,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (/ (pow (+ a -1) -1) (pow (+ (/ (+ (- a a) (* a a)) (pow c e)) e) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (/ 1 (+ a -1)) (pow (+ e (/ (* a a) (pow c e))) b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.027741090000000003
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10026)",
      "output_term": "(* a (/ (/ 1 (+ a -1)) (pow (+ e (/ (* a a) (pow c e))) b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.579213738
    },
    "speedup": 0.047894392311530434,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- 1 a) (- (- (pow a 1) a) (pow (pow (+ 0 (* 1 a)) -1) (/ -1 b)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (pow (/ 1 a) (/ -1 b)) (+ a -1)) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.062655201
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10509)",
      "output_term": "(pow (* (pow (/ 1 a) (/ -1 b)) (+ a -1)) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 1.2694272549999999
    },
    "speedup": 0.04935706300082552,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 1 (pow (/ 1 1) a)) (+ a (+ (- b (* -1 a)) b)))",
    "input_weight_simple": 17,
    "input_weight_complex": 30,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 a) (+ 1 (* (+ a b) 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.135476603
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (pow 1 a) (* (+ a b) 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 2.168991943
    },
    "speedup": 0.0624606298964016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ (+ a (- -1 (pow (+ (+ (* -1 a) a) 1) (* b c)))) b) d) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (+ a (+ b (- -1 (pow 1 (* b c))))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.032918750999999996
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (+ a (+ -1 (- b (pow 1 (* b c))))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.516485414
    },
    "speedup": 0.06373607096675918,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (* a 1) (- (+ 0 (* (pow (pow (/ -1 a) 1) (* a -1)) (- 1 -1))) -1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow (/ -1 a) (* a -1)) -2) (+ a -1))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.021609382
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (* (pow (/ -1 a) (- 0 a)) -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.301690458
    },
    "speedup": 0.07162766148871702,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 1 (+ (* a 1) (- (- (- (/ (* (+ 0 b) b) 0) (* -1 b)) 1) (* 0 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ a (+ b (+ (/ (* b b) 0) -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.034469283
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (/ (* b b) 0) (+ a (+ b -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.461933243
    },
    "speedup": 0.07461961987438086,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (* 0 a) (+ (+ (- a -1) (* (* 1 (pow a (* 1 a))) -1)) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (+ a 1) (+ a (* -1 (pow a a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.022577949
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (- (+ a 1) (pow a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.29631983700000003
    },
    "speedup": 0.07619452422957426,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (pow (+ (+ a (- a -1)) (+ (pow (+ (/ (pow c a) -1) (* -1 a)) b) 0)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.02414412
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.30864417099999997
    },
    "speedup": 0.07822639229431617,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow (- (pow a (/ 0 (+ (+ (* -1 a) 1) (- a a)))) a) -1) a) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (- 1 a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.009422237000000002
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.11900635100000001
    },
    "speedup": 0.07917423667582246,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* 1 (+ (* a (+ b (* (+ (* (- (/ -1 b) 0) (* -1 -1)) (* 1 b)) 0))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.00602833
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.07590117300000002
    },
    "speedup": 0.07942341022845588,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ 0 1) (+ (- -1 (* (pow 0 (+ (pow -1 a) 1)) -1)) b)) (* (* b b) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (+ -1 (+ (pow 0 (+ 1 (pow -1 a))) b))) (* b b))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.015344807999999998
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (+ (pow 0 (+ 1 (pow -1 a))) (+ -1 b))) (* b b))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.19269509299999998
    },
    "speedup": 0.0796325830673851,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ (* -1 (* (pow 0 (/ (pow (/ (* -1 a) 1) (* 0 -1)) (- 0 -1))) -1)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005053194
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.060382429
    },
    "speedup": 0.08368649760677895,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (+ a (- (/ a -1) (- -1 (* (- (* a 0) 1) (- 1 -1))))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.009771250999999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (/ a -1) (+ a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.115418036
    },
    "speedup": 0.08465965405961333,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (* (/ -1 a) b) (+ (- (- -1 a) a) (+ b (pow 1 (* c (+ (* b -1) 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (/ -1 a) b) (+ -1 (+ b (+ (pow 1 (* b (* -1 c))) (* a -2)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.12558249800000001
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (/ -1 a) b) (+ -1 (+ (pow 1 (- 0 (* b c))) (- (- b a) a))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 1.4155722199999998
    },
    "speedup": 0.08871500600654626,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (+ a -1) (pow 1 a)) (* c (- (* (* c (+ (/ 1 -1) 0)) (/ -1 -1)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (+ (pow 1 a) (* c c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.038430615
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (pow 1 a) (+ -1 (* c c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.427643042
    },
    "speedup": 0.08986610613437739,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ 1 (- (+ (* -1 (* a a)) a) (- (* (pow (* a a) -1) (* a b)) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (+ c (+ 1 (* -1 (* a (+ a (* (/ 1 (* a a)) b))))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 30,
      "output_depth": 11,
      "simplification_time": 0.24453293200000004
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ c (+ 1 (* a (- (- 1 a) (/ b (* a a)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 2.72027696
    },
    "speedup": 0.08989266004737989,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": 3
  },
  {
    "base_term": "(pow (* 1 a) (pow 0 (+ a (+ (/ -1 (* -1 (+ (- a a) a))) (- (- -1 b) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 (+ (/ -1 (* a -1)) (+ a (- (- -1 b) c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.111895139
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 (+ a (+ (/ -1 (- 0 a)) (- -1 (+ b c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.2382822930000001
    },
    "speedup": 0.09036319071389644,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (* a -1) (pow (- b a) (* (* a (pow 0 (pow c c))) (- b 0)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- b a) (* (pow 0 (pow c c)) (* a b))) (* -1 (+ a b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.028967931000000002
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- b a) (* (pow 0 (pow c c)) (* a b))) (+ a b))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.31755025600000003
    },
    "speedup": 0.0912231385510204,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (- a (* (- (/ 0 b) (pow a (* (+ 0 -1) a))) -1)) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (pow a (* a -1))) (+ a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.026427672
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (- b (pow a (- 0 a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.28595899500000005
    },
    "speedup": 0.09241769785909339,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (/ 0 (pow a (+ 0 (- b (+ (+ (- (pow b -1) -1) (- 1 b)) (+ 0 d)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.369448906
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 3.9429304309999997
    },
    "speedup": 0.0936990678545401,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow (* 0 (+ (+ a -1) (+ (* a (* -1 a)) (- -1 0)))) -1) a) (pow 0 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow 0 -1) a) (pow 0 a))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.041166483000000004
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow 0 -1) a) (pow 0 a))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.43476145800000005
    },
    "speedup": 0.09468751712577061,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (pow (* a (+ (- (- (- (pow 0 1) -1) b) b) (* (* a b) -1))) c) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.21917341
    },
    "Extended": {
      "iterations": 18,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.239751727
    },
    "speedup": 0.09785611831788535,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ 1 (* -1 a)) -1) (pow (pow 1 a) (+ (- a (/ (/ 0 a) 0)) (pow 1 b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (* -1 (+ a (pow (pow 1 a) (+ (- a (/ 0 0)) (pow 1 b))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.042475877
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (- 2 a) (pow (pow 1 a) (+ a (- (pow 1 b) (/ 0 0)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.4316985400000001
    },
    "speedup": 0.09839244997214953,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(/ (/ (- (pow -1 -1) (pow 1 (- -1 (- (pow (+ -1 0) a) (- a a))))) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- -1 (pow 1 (- -1 (pow -1 a)))) b) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.15830969
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10367)",
      "output_term": "(/ (/ (- -1 (pow 1 (- -1 (pow -1 a)))) b) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.588818806
    },
    "speedup": 0.099639864157046,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (* (pow (- a 1) (+ (* (* 1 (+ a 0)) (+ -1 a)) (* -1 -1))) a) 0) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ a -1) (+ 1 (* a (+ a -1)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.018629332
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (pow (+ a -1) (+ 1 (- (* a a) a)))) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.186595985
    },
    "speedup": 0.0998377966171137,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (+ (* (pow (* 0 (+ (+ a (pow 0 a)) (pow -1 -1))) a) -1) -1) 0) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ -1 (* (pow 0 a) -1)) 0) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.013848941
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- -1 (pow 0 a)) 0) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.138627817
    },
    "speedup": 0.09990015928765582,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow (+ a (+ (+ -1 (/ -1 (* 0 (+ a (- a a))))) a)) a) (+ -1 b))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ a (+ (/ -1 0) (+ a -1))) a) (+ -1 b))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.022245316
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ -1 (+ a (+ a (/ -1 0)))) a) (+ -1 b))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.22105285900000002
    },
    "speedup": 0.10063346884828121,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (+ 1 (* 0 (* a 1))) (- 0 (+ a (+ -1 (- (+ a -1) b))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 28,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (+ a -1) -2) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.09187574700000001
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- 2 (+ a (- a b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.9114882719999999
    },
    "speedup": 0.10079750867052299,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (pow (+ a c) (pow 1 (- (+ (- -1 (+ 0 c)) (+ a e)) 0))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (pow (+ a c) (pow 1 (+ a (+ (- -1 c) e)))) 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.033027324
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (pow (+ a c) (pow 1 (+ (+ a -1) (- e c)))) 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.32761161899999997
    },
    "speedup": 0.1008124318081649,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (* 0 (* (+ 0 b) (- 1 (/ (- (- a a) (+ b 0)) (pow 1 c))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.236715984
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12898)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.326152165
    },
    "speedup": 0.1017628973554273,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (- (/ b (pow (pow (- 0 (- (- b b) b)) 0) (+ a -1))) b) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (- (/ b (pow 1 (+ a -1))) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.08734771
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10027)",
      "output_term": "(+ a (- b (+ -1 (/ b (pow 1 (+ a -1))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.8380594080000001
    },
    "speedup": 0.10422615528945889,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 0 (* (+ a a) (* (+ 1 (+ (/ (/ 0 -1) -1) -1)) (/ (pow 0 b) 1)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016136189
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.152544344
    },
    "speedup": 0.1057803165747004,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ (- 0 a) (* a (pow (+ (- a (- (* a 0) -1)) a) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* a (+ (+ a a) -2)))",
      "output_weight_simple": 7,
      "output_weight_complex": 9,
      "output_depth": 5,
      "simplification_time": 0.19467048399999998
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (- (- 2 a) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 9,
      "output_depth": 5,
      "simplification_time": 1.7859645419999999
    },
    "speedup": 0.1090001953689403,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 (* a -1)) (+ (- 1 (+ a -1)) (+ b (pow 0 0))))",
    "input_weight_simple": 17,
    "input_weight_complex": 28,
    "input_depth": 5,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ b (+ (+ (* -1 a) 2) (pow 0 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.060461047000000004
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow 0 0) (- 2 (- a b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.547668533
    },
    "speedup": 0.11039715330878798,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (- (- a a) 1) (- a (/ -1 (* (* (+ -1 (* a -1)) b) (+ -1 -1))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (* (* b 2) (+ a 1))) (+ a -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.087488174
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (- -1 (/ -1 (* b (- (+ a a) -2))))) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.76388446
    },
    "speedup": 0.11453063726417474,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -3
  },
  {
    "base_term": "(/ a (/ a (+ (- (- (+ c (pow (- (* b -1) 0) 1)) (/ 1 (/ c 1))) -1) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (+ a (+ (* -1 (+ b (/ 1 c))) (+ c 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.10634401
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (+ a (+ c (- (- 1 b) (/ 1 (/ c 1)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.911578794
    },
    "speedup": 0.11665915299912079,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (pow (* a 1) a) (+ a (- (* -1 (* (* (pow b 0) c) (* a 0))) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (+ (pow a a) (- 0 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.053120722
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (- (pow a a) b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.453319761
    },
    "speedup": 0.11718157153091767,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (+ (* (+ 1 -1) a) (/ a (- (- (+ a (* a (- 0 0))) a) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004839762
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.040753294
    },
    "speedup": 0.11875756595282824,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (+ (- 0 (* 0 (+ a a))) (+ (- (- a b) (* (/ b 0) 0)) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (- a b) -1))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.017134319999999998
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (- -1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.14380451
    },
    "speedup": 0.11915008785190394,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (/ 1 a)) (+ (- b 0) (* (/ -1 (* (* (+ b 0) 1) (pow 0 -1))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ 1 a)) (+ b (/ 1 (* b (pow 0 -1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.008541385
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ 1 a)) (- b (/ -1 (* b (pow 0 -1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.069980501
    },
    "speedup": 0.12205378466781769,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (- a a) a) (/ (/ 0 -1) (- (- c (- (/ 1 (+ d -1)) a)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.031911686
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.25818577600000003
    },
    "speedup": 0.12359970597295801,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (- (pow (+ (/ (* (- (/ 1 -1) 0) (pow a 0)) (pow -1 0)) a) b) 0)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (+ a -1) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.004845207
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (+ a -1) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.03825462599999999
    },
    "speedup": 0.12665676041376017,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (* -1 (- (* a -1) (- (/ a 1) (/ -1 (pow -1 (+ -1 -1)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a (- a (/ -1 (pow -1 -2)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.04439552
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (/ a 1) (+ 1 a)) (/ -1 (pow -1 -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.349015465
    },
    "speedup": 0.1272021570734695,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (/ (- a a) b) (* a (+ b (- (+ (- a (- (pow -1 -1) -1)) (pow b b)) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (* a (+ a (+ b (pow b b))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.11637996199999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11048)",
      "output_term": "(pow 0 (* a (+ a (+ (pow b b) (+ b 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.912538939
    },
    "speedup": 0.12753424213057057,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ a a) (- a (* (+ (- (pow 1 (* (+ a 1) a)) -1) (+ 0 (pow 0 0))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ a (+ (pow 1 (+ a (* a a))) (+ 1 (pow 0 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.049076205000000005
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ 1 (+ (pow 1 (+ a (pow a 2))) (+ a (pow 0 0)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.380668701
    },
    "speedup": 0.12892104045086702,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a a) (- a (+ (- (/ (* 0 1) (- 1 (* b -1))) (+ (+ b -1) -1)) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.111423947
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.8540253420000001
    },
    "speedup": 0.13046913425199036,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (+ (/ (* a a) 1) (- (* a (pow c (- (/ 1 1) 0))) -1)) (* -1 b)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ 1 (* a (+ a c))) (* -1 b))",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.039053023
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (/ (* a a) 1) (- (* a c) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.291882079
    },
    "speedup": 0.1337972620100462,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a 0) (/ 0 (pow (- (+ (- b (- (+ a a) -1)) e) (pow (pow 1 1) -1)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.24093229100000005
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.7869849010000003
    },
    "speedup": 0.13482614814773972,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow a (/ (- (* (+ a (* -1 (+ (pow a 1) 0))) (/ c (pow -1 -1))) 1) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow a (/ -1 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.03364679
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow a (/ -1 c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.248477513
    },
    "speedup": 0.13541181088688697,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (+ a (pow (+ (pow (+ a (+ (pow a a) b)) 1) (- (pow 1 -1) 1)) b)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (pow (+ a (+ (pow a a) b)) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.018622839
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (pow (+ a (+ (pow a a) b)) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.136354308
    },
    "speedup": 0.13657682894771464,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ a (+ (* c (* -1 (- 0 a))) (- (pow (+ (* e e) 0) -1) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (* e e)) (+ -1 (* a (+ c 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.162610798
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ (/ 1 (* e e)) (* a (+ c 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.1680054290000002
    },
    "speedup": 0.13922092651505988,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 0 (- a (- (* 0 b) (+ (+ (- a 1) (+ b 0)) (+ 0 -1))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 27,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.136348658
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.977312143
    },
    "speedup": 0.13951393009551505,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (+ (/ (- a a) a) (- (- c (* b 0)) (+ a (/ (* d -1) a)))) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- c (+ a (/ (* d -1) a))) 2)",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.084810588
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- c a) (- 2 (/ (- 0 d) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.601223367
    },
    "speedup": 0.14106335956832497,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow a 1) (pow 1 (* a (- (+ (pow 1 (- (* -1 a) -1)) (pow b b)) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (+ a (* a (+ (pow 1 (+ 1 (* a -1))) (pow b b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.042547038
    },
    "Extended": {
      "iterations": 18,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (* a (+ (pow b b) (+ 1 (pow 1 (- 1 a)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.301355918
    },
    "speedup": 0.14118534085001777,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- (* (+ (+ (* -1 (+ (* -1 (/ 0 0)) (* a a))) a) -1) 1) 0) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ (/ 0 0) (+ a (* -1 (* a a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.047721273
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- (/ 0 0) (* a (+ -1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.336168772
    },
    "speedup": 0.141956293905848,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- (* (* a (* a 0)) (+ 1 (* a (- b (+ (+ -1 a) a))))) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.31231691500000003
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13678)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.199908192
    },
    "speedup": 0.1419681585512274,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (* (* a -1) (* (- (+ a (* (* a b) 0)) -1) 1)) 1) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.044470649999999994
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.31206848800000003
    },
    "speedup": 0.14250285341210098,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 a) (/ -1 (/ (+ (+ (- a (pow (+ b -1) 1)) c) (* (* 0 1) d)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 0 a) (/ -1 (+ (- a (+ -1 b)) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.036096896
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 (/ (- 1 (- b (+ a c))) 1)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.250613925
    },
    "speedup": 0.14403388000088183,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* 1 (* 0 (+ (+ (* (pow (- (pow a 1) 0) (pow -1 b)) (* a a)) a) -1))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.029623617
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.204838587
    },
    "speedup": 0.14461931921059387,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 (- (+ 1 -1) (/ (+ (- a 1) (* (* a a) -1)) 0))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ -1 (+ a (* -1 (* a a)))) 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.025220980999999996
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ a (- -1 (* a a))) 0))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.173868951
    },
    "speedup": 0.14505741741088665,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ a (- a (* a 0))) (* 0 (+ 1 (pow (+ (+ (pow b a) 0) c) (- c -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.08173831199999998
    },
    "Extended": {
      "iterations": 18,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.558039969
    },
    "speedup": 0.1464739383210739,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (* (- 1 (- a (* (* (pow a (/ a a)) 1) (* 0 1)))) a) a) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a (* a (- 1 a))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 5,
      "simplification_time": 0.047829124
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (- 2 a)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.322343655
    },
    "speedup": 0.14837929414183754,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow a (- (+ a 0) (+ (+ (pow (pow (* a a) 0) (pow 0 -1)) (* 0 1)) c))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- a (+ (pow 1 (pow 0 -1)) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.016759686000000003
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (- a c) (pow 1 (pow 0 -1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.112049158
    },
    "speedup": 0.1495744037630341,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ -1 (+ (/ a 1) (- (* -1 (- 0 (pow (* (* -1 0) b) (+ -1 1)))) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ a (- 1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.012768801000000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ (/ a 1) (- (pow 0 0) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.084628495
    },
    "speedup": 0.15088063423554918,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (- (* (+ (pow 0 (/ (* a (+ (+ b 0) c)) (pow b d))) c) -1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (+ c (pow 0 (/ (* a (+ b c)) (pow b d)))) -1) (+ a 1))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.06955055
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 1 c) (- a (pow 0 (/ (* a (+ b c)) (pow b d)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.44233706100000003
    },
    "speedup": 0.15723428157424954,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (/ a (- (+ a -1) (- 0 (* (pow (/ (* -1 a) 1) (* -1 0)) 0)))) (+ a -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (/ a (+ a -1))))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 5,
      "simplification_time": 0.019377282
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (/ a (+ a -1))))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 5,
      "simplification_time": 0.11729229099999999
    },
    "speedup": 0.165205077288498,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a (- a a)) (+ -1 (pow 0 (pow (- (* a a) (+ a (pow a c))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (pow 0 (pow (- (* a a) (+ a (pow a c))) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.035509842
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a 1) (pow 0 (pow (- (- (* a a) (pow a c)) a) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.210996769
    },
    "speedup": 0.16829566712464683,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (* -1 a) (/ (/ (* (+ a (/ 1 (+ 0 -1))) -1) (pow (* b a) 0)) 1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a -3))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.038850033000000006
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (/ (- 1 a) 1) 1) (* a -2))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.228929621
    },
    "speedup": 0.16970295425422474,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(- (+ (pow 1 1) (- a b)) (/ 1 (/ -1 (* b (- (* (* -1 b) -1) 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 (- a b)) (/ 1 (/ -1 (* b b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.050182268
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- 1 (- b a)) (/ 1 (/ -1 (* b b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.292624927
    },
    "speedup": 0.17149006584801302,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (- 0 (* a -1))) (* (* (* (+ a a) (/ (* 0 -1) 0)) a) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 a) (* a (* a (* a (* (/ 0 0) -2)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.235057287
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 a) (* a (* (* a a) (* (/ 0 0) -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.3661292539999998
    },
    "speedup": 0.17206079608628308,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (* a (- (+ (pow (/ -1 0) (- (pow -1 (* 1 -1)) a)) -1) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10034)",
      "output_term": "(+ a (* a (pow (/ -1 0) (- -1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.598520186
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18698)",
      "output_term": "(+ a (* a (pow (/ -1 0) (- -1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 3.476407409
    },
    "speedup": 0.17216629571393252,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a a) (* -1 (pow (* -1 (+ (+ (pow (+ 1 1) -1) (* b 1)) (* 1 a))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (/ 1 (+ -0.5 (* -1 (+ a b)))) -2))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.056985589999999996
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ -2 (- (- -0.5 b) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.324632765
    },
    "speedup": 0.17553862747033558,
    "weight_simple_diff": 4,
    "weight_complex_diff": 6,
    "depth_diff": 2
  },
  {
    "base_term": "(- a (pow (/ -1 (pow (/ -1 (+ (+ (+ (- a -1) 0) (- b b)) (pow a -1))) 0)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.016250526
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.09190178600000001
    },
    "speedup": 0.17682492046454895,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (- (pow (- (pow (- (/ 0 (- 1 1)) 0) -1) (- a (* 1 0))) a) 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (pow (- (pow (/ 0 0) -1) a) a)) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.017874002
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (pow (- (/ 1 (/ 0 0)) a) a)) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.099997201
    },
    "speedup": 0.17874502307319584,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (/ (/ -1 -1) (* -1 (* a (+ 0 (+ (- a 0) 0))))) -1) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (/ 1 (* -1 (* a a)))) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.006752501000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (/ 1 (- 0 (* a a)))) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.037528907
    },
    "speedup": 0.17992799523844383,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 (- a (* (pow 1 0) (- (* (- (+ 1 a) b) (+ 0 0)) (- a a))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.010752469
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.059321597
    },
    "speedup": 0.18125724093368561,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (- (- a b) a)) (- b (* (* (* (/ (+ -1 a) 1) a) (pow 1 b)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10886)",
      "output_term": "(pow (+ a b) (- b (* b (* a (* (+ a -1) (pow 1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.619575347
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(23059)",
      "output_term": "(pow (+ a b) (- b (* a (* (/ (+ a -1) 1) (* b (pow 1 b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 3.40735149
    },
    "speedup": 0.18183487932441042,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (pow 1 (* a (* b 0)))) (+ 1 (- (+ (* a a) (- (+ d b) c)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (- (+ b d) c) (+ 1 (* a a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.094821714
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ b (+ 1 (+ (* a a) (- d c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.520573013
    },
    "speedup": 0.18214873155554837,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (- a (/ 0 (/ (pow (+ (/ 0 1) (+ (* a -1) a)) (/ (/ 0 b) b)) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.019803703
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.10836886400000001
    },
    "speedup": 0.18274347694555512,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ -1 (+ (pow a b) (- (- (pow (/ -1 0) b) (+ 0 a)) (- c b)))) c) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow (+ (pow a b) (+ -1 (- (- (pow (/ -1 0) b) a) (- c b)))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.362493041
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (+ (pow (/ -1 0) b) (+ b (+ (pow a b) (- -1 (+ a c))))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 1.956802413
    },
    "speedup": 0.18524764615567757,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ -1 (* a (+ 1 (- b (- (- (pow (* 1 -1) 1) (- b 0)) (* a b)))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (* a (+ (* b (+ a 2)) 2))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.9963080609999999
    },
    "Extended": {
      "iterations": 22,
      "stop_reason": "TimeLimit(5.006439676)",
      "output_term": "(pow (+ -1 (* a (- 2 (* b (- -2 a))))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 5.35834107
    },
    "speedup": 0.18593591710279092,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (- a b) (/ (* (+ (+ (* (/ -1 0) -1) c) (/ -1 0)) c) (pow c 1))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13641)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.599002653
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16113)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 3.208932279
    },
    "speedup": 0.18666727774843142,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (* (+ a (+ (- a a) (* a (* 0 a)))) b) 1) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 28,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.013465704
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.071704427
    },
    "speedup": 0.1877945973963365,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (- 1 (* -1 (* (pow (/ (+ (+ 1 0) (* 0 1)) (* 1 a)) (pow a a)) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- 1 (pow (/ 1 a) (pow a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.006296404
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- 1 (pow (/ 1 a) (pow a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.033162654
    },
    "speedup": 0.18986429735086946,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (+ a (/ (pow (+ (+ (/ (- b b) 1) a) 0) (* 0 (/ b -1))) -1)) b) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10743)",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.627630047
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11946)",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 3.299976517
    },
    "speedup": 0.19019227675310152,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* 1 (pow (+ (- (- (+ (- (- a a) 0) 1) a) (/ (/ 1 b) d)) d) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (+ d (- (- 1 a) (/ (/ 1 b) d))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.043897875
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (+ (- 1 a) (- d (/ (/ 1 b) d))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.223542726
    },
    "speedup": 0.1963735335320193,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a (/ (pow (/ (* (* 1 (+ 0 (* b -1))) (+ b b)) 0) a) 1)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (pow (/ (* b (* b -2)) 0) a)) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.022328017
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ (pow (/ (* -2 (* b b)) 0) a) 1)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.11357151699999998
    },
    "speedup": 0.19659873874890657,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (+ (- (+ (/ 0 0) a) -1) (+ 1 (* (* 1 a) (- (* a 1) 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ 0 0) (+ a (+ (* a a) 2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.10128108699999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ 0 0) (+ 2 (+ a (* a a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.514086681
    },
    "speedup": 0.1970116922752955,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (- (- -1 -1) (- (* -1 (+ (pow (pow 1 a) b) a)) 0)))",
    "input_weight_simple": 17,
    "input_weight_complex": 27,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (pow (pow 1 a) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.016633045
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (pow 1 a) b) (+ -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.084045079
    },
    "speedup": 0.19790623315375788,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- 0 (+ (+ a -1) (+ (- (/ (/ (pow a a) b) 1) b) -1))) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ (+ b 2) (* -1 (+ a (/ (pow a a) b)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.34558547900000003
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ c (+ b (- (- 2 a) (/ (/ (pow a a) b) 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.7365800509999998
    },
    "speedup": 0.19900348319733177,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (pow a a) (/ (- (+ (+ 0 (- (+ b 1) 0)) b) (pow (/ -1 b) -1)) 0)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow a a) (/ (- (+ b (+ b 1)) (/ 1 (/ -1 b))) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.027945647
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow a a) (/ (+ b (- b (+ -1 (/ 1 (/ -1 b))))) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.14019358999999998
    },
    "speedup": 0.1993361251395303,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (+ a (* (* (* (- (pow (pow a a) (+ -1 1)) c) (* 1 c)) -1) b)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (* (+ -1 c) (* c b))) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.12279083599999999
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (* (- c (* c c)) b)) d)",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.615268249
    },
    "speedup": 0.1995728468023059,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (+ (* -1 a) (pow (pow a 1) (* -1 (- (* (+ a -1) b) (* a -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 a) (+ -1 (pow a (+ b (* -1 (* a (+ 1 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.081381644
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (+ b (* a (- -1 b)))) (- -1 a))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.40644128300000004
    },
    "speedup": 0.20022976849032334,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (/ 1 (+ (* (- (+ 0 (- -1 (* (- a 1) 0))) (- (+ 0 a) a)) 1) 0)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005009175
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024989437000000003
    },
    "speedup": 0.20045169485010805,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (- (pow (* (+ a 1) a) 0) 1) (+ (- 1 (- (+ (/ -1 a) a) 0)) 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.018394933000000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.09121352999999999
    },
    "speedup": 0.20166890811045252,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (- a a) (+ (* (- (- (+ (/ 0 0) -1) 0) c) b) d)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (* (- (+ (/ 0 0) -1) c) b) d) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.260553478
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10611)",
      "output_term": "(/ (+ (* (+ (/ 0 0) (- -1 c)) b) d) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.289862091
    },
    "speedup": 0.20200103547348924,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow (/ -1 0) a) (- (+ (+ -1 (- (+ (/ a b) (+ a -1)) (* b 0))) -1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (/ -1 0) a) (+ (/ a b) (+ a -4)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 0.28105138
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (/ -1 0) a) (- (- 4 a) (/ a b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 1.384131371
    },
    "speedup": 0.2030525323596614,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ 0 (pow (+ a (+ -1 (+ (+ (/ (- 1 1) a) a) 0))) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.014782243
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.072663281
    },
    "speedup": 0.20343484076916374,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* -1 0) (* 0 (pow (+ (+ (* (+ (* a a) -1) (- a c)) (- 1 0)) -1) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10130)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.5007855969999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12420)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.457515076
    },
    "speedup": 0.2037772227282157,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ 0 (/ -1 (- 1 (pow a (- 0 (* (* b -1) a)))))) 0) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016113739999999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.078957488
    },
    "speedup": 0.2040812139312233,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (+ -1 (* (+ (- (+ (* (* a a) 1) (+ a 0)) 1) (* 0 b)) a)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (* (+ a 1) (+ -1 (* a a))) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 1.0988560219999999
    },
    "Extended": {
      "iterations": 16,
      "stop_reason": "TimeLimit(5.00079683)",
      "output_term": "(+ 1 (- (* a (- (- 2 a) (* a a))) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 5.342364911
    },
    "speedup": 0.20568718915801518,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (pow -1 (+ (+ (+ 1 1) a) (* -1 (- (* a 1) a))))) (pow -1 a))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow -1 (+ a 2))) (pow -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.007939928
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow -1 (+ a 2))) (pow -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.038080877
    },
    "speedup": 0.20850171071427795,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (+ (* 1 (- a (- (+ (/ (pow 0 0) a) (pow -1 a)) (/ 0 b)))) -1)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ -1 (- a (+ (/ (pow 0 0) a) (pow -1 a))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.091162195
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (+ a (- (- a (pow -1 a)) (/ (pow 0 0) a)))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.43389242000000006
    },
    "speedup": 0.21010322097814013,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* (pow 0 1) (+ -1 (+ -1 (+ (- (* a (* -1 b)) (+ b 0)) (* -1 a))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.29334796700000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.38422076
    },
    "speedup": 0.21192282002763782,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 0 (+ (/ a (/ (- (pow (- (+ b b) b) (+ b d)) (* 1 d)) e)) c)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(22733)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.157201714
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(22819)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 5.427417953000001
    },
    "speedup": 0.21321404100827682,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (+ (/ (pow (+ (* (+ 0 (- -1 a)) a) (- a -1)) a) 1) -1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13418)",
      "output_term": "(+ a (+ 1 (* -1 (pow (+ 1 (* a (* a -1))) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 8,
      "simplification_time": 0.6663924960000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(29244)",
      "output_term": "(+ a (/ (+ -1 (/ (pow (- 1 (* a a)) a) 1)) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 3.07490122
    },
    "speedup": 0.21671996864991977,
    "weight_simple_diff": 0,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ (+ (- (/ 1 0) (* (- (- -1 1) a) (pow 1 -1))) 0) -1) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (* -1 (+ (/ 1 0) a))) 0)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.061824519
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -1 (+ (/ 1 0) a)) 0)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.284259629
    },
    "speedup": 0.21749313899231185,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- 0 -1) (/ (/ (pow a -1) (- (+ a -1) (* (pow -1 -1) a))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (/ 1 (+ -1 (+ a a))) (pow a -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.024703123
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (/ (/ 1 a) (+ -1 (+ a a))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.113521137
    },
    "speedup": 0.21760813583112723,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ a (pow (+ (* a (+ 0 (- (- (* -1 a) b) (* b 1)))) a) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (pow (* a (+ 1 (* -1 (+ a (+ b b))))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.127448457
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (pow (* a (- 1 (+ a (+ b b)))) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.582784088
    },
    "speedup": 0.21868897868742082,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow a a) (- (- 0 a) (- (+ (pow a (+ a 0)) (- -1 (* b -1))) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a a) (+ c (* -1 (+ a (+ -1 (+ (pow a a) b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.22394012600000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a a) (+ 1 (- (- (- c a) b) (pow a a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.0227347679999998
    },
    "speedup": 0.21896207404577064,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (+ 1 (+ (- 0 1) a)) (* a (pow (/ 0 (+ (* (+ 1 a) 0) (* a a))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11102)",
      "output_term": "(pow a (* a (pow 0 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.49118907
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12457)",
      "output_term": "(pow a (* a (pow 0 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 2.239946083
    },
    "speedup": 0.219286113057749,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 (- (+ (/ a (pow a -1)) (/ a (+ (* (pow a 0) a) a))) 0)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ (/ a (/ 1 a)) (+ (/ a (+ a a)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.038233380000000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (/ 1 a)) (+ -1 (+ (/ a (+ a a)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.173684847
    },
    "speedup": 0.2201307751389504,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a (pow a (+ (- -1 b) (* (+ (pow (* b c) c) (/ 0 c)) (* 1 -1))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (pow a (+ (- -1 b) (* -1 (pow (* b c) c))))) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.027459070999999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (pow a (- -1 (+ b (pow (* b c) c))))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.12359906000000001
    },
    "speedup": 0.22216245819345223,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (+ a b) (- (* b -1) (+ (+ a 0) (* c (- b 0))))) (pow b b))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ a b) (- (* b -1) (+ a (* b c)))) (pow b b))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.05051599
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ a b) (- (* b (- -1 c)) a)) (pow b b))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.22542352300000001
    },
    "speedup": 0.2240936940729118,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (* (+ -1 (+ (/ a a) (/ (+ a (/ b 1)) (* 0 0)))) a) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16386)",
      "output_term": "(* a (/ (+ a b) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.807956503
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(19453)",
      "output_term": "(* a (/ (+ a (/ b 1)) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 3.59167303
    },
    "speedup": 0.2249526881348662,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* (- -1 a) 1) (pow (pow a a) (/ (* (* a -1) (- (+ a 0) 1)) (pow 1 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (pow (pow a a) (+ a (* -1 (* a a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.032056097
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (pow (pow a a) (/ (- a (* a a)) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.142053916
    },
    "speedup": 0.2256614805325043,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ (* -1 (- (* a (/ 1 (+ (pow -1 b) c))) (- (+ 0 -1) b))) -1) d) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (+ b (+ (* a (/ 1 (+ (pow -1 b) c))) 2))) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.16178651900000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -2 (* a (/ 1 (+ (pow -1 b) c)))) (- d b))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.7166558869999999
    },
    "speedup": 0.22575202678827647,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (* (+ (- a 0) 0) (* -1 (/ a (- (+ (- (* 0 a) a) (pow a 0)) c)))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (* a (/ a (+ 1 (* -1 (+ a c)))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.041649298
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- d (* a (/ a (- (- 1 c) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.184103394
    },
    "speedup": 0.22622775764796602,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": 2
  },
  {
    "base_term": "(- a (pow -1 (- (- 1 (* (pow (- 0 (- (/ 0 a) a)) a) 1)) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (- (- 1 (pow a a)) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.024915874
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (- (- 1 a) (pow a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.109554433
    },
    "speedup": 0.2274291721266998,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ 0 a) (* (* (+ a -1) (pow (- (pow b a) (* 0 c)) (/ b 1))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a -1) (* (pow (pow b a) b) (* a a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.085001787
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (pow (pow b a) (/ b 1)) (- (* a a) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.371948364
    },
    "speedup": 0.22853114901723295,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (+ -1 0) (- a (pow b (- (/ 1 (* (pow a b) c)) a)))) (+ c 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow b (- (/ 1 (* (pow a b) c)) a)) (* -1 (+ a c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.030446082000000003
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (pow b (- (/ 1 (* (pow a b) c)) a)) (+ a c))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.13172092999999999
    },
    "speedup": 0.23114080655215544,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (- (pow (* a a) (pow (/ 1 (+ (* 0 0) 1)) (* -1 0))) (* b -1))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (* a a) b))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.032152116
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (* a a)) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.138713595
    },
    "speedup": 0.2317877782635509,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (pow (pow a b) (pow 0 (* (* (+ (* 1 a) 1) (- 0 1)) 1)))) (+ -1 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (pow (pow a b) (pow 0 (* (+ a 1) -1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.008665976
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (pow (pow a b) (pow 0 (- -1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.037366500999999996
    },
    "speedup": 0.231918316355069,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 0 (+ (+ (+ (- (pow (pow (* -1 a) (pow -1 b)) b) 0) 0) (+ 0 -1)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (pow (pow (* -1 a) (pow -1 b)) b) -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.006433107
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (pow (pow (- 0 a) (pow -1 b)) b) -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.027464736
    },
    "speedup": 0.2342315251091436,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (/ (* (* (- (* -1 (pow (+ (pow a 0) a) (+ b a))) b) -1) c) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (+ b (pow (+ 1 a) (+ a b))) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.058829944
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (* (+ b (pow (+ a 1) (+ a b))) c) 1) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.249938445
    },
    "speedup": 0.23537773070485415,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ 0 1) (* a (/ (- 1 a) (- (* a (- (- a 1) -1)) (- 1 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12741)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.54078686
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(17548)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.275259915
    },
    "speedup": 0.2376813551870622,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- b (+ (* a (pow 0 (pow (* (+ (* b -1) -1) (- a -1)) (- 1 1)))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11612)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.6854354789999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(21192)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.871190833
    },
    "speedup": 0.23872863869651395,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (+ (pow (* (* a (- 0 (pow (pow a b) c))) -1) (/ (pow c -1) 1)) 1) -1) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ c (+ -1 (* -1 (pow (* (pow (pow a b) c) a) (/ 1 c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.029354525
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- (pow (* (pow (pow a b) c) a) (/ (/ 1 c) 1)) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.12266882300000001
    },
    "speedup": 0.239298986344721,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (* 1 (pow a (+ 1 (/ (* (* (+ (+ -1 a) 1) (+ b 0)) (pow -1 a)) a)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10211)",
      "output_term": "(/ (pow a (+ 1 (* b (pow -1 a)))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.514780504
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12509)",
      "output_term": "(/ (pow a (+ 1 (/ (* b (* a (pow -1 a))) a))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 2.133984285
    },
    "speedup": 0.24122975394825832,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (pow -1 (pow (* (* 1 (* (* (/ a a) (+ -1 b)) (pow -1 0))) (* b -1)) b)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ b (pow -1 (pow (+ b (* -1 (* b b))) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.038912274
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ b (pow -1 (pow (- b (* b b)) b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.161220614
    },
    "speedup": 0.24136041312930365,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* -1 (* (+ -1 (* -1 a)) a)) (pow (* (* -1 (pow (- (- a -1) 0) 1)) 1) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a (* a a)) (pow (+ -1 (* -1 a)) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.039898211999999995
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) (- a (pow (- -1 a) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.1644754
    },
    "speedup": 0.24257859838006168,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (/ (pow 0 (pow 1 (- 1 (/ a (- (+ a -1) -1))))) 0) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10569)",
      "output_term": "(* a (+ a (/ 0 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.45882232700000003
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14746)",
      "output_term": "(* a (+ a (/ 0 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.890318321
    },
    "speedup": 0.24272225577186268,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a -1) (* (pow a (* 0 (* a b))) (- (- 1 (* (- a 0) a)) (pow 1 c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ (pow 1 c) (* a (+ a -1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.17483041800000002
    },
    "Extended": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ (* a a) (- (pow 1 c) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.709057016
    },
    "speedup": 0.24656750311317702,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 1 (- a (pow (- (* (pow (pow (pow 0 a) -1) (- a 1)) (+ 0 -1)) -1) b))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (pow (+ 1 (* -1 (pow (/ 1 (pow 0 a)) (+ a -1)))) b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.017239903
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- 1 (pow (- 1 (pow (/ 1 (pow 0 a)) (- a 1))) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.069870787
    },
    "speedup": 0.24673978554155973,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* a (pow (+ 1 1) (+ (+ 0 (- a (- a (* -1 0)))) (* (+ 1 a) 0)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.009105189
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.036704733
    },
    "speedup": 0.24806580121424665,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (* (+ -1 (+ (+ (+ (+ a 0) (+ -1 1)) 0) 0)) a)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 24,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10063)",
      "output_term": "(* a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.816903396
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(26216)",
      "output_term": "(* a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 3.285022282
    },
    "speedup": 0.2486751461249297,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- (pow a (pow (/ -1 1) b)) 0) (* (/ (* 0 c) (* (+ c b) 0)) 1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (pow -1 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.006922472999999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 0 0) (- (pow a (pow -1 b)) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.027717007
    },
    "speedup": 0.2497554299423455,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (+ (- (- (+ a (pow a -1)) (pow b 0)) c) 0) c) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a (+ -1 (/ 1 a))) (+ a (* c -2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.123405163
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- (* (- c a) 2) (/ 1 a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.492689311
    },
    "speedup": 0.25047258027483366,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (+ (- 0 (* (/ 1 (+ 0 (- (* 0 a) a))) 0)) a) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.004192773
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.016545486
    },
    "speedup": 0.2534088753875226,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (pow a a) a) (+ (+ a (pow b (* (/ 1 b) (+ (+ 1 b) c)))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10004)",
      "output_term": "(+ (pow b (* (/ 1 b) (+ b (+ 1 c)))) (+ a (pow a a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.753306601
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16188)",
      "output_term": "(+ a (+ (pow a a) (pow b (* (/ 1 b) (+ b (+ 1 c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 2.963208873
    },
    "speedup": 0.25421987895080117,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (- (- a (- a (/ (/ (pow (* b (- b -1)) (/ b -1)) (+ 0 d)) -1))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10052)",
      "output_term": "(* -1 (/ (pow (+ b (* b b)) (* b -1)) d))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.771329671
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15565)",
      "output_term": "(/ (/ (pow (+ b (pow b 2)) (/ b -1)) d) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 2.9787194269999997
    },
    "speedup": 0.25894673530122986,
    "weight_simple_diff": -1,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (pow 0 a) a) (* (- b (+ (* (* (* 1 -1) (+ -1 c)) b) a)) e))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10436)",
      "output_term": "(* (+ (* a -1) (* b c)) (* (- (pow 0 a) a) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.5932778700000001
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "NodeLimit(12858)",
      "output_term": "(* (- (* b c) a) (* (- (pow 0 a) a) e))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 2.2871569579999997
    },
    "speedup": 0.25939534579156776,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 1) (- (- (/ 1 (pow (/ (/ 0 (pow -1 -1)) (+ 0 0)) (* a 1))) a) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (pow (/ 0 0) a)) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.006597273000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (pow (/ 0 0) a)) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.025420835
    },
    "speedup": 0.25952227769072106,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 0 (* -1 (+ (- a (+ (- (pow (+ -1 1) b) (* b 0)) (- d 0))) e))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.08934742400000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.342516088
    },
    "speedup": 0.2608561382378045,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 (* (+ (+ (- a (* a a)) 0) (+ (* (- a 0) b) 0)) 1)) (- a b))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (+ -1 (- a b))) (- a b))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.099438227
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (+ a (- -1 b))) (- a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.379731055
    },
    "speedup": 0.26186487960538285,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (- -1 (- 0 (- 0 (pow (- (* (/ a 1) 0) (+ 1 b)) -1)))) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -1 (/ 1 (+ -1 (* -1 b)))) (* a -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.04626148000000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- (* a -2) (/ 1 (- -1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.17574274699999998
    },
    "speedup": 0.2632340781608473,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ a -1) (+ a (* (- (* (* 0 (+ (/ 0 0) 1)) a) (- (* 0 1) 1)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10035)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.413520863
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13006)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.568808211
    },
    "speedup": 0.26358917559235034,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (- (pow (+ (* -1 a) (* a (- (- -1 0) 0))) (pow a b)) -1) a) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (* -1 (pow (* a -2) (pow a b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.032967182
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow (* a -2) (pow a b)) (- 1 a)) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.125067181
    },
    "speedup": 0.2635957869714837,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 1
  },
  {
    "base_term": "(- -1 (- (+ (pow -1 a) a) (* (* (/ (* 0 (+ (* 0 a) 0)) 0) -1) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ (pow -1 a) (+ a (/ 0 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.049629227
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (- -1 (pow -1 a)) (+ a (/ 0 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.185929346
    },
    "speedup": 0.2669251953373729,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ (- (- a 0) (- (pow 0 (- (/ (pow 0 a) c) 1)) (/ (/ c 0) -1))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (+ (pow 0 (+ (/ (pow 0 a) c) -1)) (/ c 0))) (+ a d))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.08880442399999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (/ c 0) -1) (+ d (- (+ a a) (pow 0 (- (/ (pow 0 a) c) 1)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.330838166
    },
    "speedup": 0.2684225495313621,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 1 0) (pow (- a (* -1 (- (+ 0 (pow (pow -1 a) a)) (+ 0 c)))) (- b e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (+ a (- (pow (pow -1 a) a) c)) (- b e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.022986354
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (+ (pow (pow -1 a) a) (- a c)) (- b e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.08484477400000001
    },
    "speedup": 0.2709224495076149,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a (pow 0 (* (+ (* (* (pow 0 -1) -1) 1) a) 1))) b)",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (+ a (* -1 (pow 0 -1)))) (+ a b))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.009979878000000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (- a (pow 0 -1))) (+ a b))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.036777397
    },
    "speedup": 0.27135900890430065,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (pow 1 (pow (* a a) (* (+ (+ (- (/ b 1) -1) a) (+ b 1)) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 1 (pow (* a a) (+ (* a -1) (* (- b -1) -2)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.09133122800000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 1 (pow (* a a) (- (- (- -2 a) b) (/ b 1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.33417162899999997
    },
    "speedup": 0.2733063494148392,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (pow (- (* a a) a) a) (* a (pow 0 (- (- a (* -1 a)) -1)))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (pow (* a (+ a -1)) a) (* a (pow 0 (+ a (+ a 1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.112351575
    },
    "Extended": {
      "iterations": 18,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (pow (* a (+ a -1)) a) (* a (pow 0 (+ a (- a -1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.408408222
    },
    "speedup": 0.2750962614068039,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (* 1 (/ (- a (+ (- (- (* (+ 0 b) a) 1) (/ 0 -1)) (pow c -1))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (- a (+ (* a b) (+ -1 (/ 1 c)))) 0))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.08102553000000001
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ 1 (- (* a (- 1 b)) (/ 1 c))) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.29316151599999996
    },
    "speedup": 0.276385287897065,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (+ a (+ (+ a (* -1 (+ (pow (+ (- -1 c) a) b) (pow c 0)))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ -1 (+ (* -1 (pow (+ a (- -1 c)) b)) (* a 3))))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.044668048
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (* a 3) (- -1 (pow (- a (+ 1 c)) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.16092720200000002
    },
    "speedup": 0.2775667969421353,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ -1 (- (/ 0 a) (* (+ (/ a (* (+ -1 (+ 1 1)) (+ a c))) a) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (/ a (+ a c))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.045832591000000006
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (/ a (+ a c))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.164999815
    },
    "speedup": 0.2777735902309951,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (- (pow a a) (/ 0 (+ (+ (+ (- b 0) a) (* 1 1)) 1))) d) (/ a 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow a a) d) (/ a 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.023761894999999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow a a) d) (/ a 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.084385981
    },
    "speedup": 0.28158581222158213,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (/ (* (+ a (pow a (pow a (+ (- a 1) 1)))) 1) (/ b 0)) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13000)",
      "output_term": "(/ (+ a (pow a (pow a a))) (/ b 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.694826214
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(18157)",
      "output_term": "(/ (- 0 (/ (+ a (pow a (pow a a))) (/ b 0))) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 2.459296964
    },
    "speedup": 0.2825304240077938,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(* (+ 0 (- (/ a a) 1)) (pow a (* (pow -1 -1) (* (+ 1 (* a 1)) (/ a 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0258303
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.091270573
    },
    "speedup": 0.28300797454180554,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 a) (* -1 (- (- (+ 0 a) -1) (pow (pow (+ 1 0) a) (+ (- b a) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (+ (pow (pow 1 a) (+ b (- b a))) (+ -1 (* a -1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.03149257
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (+ (pow (pow 1 a) (- (+ b b) a)) (- -1 a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.111013366
    },
    "speedup": 0.2836826873621686,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ a (+ (- (+ (+ (pow 1 (- (* c 1) -1)) c) 1) b) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (- (+ (+ 1 c) (pow 1 (+ 1 c))) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.037466999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (+ 1 (+ c (- (pow 1 (- c -1)) b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.132065354
    },
    "speedup": 0.2837004397080555,
    "weight_simple_diff": -2,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (pow (+ (+ (+ (pow (- -1 (/ 0 1)) (pow -1 a)) (- a 1)) -1) 0) -1) 0) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.017730112
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.062382653999999996
    },
    "speedup": 0.28421541667656525,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- -1 (- a (pow a (pow (+ 1 (- (+ (- a -1) 1) c)) (pow (+ 0 c) 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (- a (pow a (pow (+ a (+ (* -1 c) 3)) c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 9,
      "simplification_time": 0.042989942
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (pow a (pow (+ (- a c) 3) c)) (+ a 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.15092840200000002
    },
    "speedup": 0.2848366604981347,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(- (* (pow (pow -1 0) -1) a) (+ -1 (* -1 (pow (- a (+ (* 0 0) -1)) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a 1) (pow (+ a 1) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.013566969000000002
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (pow (+ a 1) b) 1))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.047539961
    },
    "speedup": 0.28538031404779657,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ 0 (- (- a -1) (- (- (- -1 (+ (pow -1 a) 1)) (* a 0)) -1))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10842)",
      "output_term": "(/ (+ a (+ (pow -1 a) 2)) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.5446957809999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14609)",
      "output_term": "(/ (+ (pow -1 a) (+ a 2)) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 1.902336355
    },
    "speedup": 0.2863299014227165,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow a (pow 0 (- (- a 0) (- (+ (/ (- 0 a) c) (+ -1 b)) (- 0 b))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (pow 0 (+ a (+ 1 (+ (* a (/ 1 c)) (* b -2)))))) d)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.219590795
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (pow 0 (+ a (- (+ 1 (* b -2)) (/ (- 0 a) c))))) d)",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.7623428999999999
    },
    "speedup": 0.2880472750516861,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (+ -1 (* -1 (+ (- (- (pow (pow (- 1 a) 0) a) -1) (* (pow a c) c)) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow a c) (* -1 c)) (+ (pow 1 a) (+ b 2)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 0.23905014200000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 a) (- (+ b 2) (* c (pow a c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.8286112299999999
    },
    "speedup": 0.2884949338666337,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* a b) (+ (- (* (/ 0 -1) b) -1) (- (+ (+ (- a 0) 0) 0) (+ b -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b a) (+ (* b -1) (+ a 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.038711518
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b a) (+ a (- 2 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.134021283
    },
    "speedup": 0.28884604842948713,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 (- (- 1 (+ -1 (* (* (+ (/ a b) b) -1) c))) -1)) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14418)",
      "output_term": "(+ (+ b (/ a b)) (* (/ 1 c) 2))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.845324038
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15731)",
      "output_term": "(/ (+ 2 (* (+ b (/ a b)) c)) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.90168379
    },
    "speedup": 0.29132190106765565,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -2
  },
  {
    "base_term": "(* a (pow (+ a (* a (* b (* (* (pow -1 -1) (pow -1 0)) (/ -1 0))))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.045006841
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.154149475
    },
    "speedup": 0.2919688244153929,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 0 -1) (- 0 (* (/ 1 (/ 1 (- (pow (* 0 1) -1) (* a -1)))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ 1 (/ 1 (+ (pow 0 -1) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.007668782000000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ 1 (/ 1 (+ (pow 0 -1) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.026258866999999998
    },
    "speedup": 0.29204542602694933,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (* (- (+ 1 (- (+ (pow (* 0 1) a) (- a a)) (pow b -1))) -1) -1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (+ (/ 1 b) (+ -2 (* (pow 0 a) -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.054543196
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (/ 1 b) (- -2 (pow 0 a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.186744046
    },
    "speedup": 0.29207461853964545,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": 2
  },
  {
    "base_term": "(- (- (* (- 0 (/ (pow (- (/ -1 (+ a a)) (* b 1)) b) 0)) -1) 1) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 (/ (pow (- (/ -1 (+ a a)) b) b) 0)) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.027884685
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- (/ (pow (- (/ -1 (+ a a)) b) b) 0) d))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.095151105
    },
    "speedup": 0.29305686991233576,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (pow -1 (+ a b)) (+ (pow (+ (/ 1 (/ a (+ -1 a))) (pow -1 b)) 0) -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(21416)",
      "output_term": "(* a (pow -1 (+ a b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.526697222
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(20791)",
      "output_term": "(* a (pow -1 (+ a b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 5.205555782
    },
    "speedup": 0.29328227108411375,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow (pow (- 0 0) (* (+ (* (- a a) b) (- 1 a)) (+ c c))) c) d) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (pow 0 (* (- 1 a) (+ c c))) c) d) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.10289990299999999
    },
    "Extended": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (pow 0 (* (- 1 a) (+ c c))) c) d) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.348538532
    },
    "speedup": 0.29523250244251326,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ (/ 1 (+ (/ a (* a (* (pow a -1) 1))) (+ (/ 0 0) 0))) a) b) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (+ a (/ 0 0))) (+ a b))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.012281063
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (+ (/ a 1) (/ 0 0))) (+ a b))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.041326599000000006
    },
    "speedup": 0.2971709092248312,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a (- (+ 1 a) (/ 0 (+ (+ 1 (/ (+ 0 a) -1)) (* a a))))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (+ a 1)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.030742807
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (- a -1)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.10301648599999999
    },
    "speedup": 0.29842608881067834,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (pow (* 1 (+ (* (* (+ (* (+ 0 0) 1) (+ a -1)) a) 0) 0)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ 1 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.009471586
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ 1 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.031656661999999995
    },
    "speedup": 0.2991972432216638,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 0 (- a (/ b 1))) (* (- b (pow (- (* (* -1 0) a) (- b 1)) a)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- b (pow (+ 1 (* b -1)) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.015383280000000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- b (pow (- 1 b) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.051144551999999996
    },
    "speedup": 0.3007804232990447,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ 1 (- (* -1 a) 0)) (+ (- (* (/ 0 a) a) (+ (- (* 1 a) 1) a)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10457)",
      "output_term": "(pow (+ 1 (* -1 a)) (+ 1 (* -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.577270508
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12796)",
      "output_term": "(pow (- 1 a) (- 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.9137588220000001
    },
    "speedup": 0.3016422452839253,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ a a) (* (pow a 0) (* (* b (+ (+ a (pow c 1)) a)) (* (/ 1 a) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10610)",
      "output_term": "(/ (+ a a) (* b (+ a (+ a c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.8647914809999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13979)",
      "output_term": "(/ (+ a a) (* b (+ a (+ a c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 2.863369037
    },
    "speedup": 0.30201887001825534,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (* (/ (* (pow (/ (- a (+ a 1)) -1) a) b) -1) b) (pow a -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13980)",
      "output_term": "(* (pow 1 a) (* -1 (* b b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.790517974
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13015)",
      "output_term": "(* b (/ (* (pow 1 a) b) -1))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 2.606303363
    },
    "speedup": 0.3033100387401066,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (/ a (* (* (+ a (- (/ a (- -1 0)) a)) 1) a)) a) (/ a (* 1 a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14934)",
      "output_term": "(+ a (/ a (* a (* a -1))))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.968465735
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16708)",
      "output_term": "(+ a (/ a (* a (/ a -1))))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 3.190808861
    },
    "speedup": 0.3035173140068574,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (- (+ a (* (+ a (pow (* (/ (/ b 1) b) (pow -1 a)) (/ b 1))) d)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10160)",
      "output_term": "(/ -1 (* (+ a (pow (pow -1 a) b)) d))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.689386685
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12352)",
      "output_term": "(/ -1 (* (+ a (pow (* (/ (/ b 1) b) (pow -1 a)) (/ b 1))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 2.264311296
    },
    "speedup": 0.3044575567934631,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (* (* (pow a b) b) a) (+ b (pow (- b (* 0 b)) -1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ (* (pow a b) (* a b)) (/ 1 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.031708565
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (* a (pow a b))) (+ b (/ 1 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.10363006199999998
    },
    "speedup": 0.3059784428190346,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a (- (+ (+ (+ (* 0 (+ a (* 1 a))) (* 0 a)) 0) a) a)) (pow 0 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 0) (pow 0 b))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.017592245
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 0) (pow 0 b))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.057456562
    },
    "speedup": 0.3061833912025575,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (- (- (* 0 1) (/ 1 (* a (* 1 (* (/ a 0) a))))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 (* (/ a 0) (* a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.011258181
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 (* a (* a (/ a 0)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.03676228
    },
    "speedup": 0.30624273032031746,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (- (pow 0 (* (- -1 -1) a)) (- 1 b)) (- -1 0)) (+ (* -1 c) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10992)",
      "output_term": "(+ 1 (* -1 (+ (pow 0 0) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 1.018869322
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15798)",
      "output_term": "(/ (- (pow 0 0) (- 1 b)) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 3.3216136909999996
    },
    "speedup": 0.30673925892124465,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* -1 (- (* -1 (- (/ -1 (- (pow (- a a) (* -1 -1)) (- -1 b))) 1)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 (+ 1 b)) (+ -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.035504661
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 (+ 1 b)) (+ -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.11511574899999999
    },
    "speedup": 0.30842574807031836,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (/ a 0) -1) (- (- b (+ 0 (+ 1 (* 1 (- (+ b c) 0))))) (+ -1 e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10288)",
      "output_term": "(pow (* (/ a 0) -1) (* -1 (+ c e)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.518458262
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(20095)",
      "output_term": "(pow (/ (/ a 0) -1) (- (- 0 c) e))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 1.666471177
    },
    "speedup": 0.31111144864403495,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (pow a 0) (* -1 (* (+ (pow -1 (/ (- 0 -1) 0)) a) 1))) (/ (pow 1 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (+ a (pow -1 (/ 1 0)))) 2)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.021911805
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 2 (+ a (pow -1 (/ 1 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.07024140000000001
    },
    "speedup": 0.3119500038438869,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ -1 a) (- (pow b (/ (+ (+ 0 a) (- (+ b d) 0)) (pow (* c a) b))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (- (pow b (/ (+ a (+ b d)) (pow (* a c) b))) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.040278637
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (- (pow b (/ (+ a (+ b d)) (pow (* a c) b))) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.12904685700000001
    },
    "speedup": 0.3121241224805653,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (* (+ a 0) 0) (pow (* (* a b) a) a)) (* 1 -1))",
    "input_weight_simple": 17,
    "input_weight_complex": 30,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (* a b)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.009025432
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (* a b)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.028707009
    },
    "speedup": 0.3143982014984564,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 -1) (+ -1 (pow (- a -1) (pow (* (* (+ 0 a) b) (pow a 0)) (- 0 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ -1 (pow (- a -1) (* a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.0062372980000000005
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ -1 (pow (- a -1) (* a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.019830346000000002
    },
    "speedup": 0.3145329889856687,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* a (pow (+ (+ -1 a) (- (- (pow (pow b b) a) (+ 0 0)) (/ 0 a))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016476408
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.052190505
    },
    "speedup": 0.31569742427286346,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a 1) (+ a (+ 1 (/ -1 (pow (+ (- b 0) (- 1 1)) (/ 0 -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11378)",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 1.821130011
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(20403)",
      "output_term": "(pow (/ a 1) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 5.71755604
    },
    "speedup": 0.3185154632957476,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- -1 (- a a)) (+ (pow 1 b) (- (* (* (* (/ 0 a) 0) b) (* 1 -1)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.008237331
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.025817436
    },
    "speedup": 0.31906076962871144,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow (+ 1 (- (* (- (- a (/ (* 0 a) 1)) (/ 1 1)) a) -1)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023679486
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.073413462
    },
    "speedup": 0.32254964355175075,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 (* (- (/ a (+ -1 (/ (pow (- 1 a) a) (- a 0)))) 1) -1)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ (/ a (+ -1 (/ (pow (- 1 a) a) a))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.031125374999999997
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (+ -1 (/ (pow (- 1 a) a) a))) (+ -1 b))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.096358624
    },
    "speedup": 0.3230159762347789,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* (+ (* (+ 1 (* a 1)) (+ (- b (* (+ a b) a)) (* -1 0))) a) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10085)",
      "output_term": "(+ 1 (* b (+ a (* (+ 1 a) (- b (* a (+ a b)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 16,
      "output_depth": 8,
      "simplification_time": 0.56785511
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13957)",
      "output_term": "(+ 1 (* b (+ (+ a b) (* (* a a) (- -1 (+ a b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 16,
      "output_depth": 7,
      "simplification_time": 1.7424104589999998
    },
    "speedup": 0.32590203247855964,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ (+ (+ (pow a a) (* (pow (* (+ 1 a) 1) a) -1)) 0) (* b (* b 1))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow (+ a 1) a) -1) (+ (pow a a) (+ 1 (* b b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.029146367
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (pow a a) (pow (+ a 1) a)) (+ 1 (* b b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.089401279
    },
    "speedup": 0.3260173380741007,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (/ (pow (* (+ 0 (pow (* (pow a 0) a) (- -1 a))) b) 0) 0) 0) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006230828999999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019077067
    },
    "speedup": 0.3266135722016387,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a 0) (+ (pow a a) (pow (* (- (pow (/ -1 0) a) (/ a a)) (/ 0 1)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (pow a a) (pow 0 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.011746531000000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (pow a a) (pow 0 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.035698006000000004
    },
    "speedup": 0.329052860823655,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 (pow (* a (/ (+ (* (* b c) (+ -1 -1)) (* 0 0)) c)) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11475)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.898175031
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11265)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.72770789
    },
    "speedup": 0.3292783051633875,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (/ (* (pow (* (* (- a 0) (- a 0)) (pow 0 0)) a) 0) c)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a c)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.012096527000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a c)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.036728974
    },
    "speedup": 0.3293456277869347,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 0 (- a (pow a (+ (* (* a c) (+ (- a 1) 1)) (- (pow e 0) 0))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(26592)",
      "output_term": "(pow (+ (pow a (+ 1 (* a (* a c)))) (* a -1)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 1.040831804
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16421)",
      "output_term": "(pow (- (pow a (+ (* a (* a c)) 1)) a) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 3.144051423
    },
    "speedup": 0.3310479581809308,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (* a -1) (- (* 0 (- (/ (/ (* b a) -1) (+ a -1)) (pow 1 a))) d)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* -1 (+ a d)))",
      "output_weight_simple": 7,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.066015936
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- b (+ a d))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.198977223
    },
    "speedup": 0.3317763460795711,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (- 0 (- 0 (- 1 (+ (+ a (/ (- (+ -1 -1) 1) (pow a 0))) c)))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (* -1 (+ a c)) 4))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.066041535
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (- 4 a) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.198660415
    },
    "speedup": 0.3324342949751716,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 0 (+ 1 (+ 0 (- (- (* (* a (pow (/ 1 a) a)) (pow a a)) b) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (* (pow (/ 1 a) a) (* a (pow a a))) b) 2)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.033191937
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (* (pow (/ 1 a) a) (pow a a))) (- 2 b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.099842184
    },
    "speedup": 0.33244401985437333,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow b (+ b (pow -1 (* (+ (- (- (* 1 -1) a) (pow 0 c)) (* -1 b)) 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (+ b (pow -1 (+ (- (- -1 a) (pow 0 c)) (* b -1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.050247831
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (+ b (pow -1 (- -1 (+ b (+ a (pow 0 c))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 9,
      "simplification_time": 0.150739015
    },
    "speedup": 0.33334323565800134,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (* (- -1 a) (- a (* (* (* (* 1 -1) b) a) (* -1 b)))) b) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 b) (* a (* (- -1 a) (+ -1 (* b b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 1.481421543
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- (* (- -1 a) (- (* b (* a b)) a)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 4.4227259750000005
    },
    "speedup": 0.3349566650463801,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- (pow (pow (pow (/ a a) (* (pow b a) 1)) (+ (- -1 1) -1)) 1) 0) b) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow 1 (pow b a)) -3) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.007207058
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow 1 (pow b a)) -3) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.021515121999999998
    },
    "speedup": 0.3349763947422655,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (- 1 (- a (pow (* b (* 1 (+ (/ (pow 0 1) -1) (- b b)))) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.007700309000000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.022978591
    },
    "speedup": 0.33510797071935355,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (/ a (- b a)) (/ (- (/ (- (+ (+ b 1) -1) 1) -1) a) a)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10053)",
      "output_term": "(/ 1 (+ (/ a (- b a)) (/ (- (* -1 (+ b -1)) a) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.424550484
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11869)",
      "output_term": "(/ 1 (+ (/ a (- b a)) (/ (- (/ (+ b -1) -1) a) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.262041663
    },
    "speedup": 0.3363997373833133,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ (/ a (* (* (+ (- (- a -1) -1) (+ -1 b)) (+ b 1)) b)) 0) 0) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "NodeLimit(13801)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.542521691
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14008)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.6027360320000001
    },
    "speedup": 0.33849721985909653,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ -1 (- a (pow (+ (* b (* (* -1 (* -1 -1)) 0)) (- (/ a c) d)) 1))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (- (/ a c) d)) -2)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.098123265
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ d (+ a (- -2 (/ a c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.28947023899999996
    },
    "speedup": 0.3389753134518261,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ -1 a) (+ -1 (* 0 (- b (* (- (+ (/ b 1) 0) (* a 0)) (/ b b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ -1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.007274243
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ -1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.021449282
    },
    "speedup": 0.339136899780608,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (/ 1 (* a (* (pow a (+ (* 1 (* (/ a 1) a)) b)) 0))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.0073926140000000005
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.021663588
    },
    "speedup": 0.34124605767059457,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- a (* (/ (* (- (+ a 0) (+ 0 a)) 1) 1) 1)) (- -1 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a -1))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.010993828
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a 2) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.032067775
    },
    "speedup": 0.3428310196139271,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow 1 (pow a 1)) (+ a (- (pow (+ b 0) 0) 1))) 0)",
    "input_weight_simple": 17,
    "input_weight_complex": 32,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005235679
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.015263923
    },
    "speedup": 0.34301005056170686,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (/ b -1) (+ (+ (- a 0) (- (+ (/ 0 b) b) (+ 1 a))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10158)",
      "output_term": "(* a (+ 1 (+ a (* (+ a b) -2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.812472825
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(21175)",
      "output_term": "(* a (+ (/ b -1) (- 1 (+ a b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 2.364203579
    },
    "speedup": 0.3436560337767765,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* (/ 1 a) (- (/ -1 (- (* (pow -1 (- a a)) (+ a a)) a)) 1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(27159)",
      "output_term": "(+ a (+ (/ -1 a) (* -1 (pow a -2))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.8483143590000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(22525)",
      "output_term": "(+ a (* (/ 1 a) (- (/ -1 a) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 5.372048425999999
    },
    "speedup": 0.344061373321656,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (pow (* (- a 0) (pow (+ (+ (+ 0 -1) 1) (+ 0 a)) -1)) 1) a) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13907)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.6728348129999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13642)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.950917115
    },
    "speedup": 0.344881290869192,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (/ 1 (- (+ (/ (pow (- (+ (* a 1) a) a) -1) (- (pow c 1) c)) 0) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10403)",
      "output_term": "(- -1 (/ 1 (- (/ (/ 1 a) 0) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.639824598
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10243)",
      "output_term": "(- -1 (/ 1 (- (/ (/ 1 a) 0) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 1.850652104
    },
    "speedup": 0.3457292684114335,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (pow (/ (* 0 a) 0) 1) (/ (* (+ (+ (+ b b) 1) b) (+ 1 -1)) b)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 0 0) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.018248847999999998
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 0 0) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.052519107
    },
    "speedup": 0.34747064530248006,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- -1 (+ (* (pow (/ -1 1) 0) (* (+ a -1) -1)) a)) 1)",
    "input_weight_simple": 17,
    "input_weight_complex": 28,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-3",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.033005723
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "-3",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.094877045
    },
    "speedup": 0.34787891001453514,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (- (- (/ 1 a) (* (* (* 1 (+ 0 1)) (/ -1 1)) (- -1 1))) 1) 0) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (/ 1 a) -3) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.008718964999999999
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (/ 1 a) 3) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.025036046
    },
    "speedup": 0.34825646989145165,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* a (- (+ (pow (* a b) 1) a) (- a (/ (- (pow d a) d) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11351)",
      "output_term": "(* a (+ (- (pow d a) d) (+ 1 (* (* a b) -1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.719435061
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15459)",
      "output_term": "(- a (* a (+ (* a b) (/ (- (pow d a) d) -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 2.062095688
    },
    "speedup": 0.3488853912971278,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (pow (- (/ (+ (+ (- (+ (* b c) c) a) (+ -1 d)) -1) 1) 0) (- 0 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (+ (- (+ c (* b c)) a) (+ d -2))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.183434988
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (/ (+ c (+ (* b c) (- d (+ a 2)))) 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.52474271
    },
    "speedup": 0.3495712937107788,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- -1 (- (- -1 1) (+ 0 (- a (pow (- a (pow a 1)) (- a b)))))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (- a (pow 0 (- a b)))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.051439305000000005
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (+ -1 (pow 0 (- a b)))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.14683844799999998
    },
    "speedup": 0.35031223566187525,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (/ (- 0 (- a (+ a (+ (* (* a a) 1) (- c 1))))) 0) d) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13967)",
      "output_term": "(* a (pow (/ (+ (* a a) (+ c -1)) 0) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.804992394
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(24198)",
      "output_term": "(* a (pow (/ (+ (* a a) (+ c -1)) 0) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 2.291519734
    },
    "speedup": 0.35129193174995366,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow -1 (/ a (- (* a 1) (+ a (* b (- (- -1 b) -1)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(22942)",
      "output_term": "(pow -1 (/ a (* b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.876605494
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16608)",
      "output_term": "(pow -1 (/ a (* b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 2.4924132869999998
    },
    "speedup": 0.35170952529109994,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- 1 (* (* (* 1 (+ -1 (- a (+ (* a a) 0)))) b) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 29,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (+ -1 (- a (* a a))) (* a b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.9015800929999999
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (- (* a (- b (* a b))) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 7,
      "simplification_time": 2.562095211
    },
    "speedup": 0.3518917209357369,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- -1 0) (* -1 (+ (pow (* (pow a -1) (* (* a a) b)) (/ b (+ d d))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16848)",
      "output_term": "(pow -1 (* -1 (+ (pow (* a b) (/ b (+ d d))) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.5506822519999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10155)",
      "output_term": "(pow -1 (- 0 (+ (pow (* a b) (/ b (+ d d))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 4.403548026
    },
    "speedup": 0.3521438264881546,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ a (* (/ (pow (+ a -1) 1) -1) (pow (- (* 1 0) -1) 1))) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11459)",
      "output_term": "(/ a (+ 1 (* a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.7956603760000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10931)",
      "output_term": "(/ a (/ (+ a -1) -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 2.259378516
    },
    "speedup": 0.35215895449366136,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- -1 (pow 1 (pow 1 (- a (- (+ (/ (/ 0 0) 0) (- b b)) 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 1 (pow 1 (- a (+ -1 (/ (/ 0 0) 0))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.021787281
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 1 (pow 1 (- 1 (- (/ (/ 0 0) 0) a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.06180911
    },
    "speedup": 0.35249303864753917,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ (+ (* -1 (/ (+ a a) (pow (- 1 0) 1))) (/ 1 -1)) b) (+ a d)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.177689709
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.504022395
    },
    "speedup": 0.35254328133574303,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (pow (- -1 0) 1) a) (* (* 0 b) (pow -1 (+ (* (pow 0 1) a) (/ -1 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021405073999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.060701179
    },
    "speedup": 0.35263028416630915,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- (- (/ a (* (/ (pow (pow 0 a) -1) 1) a)) (* 1 a)) -1) a) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10325)",
      "output_term": "(+ -1 (* -1 (/ a (* a (/ 1 (pow 0 a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.906974543
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16697)",
      "output_term": "(- -1 (/ a (* a (/ (/ 1 (pow 0 a)) 1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 2.569093686
    },
    "speedup": 0.35303288001619415,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- (+ (pow (* (+ 0 a) (* (- 0 a) (* 0 -1))) 1) -1) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- -1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.008588834
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- -1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.024196201
    },
    "speedup": 0.3549662196970508,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (- (+ 0 a) (* a (pow a (pow (* 0 (pow (pow 1 1) a)) (pow b 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016268719
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.045687246
    },
    "speedup": 0.35608885245567223,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a (* 1 (+ (- (- a (* (+ (pow a a) b) (- b a))) 0) b))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11240)",
      "output_term": "(/ (+ (* b -1) (* (+ (pow a a) b) (- b a))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.49602941300000003
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10567)",
      "output_term": "(/ (- (* (+ (pow a a) b) (- b a)) b) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.3862095609999998
    },
    "speedup": 0.35783147581392283,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* a (/ (pow 1 (- (- (- (- (* 0 a) b) (- c 1)) (+ 0 0)) c)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (pow 1 (+ (* -1 (+ -1 b)) (* c -2))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.08453807099999999
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (/ (pow 1 (+ 1 (- (* c -2) b))) -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.235390401
    },
    "speedup": 0.3591398402010454,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ (- -1 -1) (/ (+ -1 (+ (+ a (+ a (- 1 a))) (- 1 b))) -1)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11583)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.8195608970000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(23216)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.270620811
    },
    "speedup": 0.3609413306835053,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (- (- 1 1) a) a) (+ a (* -1 (pow (/ 1 (+ (* 0 a) a)) (/ a b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (/ 1 a) (/ a b)) (* a (+ (- 0 a) -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.054334328
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (/ 1 a) (/ a b)) (* a (- -1 a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 0.15025473
    },
    "speedup": 0.36161475914934593,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (pow (+ -1 (- (* (pow (/ (+ 0 a) -1) a) -1) (+ (* -1 1) 1))) 0) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.017701204999999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.048941201999999996
    },
    "speedup": 0.36168308657396686,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 1 (* a (- a (- (pow (+ a (+ a 1)) (* (pow 0 0) b)) 1)))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13412)",
      "output_term": "(* a (- a (+ (pow (+ 1 (+ a a)) (* (pow 0 0) b)) -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.008185388
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12540)",
      "output_term": "(* a (- 1 (- (pow (+ 1 (+ a a)) (* (pow 0 0) b)) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 2.786910114
    },
    "speedup": 0.36175741116851823,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (* (+ (* (/ (pow 0 1) (+ (- (pow a 0) a) (/ 1 a))) -1) a) (pow 0 b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023008412
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.06356013499999999
    },
    "speedup": 0.3619943853171489,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (/ (- (- a a) (pow (+ (* b (/ 1 b)) 1) (* 0 b))) (- a 0)) a) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010234716
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.028263933
    },
    "speedup": 0.3621122368213935,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (* (- (+ -1 (* (* (/ (+ 0 -1) 0) a) a)) a) -1) a) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (+ (* (/ -1 0) a) -2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.169574416
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (+ (* (/ -1 0) a) -2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.46771789900000005
    },
    "speedup": 0.3625570378267691,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (pow (* a b) (* 1 (/ 0 (- (* (- a b) 1) (+ 1 0)))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.013947498000000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.038303075000000006
    },
    "speedup": 0.3641352032441259,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* a (pow a (* (* (- a (/ (* 1 -1) b)) 0) (* -1 b)))) a) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.011888942999999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.032623983
    },
    "speedup": 0.3644234059342171,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (- 0 (pow -1 (/ (pow (* (pow (* a b) 1) (pow b -1)) 1) -1))) 0) (* -1 -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11108)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.036248569
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11356)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.8347716370000002
    },
    "speedup": 0.3655492228984793,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (- a a) (+ (- 0 (* b -1)) (- (pow 1 (/ (/ a -1) b)) (* 1 b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12533)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.155100915
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17326)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 3.145657604
    },
    "speedup": 0.367204909247332,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a (+ (+ 1 (- (pow (- (- (- 0 b) 1) (* -1 1)) (+ b -1)) 1)) 1)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11417)",
      "output_term": "(- (/ a (+ 1 (pow (* b -1) (+ b -1)))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.9035346870000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(20834)",
      "output_term": "(- (/ a (+ 1 (pow (- 0 b) (+ b -1)))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 2.4480137
    },
    "speedup": 0.3690889013407074,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ 1 (pow 0 (pow (* 1 (pow a b)) (+ (+ (- (pow 0 c) 0) (pow b a)) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (pow 0 (pow (pow a b) (+ b (+ (pow 0 c) (pow b a)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.012633634000000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (pow 0 (pow (pow a b) (+ b (+ (pow 0 c) (pow b a)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.034123301
    },
    "speedup": 0.37023481403513686,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (* (- a (+ (- a 1) (* (pow (pow 1 -1) 0) (/ a 0)))) (- 0 a)) b) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12246)",
      "output_term": "(pow (/ (* a (+ -1 (/ a 0))) b) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.558651594
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10439)",
      "output_term": "(pow (/ (* a (+ (/ a 0) -1)) b) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.500033234
    },
    "speedup": 0.3724261445263419,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (/ 1 a) (+ 1 (- 0 (- -1 (+ (- (pow a a) a) (pow b a)))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.558869283
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.488717162
    },
    "speedup": 0.37540326481438124,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (+ a (pow a (/ (pow a (* (- (+ (+ -1 b) 0) (pow -1 1)) (+ -1 b))) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11245)",
      "output_term": "(pow 1 (+ a (pow a (/ (pow a (* (+ -1 b) b)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.7317286110000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10550)",
      "output_term": "(pow 1 (+ a (pow a (/ (pow a (- (pow b 2) b)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 1.94894875
    },
    "speedup": 0.37544784643516155,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (+ (* 0 (pow a 0)) (* (pow b (/ 0 (+ 0 1))) b)))",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0020513830000000004
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0054422030000000005
    },
    "speedup": 0.37693981646770625,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (/ (- a a) 0) 0) (+ a (* (- a (/ 1 (* (pow 1 -1) -1))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010263398
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.027197524000000004
    },
    "speedup": 0.3773651601520785,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* a (+ 0 (* (* (- (- (pow 1 (/ 0 b)) -1) (+ c 1)) (- 1 a)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(15208)",
      "output_term": "(* a (* (+ (- 1 a) (* c (+ a -1))) (* a a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.853609144
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12785)",
      "output_term": "(* (* (- 1 c) (- a (* a a))) (* a a))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 2.2603293190000002
    },
    "speedup": 0.37764813154644566,
    "weight_simple_diff": 3,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* (pow -1 (- 0 (+ -1 a))) -1) (+ (pow a (- b a)) 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 28,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (pow -1 (+ 1 (* -1 a)))) (+ (pow a (- b a)) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.012290167000000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (- b a)) (- 1 (pow -1 (- 1 a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.032536211
    },
    "speedup": 0.37773811461943124,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ 0 -1) (pow a (+ (- (+ (pow (pow -1 (+ 0 b)) (pow a 0)) 1) b) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a (+ a (- (+ (pow -1 b) 1) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.031713041
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a (+ (pow -1 b) (+ 1 (- a b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.08392820399999999
    },
    "speedup": 0.3778591640064167,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (pow (/ a a) (/ 0 (+ (- (- a (/ (+ b c) 0)) d) (* (pow 0 d) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.053430869000000006
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.140734087
    },
    "speedup": 0.3796583339471979,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- a (- (- (+ (* -1 1) a) a) (+ (- (- a -1) -1) a))) a) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16426)",
      "output_term": "(pow (* a (+ 3 (* a 3))) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.6483008379999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12691)",
      "output_term": "(pow (* 3 (+ a (* a a))) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.705751082
    },
    "speedup": 0.3800676692169321,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (/ b (- (/ (+ (+ (- (/ a 0) 1) -1) (/ c c)) c) d)) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10427)",
      "output_term": "(* a (+ d (/ b (- (/ (+ (/ a 0) -1) c) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.938601648
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12399)",
      "output_term": "(* a (+ d (/ b (- (/ (+ -1 (/ a 0)) c) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 2.468895121
    },
    "speedup": 0.3801707249596853,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 (pow (* a a) (- 1 (- (- (+ 0 (+ b b)) b) a)))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10790)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.8729049950000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(18192)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.285987051
    },
    "speedup": 0.3818503672705187,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (/ a b) b) (- (+ (* b (+ (+ (+ (- 1 d) -1) -1) (- 0 1))) d) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11021)",
      "output_term": "(pow a (+ d (+ -1 (* b (+ (- 1 d) -3)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.921619223
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10274)",
      "output_term": "(pow (* b (/ a b)) (- (+ d -1) (* b (+ d 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 2.39694501
    },
    "speedup": 0.38449744118243245,
    "weight_simple_diff": 0,
    "weight_complex_diff": -5,
    "depth_diff": 2
  },
  {
    "base_term": "(* (/ a (- (+ (+ -1 b) (* 1 (* (/ b (- -1 b)) 0))) (* c -1))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ a (+ -1 (+ b c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.084251781
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ a (+ -1 (+ b c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.218564658
    },
    "speedup": 0.3854776054415897,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ (/ -1 (* -1 a)) (- b (- (- (* (- 0 (- 0 a)) (/ 1 1)) 0) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* -1 b) (+ -1 (/ 1 (- 0 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.080998559
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (- -1 b) (/ -1 (- 0 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.209511041
    },
    "speedup": 0.3866075917211446,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow 1 -1) (* -1 (/ (+ a -1) (* (- (+ (- a 0) 0) (+ a a)) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(19545)",
      "output_term": "(/ 1 (* -1 (/ (+ -1 a) (* -1 (* a a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.0671044090000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13662)",
      "output_term": "(/ 1 (- 0 (/ (+ -1 a) (* -1 (* a a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.717492558
    },
    "speedup": 0.3926797907352356,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (* (/ -1 (+ a 0)) (+ b (* a (* b -1)))) (- d a)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10294)",
      "output_term": "(* (* b (+ (/ -1 a) 1)) (- d a))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.6527399469999999
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (* b (* (+ -1 a) (- a d))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.661335802
    },
    "speedup": 0.3929006683743278,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 (pow a (- a (/ (+ a 0) (- (+ (- a b) -1) (- b c)))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 (pow a (- a (/ a (+ (+ c (+ a -1)) (* b -2)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.113318183
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 (pow a (- a (/ a (- a (+ 1 (- (+ b b) c))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 10,
      "simplification_time": 0.287457343
    },
    "speedup": 0.39420869133964,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ (- 1 (pow -1 -1)) (+ (- (pow (/ (pow (- -1 1) a) -1) a) -1) 0)) (/ 0 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (* -1 (pow -2 a)) a) 3)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.012500967
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (/ (pow -2 a) -1) a) 3)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.031625367
    },
    "speedup": 0.39528290691456636,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (- (/ 1 (pow (/ (pow a (+ (pow 0 b) a)) (pow 1 b)) b)) (- 0 0)) a) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (pow (/ (pow a (+ a (pow 0 b))) (pow 1 b)) b)) (+ a -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.014241106000000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (pow (/ (pow a (+ a (pow 0 b))) (pow 1 b)) b)) (+ a -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.035983779
    },
    "speedup": 0.395764602711683,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (* 1 -1) (- (- (pow (- (+ a -1) (+ a a)) -1) b) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14077)",
      "output_term": "(+ a (pow -1 (+ -1 (- (/ 1 (+ -1 (* a -1))) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.773925247
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13823)",
      "output_term": "(+ a (pow -1 (- (/ 1 (- -1 a)) (+ 1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 1.9402031270000002
    },
    "speedup": 0.39888877418554947,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(- (- (pow a 0) 0) (- (+ (* a (* b b)) 1) (+ (+ (- a a) (- c 0)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10446)",
      "output_term": "(+ (+ a c) (* a (* b (* b -1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.695259868
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(19165)",
      "output_term": "(- a (- (* a (* b b)) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 1.73197068
    },
    "speedup": 0.40142704263330825,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- (- (/ 1 a) a) 1) (+ (/ (/ (+ (- 1 1) 0) a) a) -1)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10542)",
      "output_term": "(+ (- (/ 1 a) a) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.857086536
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(17025)",
      "output_term": "(+ (/ 1 a) (- -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 2.131902363
    },
    "speedup": 0.40202898166214,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- 1 (+ (- -1 (+ -1 (+ (pow a 0) (- (/ a b) -1)))) (/ (* b a) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15673)",
      "output_term": "(+ (/ a b) (* -1 (+ (* a b) -3)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.917114432
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10119)",
      "output_term": "(+ (/ a b) (- 3 (/ (* a b) 1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 2.278692974
    },
    "speedup": 0.40247389291331526,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 0 (* (pow a (/ (/ (+ (+ -1 (pow a 1)) (pow -1 0)) (/ -1 0)) 0)) a)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11091)",
      "output_term": "(- 0 (* a (pow a (/ (/ a (/ -1 0)) 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.9539980619999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12758)",
      "output_term": "(/ (* (pow a (/ (/ a (/ -1 0)) 0)) (- 0 a)) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 2.360569258
    },
    "speedup": 0.4041389841737912,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (/ (/ 1 (+ (* (* -1 (pow (* (- 1 1) a) (/ b b))) 1) (+ b -1))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ (/ 1 (+ -1 b)) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.007149101999999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (/ 1 (+ -1 b)) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.017646664
    },
    "speedup": 0.4051248439931762,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 (* 0 (/ -1 a))) (+ (+ (- 0 (- (+ (* 0 -1) a) (/ 0 0))) 0) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 a) (+ -1 (/ 0 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.02033128
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- (/ 0 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.049997058999999996
    },
    "speedup": 0.406649519124715,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 0 1) (pow (* 0 (- (pow 0 1) (+ (- (- 0 a) a) b))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016885403
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.041467334999999994
    },
    "speedup": 0.40719768945846174,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow -1 (+ 1 (pow (- (/ (* (/ (* 1 1) a) (* b a)) -1) 0) 0))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12101)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.19447269
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10800)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.924605327
    },
    "speedup": 0.40842184036683865,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ -1 (* a (+ (+ (/ b (- (pow -1 0) b)) b) (+ (- -1 a) 1)))) b) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10749)",
      "output_term": "(+ b (+ -1 (* a (+ b (+ (/ b (- 1 b)) (* -1 a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.681800288
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10094)",
      "output_term": "(- (+ -1 b) (* a (- a (+ b (/ b (- 1 b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 1.66689447
    },
    "speedup": 0.40902426654520013,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 1 (- 1 (+ (* (- a 1) (pow (* 0 (+ (- a b) -1)) (+ 1 d))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10157)",
      "output_term": "(+ 1 (* -1 (* (pow 0 (+ 1 d)) (+ a -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.96235863
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13751)",
      "output_term": "(+ 1 (* (pow 0 (+ 1 d)) (- 1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 2.3475055850000004
    },
    "speedup": 0.4099494527933146,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- -1 (+ (pow -1 1) (/ (* a (pow a (pow (pow a -1) a))) a))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11837)",
      "output_term": "(+ -1 (* -1 (pow a (pow (/ 1 a) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.677741987
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10426)",
      "output_term": "(- -1 (/ (* a (pow a (pow (/ 1 a) a))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.652642972
    },
    "speedup": 0.41009582740052336,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ -1 -1) (/ (* (- (+ (/ (* -1 (+ a 0)) 0) (* a 0)) b) -1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (/ (* -1 a) 0) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.012079768000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (- b (/ (* -1 a) 0)) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.029391634
    },
    "speedup": 0.41099341397623557,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (+ 1 (+ (+ a a) (* (- (/ 1 0) (/ 1 b)) -1))) -1) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (+ (* (/ 1 0) -1) (+ (/ 1 b) (+ a 2)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.6550795969999998
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (+ (/ 1 b) (- (- a -2) (/ 1 0)))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 4.026809408
    },
    "speedup": 0.4110151311636152,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* -1 (- (+ 1 (* a (pow 1 (* (* (+ a b) 1) (* a 1))))) a)) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (+ (* a (pow 1 (* a (+ a b)))) (+ 1 e))))",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.16242003500000002
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (- 1 (pow 1 (* a (+ a b))))) (+ 1 e))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.392038667
    },
    "speedup": 0.4142959576994991,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ (pow (+ (/ a (- a -1)) (pow (/ b b) (/ (- b 0) -1))) c) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ b (pow (+ (/ a (+ a 1)) (pow 1 (* -1 b))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.015971602
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ (/ a (+ a 1)) (pow 1 (/ b -1))) c) (+ a b))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.038471036
    },
    "speedup": 0.4151591342640214,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ -1 (- 1 (- (* -1 (* 1 (+ a (/ (* -1 b) (- 0 a))))) (* -1 b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10501)",
      "output_term": "(+ a (+ (* -1 b) (/ (* -1 b) (- 0 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.596721631
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10490)",
      "output_term": "(+ (/ (- 0 b) (- 0 a)) (- a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.434064222
    },
    "speedup": 0.4161052356273065,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* a (+ (* 1 0) 1)) (pow (* 1 (* (+ (/ (/ 0 1) 0) b) (- 1 0))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.002302177
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005530149
    },
    "speedup": 0.41629565496336535,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 0 (+ a (- 1 (pow (pow 1 (+ -1 (- (- 0 1) a))) (+ a 0))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (- 1 (pow (pow 1 (+ -1 (- -1 a))) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.015401075
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ 1 (- a (pow (pow 1 (- -1 (+ a 1))) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.036966720999999994
    },
    "speedup": 0.4166199918028976,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 1 a) (* (+ (+ (+ (* a (/ a a)) (+ (pow 1 a) 0)) a) -1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.02063604
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.049523622999999996
    },
    "speedup": 0.41669083863270673,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 a) (- (+ a a) (- (* (/ a (pow (pow 1 1) a)) 0) (* (+ b b) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (* a (+ b (+ b 2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.269981279
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (* a (+ b (- b -2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.647088788
    },
    "speedup": 0.4172244736838185,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 a) (+ -1 (/ (* (pow (/ 0 (pow (* 1 a) a)) (+ -1 a)) 1) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* -1 (+ a (pow 0 (+ a -1)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.016637182
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow 0 (+ a -1)) -1) (- -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.039852421
    },
    "speedup": 0.41746979436958176,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* (+ (/ 1 1) (+ a (pow (pow (- (pow b b) 1) 1) (pow 1 1)))) a) (/ a b))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13503)",
      "output_term": "(+ (* a (+ a (pow b b))) (/ a b))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.592852394
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10280)",
      "output_term": "(+ (* a (+ a (pow b b))) (/ a b))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.4175086449999998
    },
    "speedup": 0.41823546973852854,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 1 0) (* (pow a (- -1 (* (pow (- (+ a a) a) a) (- b -1)))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12941)",
      "output_term": "(/ 1 (* a (pow a (- -1 (* (pow a a) (+ 1 b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.781757054
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10076)",
      "output_term": "(/ 1 (* a (pow a (- -1 (* (pow a a) (+ 1 b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.8685971559999999
    },
    "speedup": 0.41836575181001723,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- -1 (/ (pow -1 0) a)) (- (/ (- b b) -1) (* -1 (+ 0 (+ (/ -1 1) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 (/ 1 a)) (+ -1 b))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.010595403
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 (/ 1 a)) (+ -1 b))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.025245201000000002
    },
    "speedup": 0.4196996886655804,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (- a (* (- (+ a (/ (/ a a) a)) a) c)) -1) b)",
    "input_weight_simple": 17,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15309)",
      "output_term": "(pow (+ (- a (* (/ 1 a) c)) -1) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.9962649570000001
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16094)",
      "output_term": "(pow (- a (+ 1 (* (/ 1 a) c))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 2.368582022
    },
    "speedup": 0.4206166169237267,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (- (pow 1 0) (- (+ (+ (+ (+ -1 1) a) (* a 0)) b) c)) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (+ a b)) (+ c 2))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.067265195
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (- c (+ a b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.15938247800000002
    },
    "speedup": 0.4220363232149019,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (+ (- -1 (+ 1 (* (+ (- a (pow (pow 0 b) 0)) c) (/ (pow c b) b)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12183)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.890225362
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12315)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.100434183
    },
    "speedup": 0.4238292107437103,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (+ (pow 0 a) (+ -1 (pow -1 (- (+ (/ (- 1 0) 0) a) (* 0 -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* -1 (+ (pow 0 a) (pow -1 (+ a (/ 1 0))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.022484215000000002
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ (pow 0 a) (pow -1 (+ a (/ 1 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.052984865
    },
    "speedup": 0.42435165211801523,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ a (+ (- 1 (pow -1 (/ a -1))) (- (* a -1) (- a (/ a (pow -1 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (/ a (pow -1 b)) (+ (- 1 (pow -1 (* a -1))) (* a -2))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.17024640500000002
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (- (/ a (pow -1 b)) a) (- (- 1 a) (pow -1 (/ a -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.399344443
    },
    "speedup": 0.42631469645866593,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow 1 0) (* (+ (/ (+ (- -1 a) (- a (pow 1 a))) (* (+ b c) 0)) -1) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11104)",
      "output_term": "(* b (+ -1 (/ (+ -1 (* -1 (pow 1 a))) 0)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.972800455
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(15433)",
      "output_term": "(* b (+ -1 (/ (- -1 (pow 1 a)) 0)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 2.277577786
    },
    "speedup": 0.42712062831824615,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* a (/ (+ -1 (+ 1 (* b 1))) (pow (- -1 (+ (pow c 1) 1)) (* 1 b)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10523)",
      "output_term": "(* a (/ b (pow (+ (* -1 c) -2) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.218409855
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15014)",
      "output_term": "(* a (/ b (pow (- -1 (+ 1 c)) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.846849754
    },
    "speedup": 0.4279853031541474,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (/ 0 -1) (+ -1 (+ 0 (- (* (* (/ a b) 0) (pow b a)) b)))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (+ b 1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.026948441999999996
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ b (- 1 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.062180886
    },
    "speedup": 0.4333878742094475,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (pow 1 (+ a (/ (pow 1 1) (+ -1 (- b (* -1 a)))))) c) (- c 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 (+ a (/ 1 (+ a (+ -1 b))))) (+ 1 (* c -2)))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.06070691900000001
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (+ a (/ 1 (- a (- 1 b))))) (+ c (- c 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.14003555500000003
    },
    "speedup": 0.4335107537510741,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- a (/ 0 -1)) -1) (* (- (- a 0) (/ (pow (- -1 b) 1) (+ c 0))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (- a (/ (- -1 b) c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.148194463
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- (+ a a) (/ (- -1 b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.341112834
    },
    "speedup": 0.43444411417249695,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (pow 1 1) (pow (+ (- a 1) (- (* (- (- -1 0) a) (pow a -1)) 0)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.051743683
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.118988918
    },
    "speedup": 0.4348613624673854,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow (* -1 a) (pow a (* (/ (* 1 a) (pow (* 0 1) 1)) (* (* a b) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.20052093499999998
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.46106914599999993
    },
    "speedup": 0.4349042583734285,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (/ (pow 0 0) (pow (+ (+ 1 a) -1) (pow (/ (+ b 1) a) (+ b a))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11102)",
      "output_term": "(+ -1 (pow a (/ (pow 0 0) (pow a (pow (/ (+ 1 b) a) (+ a b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.688785364
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13742)",
      "output_term": "(- (pow a (/ (pow 0 0) (pow a (pow (/ (+ 1 b) a) (+ a b))))) 1)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 1.582952536
    },
    "speedup": 0.43512698475502487,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (+ -1 (+ (+ a -1) (+ (/ -1 (/ 0 (pow a 1))) 1))) a) (- b b))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(23997)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.9126486859999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14977)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.085331204
    },
    "speedup": 0.4376516709908686,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow 0 (pow (pow (- -1 (+ (- a (/ b (- 1 b))) (- a a))) -1) e)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (pow (/ 1 (- -1 (- a (/ b (- 1 b))))) e)))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.034334549
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (pow (/ 1 (+ (/ b (- 1 b)) (- -1 a))) e)))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.07835272900000001
    },
    "speedup": 0.43820489009387276,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 0 (- 1 (pow -1 (/ (- (/ (+ a (+ (pow b 0) -1)) (- 1 0)) -1) (pow c a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(21055)",
      "output_term": "(pow 0 (- 1 (pow -1 (/ (+ 1 a) (pow c a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.538595011
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(20477)",
      "output_term": "(pow 0 (- 1 (pow -1 (/ (+ 1 (/ a 1)) (pow c a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 3.5068857799999997
    },
    "speedup": 0.43873542154543743,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* a (pow (+ (- (pow (+ (+ (- 0 a) -1) (/ 1 a)) (pow a b)) a) 1) 0)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.01919714
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.043737406000000006
    },
    "speedup": 0.43891811965254635,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a -1) (* a (+ b (pow (- (+ (+ (pow 0 a) 0) (- -1 a)) (/ b b)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -1) (+ a (* a b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.028540061999999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -1) (* a (+ b 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.06501369
    },
    "speedup": 0.43898541984003675,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (- (+ (/ (pow a (/ (/ (+ 0 0) b) -1)) (/ (pow 0 -1) 1)) b) 1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ 1 (pow 0 -1)) (+ b -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.039280657999999996
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ (/ 1 (/ (pow 0 -1) 1)) (- a 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.08938932
    },
    "speedup": 0.4394334580462185,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- -1 a) (pow (/ (- a a) (+ b (- (* (- a 0) -1) a))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -1 a) (pow 0 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.019113101
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -1 a) (pow 0 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.043242562
    },
    "speedup": 0.4419974237419143,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow -1 (- (+ a (- -1 (+ (* 1 a) (* (pow a 0) a)))) 0)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10900)",
      "output_term": "(pow (pow -1 (+ -1 (* -1 a))) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.196422969
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14185)",
      "output_term": "(pow (pow -1 (- -1 a)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 2.705473392
    },
    "speedup": 0.44222315123770395,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a (- (- a (- 0 (pow (+ 0 (pow (+ a a) 1)) (pow 0 1)))) a)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11088)",
      "output_term": "(+ a (+ 1 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 1.204861653
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18540)",
      "output_term": "(+ 1 (+ a c))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 2.699433536
    },
    "speedup": 0.44633869918699864,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ a (+ 0 (pow (* 0 -1) (pow (* (pow (+ -1 b) 1) -1) (pow 0 -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (pow (+ 1 (* -1 b)) (pow 0 -1))) (+ a a))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.01116354
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (pow 0 (pow (- 1 b) (pow 0 -1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.024898126
    },
    "speedup": 0.4483686844544043,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (* a (* (+ b 0) (* (/ (+ (+ b b) b) (/ b 1)) (+ -1 b)))) -1) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11756)",
      "output_term": "(/ (* a (* (+ b -1) (* b -3))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.6635650900000001
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (* (/ (* b 3) (/ b 1)) (- b (* b b)))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 1.4799339690000002
    },
    "speedup": 0.4483747950243853,
    "weight_simple_diff": -3,
    "weight_complex_diff": -12,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (pow (- a (+ (+ -1 (+ (+ (- a 1) -1) a)) a)) b) -1) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16312)",
      "output_term": "(/ (+ 1 (pow (+ 3 (* a -2)) b)) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.182304588
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17581)",
      "output_term": "(/ (+ 1 (pow (- (- 3 a) a) b)) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 2.632745374
    },
    "speedup": 0.44907669373422665,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (- b (/ -1 (* (- (+ -1 (+ (* a b) a)) (+ a -1)) -1))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(23733)",
      "output_term": "(/ a (* (+ b (/ 1 (* a (* b -1)))) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.0983014070000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(23350)",
      "output_term": "(/ a (* (- b (/ -1 (- 0 (* a b)))) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 2.443818764
    },
    "speedup": 0.44942015470996693,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (/ (+ (- -1 (+ (- (/ (/ 1 b) 1) (- 0 a)) -1)) a) b)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10878)",
      "output_term": "(pow (pow a (* -1 (pow b -2))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.475791692
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11376)",
      "output_term": "(pow (pow a (/ (- 0 (/ (/ 1 b) 1)) b)) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.0564825169999998
    },
    "speedup": 0.4503545343571455,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(- -1 (- (- -1 (+ (pow -1 (* (- (- (pow 1 a) a) (/ -1 1)) (/ 1 a))) 0)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10115)",
      "output_term": "(+ (pow -1 (+ -1 (* (/ 1 a) (+ 1 (pow 1 a))))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.9826526929999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13666)",
      "output_term": "(+ (pow -1 (* (- 1 (- a (pow 1 a))) (/ 1 a))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 2.17732721
    },
    "speedup": 0.45131144666124845,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ (- (- a 0) a) b) (* 0 (pow (- a (* (* 1 b) b)) 0))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.010529779999999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.023151646999999997
    },
    "speedup": 0.454817750115143,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (- a (* (* a a) (+ (- (pow a (/ a 0)) a) a))))",
    "input_weight_simple": 17,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10219)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.05623721
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12021)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.320652687
    },
    "speedup": 0.4551466128115189,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (* (* (- 0 (/ (* (+ a (/ 0 a)) 0) a)) b) 1) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 0.015473012000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 0.033983412
    },
    "speedup": 0.4553107263037626,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (/ (- (- 0 (+ (+ a 1) (/ (* -1 a) -1))) -1) 0) a) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13189)",
      "output_term": "(+ (/ (* a -2) 0) (* a -2))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.9006518720000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16565)",
      "output_term": "(+ (/ (- 0 (+ a (/ (- 0 a) -1))) 0) (* a -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 1.969928942
    },
    "speedup": 0.45720018260435313,
    "weight_simple_diff": -5,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(+ (/ (* a a) 0) (+ (pow a (* b (* (pow -1 0) b))) 0))",
    "input_weight_simple": 17,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (* a a) 0) (pow a (* b b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.004854847
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (* a a) 0) (pow a (* b b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.01060552
    },
    "speedup": 0.45776605013238386,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (- (- (* a 1) 1) (* -1 (* 1 (- a (- b (pow 0 b)))))) b) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (+ (+ a -1) (- a (- b (pow 0 b)))) b) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.10915543
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (+ (- (pow 0 b) 1) (+ a (- a b))) b) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.238040014
    },
    "speedup": 0.4585591647629461,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* 1 (/ (/ 0 (* a (* (/ b (/ (/ (+ b a) 1) (* 1 -1))) (/ 1 a)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15895)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.378829146
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11074)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 3.0056588740000003
    },
    "speedup": 0.45874438976670107,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ -1 (- (/ 0 (pow a (* (pow a a) (- (+ -1 -1) a)))) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10199)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.741101707
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10099)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.6083899979999998
    },
    "speedup": 0.46077239221926575,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ (+ (/ a -1) -1) (pow (/ a a) (pow -1 (- (+ b 0) 1)))) -1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ 1 (* -1 (pow 1 (pow -1 (+ -1 b)))))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.024000242999999997
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (- 1 (/ a -1)) (pow 1 (pow -1 (- b 1)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.052016863999999996
    },
    "speedup": 0.46139350115377964,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (/ (- (+ (- a (pow 1 (* (/ (+ -1 a) a) (pow b 0)))) b) b) -1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10583)",
      "output_term": "(+ b (+ (pow 1 (/ (+ a -1) a)) (* a -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.166995285
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16585)",
      "output_term": "(+ b (/ (- a (pow 1 (/ (+ a -1) a))) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 2.5281564579999998
    },
    "speedup": 0.4615993133285741,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (+ (/ 1 (* (+ (/ 0 (pow (- -1 1) a)) 1) (- (+ 1 b) b))) a) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10534)",
      "output_term": "(* -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.89851145
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10189)",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.942738274
    },
    "speedup": 0.4624974254252016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ 1 (/ (pow (* (/ (- (+ a a) (+ a c)) b) (/ (+ 1 1) b)) d) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10473)",
      "output_term": "(- a (/ 1 (pow (* (/ (+ a (* c -1)) b) (/ 2 b)) d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.7219054389999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10217)",
      "output_term": "(- a (/ 1 (/ (pow (* (/ (- a c) b) (/ 2 b)) d) 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 1.560664811
    },
    "speedup": 0.46256277062941986,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (* a (/ a (+ a (- (- (- (/ c b) c) (pow 1 0)) (- 0 b))))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (+ a (+ (- (/ c b) c) (+ -1 b)))) (* a (* a a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.133785579
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (+ (/ c b) (+ a (- (- b 1) c)))) (* a (* a a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.288622718
    },
    "speedup": 0.46353100659248864,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 0 a) (/ -1 (+ (/ (pow -1 (+ (- (* -1 b) 0) (- 0 a))) 0) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 a) (/ -1 (+ (/ (pow -1 (* -1 (+ a b))) 0) 1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.017000257999999997
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 a) (/ -1 (+ (/ (pow -1 (- 0 (+ a b))) 0) 1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.036588669
    },
    "speedup": 0.4646317689227777,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ -1 (- (- (+ a b) (* 1 a)) (pow (/ -1 (+ 1 (/ 0 b))) (pow 0 1)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13758)",
      "output_term": "(* b (+ b -2))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.547716977
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11959)",
      "output_term": "(* b (+ b -2))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 1.178536128
    },
    "speedup": 0.46474347623902457,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (pow a (* b (/ (* (pow (- (+ c -1) a) (/ 0 a)) 0) 1)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.01354815
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.029143395000000002
    },
    "speedup": 0.46487892024933947,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 0 a) (+ (* 1 (pow (/ 1 (pow 0 (* (* -1 -1) a))) (pow -1 (/ a a)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (/ 1 (pow 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.006050357
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (/ 1 (pow 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.01296585
    },
    "speedup": 0.46663789878796996,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* (+ (+ a a) (* a (/ (* 1 -1) a))) (- 1 -1)) (/ 0 1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (+ (* a 4) -2) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.189858057
    },
    "Extended": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (* (+ a a) (+ (/ -1 a) 2)) 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.406593513
    },
    "speedup": 0.4669480720416707,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (- (+ (* 0 (pow 1 -1)) (+ (* (pow (+ 0 (- b 0)) 1) (- 0 c)) 0)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ c (* b c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.050523879
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ c (* b c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.107917485
    },
    "speedup": 0.4681713903914644,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (pow (+ a (+ b 0)) (* (+ -1 (+ 0 (/ b a))) a)) 1) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10655)",
      "output_term": "(pow (+ a b) (+ b (* a -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.254827079
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12591)",
      "output_term": "(pow (+ a b) (* a (+ -1 (/ b a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 2.677847626
    },
    "speedup": 0.46859539983400084,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (/ (* 0 1) (+ (+ a b) (* (- (* 0 b) 1) (+ 1 c)))) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.033311943999999996
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.071036404
    },
    "speedup": 0.46894186817226835,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (+ (pow (- a (- (/ (/ (- a a) a) -1) (- b a))) -1) b) c) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(19350)",
      "output_term": "(+ -1 (/ (+ b (/ 1 b)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.578499791
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10147)",
      "output_term": "(+ -1 (/ (+ b (/ 1 b)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 3.36162846
    },
    "speedup": 0.46956402522841567,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (- a (- (pow (+ -1 (- b (+ (/ -1 -1) -1))) 1) -1))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(33329)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.6293068339999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(28015)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 3.463656592
    },
    "speedup": 0.4704008006345682,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (- (* 0 a) (- (+ a (- 1 a)) (+ (* (- b (+ a b)) e) (+ a 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11813)",
      "output_term": "(+ (* -1 (* a e)) (+ a -2))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.470732717
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11870)",
      "output_term": "(+ a (- -2 (* a e)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.999947446
    },
    "speedup": 0.4707574571874051,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ -1 a) (+ (pow (- (* (+ (* (pow a 1) a) 0) (* b 0)) b) 1) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* -1 d) (+ -1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.131331737
    },
    "Extended": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ b (- a d)))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.27780265400000004
    },
    "speedup": 0.4727519161857971,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a (/ (/ 1 0) (/ -1 (/ 0 (* (- (- a b) 0) 1))))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.018229617
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ 1 0) (/ -1 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.038472641
    },
    "speedup": 0.4738332624474623,
    "weight_simple_diff": -5,
    "weight_complex_diff": -17,
    "depth_diff": -2
  },
  {
    "base_term": "(- 1 (* (* -1 (+ (- -1 (* a a)) 1)) (* (- (pow a 0) a) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10901)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.736366041
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10556)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.533307234
    },
    "speedup": 0.48024689681989724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (+ a (- -1 (+ 0 (+ (- (+ (pow b 0) 1) (- -1 -1)) (+ b a))))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10078)",
      "output_term": "(* (* a -1) (+ b 3))",
      "output_weight_simple": 7,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.602269221
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12792)",
      "output_term": "(* a (- -3 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.251594251
    },
    "speedup": 0.4812016518282969,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (* (/ 1 1) (/ 0 a)) (+ a (pow 0 (+ (- (+ a a) b) b)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10156)",
      "output_term": "(+ b (- 0 (+ a (pow 0 (+ a a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.752120874
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10473)",
      "output_term": "(- (- b a) (pow 0 (+ a a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.555630109
    },
    "speedup": 0.48348310414452134,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 2
  },
  {
    "base_term": "(* (- a (* 0 (* b (* (pow (- a b) a) (+ (- (* c b) 1) (pow 1 -1)))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10372)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.8066719410000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10579)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.668338249
    },
    "speedup": 0.48351822029107,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ (- a -1) (- (+ (+ (/ (+ (pow 1 a) -1) a) a) (+ (* a d) 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ 1 a) (+ (/ (+ -1 (pow 1 a)) a) (+ a (* a d)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.047455325000000007
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ 1 a) (+ a (+ (/ (+ -1 (pow 1 a)) a) (* a d)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.097392682
    },
    "speedup": 0.48725760524800016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- 1 (- (+ -1 a) (- (+ (- (* a (+ (* a b) b)) (+ -1 0)) -1) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 28,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10565)",
      "output_term": "(+ 1 (* a (+ -1 (+ b (* a b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.536535067
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10372)",
      "output_term": "(+ 1 (* a (- (* b (+ 1 a)) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 6,
      "simplification_time": 1.098878408
    },
    "speedup": 0.4882569928519334,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (/ a (- (- (+ (pow a 0) a) 1) (* -1 (pow (- c d) -1)))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12244)",
      "output_term": "(* a (pow (/ a (+ a (/ 1 (- c d)))) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.9943027289999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13940)",
      "output_term": "(* a (pow (/ a (+ a (/ 1 (- c d)))) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 2.035140834
    },
    "speedup": 0.4885670379114412,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ (- 1 (* (* (/ (pow (pow -1 a) 0) (* a -1)) (/ -1 c)) -1)) b) c) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (+ 1 (+ (* (/ 1 (* -1 a)) (/ -1 c)) b)) c) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.065820266
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (* (/ 1 (- 0 a)) (/ -1 c)) (+ 1 (- b c))) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.134095529
    },
    "speedup": 0.490846089283111,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (* 0 (- 1 (- (pow 0 (- (pow (+ (+ a 1) -1) (- 0 0)) (pow b a))) a))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12737)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.777756545
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13084)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.584066649
    },
    "speedup": 0.49098726085230526,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ (+ (+ a (- b 1)) (- (+ -1 (/ (/ 0 a) d)) b)) a) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12585)",
      "output_term": "(+ b (/ (/ (+ a -2) a) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.8548798360000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13756)",
      "output_term": "(+ b (/ (/ (+ a -2) a) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.7343196239999998
    },
    "speedup": 0.4929194274053836,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a (- (/ 0 (pow -1 (* (/ (pow (/ a 0) 0) -1) 1))) (pow 0 a))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (- 0 (pow 0 a))) 0)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.004134316
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (pow 0 a)) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.008376831000000001
    },
    "speedup": 0.4935417701515047,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ -1 a) (* (+ b b) (* (* (pow (pow c (pow 1 a)) (- c 1)) c) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 a) (* b (* (pow (pow c (pow 1 a)) (+ -1 c)) (+ c c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.04471
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 a) (* (pow (pow c (pow 1 a)) (- c 1)) (* (+ b b) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.090443016
    },
    "speedup": 0.4943444168204209,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* -1 (pow (/ 0 -1) (/ (+ (- (* (- 1 a) 0) -1) 0) (* (* a 1) 0)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 0 (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.004912132
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 (/ 1 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.009912642
    },
    "speedup": 0.4955421571766639,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 0) (pow 0 (pow (+ (* (pow (pow a a) (* 1 a)) (+ 0 -1)) -1) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.004444316
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.008943425
    },
    "speedup": 0.49693668812563424,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (- 0 (pow (+ 1 (* a (+ (/ (/ a (* b -1)) (* -1 a)) (+ b 1)))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10389)",
      "output_term": "(+ (* -1 (+ a (* a b))) (/ a (* b -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.774136918
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10084)",
      "output_term": "(* a (- -1 (+ b (/ (/ a (- 0 b)) (- 0 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 1.5566602340000002
    },
    "speedup": 0.49730628501428004,
    "weight_simple_diff": -2,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(* (/ (- a b) (- (+ (- 0 (pow a (/ (+ c -1) d))) (- (* d -1) 1)) c)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a b) (+ -1 (* -1 (+ (pow a (/ (+ c -1) d)) (+ c d)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.08024140800000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a b) (- (- -1 (+ c d)) (pow a (/ (+ c -1) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.160458366
    },
    "speedup": 0.5000761879876056,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(* (pow a (* a (+ -1 (+ (* (+ (+ (+ 0 a) 0) a) -1) (* (pow -1 b) b))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.159137525
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.317435072
    },
    "speedup": 0.5013230705648052,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a (+ (+ (pow (pow (+ 1 (- (+ a a) a)) a) -1) -1) c)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13697)",
      "output_term": "(* a (+ (/ 1 (pow (+ a 1) a)) (+ -1 c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.603923568
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11515)",
      "output_term": "(* a (+ -1 (+ (/ 1 (pow (+ a 1) a)) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.20360486
    },
    "speedup": 0.5017623208999007,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (- (/ (* b (* 1 (* (pow 0 (- (- b a) b)) (* 0 a)))) c) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10116)",
      "output_term": "(+ a d)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.707845125
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11082)",
      "output_term": "(+ a d)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.4097432570000001
    },
    "speedup": 0.502109246832879,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (+ (pow (* (- -1 (pow (* a (/ a a)) (+ -1 0))) -1) 0) b) b) (pow a 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* b b))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.011356676000000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* b b))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.022469547
    },
    "speedup": 0.505425231759234,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (+ -1 (pow a (+ (/ 1 (+ a -1)) (+ (+ (- (/ -1 0) a) (pow -1 -1)) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (+ (/ 1 (+ -1 a)) (+ (- (/ -1 0) a) -2))) -2)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.061483263999999996
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (+ (/ 1 (+ -1 a)) (- (/ -1 0) (+ a 2)))) -2)",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.12158848
    },
    "speedup": 0.5056668526491983,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* (pow (+ 0 0) 1) -1) (- (+ 1 (pow (* (+ (/ 1 1) a) (+ a a)) a)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.050464100000000005
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.09970510700000002
    },
    "speedup": 0.5061335524167282,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ (pow (/ a a) (* a (+ (- (pow 1 b) b) b))) (* b d)) b) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14624)",
      "output_term": "(+ (- (/ (pow 1 (* a (pow 1 b))) (* b d)) b) -1)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.119250407
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12550)",
      "output_term": "(+ (/ (pow 1 (* a (pow 1 b))) (* b d)) (- -1 b))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 2.208654279
    },
    "speedup": 0.5067567240567666,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (- (+ (- (- -1 (- (* (pow (/ a b) c) c) -1)) -1) (* -1 b)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10061)",
      "output_term": "(+ a (+ (* c (pow (/ a b) c)) (+ a (+ b 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.528502396
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11689)",
      "output_term": "(+ b (+ (* c (pow (/ a b) c)) (+ a (+ a 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.042417088
    },
    "speedup": 0.5069970572086401,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (/ 0 (- (- -1 (- (* 0 (- (/ a b) b)) (+ 1 a))) (* 0 c)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10037)",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.618323666
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11861)",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 1.2188150340000001
    },
    "speedup": 0.5073154242040634,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (+ (+ a (- (- (/ (/ c 1) (/ 0 0)) b) 0)) 0) (/ (+ 0 c) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10581)",
      "output_term": "(+ b (+ -1 (* (/ c (/ 0 0)) -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.932866263
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10170)",
      "output_term": "(+ b (- -1 (/ (/ c 1) (/ 0 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 1.838193036
    },
    "speedup": 0.5074909134842354,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (+ -1 (* -1 (/ a (pow (pow -1 a) a)))) (* 1 a)) (pow 0 -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (* -1 (+ (/ a (pow (pow -1 a) a)) (pow 0 -1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.06315984100000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ (/ a (pow (pow -1 a) a)) (- (pow 0 -1) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.123736315
    },
    "speedup": 0.5104390008705206,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(- (* 0 0) (/ (pow (+ (+ -1 a) (pow (- (- -1 a) a) (- a 0))) a) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow (+ -1 (+ a (pow (+ -1 (* a -2)) a))) a) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 9,
      "simplification_time": 0.025188736
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow (+ -1 (+ a (pow (- -1 (+ a a)) a))) a) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 9,
      "simplification_time": 0.049252819999999996
    },
    "speedup": 0.511417133069741,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a (* a a)) (+ (- a (- (* 1 a) 0)) (+ 1 (+ 0 (- b 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 6,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11047)",
      "output_term": "(/ (- a (* a a)) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.481407793
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(13150)",
      "output_term": "(/ (- a (* a a)) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.940655229
    },
    "speedup": 0.5117792132105397,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* (- 1 (* 0 1)) (- (pow (- a (- (+ a c) a)) (pow c 1)) 0)) -1) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10258)",
      "output_term": "(/ (* (pow (- a c) c) -1) 0)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.7170706170000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11569)",
      "output_term": "(/ (/ (pow (- a c) c) -1) 0)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.3916122899999999
    },
    "speedup": 0.5152804571738873,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- (+ -1 0) -1) a) (+ -1 (+ a (/ a (+ 1 b)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 25,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10209)",
      "output_term": "(+ 1 (* -1 (/ a (+ 1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.039136933
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14622)",
      "output_term": "(- 1 (/ a (+ 1 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 2.013056886
    },
    "speedup": 0.5161984940548768,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ (/ -1 (+ (/ (+ (- (/ (/ a a) a) a) 1) -1) 1)) 1) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11783)",
      "output_term": "(/ -1 (+ a (* -1 (/ 1 a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.381564208
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12380)",
      "output_term": "(/ -1 (+ 1 (/ (- (/ 1 a) (- a 1)) -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 2.669861102
    },
    "speedup": 0.5174666977862881,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* a 1) (/ a (pow (- (+ (- (/ (pow 1 1) 1) (- 0 b)) (* b 0)) 0) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (pow (+ 1 b) b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.012891058
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (pow (+ 1 b) b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.024843838
    },
    "speedup": 0.5188835155019124,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (- a b) (pow 1 (* 0 (- (* (* (- 1 c) b) (- d -1)) (- c c))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(19593)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.872778709
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10098)",
      "output_term": "(- a (/ (- a b) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.676367705
    },
    "speedup": 0.5206367948969763,
    "weight_simple_diff": -5,
    "weight_complex_diff": -10,
    "depth_diff": -3
  },
  {
    "base_term": "(+ 1 (+ (- a 1) (- (/ 0 (/ (/ (- 1 (+ a b)) 1) c)) (pow 1 b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17725)",
      "output_term": "(+ a (- 0 (pow 1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.8948923499999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11372)",
      "output_term": "(- a (pow 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 1.713701297
    },
    "speedup": 0.5221985602546929,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (pow (/ 1 (/ a (- (- (+ (- (+ c 1) -1) 0) (- -1 b)) a))) e))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ 1 (/ a (- (+ c (+ b 3)) a))) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.382478878
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ 1 (/ a (+ c (+ (- b a) 3)))) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.73035493
    },
    "speedup": 0.52368904800848,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (- a (+ b a))) (* (/ (pow c 1) (/ (/ 1 0) (pow 1 c))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11561)",
      "output_term": "(+ a (+ (* c (/ c (/ (/ 1 0) (pow 1 c)))) (* b -1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 1.052296093
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12419)",
      "output_term": "(+ (* c (/ c (/ (/ 1 0) (pow 1 c)))) (- a b))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 2.004206981
    },
    "speedup": 0.5250436222285567,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a (+ (* 0 (pow -1 (* 1 1))) (+ b (* (pow 1 (/ 0 b)) -1)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ b -1) (+ a b))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.024208445999999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ b (- a 1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.046078237
    },
    "speedup": 0.5253770017286034,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow 1 1) (pow -1 (pow (* a 0) (pow (+ (+ (- a a) a) -1) -1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow -1 (pow 0 (/ 1 (+ -1 a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.00584658
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow -1 (pow 0 (/ 1 (+ -1 a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.011124315
    },
    "speedup": 0.5255676416929942,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (pow a b) (- a (* (/ (- -1 0) (+ (/ 1 1) 0)) (- c (- b -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (pow a b) (+ a (- c (+ b 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.037048068
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (pow a b) (+ -1 (- (+ a c) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.070427242
    },
    "speedup": 0.5260474064851213,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (pow -1 -1) (* -1 (+ 0 (* (pow (pow (- a -1) 1) (+ b a)) (+ -1 a))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (+ a 1) (+ a b)) (* b (+ -1 a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.17977304200000002
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (+ a 1) (+ a b)) (* b (+ -1 a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.341698726
    },
    "speedup": 0.5261156343907469,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (+ (* (- (- (- -1 0) (- (pow a -1) b)) b) a) -1)) (* 1 -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(25177)",
      "output_term": "(* -1 (pow a (+ (* a -1) -2)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 1.212094666
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(15699)",
      "output_term": "(/ (pow a (+ -1 (* a (- -1 (/ 1 a))))) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 2.2981123820000002
    },
    "speedup": 0.5274305449523486,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (- a (/ b (* a a))) (* (* (* (+ 0 (* (* d a) b)) (pow b -1)) 0) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(17976)",
      "output_term": "(- a (/ b (* a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.5928201249999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15024)",
      "output_term": "(- a (/ b (* a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 3.012684272
    },
    "speedup": 0.5287046305528028,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 0 (* (+ (+ a -1) (pow (+ (+ (pow a -1) a) (* 0 a)) (/ a -1))) 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011378735000000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021439538999999997
    },
    "speedup": 0.5307359920378886,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (+ 0 (/ -1 (* (pow a (* (* (pow (pow a b) -1) (/ 1 -1)) (- 1 0))) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -1 (* -1 (pow a (* -1 (/ 1 (pow a b)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.007122599
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -1 (- 0 (pow a (/ -1 (pow a b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.013407511
    },
    "speedup": 0.5312394671911885,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (/ 1 a) (- (pow -1 (+ 0 (- (- (- 0 (pow 0 a)) (- a -1)) (+ b a)))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 a) (- (pow -1 (* -1 (+ (pow 0 a) (+ 1 (+ a (+ a b)))))) c))",
      "output_weight_simple": 16,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.194151448
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 a) (- (pow -1 (- -1 (- (pow 0 a) (- (* a -2) b)))) c))",
      "output_weight_simple": 16,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.36472802000000004
    },
    "speedup": 0.5323184327872588,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- a (- (- a (/ (/ 1 (- 1 a)) b)) (- (- d c) (- (+ d 1) b)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10834)",
      "output_term": "(* -1 (+ (/ (/ 1 (- 1 a)) b) (- (- d c) (- (+ 1 d) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.550261034
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(16092)",
      "output_term": "(+ (- c b) (- 1 (/ (/ 1 (- 1 a)) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.032118046
    },
    "speedup": 0.5331376930502774,
    "weight_simple_diff": 5,
    "weight_complex_diff": 7,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (* (+ (* a -1) b) a) (/ a (/ (pow (- a (+ a b)) 0) (+ 0 -1)))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16024)",
      "output_term": "(+ (* a (+ b (* -1 (+ a 1)))) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.8175049990000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11788)",
      "output_term": "(+ (* a (- b a)) (+ (/ a -1) d))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 1.532983707
    },
    "speedup": 0.5332770304518312,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 2
  },
  {
    "base_term": "(* (pow 1 (+ (/ (pow (+ (+ (/ (/ a 1) a) a) (- -1 a)) 1) 0) 1)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10672)",
      "output_term": "(* (pow 1 (+ 1 (/ 0 0))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.682106485
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10225)",
      "output_term": "(* (pow 1 (+ 1 (/ (+ (/ (/ a 1) a) -1) 0))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.276111222
    },
    "speedup": 0.5345196196386086,
    "weight_simple_diff": -5,
    "weight_complex_diff": -14,
    "depth_diff": -3
  },
  {
    "base_term": "(* a (/ a (/ a (- (- (* (* 0 (/ (/ 0 a) 1)) -1) (+ 0 (- 1 b))) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (/ a (- (+ -1 b) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.037619699
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (/ a (+ -1 (- b a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.070358927
    },
    "speedup": 0.534682670757614,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 1 a) (- a (+ (- a (pow (* (+ (pow 0 1) -1) (+ 0 b)) a)) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11882)",
      "output_term": "(+ a (- a (pow (* -1 b) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.836556449
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12286)",
      "output_term": "(+ a (- a (pow (- 0 b) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 1.558419669
    },
    "speedup": 0.5367979278244082,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (+ (+ (- a 0) 0) (/ (* (* b -1) (* (- a b) b)) 0)) (pow a 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ (/ (* (* b -1) (* b (- a b))) 0) 1)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.104158687
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ (/ (* (* b b) (- b a)) 0) 1)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.19394821199999998
    },
    "speedup": 0.5370438114685997,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* (+ (* (pow 1 (/ a a)) 1) (+ 1 (- (- (pow b 1) c) (pow 0 1)))) -1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (* -1 (+ a (- b c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.143147318
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- c (+ b (+ a 2)))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.266250026
    },
    "speedup": 0.5376424564180137,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- a 0) (/ (* a (- 1 (+ a 1))) (+ (* (/ (+ a a) b) -1) (+ 1 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(15843)",
      "output_term": "(* a (/ (* -1 (* a a)) (* a (* (/ 1 b) -2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.767570249
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11902)",
      "output_term": "(* a (/ (- 0 (* a a)) (- 0 (/ (+ a a) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.426578352
    },
    "speedup": 0.5380498364663254,
    "weight_simple_diff": 2,
    "weight_complex_diff": 5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (+ a (* (+ b 1) (pow c (+ (- 1 (+ (/ a c) 1)) (+ b 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10652)",
      "output_term": "(/ 1 (+ a (* (pow c (+ 1 (+ b (* (/ a c) -1)))) (+ 1 b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.7327771750000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11760)",
      "output_term": "(/ 1 (+ a (* (+ 1 b) (pow c (+ 1 (- b (/ a c)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.361751064
    },
    "speedup": 0.5381138993551028,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (* (* 1 (pow (+ (+ (- 1 a) (+ (pow a 1) b)) c) (/ -1 -1))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14257)",
      "output_term": "(- a (* (+ 1 (+ b c)) d))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.630920739
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10253)",
      "output_term": "(+ a (* d (- (- -1 b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.169866496
    },
    "speedup": 0.539310033373244,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (* (+ a a) 1)) (+ (pow (pow 1 a) (+ 0 -1)) -1))",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 5,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (+ a a)) (+ -1 (/ 1 (pow 1 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.030699029000000003
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (* a (+ a a)) (/ 1 (pow 1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.056900372
    },
    "speedup": 0.5395224656879221,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 1 (+ (+ 0 (/ (/ -1 -1) 1)) (* 0 a))) (* (- -1 0) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.0043085300000000005
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.007969888999999999
    },
    "speedup": 0.5406010046062123,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* -1 (pow (+ (- (+ (* (- (pow 1 0) a) 1) -1) (pow 0 (* a -1))) b) b)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16802)",
      "output_term": "(+ 1 (* -1 (pow (+ (- (* -1 a) (pow 0 (* -1 a))) b) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.9018508730000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10063)",
      "output_term": "(- 1 (pow (- (- b a) (pow 0 (* -1 a))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.653355951
    },
    "speedup": 0.5454668563381849,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (pow (+ 1 (/ (- (- a (+ (+ (- 0 a) 0) (- b 1))) 1) 1)) -1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12428)",
      "output_term": "(pow (/ 1 (+ 1 (+ a (+ a (* b -1))))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.081143273
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15242)",
      "output_term": "(pow (/ 1 (+ 1 (/ (+ a (- a b)) 1))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 1.968285567
    },
    "speedup": 0.5492817155834989,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- 0 (- a (- (- -1 (* (/ (+ (* 0 1) a) b) (pow -1 0))) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11542)",
      "output_term": "(+ a (+ b (/ a b)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.8364799569999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11697)",
      "output_term": "(+ a (+ b (/ a b)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.5188069510000002
    },
    "speedup": 0.5507480436860338,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (+ (* 1 a) (pow -1 (- (+ (- 0 a) (+ a (+ b b))) (- (- a -1) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12678)",
      "output_term": "(+ -1 (+ a (pow -1 (- (+ b b) (+ a 2)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.7662578
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(13785)",
      "output_term": "(+ -1 (+ a (pow -1 (+ (- (+ b b) a) -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 7,
      "simplification_time": 1.390174772
    },
    "speedup": 0.5511952996367567,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (- a (/ a (+ (* a (+ (/ 1 (/ (pow a 0) 1)) (* b 0))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(20161)",
      "output_term": "(/ a (+ a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.58468761
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13684)",
      "output_term": "(/ a (+ a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 2.87003262
    },
    "speedup": 0.552149686019945,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (pow 1 0) (- (+ a -1) (* 0 (* (* (+ a b) a) 0)))) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11478)",
      "output_term": "(/ a d)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 0.5319432829999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10671)",
      "output_term": "(/ a d)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 0.962981155
    },
    "speedup": 0.552392204393657,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow -1 1) (/ 1 (* -1 (pow 0 (* (- 1 (+ (* -1 a) 0)) (+ a a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ 1 (* -1 (pow 0 (* (+ a (* a a)) 2)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.15663219099999998
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ 1 (- 0 (pow 0 (* (+ 1 a) (+ a a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.282943937
    },
    "speedup": 0.5535803052037125,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ a a) (+ (+ (- b d) (pow (* c (- (+ 1 a) c)) d)) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a a) (+ (- b d) (pow (* c (- (+ a 1) c)) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.126867245
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a a) (- (- d b) (pow (* c (+ a (- 1 c))) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.22907708599999999
    },
    "speedup": 0.5538190100776819,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (- a (- a (- b -1))) (- (* (* a 1) (/ (pow 1 a) a)) 0)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10083)",
      "output_term": "(* (pow (+ b 1) (pow 1 a)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.580042087
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10465)",
      "output_term": "(* (pow (+ b 1) (* a (/ (pow 1 a) a))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.045908903
    },
    "speedup": 0.5545818429657253,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- (- 0 (+ (pow (/ (pow a (- (+ (+ -1 a) -1) a)) a) a) a)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a (pow (pow a -3) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.032510723
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- 0 a) (pow (/ (pow a -2) a) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.058558024
    },
    "speedup": 0.5551881839455511,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (- (- (+ a (/ (+ (+ 0 a) (* a 0)) (+ 1 -1))) 0) (/ -1 -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ a (+ (/ a 0) -2)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.073818909
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 2 (+ a (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.13295870399999998
    },
    "speedup": 0.5552017790426117,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* (- (- (+ -1 (/ 1 (* (* (/ -1 a) 1) (- a a)))) -1) 1) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10255)",
      "output_term": "(* a (* a (+ -1 (/ 1 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.786718528
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10785)",
      "output_term": "(* (+ -1 (/ 1 0)) (* a a))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.416942788
    },
    "speedup": 0.5552225076853279,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ a a) (- b (pow (pow (/ (+ -1 (+ (+ 0 0) -1)) -1) (+ (- b 0) 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ b -1))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.006167862
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ -1 b))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.011038082999999999
    },
    "speedup": 0.558780179493124,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 1 1) (pow (+ (- -1 (* 1 (+ -1 (* (- a -1) 1)))) (pow b a)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11608)",
      "output_term": "(+ 1 (pow (+ (pow b a) (- -1 a)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.7628352780000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12916)",
      "output_term": "(+ 1 (pow (+ -1 (- (pow b a) a)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 1.364941231
    },
    "speedup": 0.5588777455576768,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (- a a) 1) (pow -1 (+ 1 (- (- (- a 0) (/ (/ a 1) a)) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10691)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.640449287
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18796)",
      "output_term": "(+ -1 (pow -1 (- 1 (/ (/ a 1) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 2.929170023
    },
    "speedup": 0.5600389441784206,
    "weight_simple_diff": -7,
    "weight_complex_diff": -19,
    "depth_diff": -5
  },
  {
    "base_term": "(* a (- (pow (- (* (* (/ -1 a) (- b (- b c))) 0) 1) 1) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11213)",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.026822877
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13257)",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.829312743
    },
    "speedup": 0.5613161997199295,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a a) (/ (- a (+ a (- (pow (* (- b 0) c) (/ c -1)) (/ e e)))) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10602)",
      "output_term": "(/ (* a a) (/ (* -1 (+ -1 (pow (* b c) (* c -1)))) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.7878237539999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10026)",
      "output_term": "(/ (* a a) (/ (- 1 (pow (* b c) (/ c -1))) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 1.400408131
    },
    "speedup": 0.562567252046325,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (pow (+ (/ -1 a) (- (- (+ (/ 1 a) -1) -1) (/ 0 b))) a) c) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10121)",
      "output_term": "(/ (+ (pow 0 a) c) e)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 1.189054338
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(15925)",
      "output_term": "(/ (+ (pow (+ (/ -1 a) (/ 1 a)) a) c) e)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 2.113589015
    },
    "speedup": 0.5625759452577397,
    "weight_simple_diff": -4,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (* 0 (+ (* (+ (+ (+ a -1) (- (+ a a) a)) (- (- b c) c)) 0) a)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(15450)",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.773476245
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(16832)",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 1.369333674
    },
    "speedup": 0.5648559293372055,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ (* (/ 0 (- -1 0)) (- (+ (pow (* a a) b) (+ -1 a)) -1)) b) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13815)",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.644457827
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11307)",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.1383869
    },
    "speedup": 0.5661149359677277,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (- a (/ b (+ (- a (- 0 b)) (- (/ (+ c a) c) (+ b e))))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14687)",
      "output_term": "(- a (/ 1 (- a (/ b (+ (/ (+ a c) c) (+ a (* e -1)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.944372926
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15417)",
      "output_term": "(- a (/ 1 (- a (/ b (+ a (- (/ (+ a c) c) e))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 1.6679421460000001
    },
    "speedup": 0.5661904570639705,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- (+ a (- 1 (pow (/ 1 (+ a (/ (pow 1 -1) -1))) (pow (/ a 1) a)))) -1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 1 (pow (/ 1 (+ a -1)) (pow a a))) (+ a 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.036749322
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 3 (- a (pow (/ 1 (+ a -1)) (pow (/ a 1) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.06471577
    },
    "speedup": 0.5678572935159389,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 1 (- 1 (- (pow (+ (pow a a) b) b) (pow b (* (/ 1 0) 1))))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12211)",
      "output_term": "(+ (- (pow (+ (pow a a) b) b) (pow b (/ 1 0))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.039873873
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10051)",
      "output_term": "(+ a (- (pow (+ (pow a a) b) b) (pow b (/ 1 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.829957618
    },
    "speedup": 0.5682502494984012,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ 1 a) (- a (+ -1 (- (+ a (- a (/ a a))) -1)))) (* 1 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10397)",
      "output_term": "(/ (+ 1 a) (* -1 (+ a -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.6286048639999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10843)",
      "output_term": "(/ (+ 1 a) (- 1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 1.103936849
    },
    "speedup": 0.5694210357860786,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (- (* a 0) (- 0 (* (- (* (/ (pow a 0) 0) (pow 1 -1)) (* 0 a)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.044160042999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.07745668900000001
    },
    "speedup": 0.5701256220750669,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (pow (* (/ (- 1 (- (+ a (/ 0 0)) b)) 1) b) (/ 0 -1)) (/ -1 1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.391292416
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10593)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.685374399
    },
    "speedup": 0.5709177590685001,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (- (/ -1 a) -1) (* 0 (+ (/ 0 (+ a (+ (+ a b) -1))) a))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025048637999999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.043822468
    },
    "speedup": 0.5715935031317724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (pow (- 0 a) (pow -1 (pow (/ a (+ -1 b)) (+ (- (- b -1) a) (- 1 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow (- 0 a) (pow -1 (pow (/ a (+ -1 b)) (- (+ b 1) a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.0152031
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow (- 0 a) (pow -1 (pow (/ a (+ -1 b)) (+ b (- 1 a))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.026590941
    },
    "speedup": 0.5717398267327207,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 1 a) (pow (+ (* b (* (* (- (pow -1 0) 0) (- 1 1)) (pow -1 0))) b) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow b a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.0034408299999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow b a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.006008941
    },
    "speedup": 0.5726183698591815,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (+ (* (pow (+ a -1) 0) (- 0 (/ a (- 0 (* 0 a))))) -1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (- 0 (/ a 0)) -2))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.045460402
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (/ a 0) 2))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.079377253
    },
    "speedup": 0.5727132179794632,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (/ a b) (- -1 (- -1 (/ (/ (* (pow a (* a a)) (pow a 1)) (* 0 a)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12025)",
      "output_term": "(- (/ a b) (* (pow a (* a a)) (pow 0 -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.856363582
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10692)",
      "output_term": "(- (/ a b) (/ (/ (* a (pow a (* a a))) 0) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.4935216709999999
    },
    "speedup": 0.5733854410204939,
    "weight_simple_diff": 0,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(+ a (+ (pow (/ 0 (/ a (+ (- (* (pow -1 -1) 1) a) (* -1 0)))) (pow -1 a)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (pow 0 (pow -1 a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.016847792
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (pow -1 a)) (+ a a))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.029317084
    },
    "speedup": 0.5746748892215884,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- (- a a) (- (+ (* 1 (pow -1 (+ (- 0 0) 0))) -1) (- a a))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0031903339999999995
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005550121999999999
    },
    "speedup": 0.574822319221091,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow -1 (/ (+ (- a a) (+ (* (+ -1 (* 1 b)) a) (* -1 c))) a)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(12440)",
      "output_term": "(pow -1 (+ (* -1 (* c (/ 1 a))) (+ b -2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 1.015708745
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11232)",
      "output_term": "(/ (pow -1 (/ (- (- (* a b) a) c) a)) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.765823267
    },
    "speedup": 0.5752040784498282,
    "weight_simple_diff": 2,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (- (+ 0 a) (- a (* a (/ (pow (+ 1 (- -1 a)) a) (+ a a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11209)",
      "output_term": "(pow a (* a (/ (pow (* a -1) a) (+ a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.5312561650000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(13046)",
      "output_term": "(pow a (* a (/ (pow (- 0 a) a) (+ a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.9214507719999999
    },
    "speedup": 0.5765431872686088,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (* (- (+ (+ (* a (pow 1 (/ (+ 1 a) -1))) (/ (pow a -1) 1)) a) a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11698)",
      "output_term": "(- 0 (+ (* a (pow 1 (+ -1 (* a -1)))) (/ 1 a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.9470460940000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11589)",
      "output_term": "(- (- 0 (* a (pow 1 (/ (+ a 1) -1)))) (/ (/ 1 a) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.641890953
    },
    "speedup": 0.5768020660992095,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 1 0) (/ (- (pow (* -1 (+ a (* (/ b a) -1))) (pow 0 -1)) b) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (pow (+ (/ b a) (* -1 a)) (pow 0 -1)) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.020534616999999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (- (pow (- (/ b a) a) (pow 0 -1)) b) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.035558082000000005
    },
    "speedup": 0.5774950684910394,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (- (+ (* (- a -1) b) c) (- 0 (pow a (+ (* a (* 0 -1)) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (+ b (+ -1 (+ c (* a b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.102913459
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (/ 1 a) (+ -1 c)) (* b (- -1 a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.176837952
    },
    "speedup": 0.5819647752989132,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(- (+ (/ (+ a (- (+ (pow (+ (/ a a) -1) (* a a)) 0) -1)) b) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15164)",
      "output_term": "(/ (+ a (+ (pow 0 (* a a)) 1)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 1.405796992
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13461)",
      "output_term": "(/ (+ a (+ (pow 0 (* a a)) 1)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 2.410386163
    },
    "speedup": 0.5832248017265107,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a 0) (pow a (+ 1 (* (- (pow b (+ 0 (- b a))) b) (pow (/ -1 c) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (+ 1 (* (- (pow b (- b a)) b) (pow (/ -1 c) b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.035075051999999995
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (+ 1 (* (- (pow b (- b a)) b) (pow (/ -1 c) b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.059889805
    },
    "speedup": 0.5856598130516537,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a 1) (- (* (pow (pow 0 (+ -1 (+ (- a b) 1))) (* (* -1 a) c)) c) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11020)",
      "output_term": "(+ a (* c (pow (pow 0 (- a b)) (* a (* -1 c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.692162696
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11533)",
      "output_term": "(+ a (* c (pow (pow 0 (- a b)) (- 0 (* a c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.181363298
    },
    "speedup": 0.5859016419181156,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow 1 (* (* a (- (+ 1 (* b (* (- c a) -1))) (/ (+ c 0) c))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(29478)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.652818606
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13346)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.811685663
    },
    "speedup": 0.587839041806858,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (* (/ a a) (+ (- 0 (* (+ (+ a b) a) (* c -1))) d)) (* 1 -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (* (+ b (+ a a)) c) (+ d 1)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.155183727
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (* c (+ a (+ a b))) (+ 1 d)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.263860521
    },
    "speedup": 0.5881278730591152,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 (pow a (* 1 (+ a (pow (* -1 a) (+ 0 (- b -1))))))) (/ 0 (+ b -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ a (pow (* a -1) (+ 1 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.012287332
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ a (pow (- 0 a) (+ 1 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.02077061
    },
    "speedup": 0.5915729966524816,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (/ (* (+ a (+ a (+ -1 b))) (- -1 (* -1 (- a d)))) (- 0 d))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10146)",
      "output_term": "(pow (- a (/ (* (+ -1 (+ b (+ a a))) (+ -1 (- a d))) (- 0 d))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.46597078599999997
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (* (+ -1 (+ b (+ a a))) (+ a (- -1 d))) (- 0 d))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.7861067049999999
    },
    "speedup": 0.5927576791244898,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 0 a) (- (/ (* (* (- 1 1) (- (+ a b) b)) (- (* b 0) a)) c) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(25262)",
      "output_term": "(pow 0 (- 0 c))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.0202747570000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11392)",
      "output_term": "(pow 0 (- 0 c))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.717487249
    },
    "speedup": 0.5940508481760497,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- -1 (- -1 (pow (/ (pow a 0) -1) (* (* (/ (pow a -1) b) (* 1 -1)) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11846)",
      "output_term": "(- a (pow -1 (* -1 (pow a -1))))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.907211765
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10540)",
      "output_term": "(- a (pow -1 (- 0 (* b (/ (/ 1 a) b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.5176413069999999
    },
    "speedup": 0.5977774595456501,
    "weight_simple_diff": -5,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (+ (+ 0 (+ (/ (- (* a (/ 0 (pow a 1))) (pow a 1)) a) -1)) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-4",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018049435000000003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- 0 a) a) -3)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.030153331999999998
    },
    "speedup": 0.5985884080737746,
    "weight_simple_diff": -5,
    "weight_complex_diff": -10,
    "depth_diff": -3
  },
  {
    "base_term": "(/ 0 (- a (+ (* (pow (- 1 (pow -1 b)) b) (* (* -1 (/ b a)) (- 0 d))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.196433933
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.327862645
    },
    "speedup": 0.5991348389201215,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (/ a (+ (+ (- (pow (pow -1 (* (- a a) b)) (+ 1 0)) c) 0) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.016899754000000003
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a 1))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.028178179
    },
    "speedup": 0.5997461368955035,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (- (+ -1 (pow -1 (* 1 (+ (- 0 (+ (* a a) a)) (pow b c))))) (pow c c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (pow c c) (* -1 (pow -1 (+ (- 0 (+ a (* a a))) (pow b c))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.047007442
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow c c) (- 1 (pow -1 (+ (* a (- -1 a)) (pow b c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.078292202
    },
    "speedup": 0.6004102681899278,
    "weight_simple_diff": 3,
    "weight_complex_diff": 4,
    "depth_diff": 2
  },
  {
    "base_term": "(/ (+ a (/ (- (* (* a (pow a (- -1 (* 0 b)))) (/ (pow 0 0) a)) 0) a)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13148)",
      "output_term": "(+ a (* (pow 0 0) (pow a -2)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.9941098099999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11230)",
      "output_term": "(/ (+ a (/ (/ (pow 0 0) a) a)) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 3.3176041609999998
    },
    "speedup": 0.601069239495688,
    "weight_simple_diff": -1,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(* (+ -1 (* (pow 1 a) (- (- (* 0 a) (pow (- a 0) 1)) a))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (pow 1 a) (+ a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.070911422
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (pow 1 a) (+ a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.117894478
    },
    "speedup": 0.6014821321826456,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- a (pow (- (+ a (- (/ (- -1 (/ -1 a)) 0) (- a c))) -1) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10011)",
      "output_term": "(pow a (+ a -1))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.833021283
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10664)",
      "output_term": "(pow a (- a 1))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.3838528710000002
    },
    "speedup": 0.6019579830029488,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (pow a (pow (* -1 (pow b (- (pow (pow 0 a) -1) (+ -1 a)))) (+ 0 a))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (pow (* -1 (pow b (- (/ 1 (pow 0 a)) (+ a -1)))) a)) (+ a 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.022258357000000003
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (pow (- 0 (pow b (+ (/ 1 (pow 0 a)) (- 1 a)))) a)) (+ a 1))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.036963721000000005
    },
    "speedup": 0.6021676497341812,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 1 (- (+ 0 (pow a (/ b (- (+ (+ 1 b) b) -1)))) c)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- 1 (- (pow a (/ b (+ (+ b b) 2))) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.030283680999999996
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (- c (pow a (/ b (* (+ 1 b) 2))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.050118336
    },
    "speedup": 0.6042435447178454,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ 0 (pow 0 (* -1 -1))) (- (+ (* a (+ (pow 1 -1) 0)) (pow -1 a)) 0)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (+ a (pow -1 a))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.007535717
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (+ a (pow -1 a))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.01242302
    },
    "speedup": 0.6065930023456454,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ (/ (+ (- (- (* (* -1 (/ a 0)) (+ -1 -1)) a) (* a 1)) 1) a) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16006)",
      "output_term": "(+ 1 (* (/ 1 a) (+ -1 (* (/ a 0) -2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.854469994
    },
    "Extended": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (- 1 (* -2 (- (/ a 0) a))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 1.407457893
    },
    "speedup": 0.6071016392388799,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ a (- (* (* (pow -1 0) a) (- a (/ 0 1))) -1)) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (+ 1 (* a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.012728686
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (+ 1 (* a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.020964667
    },
    "speedup": 0.6071494481643805,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- -1 (+ a (* -1 0))) (- a (/ (* a (* (pow (+ b b) a) a)) (/ c 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10442)",
      "output_term": "(+ -1 (* -1 (/ (* a (* a (pow (+ b b) a))) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 1.289775322
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13948)",
      "output_term": "(- -1 (/ (* a (* a (pow (+ b b) a))) (/ c 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 2.123425222
    },
    "speedup": 0.6074032222265843,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* (- (pow 0 (- (- (* -1 (/ (+ a a) 1)) (- 1 b)) b)) -1) b) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(21268)",
      "output_term": "(pow (+ b (* b (pow 0 (+ -1 (* a -2))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.574817887
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16431)",
      "output_term": "(pow (* b (+ 1 (pow 0 (- -1 (/ (+ a a) 1))))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 2.5912726489999995
    },
    "speedup": 0.6077391692486468,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- -1 (- (* 0 (/ a (* 0 a))) (+ (/ -1 a) (- (* 1 a) -1)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10296)",
      "output_term": "(+ a (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.7779450880000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10056)",
      "output_term": "(+ a (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.27940648
    },
    "speedup": 0.6080515459011901,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ a a) (+ a b)) (/ a (- (pow (* (/ (+ 0 1) 1) b) -1) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18269)",
      "output_term": "(- (+ a (* b -1)) (/ a (- (/ 1 b) d)))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 1.0124370839999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10233)",
      "output_term": "(- a (+ b (/ a (- (/ 1 b) d))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.657620977
    },
    "speedup": 0.6107771909549138,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow a (+ (pow (- (+ (- 0 (- (pow 0 b) b)) (+ b a)) 1) (+ c 0)) 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow (+ (+ a (* -1 (+ (pow 0 b) (* b -2)))) -1) c) -1))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.07843687099999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (pow (- a (+ (pow 0 b) (- (- 1 b) b))) c)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.128412613
    },
    "speedup": 0.6108190556016486,
    "weight_simple_diff": 2,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 0 (- 1 (+ (/ (- a a) 1) (+ (pow (* 1 (+ -1 (+ a 1))) (- 1 c)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11921)",
      "output_term": "(pow 0 (- 1 (pow a (- 1 c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.487796695
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12972)",
      "output_term": "(pow 0 (- 1 (pow a (- 1 c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 2.4303806679999997
    },
    "speedup": 0.6121661164398301,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (/ (* (+ a (+ 0 a)) (* (* (- (pow a c) b) a) (/ 1 -1))) -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (* a (* (+ a a) (- (pow a c) b)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.586689902
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (/ (* (- b (pow a c)) (* 2 (* a a))) -1)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.955963714
    },
    "speedup": 0.6137156603414762,
    "weight_simple_diff": -3,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ a b) (pow (* -1 (pow (/ -1 (* (pow b a) c)) (+ d b))) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10788)",
      "output_term": "(+ b -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.953007285
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12228)",
      "output_term": "(+ b -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.544850325
    },
    "speedup": 0.6168929569277204,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (pow a 0) (* (* 1 a) (/ a (* (pow b (+ c a)) (- c 1))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (/ a (* (pow b (+ a c)) (- c 1))) (* a -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.042165245
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (/ a (* (pow b (+ a c)) (- c 1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.06813435899999999
    },
    "speedup": 0.6188543580486315,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (+ (* (pow a 0) (/ (+ (- (+ (* -1 1) 1) a) (* a c)) 0)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (* a (+ -1 c)) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.01269486
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (- (* a c) a) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.02048497
    },
    "speedup": 0.6197158209165061,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ -1 (pow a (pow (+ -1 (/ a a)) (- 1 (+ (- -1 a) (/ b b)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(18487)",
      "output_term": "(- a (+ -1 (pow a (pow 0 (+ a 1)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 1.109867955
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13414)",
      "output_term": "(+ 1 (- a (pow a (pow 0 (+ a 1)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 1.789847923
    },
    "speedup": 0.6200906461034567,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (* 1 (* (/ a 0) (pow (pow 0 a) (+ (* b a) c))))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (/ a 0) (pow (pow 0 a) (+ (* a b) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.006684902
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (/ a 0) (pow (pow 0 a) (+ (* a b) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.010770219000000001
    },
    "speedup": 0.6206839433812813,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* -1 (+ (/ (pow (+ (/ (pow (- a -1) b) (+ -1 0)) (+ 0 -1)) a) 0) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (+ b (/ (pow (+ -1 (* -1 (pow (+ a 1) b))) a) 0))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 10,
      "simplification_time": 0.020924951
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ b (/ (pow (+ -1 (/ (pow (+ a 1) b) -1)) a) 0)))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.033691518
    },
    "speedup": 0.6210747464688294,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (* (pow (+ 0 (/ a (* (+ 1 a) -1))) -1) (pow a -1)) (- -1 b)) (+ 1 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ 1 (/ a (+ -1 (* a -1)))) (/ 1 a)) (+ -2 (* -1 (+ a b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.227616932
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ 1 a) (/ a (- -1 a))) (+ a (+ b 2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.366473296
    },
    "speedup": 0.6211010037686348,
    "weight_simple_diff": 3,
    "weight_complex_diff": 6,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (* a 0) (pow 1 (+ 0 (- a (+ -1 (* (/ 1 (pow b b)) (+ c 0)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- a (+ -1 (* (/ 1 (pow b b)) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.019628724
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ a (- 1 (* (/ 1 (pow b b)) c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.031551181
    },
    "speedup": 0.6221232732936368,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 0) (pow (* 0 a) (+ (* (- 0 (- a (- 1 b))) (- a a)) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 d))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.023314990999999997
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 d))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.037472451999999996
    },
    "speedup": 0.6221901625225912,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a (* a (/ (* (- b (* 1 0)) (- (- (+ b c) -1) (pow b 0))) b))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10587)",
      "output_term": "(* a (* a (* -1 (+ b c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.7167341249999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10980)",
      "output_term": "(* (/ (* b (+ b c)) b) (- 0 (* a a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.147490436
    },
    "speedup": 0.6246101078615002,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 (* 0 -1)) (/ (pow (/ a b) (* b (* (/ (+ -1 a) 1) (pow b -1)))) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(18148)",
      "output_term": "(+ (/ 0 0) (/ (pow (/ a b) (+ -1 a)) e))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 1.809293079
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11122)",
      "output_term": "(+ (/ 0 0) (/ (pow (/ a b) (/ (+ -1 a) 1)) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 2.891518789
    },
    "speedup": 0.6257241301294549,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (- (* a (- a b)) -1) 1) (* (* (- (+ (* a b) -1) -1) c) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(25608)",
      "output_term": "(/ (+ (* a (- a b)) 2) (* a (* (* a b) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 1.5992028820000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16468)",
      "output_term": "(/ (+ (* a (- a b)) 2) (* b (* a (* a c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 2.544035745
    },
    "speedup": 0.628608652666553,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (/ 1 (- (- a (- (* (- (- -1 (- 1 -1)) -1) 0) (+ (* -1 b) 1))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16110)",
      "output_term": "(pow 1 (/ 1 (+ 1 (* -1 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.455449712
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(17763)",
      "output_term": "(pow 1 (/ 1 (- 1 b)))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 2.314239373
    },
    "speedup": 0.6289106170176633,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow (/ 0 0) (pow 1 (+ (/ (/ a a) (- (+ a -1) 1)) (- (+ 0 a) 1)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ 0 0) (pow 1 (+ a (+ -1 (/ 1 (+ a -2)))))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.011723757999999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ 0 0) (pow 1 (+ a (+ -1 (/ 1 (- a 2)))))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.018624077
    },
    "speedup": 0.6294947126775732,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 0) (/ (- (* 0 (pow (- (+ (/ a -1) a) a) a)) a) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10040)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.3076590549999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11158)",
      "output_term": "(- 0 (/ (- 0 a) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 2.0762395
    },
    "speedup": 0.629820911797507,
    "weight_simple_diff": -5,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(- (+ 0 (- (* (/ a (/ (- 0 0) 1)) (- a 0)) (/ (/ a a) a))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (* a (/ a 0)) (/ 1 a)) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.013012870999999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (/ a 0)) (+ 1 (/ 1 a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.020641737
    },
    "speedup": 0.6304155023387809,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (* a (+ (+ (+ -1 a) (+ b (pow (pow (* -1 1) a) 0))) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(17504)",
      "output_term": "(pow a (* a (+ b (+ a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.6557210609999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10913)",
      "output_term": "(pow a (* a (+ a (+ a b))))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 1.039878936
    },
    "speedup": 0.6305744239058227,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (- (- (- (* (pow (+ (+ 0 a) a) (/ a 0)) (pow a 0)) b) b) 0) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ a a) (/ a 0)) (+ 1 (* b -2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.031567021
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ a a) (/ a 0)) (- (- 1 b) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.050011038
    },
    "speedup": 0.6312010760504511,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- a (/ (- (+ a 1) (- (+ (+ (pow 1 a) a) (- 0 b)) a)) (pow -1 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10400)",
      "output_term": "(+ (pow 1 a) (+ (* a -2) (+ (- 0 b) -2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.798457215
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12058)",
      "output_term": "(+ -1 (- (/ (+ a (+ b (- 1 (pow 1 a)))) -1) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 1.2629214160000002
    },
    "speedup": 0.6322303231890082,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -3
  },
  {
    "base_term": "(+ (/ a (+ (- (- a -1) (/ (pow 1 b) (- (+ c a) 0))) a)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a (- (+ a 1) (/ (pow 1 b) (+ a c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.03726868
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ 1 (- a (- (/ (pow 1 b) (+ a c)) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.058916895000000004
    },
    "speedup": 0.6325635456518881,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (* 1 (/ (/ -1 (+ (+ a a) (* (* (- 1 0) a) (pow a a)))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ -1 (* a (+ (pow a a) 2))) 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.020790916
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ -1 (* a (+ (pow a a) 2))) 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.032809860999999996
    },
    "speedup": 0.6336788808706018,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (* (+ -1 (pow a (pow (+ (- (* 0 0) 1) (/ 0 0)) (* b 1)))) 1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005008835999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.007867622
    },
    "speedup": 0.6366391267907888,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 0 -1) (* a (/ (* 1 (+ (- (- (- a -1) a) (* b -1)) (* a 1))) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(20221)",
      "output_term": "(* (/ (+ a (+ 1 b)) d) (* -1 a))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.168275927
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10075)",
      "output_term": "(- 0 (* a (/ (+ 1 (+ a b)) d)))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 1.834363195
    },
    "speedup": 0.6368836499687839,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (+ -1 (- (/ a (pow (+ 1 b) (- a (pow (* -1 b) d)))) (- -1 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10964)",
      "output_term": "(+ (/ a (pow (+ 1 b) (- a (pow (* -1 b) d)))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.862165688
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11337)",
      "output_term": "(+ a (/ a (pow (+ 1 b) (- a (pow (- 0 b) d)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.3533240009999998
    },
    "speedup": 0.6370726354981715,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (- (- (/ (pow 0 (- (+ (- 1 a) a) (/ -1 -1))) c) a) 1) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(19830)",
      "output_term": "(+ (+ 1 a) (* -1 (/ (pow 0 0) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.324308946
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15406)",
      "output_term": "(/ (+ -1 (- (/ (pow 0 0) c) a)) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 2.077745465
    },
    "speedup": 0.6373778541732974,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (pow (* (- (+ -1 (pow (+ (+ a 0) (pow b b)) (- a 1))) -1) (- c -1)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16344)",
      "output_term": "(pow a (pow (* (pow (+ a (pow b b)) (+ a -1)) (+ 1 c)) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.863167902
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10829)",
      "output_term": "(pow a (pow (* (pow (+ a (pow b b)) (- a 1)) (+ 1 c)) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.353969973
    },
    "speedup": 0.637508895479767,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ a (+ (- 0 (pow 1 a)) 0)) (+ (- a a) b)) (- a c))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(* (- (/ a (- 0 (pow 1 a))) b) (- a c))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.646556485
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10042)",
      "output_term": "(* (- (/ a (- 0 (pow 1 a))) b) (- a c))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.013410745
    },
    "speedup": 0.6380004240037932,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow -1 (- a (* 1 a))) (+ (+ (* -1 b) (/ a 0)) (pow a (pow (/ a c) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 b) (+ (/ a 0) (pow a (pow (/ a c) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.020609367
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (- (pow a (pow (/ a c) c)) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.032136835
    },
    "speedup": 0.6413004578702289,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (* a -1) (* (- (pow (+ (pow (* a 0) 1) (- c 0)) (/ 1 0)) c) a)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ c (* -1 (+ 1 (pow c (/ 1 0))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.149997981
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (- c (pow c (/ 1 0)))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.233466385
    },
    "speedup": 0.6424821329203345,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- (/ 1 (/ a (pow a (+ b (+ (- (+ b 1) a) (- -1 a)))))) (+ b a)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10892)",
      "output_term": "(+ (/ 1 (/ a (pow a (+ b (+ b (* a -2)))))) (* b -1))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.597558322
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13615)",
      "output_term": "(- (/ 1 (/ a (pow a (* 2 (- b a))))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.930009854
    },
    "speedup": 0.6425290220634587,
    "weight_simple_diff": 3,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (- (pow (+ (* -1 a) (+ 0 (* (- 1 a) 1))) 1) 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 25,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(22928)",
      "output_term": "(* a 3)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.780053077
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14114)",
      "output_term": "(* a 3)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 2.768972171
    },
    "speedup": 0.6428569761888011,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ -1 (pow a 1)) (pow (/ (- -1 a) (* (+ (* (- 1 0) 1) (+ -1 a)) 0)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(18796)",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.52386149
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13347)",
      "output_term": "(/ (/ -1 a) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 2.3655724200000003
    },
    "speedup": 0.644182979610491,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (- a (- 1 (+ -1 (/ (pow b a) (* (pow (- a 0) -1) b))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ (pow b a) (* b (/ 1 a))) (+ a -2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.050904667
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (/ (pow b a) (/ b a)) (- 2 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.078878392
    },
    "speedup": 0.6453562973241138,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a 0) (- (- a (* (/ (- (+ (- a -1) b) (* b 1)) (* a c)) c)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10426)",
      "output_term": "(+ a (+ -1 (- a (* c (/ (- a -1) (* a c))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.614892987
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10716)",
      "output_term": "(- (+ a (+ a -1)) (* c (/ (- a -1) (* a c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.950834588
    },
    "speedup": 0.6466876518379241,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(- (+ a a) (- (+ (/ 0 (* a (pow (* (* a 0) a) b))) b) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a a) (- b c))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.036610825
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a a) (- c b))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.056494723999999996
    },
    "speedup": 0.6480397178327661,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow b (/ (* b (* (pow (+ (+ (* -1 d) b) (pow 0 0)) -1) -1)) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (/ (* (/ 1 (+ b (+ (* -1 d) (pow 0 0)))) (* b -1)) 0)))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.019059073
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (/ (/ (- 0 b) (+ (- b d) (pow 0 0))) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.029335769
    },
    "speedup": 0.6496871788157317,
    "weight_simple_diff": 4,
    "weight_complex_diff": 7,
    "depth_diff": 2
  },
  {
    "base_term": "(/ a (+ (- (- (- -1 b) 1) a) (- (pow (* (/ (/ 1 a) 0) b) (/ 1 d)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ -1 (+ (pow (* b (/ (/ 1 a) 0)) (/ 1 d)) (+ (- -1 b) (* a -2)))))",
      "output_weight_simple": 18,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.222247166
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (* (- -1 a) 2) (- (pow (* b (/ (/ 1 a) 0)) (/ 1 d)) b)))",
      "output_weight_simple": 17,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.341649484
    },
    "speedup": 0.6505122249796812,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (- (+ (+ (pow (/ (+ (pow (- 1 1) -1) (+ a 1)) (pow 0 a)) 0) a) -1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14531)",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.981762386
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13288)",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.5080232160000002
    },
    "speedup": 0.6510260422940332,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (* (- b 0) a) (/ (+ b -1) (- (+ -1 (- (+ c a) -1)) (- 1 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10049)",
      "output_term": "(- a (pow (* a b) (/ (+ b -1) (+ a c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.685026622
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11336)",
      "output_term": "(- a (pow (* a b) (/ (+ b -1) (+ a c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.049465875
    },
    "speedup": 0.6527383484479664,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (+ b (- (/ b (* 0 (+ (- (- 1 -1) 1) (+ a 1)))) (+ a 0)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11414)",
      "output_term": "(+ b (+ 1 (/ b 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.842320408
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11337)",
      "output_term": "(+ b (+ 1 (/ b 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.283115051
    },
    "speedup": 0.6564652229303481,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 1 (pow -1 (- (- 0 a) (+ (+ 1 (* (/ 1 1) 1)) (- b 1))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (pow -1 (+ -1 (* -1 (+ a b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.06287793600000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (pow -1 (- -1 (+ a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.095772645
    },
    "speedup": 0.6565333556361528,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ -1 (- (+ (- -1 a) -1) (- (+ a -1) (pow (+ 0 (/ b 1)) (/ b -1))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10102)",
      "output_term": "(pow (/ -1 (+ -1 (+ (pow b (* -1 b)) (* a -2)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.14848892
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14893)",
      "output_term": "(pow (/ -1 (+ -1 (+ (pow (/ b 1) (/ b -1)) (* a -2)))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 1.7490934519999999
    },
    "speedup": 0.6566195297837065,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (pow (* 1 a) (pow (+ 0 (- (/ b (/ a 0)) (+ -1 c))) 0)) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a c))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.019012601
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a c))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.028943508
    },
    "speedup": 0.6568865460261417,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- -1 (* (* -1 b) (/ (* (+ b 0) 1) (* (* b (- b 1)) (pow b 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -1 (* b (/ b (* b (+ -1 b))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.302081101
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (* b (/ b (- (* b b) b)))) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.459770806
    },
    "speedup": 0.6570254071329619,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (+ a (pow (+ a c) 0)) (- (/ a (/ (- (- a b) a) (* d 1))) 0)) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11833)",
      "output_term": "(pow (+ a (+ 1 (/ a (/ (* -1 b) d)))) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.888241171
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11351)",
      "output_term": "(pow (+ 1 (+ a (/ a (/ (- 0 b) d)))) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.3500817669999998
    },
    "speedup": 0.6579165741744293,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow (+ a (+ (* a (+ (* (pow (- a b) 1) (* 1 -1)) (+ a 0))) 1)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16778)",
      "output_term": "(pow 1 (+ 1 (+ a (* a b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.8341406020000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12350)",
      "output_term": "(pow 1 (+ 1 (+ a (* a b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 1.263106058
    },
    "speedup": 0.6603884105510324,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (pow (+ a (* 1 (/ (pow (* (* (* -1 a) 1) a) (+ b -1)) -1))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 (+ a (* -1 (pow (* a (* a -1)) (+ -1 b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.010718334000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 (+ a (/ (pow (- 0 (* a a)) (+ -1 b)) -1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.016170298
    },
    "speedup": 0.6628408456047008,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ (pow (+ (- (+ a (pow (* 0 a) -1)) 0) (- (* a a) 0)) 1) b) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ 1 0) (+ a (+ (* a a) b))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.11071384100000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (+ (pow 0 -1) (+ (* a a) b))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.166789881
    },
    "speedup": 0.6637923136356216,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (* -1 1) (+ 1 (/ (+ (- (* b b) 1) (+ a (* -1 -1))) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10190)",
      "output_term": "(pow a (+ (* b b) (+ a -2)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.9122518529999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10224)",
      "output_term": "(pow a (- -1 (+ 1 (/ (+ a (* b b)) -1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.370849134
    },
    "speedup": 0.6654648059908246,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -3
  },
  {
    "base_term": "(* (/ (- (- (- 0 (+ (- (pow 1 (+ a a)) (- 0 b)) (+ c 0))) a) -1) d) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11354)",
      "output_term": "(+ 1 (- (- 0 (+ (pow 1 (+ a a)) (+ c b))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.781205316
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* d (/ (- (- (- (- 1 c) (pow 1 (+ a a))) a) b) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 1.1725975169999998
    },
    "speedup": 0.6662177811860402,
    "weight_simple_diff": -1,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (+ (* -1 (* (pow a (pow (* (+ (- 0 a) b) 1) (pow a 1))) c)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow a (pow (+ (- 0 a) b) a)) (* -1 c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.015999623
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow a (pow (- b a) a)) (- 0 c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.023977704000000006
    },
    "speedup": 0.6672708529557291,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (- (+ (+ a a) (/ -1 (pow -1 (+ (+ (- 1 c) 1) -1)))) (/ 1 -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10010)",
      "output_term": "(pow a (+ (/ -1 (pow -1 (- 1 c))) (+ a (+ a 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.8588381600000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17845)",
      "output_term": "(pow a (+ (/ -1 (pow -1 (- 1 c))) (+ a (+ a 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 2.772062069
    },
    "speedup": 0.670561521975791,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ 0 a) (* (/ (/ 1 1) (- (+ (- 0 -1) a) a)) 1)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(12585)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.545916131
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13413)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.299826264
    },
    "speedup": 0.6721882236057463,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (+ a a) (* (+ -1 (- (+ a (- (/ 1 1) 0)) 0)) c)) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(37180)",
      "output_term": "(/ (* a (+ c 2)) c)",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.6073427439999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(19893)",
      "output_term": "(/ (* a (+ c 2)) c)",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 2.379449985
    },
    "speedup": 0.6755102036742326,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (+ (pow a 1) (* (+ 1 -1) (pow (pow (* a -1) 0) (- 1 b)))) 1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.00617136
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.009124581
    },
    "speedup": 0.6763444809136989,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (+ 1 0) (+ a (* a (pow a (* d (* (/ 0 c) 0)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a 3)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.014266349
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a 3)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.021049979
    },
    "speedup": 0.6777369706639612,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (+ (+ 1 (+ -1 (- -1 (- a (* -1 (- 0 0)))))) a) (pow b b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(28170)",
      "output_term": "(- a (+ -1 (pow b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.593982425
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(23737)",
      "output_term": "(- a (+ -1 (pow b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 2.349306813
    },
    "speedup": 0.6784905301340902,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (* 1 (- a (/ 1 a))) (+ (+ a 0) (+ 1 -1))) -1)",
    "input_weight_simple": 17,
    "input_weight_complex": 28,
    "input_depth": 6,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (- a (/ 1 a)) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.004651023
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (- a (/ 1 a)) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.006845137
    },
    "speedup": 0.6794638295771144,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (/ (pow (/ (pow (- (- (+ a a) -1) -1) (- a b)) a) b) 1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ (pow (+ a (+ a 2)) (- a b)) a) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.028581423
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (pow (/ (pow (+ a (+ a 2)) (- a b)) a) b) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.04204704100000001
    },
    "speedup": 0.6797487366590195,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (+ a (* (pow 0 1) 1)) (+ (- (+ (- (+ 0 1) -1) a) a) a)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(32314)",
      "output_term": "(+ (* a -2) -2)",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 2.033101731
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17929)",
      "output_term": "(/ (+ a (+ a 2)) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 2.986597245
    },
    "speedup": 0.6807418490737943,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (* 1 -1) a) (* b (+ (/ 0 (- (* c (pow (- c 1) b)) (pow e -1))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* -1 (+ a b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.03266265
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.047963055000000004
    },
    "speedup": 0.6809960291311719,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow a (+ (- a (pow (- a (pow (* (/ a 0) 0) (* a b))) 1)) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10037)",
      "output_term": "(/ (pow a (pow 0 (* a b))) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.879967131
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10191)",
      "output_term": "(/ (pow a (pow 0 (* a b))) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.2914979199999999
    },
    "speedup": 0.6813538894433528,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 0 (* 1 (pow (+ (pow a a) (+ (/ a (+ a d)) (* a -1))) b))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (pow (+ (pow a a) (+ (/ a (+ a d)) (* a -1))) b)) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.022641812
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (pow (+ (pow a a) (- (/ a (+ a d)) a)) b)) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.033218948
    },
    "speedup": 0.6815932882642762,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (/ a 1) (+ (- (/ (/ b b) b) c) (* (+ (/ b 0) -1) (pow 1 -1)))) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (+ (- (/ 1 b) c) (+ (/ b 0) -1))) e)",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.448723194
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (/ a 1) (- (- c e) (+ (/ 1 b) (/ b 0)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.655565682
    },
    "speedup": 0.6844824345152344,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 1 (/ (/ (* 0 -1) (- -1 (+ (- (* -1 1) a) b))) a)) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10978)",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.7836053379999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12690)",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.139036934
    },
    "speedup": 0.6879542836668016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 a) (* 1 (+ (pow (- (* (- 0 (- a a)) a) (- d c)) e) e)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 a) (+ e (pow (+ c (* -1 d)) e)))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.021578482
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 a) (+ e (pow (- c d) e)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.031362724
    },
    "speedup": 0.6880295856954262,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow (+ (- (pow (* a 0) (pow -1 0)) (+ (+ (+ 0 a) 1) a)) 1) b) (+ a a))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15770)",
      "output_term": "(* (pow (* a -2) b) (+ a a))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.91365061
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(18064)",
      "output_term": "(* a (* (pow (* a -2) b) 2))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 2.770217636
    },
    "speedup": 0.6907943206813084,
    "weight_simple_diff": -1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow (- (+ (/ a a) (- (+ (+ (pow b b) -1) 0) (pow 0 a))) -1) (pow 1 -1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10782)",
      "output_term": "(+ (* (pow b b) -1) (+ -1 (pow 0 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 1.2633966970000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14206)",
      "output_term": "(/ (- 1 (- (pow 0 a) (pow b b))) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 1.82536503
    },
    "speedup": 0.692133724617262,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ a 0) (+ (- (+ (pow 1 1) (* -1 (+ a (/ c 1)))) (* (/ c d) e)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a 0) (+ (* -1 (+ a (+ c (* (/ c d) e)))) 2))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.178420078
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a 0) (- (- (- 2 (/ c 1)) (* (/ c d) e)) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.25744718099999997
    },
    "speedup": 0.6930356638863334,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 2
  },
  {
    "base_term": "(+ 1 (+ (- (/ a a) (+ 1 (/ (* (+ (pow 0 0) -1) (* 1 -1)) 1))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17990)",
      "output_term": "(+ a (pow 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.393470797
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13591)",
      "output_term": "(+ 1 (- a (/ (- 1 (pow 0 0)) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 2.009341154
    },
    "speedup": 0.693496370303278,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(pow 1 (pow (/ 1 (* (+ (+ (+ (+ a (/ b a)) (- b d)) (/ -1 1)) d) b)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12572)",
      "output_term": "(pow 1 (pow (/ 1 (* b (+ a (+ (/ b a) (+ b -1))))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.588050988
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11812)",
      "output_term": "(pow 1 (pow (/ 1 (* b (+ a (+ (/ b a) (- b 1))))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.8427287609999999
    },
    "speedup": 0.6977938990740107,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow (pow (* a (+ (- a (+ 0 (* -1 b))) -1)) b) c) (* -1 c)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (* c (pow (pow (* a (+ a (+ -1 b))) b) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 9,
      "simplification_time": 0.140263494
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- a (* c (pow (pow (* a (+ a (- b 1))) b) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.20026821100000003
    },
    "speedup": 0.7003782242804374,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 0 (* 1 (* (/ (pow -1 1) (pow (* (/ (- -1 -1) -1) (* 1 a)) (/ 1 1))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00636212
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009072016
    },
    "speedup": 0.70129065028104,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (pow 1 (- a a))) (+ -1 (pow (/ (+ 0 a) (- a 0)) (+ (* a a) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ -1 (pow 1 (+ -1 (* a a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.013973046
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ -1 (pow 1 (+ -1 (* a a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.019901761
    },
    "speedup": 0.7021009849329413,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* -1 (- -1 (- a (/ (* b (* c 0)) (- (pow (- -1 c) a) (pow b c)))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ d (* a d))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.079774684
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a 1) d)",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.113442034
    },
    "speedup": 0.7032197959356054,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 1) (* a (* b (/ (- a (* a (- (pow 1 0) c))) (* (/ -1 d) 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10034)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.868062376
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10536)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.232621581
    },
    "speedup": 0.7042407737951166,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a -1) (- (+ b 0) (* (* (/ b (+ (+ -1 b) a)) (* d e)) (/ 0 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a -1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.045278656
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a -1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.06428013799999999
    },
    "speedup": 0.7043957497415455,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (* 0 (* (+ (/ (- 0 0) (- (+ -1 a) (pow -1 1))) a) (/ a b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(22268)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.896439643
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10321)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.2713422620000001
    },
    "speedup": 0.7051127535002057,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (* a (* -1 (/ (- 1 (- (+ b c) b)) (+ a (pow a 0))))) 0) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11423)",
      "output_term": "(* a (* -1 (/ (- 1 c) (+ a 1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.734687943
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11967)",
      "output_term": "(- 0 (* a (/ (- 1 c) (+ a 1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.0394322310000002
    },
    "speedup": 0.7068165880263144,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- (pow (/ a (- (- (- (+ a a) 1) (/ 0 -1)) (/ a 0))) a) -1) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14400)",
      "output_term": "(+ 1 (pow (/ a (- (+ a (+ a -1)) (/ a 0))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.4842830519999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14716)",
      "output_term": "(+ 1 (pow (/ a (+ a (- (+ a -1) (/ a 0)))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 2.09682902
    },
    "speedup": 0.7078703307912059,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow a (pow a (- b (- (/ 0 (- (+ (/ b b) d) (pow b 0))) e)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14931)",
      "output_term": "(/ a (pow a (pow a (+ b e))))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 2.392025297
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13506)",
      "output_term": "(/ a (pow a (pow a (+ b e))))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 3.365169741
    },
    "speedup": 0.7108186157317525,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (- (+ a (* (pow (/ (/ (* 0 -1) -1) 1) (+ -1 1)) 0)) a) -1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0036930220000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005193675
    },
    "speedup": 0.7110614353035183,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (+ (- (/ -1 (- 0 (- (pow (pow -1 a) -1) b))) a) a) b) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15322)",
      "output_term": "(/ (/ (/ -1 (+ b (* -1 (/ 1 (pow -1 a))))) b) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 1.460618832
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10061)",
      "output_term": "(/ (/ (/ -1 (- b (/ 1 (pow -1 a)))) b) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 2.04736446
    },
    "speedup": 0.7134141773663494,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 1 (- (- (+ -1 a) (+ 0 (pow (* (pow (+ a -1) -1) (pow a b)) (+ d 0)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ -1 (- (+ -1 a) (pow (* (/ 1 (+ -1 a)) (pow a b)) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.027145653
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ a (- -2 (pow (/ (pow a b) (+ -1 a)) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.037937460000000006
    },
    "speedup": 0.7155369125924612,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (+ a (+ (* a (* (+ a (* (- (* 0 0) a) a)) (* (pow -1 a) c))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12490)",
      "output_term": "(+ 1 (* a (* a (* c (* (pow -1 a) (+ a -1))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.1155945600000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11300)",
      "output_term": "(+ 1 (* (* a c) (* (pow -1 a) (- (* a a) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.558550286
    },
    "speedup": 0.7157899042597847,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- (+ (* a (/ a (- (+ (pow 0 1) (- 1 1)) (/ b 0)))) a) (+ c a)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10114)",
      "output_term": "(+ b (+ (* a (/ a (- 0 (/ b 0)))) (* c -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.975289724
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10736)",
      "output_term": "(+ b (- (* a (/ a (- 0 (/ b 0)))) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 1.361806841
    },
    "speedup": 0.7161733181512194,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (* -1 a)) (/ b (/ (pow -1 (* a (* (+ (+ c 1) a) (/ d b)))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10852)",
      "output_term": "(- 0 (/ b (pow -1 (* a (* (+ c (+ a 1)) (/ d b))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.747080339
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11794)",
      "output_term": "(- 0 (/ b (/ (pow -1 (* a (* (+ c (+ a 1)) (/ d b)))) 1)))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 1.040657214
    },
    "speedup": 0.717892817105864,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (pow (+ b (- (- (- -1 0) a) (+ (* (/ 1 (- -1 1)) (* c 0)) -1))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(21101)",
      "output_term": "(/ a (+ b (* a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.56334893
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17841)",
      "output_term": "(/ a (- b a))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 2.1743608219999997
    },
    "speedup": 0.7189924110948686,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (pow 1 (- -1 (- (pow -1 -1) (/ (- a (/ (- 1 0) 0)) (+ a 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10218)",
      "output_term": "(* a (pow 1 (/ (- a (/ 1 0)) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.125541007
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10172)",
      "output_term": "(* a (pow 1 (/ (- a (/ 1 0)) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.953258676
    },
    "speedup": 0.7197273385746585,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow (+ (/ (* (- a a) (* (- (+ a -1) 0) 0)) (* b (- b -1))) b) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010379759
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014387064000000001
    },
    "speedup": 0.7214647130227543,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (pow a (* (pow 0 0) (pow (- (+ 0 c) (- c 1)) (/ 0 -1))))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (pow a (pow 0 0))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.017734080000000003
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (pow a (pow 0 0))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.024404778
    },
    "speedup": 0.7266642622194721,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (+ a (- (pow b (* (/ b 0) 0)) (/ (* a b) c))) e))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10615)",
      "output_term": "(+ (/ (* a b) c) (* -1 (+ e 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.849909274
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11726)",
      "output_term": "(+ (/ (* a b) c) (- -1 e))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 1.168748538
    },
    "speedup": 0.7271960104047634,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- -1 (- -1 (pow a (- b (/ (- -1 (* (/ a b) 1)) a))))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10031)",
      "output_term": "(pow (pow a (+ b (+ (/ 1 a) (pow b -1)))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.125894364
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11584)",
      "output_term": "(pow (pow a (- b (/ (- -1 (/ a b)) a))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.5467526249999999
    },
    "speedup": 0.7279084876290416,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- 0 a) (- -1 (+ (- (+ 1 (/ (- (* a 0) 0) (* 0 -1))) 1) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11428)",
      "output_term": "(+ (- 0 a) (+ (/ 0 0) 2))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.9199312580000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10794)",
      "output_term": "(+ (/ 0 0) (- 2 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.2575181149999999
    },
    "speedup": 0.7315451340436556,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- (* (- (* a 1) (- 1 a)) (pow b (/ (/ 0 (pow c 0)) -1))) (pow 0 d)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13387)",
      "output_term": "(+ (* -1 (pow 0 d)) (+ a a))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.052077922
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12463)",
      "output_term": "(+ a (- a (pow 0 d)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.4377184079999998
    },
    "speedup": 0.7317691114934937,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (- (pow 1 -1) (pow a (- -1 (- (- (+ a -1) a) (pow a 1))))) b) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12025)",
      "output_term": "(* (- 1 (pow a a)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.49212428900000005
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10847)",
      "output_term": "(* (- 1 (pow a a)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.6722302760000001
    },
    "speedup": 0.732076948286691,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (+ (- a a) (+ b a)) (* (- b (+ (/ d e) d)) (+ 0 (pow -1 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (+ a b) (* (- b (+ d (/ d e))) (pow -1 a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.682294059
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10022)",
      "output_term": "(/ a (+ b (+ a (* (pow -1 a) (- (/ d e) (- b d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.9304251210000001
    },
    "speedup": 0.7333143136405061,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- a (+ (pow 1 0) (+ (pow a (pow (* (* -1 0) b) d)) (pow (+ 1 1) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12507)",
      "output_term": "(+ (pow a (pow 0 d)) 2)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.017644565
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10067)",
      "output_term": "(+ (pow a (pow 0 d)) 2)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.387051559
    },
    "speedup": 0.7336746484994937,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (+ (+ 1 (- (+ a 0) (pow a (* (pow a 1) 0)))) a) a) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12993)",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.090942626
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10265)",
      "output_term": "(/ (/ (+ a a) a) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.4844987060000001
    },
    "speedup": 0.7348895769263135,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -3
  },
  {
    "base_term": "(+ a (+ (- (pow (pow 1 (+ 1 0)) a) (- (/ (/ 1 (pow -1 b)) b) (pow a c))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (- (pow 1 a) (- (/ (/ 1 (pow -1 b)) b) (pow a c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.129798495
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (+ (pow 1 a) -1) (- (pow a c) (/ (/ 1 (pow -1 b)) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.17654321999999997
    },
    "speedup": 0.7352222022459998,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- (+ (- (pow (+ (pow a (* a 1)) a) a) a) 1) 1) 1)",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14342)",
      "output_term": "(+ (- (pow (+ a (pow a a)) a) a) -1)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 1.6196039679999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14911)",
      "output_term": "(+ (pow (+ a (pow a a)) a) (- -1 a))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 2.187856227
    },
    "speedup": 0.7402698349245779,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (- (- (+ (+ 0 (/ (- 0 (- (- 1 a) 0)) (+ b 0))) d) a) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10944)",
      "output_term": "(+ (/ (+ a -1) b) (+ 1 d))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.939118326
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11927)",
      "output_term": "(+ (/ (+ a -1) b) (+ 1 d))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.268542213
    },
    "speedup": 0.7403130273284805,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (* (pow 1 (* (pow (- (* (/ -1 0) -1) 0) (/ a a)) 0)) -1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15377)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.630727458
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13019)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 3.540816703
    },
    "speedup": 0.7429719408437845,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ 0 (+ 1 (pow (* (+ (+ (- (pow 1 1) a) (* b 1)) a) 0) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16877)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.4157065370000002
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13404)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.904674044
    },
    "speedup": 0.7432802171372479,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow (- (+ (/ (+ a (pow a b)) b) (- b (+ (+ a -1) 0))) 1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(20609)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.554411922
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10439)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.090412167
    },
    "speedup": 0.7435911187939425,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (* b 1) (+ (- 0 b) (pow (pow (- (* -1 d) c) (pow b 0)) (- e a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (+ (- 0 b) (pow (* -1 (+ d c)) (- e a)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.02414669
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (- (pow (- 0 (+ d c)) (- e a)) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.03238316
    },
    "speedup": 0.7456557667627247,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ (pow (pow 1 (pow (* (* -1 (/ a a)) a) -1)) 0) a) a) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 a) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.004931148999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 a) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.006611389
    },
    "speedup": 0.7458567329800136,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (- 1 (- (- -1 (/ (+ (/ (+ (pow 1 -1) a) 0) (* b 1)) 0)) (+ 0 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -1 (/ (+ (/ (+ 1 a) 0) b) 0)) -2)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.030316452
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -3 (/ (+ (/ (+ 1 a) 0) b) 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.040551013000000004
    },
    "speedup": 0.7476126921909447,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ a (pow 1 (/ 1 (/ (+ 1 (/ (/ (+ 1 0) b) (* -1 -1))) (- a 0))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ 1 (pow 1 (/ 1 (/ (+ 1 (/ 1 b)) a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.023898873
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ 1 (pow 1 (/ 1 (/ (+ 1 (/ (/ 1 b) 1)) a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.031937744000000004
    },
    "speedup": 0.7482955903209694,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* -1 0) (+ a (* (pow a (* (pow 0 a) (pow (/ a -1) b))) (pow 1 -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (* (pow 0 a) (pow (* -1 a) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.006082315
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (* (pow 0 a) (pow (/ a -1) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.008108235
    },
    "speedup": 0.7501404436353903,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (/ a a) (* -1 (- c (+ (* (* (pow a d) 0) (/ 0 0)) 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* -1 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.010831407000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 0 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.014435838999999999
    },
    "speedup": 0.7503136464738905,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (* 0 1) (+ 0 (* (/ (* (- (+ a a) a) a) 0) a))) (- -1 -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(27459)",
      "output_term": "(* a (/ (* a a) 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.431185253
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10135)",
      "output_term": "(* a (/ (* a a) 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.902853888
    },
    "speedup": 0.7521256687260688,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ (* (pow (* (+ (+ (/ 1 -1) a) (pow b a)) (/ b 1)) d) c) d) 0) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(22748)",
      "output_term": "(* (pow (* b (+ -1 (+ a (pow b a)))) d) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 2.102410338
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14349)",
      "output_term": "(* (pow (* (+ a (+ -1 (pow b a))) (/ b 1)) d) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 2.792661383
    },
    "speedup": 0.7528339636155594,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (/ 1 (+ 0 (* 0 (+ (/ (+ (pow 0 a) 1) a) (- c 0))))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow 0 -1) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.025283010999999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ 1 0) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.03356926899999999
    },
    "speedup": 0.7531594149398965,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (- a (+ 1 (+ a (pow b (- (* (- (/ d b) b) (- 0 b)) (- -1 0)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15525)",
      "output_term": "(+ 1 (pow b (+ 1 (+ (* -1 d) (* b b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 1.427910737
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13029)",
      "output_term": "(+ 1 (pow b (+ 1 (* b (- b (/ d b))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 1.890717333
    },
    "speedup": 0.7552216886563021,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ a 0) (- (+ (/ (- 1 1) (/ (/ (pow -1 0) -1) (/ a 0))) 0) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (- 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.006959984000000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 0) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.009206774
    },
    "speedup": 0.7559633808758639,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (pow (+ (- (+ a (/ 0 (/ (+ 0 -1) -1))) (pow (- a b) 0)) -1) 0) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10312)",
      "output_term": "(* -1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.093391508
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10642)",
      "output_term": "(- 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.440618285
    },
    "speedup": 0.7589737818717192,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ a (- (* (- b 1) 0) (* (* -1 (pow 0 -1)) (/ -1 (pow (* 1 1) -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.01124969
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014775561
    },
    "speedup": 0.7613714294841326,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 (- (/ -1 (pow 1 (+ (- a (+ a (- 0 b))) (pow 1 b)))) -1)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(17060)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.668705665
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12543)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.1899808710000004
    },
    "speedup": 0.7619727126831145,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ (+ a a) (- a (- (* b (/ (/ 0 1) a)) (/ a 1)))) 1) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a 4) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.044926806
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (/ a 1) (* a 3)) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.058850409
    },
    "speedup": 0.7634068609446708,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (+ 0 (- a (+ (+ c (/ (/ 0 (* (- c 1) -1)) (+ a -1))) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(18283)",
      "output_term": "(+ -1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.714687848
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14606)",
      "output_term": "(+ c -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 2.241880381
    },
    "speedup": 0.7648435940347346,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 1 a) (* a (pow (+ b (pow (* (- (+ 0 0) -1) (+ b 0)) (+ 0 1))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (* a (+ b b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.019549323
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (* a (+ b b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.025548306
    },
    "speedup": 0.7651905766276638,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (* (/ a 0) (* b (* (pow (pow (* -1 0) 1) 1) 1))) (+ 0 -1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.005337049
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.006973765
    },
    "speedup": 0.7653038208198871,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a 1) (+ (- (- (+ (/ (pow (- -1 a) a) (pow 0 0)) 1) 1) -1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10730)",
      "output_term": "(pow a (+ 1 (/ (pow (- -1 a) a) (pow 0 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 2.123788908
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16603)",
      "output_term": "(pow a (+ 1 (/ (pow (- -1 a) a) (pow 0 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 2.7710306670000002
    },
    "speedup": 0.7664256239716309,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 0 (- a (pow (- (- 1 (- (pow 1 b) (pow 0 0))) a) b))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- (- 1 (- (pow 1 b) (pow 0 0))) a) b) (* -1 (+ a b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.06617637999999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- (- (pow 0 0) a) (- (pow 1 b) 1)) b) (+ a b))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.08619955100000001
    },
    "speedup": 0.7677114234620547,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (pow (/ b a) (- (+ (* b b) (+ (+ (- a 1) 0) 1)) (- 0 (+ c -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14475)",
      "output_term": "(pow a (pow (/ b a) (+ (* b b) (+ (+ a -1) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.923408164
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(12890)",
      "output_term": "(pow a (pow (/ b a) (+ (* b b) (+ a (+ c -1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.199355054
    },
    "speedup": 0.7699206010099492,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- 1 (- a (- a (+ (* (- (+ (pow -1 a) b) (+ a 1)) 1) 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(18356)",
      "output_term": "(/ a (+ a (+ 1 (* -1 (+ (pow -1 a) b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.910536478
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(14244)",
      "output_term": "(/ a (+ 1 (- (- a b) (pow -1 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.182620174
    },
    "speedup": 0.7699314606821515,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(+ a (pow (+ (- (* (pow (- (+ (* a a) 1) (+ -1 1)) b) (* -1 1)) b) 0) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (- (* -1 (pow (+ (* a a) 1) b)) b) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.011502854
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (- 0 (+ b (pow (- (* a a) -1) b))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.014875295000000002
    },
    "speedup": 0.773285773492223,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 (/ (/ 1 1) (+ (- (- a (pow (/ 1 -1) a)) 0) (pow (- 1 0) -1)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (+ 1 (- a (pow -1 a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.012220278
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (+ 1 (- a (pow -1 a)))) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.015732029
    },
    "speedup": 0.7767769815323884,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (- (+ (+ a (+ (* (/ (* b 1) b) (* -1 a)) a)) 0) -1)) (pow b a))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(21640)",
      "output_term": "(/ (/ a (+ a 1)) (pow b a))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 1.156657436
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11558)",
      "output_term": "(/ (/ a (+ a 1)) (pow b a))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 1.482229449
    },
    "speedup": 0.7803497878013081,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (+ a (/ -1 (pow (- a (- 1 (- (pow -1 0) a))) b)))) (- -1 b))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(19542)",
      "output_term": "(+ a (+ (/ -1 (pow 0 b)) (+ a (- -1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.315109345
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10216)",
      "output_term": "(+ (/ -1 (pow 0 b)) (- a (+ (- 1 a) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.684993744
    },
    "speedup": 0.7804832211887429,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* a (/ 1 b)) (* (* c (+ (- (pow (* b a) 0) 0) (pow -1 1))) 1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.049500411
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.063273199
    },
    "speedup": 0.7823282492797622,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow (pow (+ (+ (- (/ (* 0 1) (- -1 a)) (+ b -1)) -1) (/ -1 0)) 1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10896)",
      "output_term": "(pow 1 (+ (/ -1 0) (* -1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.9057259689999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10111)",
      "output_term": "(pow 1 (- (/ -1 0) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.156989481
    },
    "speedup": 0.782829908027487,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- a (+ (- a (- (- (/ (/ a -1) a) a) (- b 0))) b)) a) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12456)",
      "output_term": "(pow (pow (+ (- -1 a) (* b -2)) a) e)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.014134009
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10673)",
      "output_term": "(pow (pow (+ (- (/ (/ a -1) a) a) (* b -2)) a) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.29253894
    },
    "speedup": 0.7846061558501285,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ (* a (- (+ (+ 1 a) b) a)) (/ 0 (pow 0 (pow (- c -1) (- c -1))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(35809)",
      "output_term": "(+ a (* a (pow b -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.221794786
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10452)",
      "output_term": "(/ (* a (+ 1 b)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.557172452
    },
    "speedup": 0.7846239409326514,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ (* 0 1) (/ a (- b (* -1 (- (- 1 b) -1))))) d) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (* d c))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.056429114
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* d c))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.071852574
    },
    "speedup": 0.7853457553239499,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ (/ (* a (+ (+ (+ 1 (- a b)) (- 0 a)) b)) a) -1) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11355)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.41832359100000005
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11698)",
      "output_term": "(/ (* b (+ (/ a a) -1)) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.532027606
    },
    "speedup": 0.7862817385457251,
    "weight_simple_diff": -6,
    "weight_complex_diff": -17,
    "depth_diff": -4
  },
  {
    "base_term": "(* (- -1 (- -1 (+ a (pow 0 (+ (+ -1 b) (pow (- b c) 1)))))) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15206)",
      "output_term": "(* (+ a (pow 0 (+ -1 (+ b (- b c))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.113359365
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10338)",
      "output_term": "(* (+ a (pow 0 (+ -1 (+ b (- b c))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.415927955
    },
    "speedup": 0.7863107448853216,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a 1) (* 1 (/ 0 (+ (pow (* (* (+ a 1) a) (* a 1)) (+ b 0)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.019306171
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.024497276999999998
    },
    "speedup": 0.7880945706741204,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- (+ -1 a) (+ (pow a a) (/ (- (+ 1 b) a) 0))) -1) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11938)",
      "output_term": "(+ (pow a a) (+ (/ (- (+ 1 b) a) 0) (* -1 a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.018470521
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10369)",
      "output_term": "(+ (/ (+ b (- 1 a)) 0) (- (pow a a) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.289360747
    },
    "speedup": 0.7899034644646276,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- a (+ (pow a (+ (+ (pow a (+ (+ a b) 0)) (pow a 1)) a)) 1)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (pow a (+ a (+ a (pow a (+ a b)))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 8,
      "simplification_time": 0.01876597
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (pow a (+ a (+ a (pow a (+ a b)))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 8,
      "simplification_time": 0.023626487
    },
    "speedup": 0.794276779277427,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ -1 a) (pow -1 (+ (pow -1 (* (+ a a) 1)) (- (+ (+ 1 b) -1) (- a 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10727)",
      "output_term": "(pow (/ -1 a) (pow -1 (+ (pow -1 (+ a a)) (- b a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.687038051
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10143)",
      "output_term": "(pow (/ -1 a) (pow -1 (+ (pow -1 (+ a a)) (- b a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.864856184
    },
    "speedup": 0.7943957200171908,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a a) (- (- (* 0 b) b) (+ 1 (- b (- (* (- 0 a) a) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11857)",
      "output_term": "(pow 0 (+ (* a (* a -1)) (* b -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.871817202
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10024)",
      "output_term": "(pow 0 (- (* b -2) (* a a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.097136451
    },
    "speedup": 0.7946296936952285,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* a a) (/ -1 (/ a (- (* a (+ (pow (+ 1 1) 0) (+ a a))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17803)",
      "output_term": "(+ (* a a) (/ -1 (/ a (* a (+ a a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.75599492
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10724)",
      "output_term": "(+ (* a a) (/ -1 (/ a (* a (+ a a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.951035148
    },
    "speedup": 0.7949179602771106,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (- (- (+ (- (- a (- a (+ (+ -1 a) 0))) (pow (+ a 1) a)) -1) b) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14242)",
      "output_term": "(+ (+ -1 (- (+ a -1) (pow (+ 1 a) a))) (* b -2))",
      "output_weight_simple": 12,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.9867455869999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(14891)",
      "output_term": "(- a (+ (pow (+ 1 a) a) (+ b (+ b 2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.240470889
    },
    "speedup": 0.795460494679936,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 0 (* (* 0 (/ (/ (* 0 0) (- (+ (* 0 a) a) (- a -1))) b)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021031494999999997
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.026416399999999996
    },
    "speedup": 0.7961529580109327,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (/ (+ a (+ (/ -1 a) (+ (pow (pow (/ 0 a) b) c) (- c 0)))) e))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (+ (pow (pow 0 b) c) (+ (/ -1 a) (+ a c))) e))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.126683332
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (+ a (+ (pow (pow 0 b) c) (+ (/ -1 a) c))) e))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.159057925
    },
    "speedup": 0.7964603587026552,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow -1 (* (+ (/ (pow a a) (- (* a (pow a 0)) c)) (* (* b a) 0)) 1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (pow a a) (- a c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.009749938
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (pow a a) (- a c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.012241492999999999
    },
    "speedup": 0.7964664114091312,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 (/ (+ -1 (- (pow (/ a b) (- (+ a b) -1)) (+ (+ -1 c) -1))) a)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11404)",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.939644105
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12352)",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 1.177528856
    },
    "speedup": 0.7979796844995534,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (/ 1 (- (+ 0 (- a (* (* 1 1) (+ 1 -1)))) (/ (- a b) -1))) a) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.031162966
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.039025611
    },
    "speedup": 0.7985260243587218,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (/ 1 (- (- a (- (+ (* (/ 1 1) b) (* 0 -1)) 1)) 1)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13654)",
      "output_term": "(+ a (+ b (/ 1 (+ a (* b -1)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.898913687
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10716)",
      "output_term": "(+ a (+ b (/ 1 (- a b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 1.1256806799999999
    },
    "speedup": 0.7985512259124853,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (- (- (- b b) -1) (pow (- a 0) (/ (- (+ 1 (+ b 0)) (/ c b)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (pow a (- (+ b 1) (/ c b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.033578461000000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ (- b (- (/ c b) 1)) 1)) (+ a -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.042036541
    },
    "speedup": 0.7987921984351664,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (* (/ (+ -1 (- (+ (* (+ a -1) -1) (- -1 a)) (- -1 a))) c) 0) d) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11175)",
      "output_term": "e",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.577780956
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "NodeLimit(10092)",
      "output_term": "e",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.72257957
    },
    "speedup": 0.7996087628107172,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (pow a 0) (* (- a (* (* (/ (* b 1) -1) b) (* a -1))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 1 (- a (* a (* b b)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.082065094
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 1 (+ a (* (/ b -1) (* a b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.10262811899999999
    },
    "speedup": 0.7996355657653631,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* 1 -1) (/ a (* (+ a (* (+ a a) -1)) (* (- 0 1) a)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10611)",
      "output_term": "(pow -1 (/ a (* a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.049892222
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10228)",
      "output_term": "(pow -1 (/ a (* a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.312669899
    },
    "speedup": 0.7998143499746694,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (+ (- a (- a a)) (+ a a)) (* (+ a (+ a (- (+ 0 b) a))) c)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(25432)",
      "output_term": "(+ (* a 3) (+ (* (+ a b) c) d))",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.259236009
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12525)",
      "output_term": "(+ (* c (+ a b)) (+ (* a 3) d))",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.572076085
    },
    "speedup": 0.8010019495971151,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* (* a b) (+ -1 (- 1 (+ (+ (+ 0 (pow 0 -1)) (- c a)) c)))) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16296)",
      "output_term": "(pow (* a (* b (+ (* -1 (pow 0 -1)) (+ a (* c -2))))) e)",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.828446247
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13860)",
      "output_term": "(pow (* a (* b (- a (+ (pow 0 -1) (+ c c))))) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.0312460730000002
    },
    "speedup": 0.8033448744100089,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (/ (+ 0 a) (+ (- -1 (- (+ (- (/ 0 1) a) -1) (- 1 0))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13688)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.0962775329999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11023)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.3593692370000001
    },
    "speedup": 0.806460454717499,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow 0 a) (+ a (/ (/ (pow (+ -1 (+ b 1)) (/ 1 b)) (/ 0 b)) a))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10091)",
      "output_term": "(/ (pow (pow 0 a) (+ a (/ (/ (pow b (/ 1 b)) 0) a))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 1.7121414700000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12496)",
      "output_term": "(/ (pow (pow 0 a) (+ a (/ (/ (pow b (/ 1 b)) 0) a))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 2.1187385589999996
    },
    "speedup": 0.8080947329377416,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (pow (pow (+ (+ (* a (pow (/ 1 (* a 0)) a)) -1) 0) (* -1 -1)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0046548019999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0057464249999999995
    },
    "speedup": 0.81003441270007,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* (- a a) (* 0 (+ (- (- (+ c 1) c) a) 1))) 0) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 27,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10069)",
      "output_term": "(- 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.890662559
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10275)",
      "output_term": "(- 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.09931131
    },
    "speedup": 0.8102004872486939,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 1 (/ (+ a a) (- 1 a))) (- 0 (- a (+ a c))))",
    "input_weight_simple": 17,
    "input_weight_complex": 27,
    "input_depth": 5,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11340)",
      "output_term": "(- (- 1 (/ (+ a a) (- 1 a))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.060269723
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12850)",
      "output_term": "(- (- 1 (/ (+ a a) (- 1 a))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.308427586
    },
    "speedup": 0.8103388634913724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- -1 (- -1 (- -1 (pow (+ (/ a (pow a -1)) a) (/ b -1))))) -1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13801)",
      "output_term": "(+ -2 (* -1 (+ b (pow (+ a (/ a (/ 1 a))) (* -1 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.880632903
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11586)",
      "output_term": "(- (- -2 (pow (+ a (/ a (/ 1 a))) (/ b -1))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.086203
    },
    "speedup": 0.810744311146259,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- (+ (* a (/ (* (pow (- (+ a -1) 0) -1) (* a b)) 1)) -1) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 (* b (+ -1 (* (/ 1 (+ a -1)) (* a a))))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.09566266400000001
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ b (* a (- 1 (/ (* a (/ b (+ a -1))) 1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 9,
      "simplification_time": 0.117874059
    },
    "speedup": 0.8115667247871731,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ a a) (+ (/ (/ 1 (* (* (pow (+ -1 a) a) (+ 1 c)) (pow -1 c))) 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 2 (* (/ (/ 1 (* (pow (+ a -1) a) (* (+ 1 c) (pow -1 c)))) 0) 2)))",
      "output_weight_simple": 17,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.11603964
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 2 (* (/ (/ 1 (* (pow (+ a -1) a) (* (+ 1 c) (pow -1 c)))) 0) 2)))",
      "output_weight_simple": 17,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.14292433699999998
    },
    "speedup": 0.8118955975986092,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (- (+ -1 (+ -1 (+ a (pow (- (+ (/ 0 1) a) (+ -1 1)) (- -1 b))))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13502)",
      "output_term": "(+ (pow a (- -1 b)) -3)",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.048464085
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10918)",
      "output_term": "(+ (pow a (- -1 b)) -3)",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.290761608
    },
    "speedup": 0.8122832895723995,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 (+ (* a a) (+ (+ (pow (- (pow 1 0) a) -1) 0) (pow (+ 1 a) b)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (- 1 a)) (+ (pow (+ a 1) b) (+ (* a a) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.032512064
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) (+ (/ 1 (- 1 a)) (+ (pow (+ a 1) b) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.04000675
    },
    "speedup": 0.8126644628718903,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ (pow -1 a) (- (- a (+ (pow (+ c (+ -1 b)) (+ 0 -1)) (* 0 -1))) 0)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (pow -1 a) (- a (/ 1 (+ b (+ -1 c))))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.0510203
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 a) (- (- a c) (/ 1 (+ -1 (+ c b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.062748563
    },
    "speedup": 0.8130911300709788,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (/ -1 (pow -1 (/ (pow -1 (* (+ (* a -1) -1) (* (pow -1 0) 0))) 0))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (pow -1 (/ 1 0))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.022407303000000003
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (pow -1 (/ 1 0))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.027531246000000002
    },
    "speedup": 0.8138862658086743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (- a (+ (+ (+ a (+ (- (pow 1 -1) -1) a)) (* (+ 1 a) b)) -1))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(27078)",
      "output_term": "(+ a (* a (+ b (* a (+ 2 b)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 6,
      "simplification_time": 1.298397269
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(18066)",
      "output_term": "(* a (+ a (* (+ a 1) (+ 1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 1.590304958
    },
    "speedup": 0.816445463788839,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 0 (+ (/ 1 (* 1 (* a (* (pow a (pow (pow c b) a)) (pow 1 0))))) (- c a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (* a (pow a (pow (pow c b) a)))) (- c a))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.0168729
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (* a (pow a (pow (pow c b) a)))) (- c a))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.020644443000000002
    },
    "speedup": 0.817309529736404,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (+ (/ (* a (+ 0 (- (pow (pow (* -1 a) a) (- -1 a)) (- 0 1)))) 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10139)",
      "output_term": "(/ (+ a (* a (pow (pow (* -1 a) a) (- -1 a)))) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 2.2944284699999997
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12397)",
      "output_term": "(/ (* a (+ (pow (pow (- 0 a) a) (- -1 a)) 1)) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 2.806871295
    },
    "speedup": 0.8174327316279743,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ 0 (+ (/ -1 -1) (- (pow (* (/ (/ 0 0) a) (+ a a)) (+ c 0)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13186)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.619780901
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10720)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.980646326
    },
    "speedup": 0.8178042085237988,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a 0) (pow (* a (- (+ 0 -1) 0)) (/ 0 (+ (/ (* a a) 1) (- -1 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.008921695
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.010901094
    },
    "speedup": 0.8184219859034332,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (pow b -1) (pow a (+ (- (+ (* (- b a) -1) -1) 0) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11367)",
      "output_term": "(+ a (pow (/ 1 b) (pow a (* -1 (- b a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.004954533
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10023)",
      "output_term": "(+ a (pow (/ 1 b) (pow a (- a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.227025702
    },
    "speedup": 0.8190166932623878,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* (pow a (+ (- (pow (+ (* a (* -1 a)) (/ 0 -1)) 1) b) b)) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(26176)",
      "output_term": "(* -1 (pow a (* -1 (* a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 2.073935868
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14144)",
      "output_term": "(- 0 (pow a (- 0 (* a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 5,
      "simplification_time": 2.530574882
    },
    "speedup": 0.8195512738041949,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ a (pow a (- (+ -1 (- (- (/ 0 -1) b) 0)) (- 1 (pow (pow a b) 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (+ (- 0 b) (+ (pow a b) -2))) (+ a a))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.095863499
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (+ (pow a b) (- -2 b))) (+ a a))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.116916325
    },
    "speedup": 0.8199325372226676,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (* (pow (/ (+ (- (/ a 0) (+ 1 a)) (+ 0 0)) 0) a) (pow c a)) 0) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (/ (- (/ a 0) (+ a 1)) 0) a) (pow c a))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.014597666
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (/ (- (/ a 0) (+ a 1)) 0) a) (pow c a))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.017797213
    },
    "speedup": 0.8202220201556278,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (* (+ (+ b -1) (* 1 (- (/ (pow b b) c) -1))) a)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(15136)",
      "output_term": "(pow a (* a (+ b (/ (pow b b) c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.1167356709999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12083)",
      "output_term": "(/ (pow a (* a (+ b (/ (pow b b) c)))) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.358001996
    },
    "speedup": 0.8223372824851134,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 1 (- a (pow (- (/ 0 (- (pow (+ 1 (* -1 a)) (- a 1)) (/ 1 a))) a) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12066)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.742619342
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12527)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.117254604
    },
    "speedup": 0.8230561117721862,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (+ 1 (- (* -1 1) (/ -1 (pow a (+ (/ 0 b) a)))))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(22050)",
      "output_term": "(+ a (pow (pow a a) -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 2.059414202
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(19402)",
      "output_term": "(- a (/ -1 (pow a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 2.495034907
    },
    "speedup": 0.8254049657670782,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ (/ a (- (- (+ b (pow c c)) -1) (+ (pow (- 0 b) d) 0))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (/ a (- (+ b (+ 1 (pow c c))) (pow (- 0 b) d))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.07135519700000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (/ a (+ 1 (- b (- (pow (- 0 b) d) (pow c c))))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.086111364
    },
    "speedup": 0.8286385638950048,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (+ b (+ b (- (pow (pow 0 b) 0) (* (pow (* (pow a a) 1) (* 0 0)) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17865)",
      "output_term": "(/ a (+ b 1))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.0993131040000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10643)",
      "output_term": "(/ a (+ b 1))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.323409225
    },
    "speedup": 0.830667554096882,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (+ -1 0) (+ (+ (+ (/ (+ a (- 0 b)) (- 0 a)) (/ 1 0)) 0) b)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ b (pow -1 (+ (/ (+ a (- 0 b)) (- 0 a)) (+ b (/ 1 0)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.084295016
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ b (pow -1 (+ (/ (- a b) (- 0 a)) (+ b (/ 1 0)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.10123625399999998
    },
    "speedup": 0.8326564118028311,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* -1 0) (+ 1 (pow (- (* (/ (+ 1 (- 0 0)) (/ a a)) a) a) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.005429765
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.00652031
    },
    "speedup": 0.8327464491718952,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a -1) (pow (* (* -1 (+ 1 1)) -1) (- (- 1 (* (- 0 0) 0)) (/ a a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.004050691
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.004860696
    },
    "speedup": 0.8333561695691317,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ (pow (+ (* (- 0 a) a) (- (+ (+ 0 (pow 0 1)) 1) (+ -1 c))) 1) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 b) (+ (* a a) (+ c -3)))",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.609286493
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) (+ (- c b) -3))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.729557796
    },
    "speedup": 0.8351449279831971,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a (* -1 (* a (- (* (- 1 a) (- (+ -1 1) 1)) a)))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(42799)",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 1.736995093
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10257)",
      "output_term": "(/ (+ a a) 1)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 2.0667993080000002
    },
    "speedup": 0.8404275568878794,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow a (pow (pow b -1) (+ a (+ (+ (- (* -1 a) c) (+ 1 a)) 1)))) (+ 1 d))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17450)",
      "output_term": "(/ (pow a (pow (/ 1 b) (+ (* -1 c) (+ a 2)))) (+ 1 d))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 1.1688471649999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(15128)",
      "output_term": "(/ (pow a (pow (/ 1 b) (- (- a -2) c))) (+ 1 d))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 1.3894787050000001
    },
    "speedup": 0.8412127230118289,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (- a a) (pow (/ a (+ (- 0 (+ (pow 0 c) c)) (pow c -1))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.02167582
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.025759140999999996
    },
    "speedup": 0.8414806999969449,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 a) (pow 1 (/ -1 (pow -1 (pow (- (+ (+ 1 a) 0) (pow a 1)) (pow -1 a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 a) (pow 1 (/ -1 (pow -1 (pow 1 (pow -1 a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.016640709
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 a) (pow 1 (/ -1 (pow -1 (pow 1 (pow -1 a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.019772078
    },
    "speedup": 0.8416267121746132,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (+ 0 (+ (* (pow -1 (* (pow 1 0) (pow -1 1))) -1) 1)) (/ 1 0)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 2 (/ 1 0)) 0)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.006443888
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 2 (/ 1 0)) 0)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.007655378
    },
    "speedup": 0.841746547329211,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ (- a (- b (* (+ c (/ (* (pow a a) -1) 1)) (pow (pow e 1) 1)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13771)",
      "output_term": "(+ (* e (+ (pow a a) (* c -1))) (+ b (* a -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.98485808
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10952)",
      "output_term": "(- b (+ a (* (+ c (/ (- 0 (pow a a)) 1)) e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 1.169924816
    },
    "speedup": 0.841813137503359,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": -3
  },
  {
    "base_term": "(- a (- (* a b) (pow (* a (pow (/ 1 (+ (- b 1) 1)) (+ 0 a))) (pow a b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(21919)",
      "output_term": "(- a (- (* a b) (pow (* a (pow (/ 1 b) a)) (pow a b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.362264521
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10684)",
      "output_term": "(+ (pow (* a (pow (/ 1 b) a)) (pow a b)) (- a (* a b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 1.617831577
    },
    "speedup": 0.8420311114993152,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- a (- a (pow (/ b (+ b -1)) (pow (* 1 b) (/ (- b 0) a))))) (- -1 -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(27410)",
      "output_term": "(pow (/ b (+ b -1)) (pow b (/ b a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 2.598163069
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16403)",
      "output_term": "(pow (/ b (+ b -1)) (pow b (/ b a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 3.082362958
    },
    "speedup": 0.8429127602434677,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* -1 (pow 0 (pow (+ (- -1 (/ (pow 0 a) (- -1 b))) (* -1 (pow a 1))) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* -1 (pow 0 (pow (+ -1 (* -1 (+ a (/ (pow 0 a) (- -1 b))))) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.032332638000000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- 0 (pow 0 (pow (- (- -1 a) (/ (pow 0 a) (- -1 b))) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.038356612
    },
    "speedup": 0.8429482249370722,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(* a (- (+ 0 (- (pow 1 a) (/ 0 (- (pow a (pow -1 1)) (- 1 0))))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (pow 1 a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.016440174000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (pow 1 a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.019460750000000002
    },
    "speedup": 0.8447862492452758,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* a (* (* (- 1 0) (+ (pow c (+ (- 0 1) b)) (* 1 0))) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (* c (pow c (+ -1 b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.016167505
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow c (+ -1 b)) (* a c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.019119184
    },
    "speedup": 0.845616894528553,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ a (+ (- (pow 1 1) (/ (* (* (* 0 -1) -1) (/ a a)) 0)) -1)) (* 0 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16707)",
      "output_term": "(+ a (* -1 (/ 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.816785182
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14781)",
      "output_term": "(- a (/ 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 2.144108031
    },
    "speedup": 0.8473384529755534,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow 1 a) (- (/ 1 a) (+ 0 (/ (- 1 (- (pow 1 0) b)) (- 0 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16844)",
      "output_term": "(- (pow 1 a) (+ (/ 1 a) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.100669286
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10546)",
      "output_term": "(- (pow 1 a) (- (/ 1 a) (/ b -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 1.298175874
    },
    "speedup": 0.8478583742344298,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* 0 (+ a (pow 0 (+ (+ (/ b 0) (pow 0 (/ -1 c))) (* (+ -1 0) a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.02183746
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025705296
    },
    "speedup": 0.84953155178606,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (- (+ a -1) (+ (* a (/ a 0)) (* (- (* a -1) 1) -1))) a) (/ 0 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16895)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.213186254
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11497)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.427329768
    },
    "speedup": 0.8499691390167937,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (- a 0) a) (pow -1 (/ (- 1 (pow (+ (- 1 (+ 1 -1)) a) (+ 0 a))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow -1 (+ -1 (pow (+ a 1) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.010039009
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow -1 (/ (- 1 (pow (+ a 1) a)) -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.011759063
    },
    "speedup": 0.8537252500475591,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (+ (pow a -1) (pow (/ (pow (+ b (pow (* b 0) 1)) (* b 1)) 1) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ 1 a) (/ 1 (pow b b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.0038720490000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ 1 a) (/ 1 (/ (pow b b) 1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.004525421
    },
    "speedup": 0.8556218305435008,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (- -1 (* (- (pow 0 (- (- (* a b) b) a)) (* (* a d) -1)) -1)) a) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (+ (pow 0 (- (* b (+ -1 a)) a)) (+ -1 (* a d)))) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.643131233
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (+ (pow 0 (- (* a b) (+ a b))) (+ -1 (* a d)))) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.749569765
    },
    "speedup": 0.8580004997933713,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ 0 (- (- a -1) (pow b (- (+ (pow (+ 0 b) b) (/ a -1)) b)))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(19467)",
      "output_term": "(+ (* -1 (pow b (+ (pow b b) (* -1 (+ a b))))) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 1.906990417
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16042)",
      "output_term": "(- 1 (pow b (+ (/ a -1) (- (pow b b) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 2.221589957
    },
    "speedup": 0.8583899161910012,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (/ (+ a (pow a (+ (* -1 (+ (* a 1) (pow 0 a))) a))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12218)",
      "output_term": "(pow -1 (/ (+ a (pow a (* -1 (pow 0 a)))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.93217978
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11212)",
      "output_term": "(pow -1 (/ (+ a (pow a (- 0 (pow 0 a)))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.0833807819999999
    },
    "speedup": 0.8604359570410028,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 (* (+ (- a (- a a)) b) (- (* 1 (/ (+ 1 c) 0)) -1))) (+ d -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (* (+ a b) (+ 1 (/ (+ 1 c) 0)))) (+ -1 d))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.053414664
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (* (+ a b) (+ 1 (/ (+ 1 c) 0)))) (+ -1 d))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.061899781
    },
    "speedup": 0.8629216959588274,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ b (* 0 (- a (- (- 0 (- (* 1 (+ 0 -1)) (/ b d))) (/ e e))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13359)",
      "output_term": "(/ a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 1.028133585
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11450)",
      "output_term": "(/ a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 1.190724494
    },
    "speedup": 0.8634521169092537,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- (- a 1) (+ (+ (* (* a -1) (+ (- -1 -1) a)) (/ a (+ 0 0))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12322)",
      "output_term": "(pow 0 (+ -1 (+ (* -1 (/ a 0)) (* a a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.956164831
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10107)",
      "output_term": "(pow 0 (+ -1 (- (* a a) (/ a 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.103758648
    },
    "speedup": 0.8662807152021518,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 1 (+ (- (- 1 (/ (pow a (pow a (+ (+ 0 -1) b))) (/ 1 0))) a) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(18519)",
      "output_term": "(pow 1 (- 1 (/ (pow a (pow a (+ -1 b))) (/ 1 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 1.834966815
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14167)",
      "output_term": "(pow 1 (- 1 (/ (pow a (pow a (+ -1 b))) (/ 1 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 2.117760397
    },
    "speedup": 0.8664657331393094,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* 0 (/ (- 0 (- 1 (- (/ -1 (* (- a a) -1)) (/ 0 a)))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.016087209
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.018492471
    },
    "speedup": 0.8699329040451113,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (* (pow (* -1 (+ (- (pow (+ (/ a a) -1) 1) (- a 1)) a)) (+ a -1)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (pow -1 (+ -1 a)) d))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.024743379
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (pow -1 (+ -1 a)) d))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.028379916
    },
    "speedup": 0.8718623057235264,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (+ a (* 0 1)) (pow (+ (/ 1 b) -1) (+ (+ b (/ (- 1 1) 0)) a))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (+ (/ 1 b) -1) (+ a (+ b (/ 0 0))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.011071039999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (+ (/ 1 b) -1) (+ a (+ (/ 0 0) b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.012670377
    },
    "speedup": 0.8737735270229133,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (pow (pow (- 1 1) 0) a) (pow (pow (+ 1 (pow (- a a) 1)) 0) 0)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow 0 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.0055333
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow 0 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.0063284000000000005
    },
    "speedup": 0.874360027811137,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a b) (pow (* c (* (* 1 d) (pow (+ (pow c -1) a) (pow a b)))) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a b) (* (pow (+ a (/ 1 c)) (pow a b)) (* c d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.016301162
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a b) (* (pow (+ a (/ 1 c)) (pow a b)) (* c d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.018561899
    },
    "speedup": 0.878205511192578,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (- 1 (* (* 1 (- a (+ (- (+ b b) -1) (* b 0)))) 0)) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 29,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.03246026
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ c 2)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.036909772
    },
    "speedup": 0.8794489437648111,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (- (- b b) (/ 0 (+ (+ (/ 0 0) (pow b -1)) (- b a)))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.037471494
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.042570945000000006
    },
    "speedup": 0.8802128775858745,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (- -1 0) (- a (* a (- (+ (/ a (+ 0 a)) b) b)))) (* (pow 1 c) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(25446)",
      "output_term": "(* (/ -1 0) (pow 1 c))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 3,
      "simplification_time": 1.125765275
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10357)",
      "output_term": "(* (/ -1 0) (pow 1 c))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 3,
      "simplification_time": 1.278064511
    },
    "speedup": 0.8808360339488372,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a b) (pow 0 (/ (/ (pow b (- (/ (* c 1) c) (- 1 c))) 1) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13112)",
      "output_term": "(- (* a b) (pow 0 (/ (pow b c) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 1.641204202
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10972)",
      "output_term": "(- (* a b) (pow 0 (/ (/ (pow b c) 1) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.858050047
    },
    "speedup": 0.8832938621055345,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (/ b (+ (* -1 (* (/ 1 (+ (+ (pow b b) d) (/ 0 c))) d)) (+ d -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ b (+ d (+ -1 (* d (* -1 (/ 1 (+ (pow b b) d))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 10,
      "simplification_time": 0.043771937000000004
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ b (- -1 (* d (- (/ 1 (+ (pow b b) d)) 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.049550048
    },
    "speedup": 0.8833883874340547,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (* (/ a (/ (/ (* 0 (- (+ (+ a b) b) (+ b 1))) -1) a)) -1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13426)",
      "output_term": "(* -1 (/ a 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.809631376
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10044)",
      "output_term": "(/ (- 0 (/ a 0)) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.9164479529999999
    },
    "speedup": 0.883445015453049,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(- 1 (+ (- (* (* (pow a (pow (* (+ b -1) -1) (/ -1 a))) b) 0) c) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.01299615
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.014692204
    },
    "speedup": 0.8845609549118703,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* (/ -1 (pow 0 (+ (- (+ (- -1 a) 1) (* 1 a)) b))) a) -1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(20292)",
      "output_term": "(* (/ 1 (pow 0 (+ (* a -2) b))) (* a b))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.130812975
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10827)",
      "output_term": "(* b (/ (* a (/ -1 (pow 0 (+ (* a -2) b)))) -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 1.275790209
    },
    "speedup": 0.8863627946215098,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(- (- (* (* 0 a) (pow (* (/ 0 0) -1) (+ 0 -1))) (+ a 1)) (+ -1 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(14585)",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 2.389300014
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14834)",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 2.693669783
    },
    "speedup": 0.887005537604904,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 (+ (pow (/ -1 a) (+ (- (+ (+ 1 a) a) (/ 0 0)) -1)) 0)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13250)",
      "output_term": "(+ -1 (pow (/ -1 a) (+ a (+ a (* -1 (/ 0 0))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.942111415
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12175)",
      "output_term": "(+ -1 (pow (/ -1 a) (- a (- (/ 0 0) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.061954193
    },
    "speedup": 0.8871488254484438,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ (- (- 0 a) (pow 1 (- (+ (+ (/ a 0) 1) a) (/ 1 1)))) a) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15494)",
      "output_term": "(pow 1 (+ a (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.815160403
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10423)",
      "output_term": "(pow 1 (+ a (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.916426261
    },
    "speedup": 0.8894991748823313,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- 1 (+ a 0)) 1) (/ -1 (* (+ a (+ (+ (+ -1 a) 1) (/ d -1))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(23002)",
      "output_term": "(/ (- 1 a) (/ -1 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 3,
      "simplification_time": 1.528512486
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(14967)",
      "output_term": "(/ (- 1 a) (/ -1 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 3,
      "simplification_time": 1.717912016
    },
    "speedup": 0.8897501570301606,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- (+ 0 (/ a (- (- (/ (- b 1) a) b) a))) a) b) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (+ b (- (/ a (- (- (/ (+ b -1) a) b) a)) a)) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 9,
      "simplification_time": 0.130775541
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (/ a (- (/ (+ b -1) a) (+ a b))) (- b a)) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.14662238700000002
    },
    "speedup": 0.8919206928475388,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(* (* a -1) (+ (+ a (- (/ a (+ 1 -1)) (pow (- (- 0 a) 1) a))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (+ (pow (+ -1 (- 0 a)) a) (* -1 (+ a (/ a 0))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.398646469
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (- (pow (- -1 a) a) (+ a (/ a 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.444276947
    },
    "speedup": 0.8972927172833931,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (/ 0 (- (+ 1 a) (pow (+ 1 0) (+ (- a 0) a)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 31,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012587139
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014026238000000002
    },
    "speedup": 0.8973995022756636,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ 0 (- 1 (* 1 (- (+ (+ (+ 1 (/ a 1)) (/ -1 0)) b) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12112)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.008254572
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11461)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.120280841
    },
    "speedup": 0.9000016202187286,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ (- -1 (+ (/ a (/ (* (pow (- a -1) -1) a) 1)) -1)) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11432)",
      "output_term": "(pow 0 (+ 1 (* -1 (/ a (* a (/ 1 (+ a 1)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 2.343903209
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10151)",
      "output_term": "(pow 0 (- 1 (/ a (/ (/ a (+ a 1)) 1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 2.599271154
    },
    "speedup": 0.9017540187729102,
    "weight_simple_diff": 2,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (/ (- a (- (/ (pow (+ (- (- a -1) 1) (pow b 1)) (- d b)) 0) b)) 1) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(28758)",
      "output_term": "(/ (- a (- (/ (pow (+ a b) (- d b)) 0) b)) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.809031929
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17393)",
      "output_term": "(/ (/ (+ a (- b (/ (pow (+ a b) (- d b)) 0))) 1) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 2.0051791349999997
    },
    "speedup": 0.9021797092457778,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (/ 0 0) (pow (/ 1 (+ (- 0 (+ -1 (+ -1 a))) (* -1 -1))) (pow 0 1))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ 0 0) 1) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.026516941
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ 0 0) 1) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.029338668999999998
    },
    "speedup": 0.9038222217919974,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (- a a) (pow a (pow 1 (+ (pow (+ 0 c) b) (- (* b c) c))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow a (pow 1 (+ (pow c b) (- (* c b) c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.021823276
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow a (pow 1 (+ (* c b) (- (pow c b) c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.024144731
    },
    "speedup": 0.9038525216951061,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (* (+ 1 (- a (+ -1 (* -1 (+ (* b -1) 0))))) a) a) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 27,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(24824)",
      "output_term": "(* a (- a (+ -1 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.997257279
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10345)",
      "output_term": "(+ a (* a (- a b)))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 1.103313826
    },
    "speedup": 0.9038745418567791,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a a) (+ (/ -1 (* a b)) (+ 1 (- 1 (+ (+ (pow -1 b) 1) (pow b -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14573)",
      "output_term": "(+ (pow -1 b) (+ (/ 1 (* a b)) (/ 1 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 1.214360035
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11318)",
      "output_term": "(+ (/ 1 b) (- (pow -1 b) (/ -1 (* a b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 1.3414103430000002
    },
    "speedup": 0.9052860232791569,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (- (pow -1 (- a (- a (/ (+ -1 b) (- (- -1 0) b))))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(33185)",
      "output_term": "(+ -1 (pow -1 (/ (+ -1 b) (- -1 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.7438500449999998
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13343)",
      "output_term": "(+ -1 (pow -1 (/ (+ -1 b) (- -1 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.9260479789999998
    },
    "speedup": 0.9054032215258746,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ (- 0 a) (+ a (* (pow (+ a 0) (- -1 1)) (* (* a 0) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006681082
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007374805999999999
    },
    "speedup": 0.9059332543798441,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (/ (/ 0 1) (/ 0 (- (+ (+ (* 0 a) -1) (- a b)) (/ b c)))) a) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.082795749
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (/ 0 0)) c)",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.09138338400000001
    },
    "speedup": 0.906026296859394,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (+ 0 (+ (* (pow -1 0) (pow (/ a (* (pow b b) b)) (- -1 0))) c)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (/ a (* b (pow b b)))) (+ c d))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.013433566999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (/ a (* b (pow b b)))) (+ c d))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.014825432
    },
    "speedup": 0.9061163951242702,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ (- 0 0) (+ (- a a) a)) (- 1 (+ (* 1 a) (- (+ 0 -1) 1)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 29,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13953)",
      "output_term": "(- 3 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.195486083
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12386)",
      "output_term": "(- 3 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.316489926
    },
    "speedup": 0.9080860091594807,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ (+ (+ (+ (* a 1) (/ (pow (* -1 b) a) c)) -1) 0) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ (/ (pow (* -1 b) a) c) (+ a -2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.12953862
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (- (- 1 a) (/ (pow (- 0 b) a) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.142178086
    },
    "speedup": 0.9111011664624602,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (- 0 a) (pow (* (+ 1 0) 0) (/ b (* (/ (pow a 1) b) (+ b b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(31414)",
      "output_term": "(* (pow 0 (/ b (+ a a))) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.305262285
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10412)",
      "output_term": "(- 0 (pow 0 (/ b (* b (* (/ a b) 2)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.431679823
    },
    "speedup": 0.9116998535782256,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (+ a (- -1 (- 0 (- (- -1 (/ b (- (- 0 a) b))) (/ (- c 1) 1))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11182)",
      "output_term": "(+ a (* -1 (+ (/ b (- (* a -1) b)) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.889577096
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(13165)",
      "output_term": "(+ a (- -1 (+ (/ b (- 0 (+ a b))) (/ (- c 1) 1))))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.9750585469999999
    },
    "speedup": 0.9123319812302513,
    "weight_simple_diff": -4,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ (* (/ a a) (/ 1 b)) (+ 0 (- (pow b (* (* b 1) b)) (- 1 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 b) (pow b (* b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.008991891
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 b) (pow b (* b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.009833680000000001
    },
    "speedup": 0.9143973568389453,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (* (/ a (+ (+ 1 (* (+ (/ 1 1) b) 0)) 1)) -1) a) (* a d))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (* a -0.5) d))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.02892714
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (- d (/ a 2)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.031593422999999995
    },
    "speedup": 0.9156063906085772,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* -1 1) (+ -1 (- (- -1 (+ -1 a)) (/ (/ (pow a a) -1) 1)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16966)",
      "output_term": "(+ a (* -1 (+ 1 (pow a a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 1.3915105049999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11020)",
      "output_term": "(+ (+ -1 a) (/ (/ (pow a a) -1) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.5186329280000002
    },
    "speedup": 0.9162915404663211,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* (/ (pow (/ 1 (+ (- (- a b) (* b a)) 0)) a) b) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.043579124999999996
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.047427138
    },
    "speedup": 0.9188647436410773,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (+ 1 (pow 0 (- a (+ (- (+ 1 (- a b)) (/ a -1)) d)))) (+ 0 a)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11982)",
      "output_term": "(+ -1 (pow (+ 1 (pow 0 (* -1 (+ (- a b) (+ 1 d))))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.9402778920000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11642)",
      "output_term": "(+ -1 (pow (+ 1 (pow 0 (- (/ a -1) (- (- d b) -1)))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.022077054
    },
    "speedup": 0.9199677150760105,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (- 1 0) (/ (+ (- (- b (+ a (pow c c))) -1) (+ (* d -1) -1)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18302)",
      "output_term": "(pow a (/ 1 (+ (pow c c) (+ (+ d (* b -1)) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.2686084309999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(15965)",
      "output_term": "(pow a (/ 1 (/ (- (- b a) (+ (pow c c) d)) -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 1.3789279269999999
    },
    "speedup": 0.9199961841080327,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow 1 (pow (/ a (+ (- -1 0) -1)) (+ (* (pow (+ 0 a) a) 0) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005595839
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.006071985
    },
    "speedup": 0.9215831396157929,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a a) (+ (+ 1 (+ (* a (* (pow (* b b) 0) (- b b))) 0)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.007661606
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.008303774
    },
    "speedup": 0.9226655253382378,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* a (+ -1 (pow a (/ (+ b (- (- (/ b b) b) c)) (* (pow 1 -1) -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10367)",
      "output_term": "(- -1 (* a (+ -1 (pow a (+ -1 c)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 1.193229078
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10890)",
      "output_term": "(- -1 (* a (+ -1 (pow a (/ (- 1 c) -1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.292944969
    },
    "speedup": 0.92287692563039,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ 1 (* 1 a)) (* (* a (* (+ 1 a) (pow (+ (pow 1 a) b) (/ 1 0)))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 a) (* a (* (pow (+ (pow 1 a) b) (/ 1 0)) (+ c (* a c)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.09443564799999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 a) (* (+ 1 a) (* (pow (+ (pow 1 a) b) (/ 1 0)) (* a c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.10230579699999999
    },
    "speedup": 0.923072306450044,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (* (* a (pow (pow (- (* 1 (/ a 1)) a) b) (* (/ a 0) 0))) a) a) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (* a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.010880556
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (* a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.011784627999999998
    },
    "speedup": 0.9232837896962043,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (+ a (* a (pow (- (* 0 (/ -1 (pow (/ a 1) c))) (+ (/ a -1) -1)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021669707
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023421579
    },
    "speedup": 0.9252026517938863,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (+ -1 (* (pow (+ 0 (+ (pow (* a -1) b) (- b 0))) -1) 1)) (- b 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (+ -1 (/ 1 (+ (pow (* a -1) b) b))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.020239981000000004
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (+ -1 (/ 1 (+ (pow (- 0 a) b) b))) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.021823991
    },
    "speedup": 0.9274188666958304,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 0 (- a (- b (+ (* -1 (pow a (/ b 0))) (pow (pow -1 b) 0))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16925)",
      "output_term": "(+ (pow a (/ b 0)) (+ b (* a -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 1.551448489
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13451)",
      "output_term": "(+ (pow a (/ b 0)) (- b a))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.672740477
    },
    "speedup": 0.927489057825914,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (+ a (- (pow c (* (+ b 1) -1)) (+ (+ (pow b d) 0) (* -1 -1)))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (+ a (- (pow c (+ -1 (* b -1))) (+ 1 (pow b d)))) b))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.041165287999999994
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (+ (pow c (- -1 b)) (- (- a (pow b d)) 1)) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.044339506
    },
    "speedup": 0.9284110652924278,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow (/ 0 (- 0 (- a (+ (- (pow (* a -1) c) 0) (+ c a))))) 1) (* a 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13622)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.142752276
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10001)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.228177952
    },
    "speedup": 0.9304451965931398,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* 1 a) (/ a (pow (* (* 0 (* (- 0 a) 0)) b) 0))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) a)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.012438961999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (/ a 1)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.01333055
    },
    "speedup": 0.933116938160841,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (/ (* a (* a (+ (+ (- 0 (* -1 a)) (* 1 -1)) (pow b a)))) 0) c) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(21909)",
      "output_term": "(/ (* (* a a) (+ a (+ -1 (pow b a)))) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.312526222
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10488)",
      "output_term": "(/ (* (+ a (+ -1 (pow b a))) (* a a)) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.478085449
    },
    "speedup": 0.9331906706175893,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- -1 0) (/ 0 -1)) (pow a (+ a (pow (* 0 0) (* (pow 1 0) b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (+ a (pow 0 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.004268437
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (+ a (pow 0 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.004568504
    },
    "speedup": 0.9343183238977135,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* (pow (/ (/ (* a a) 1) (* 0 -1)) (* (* a 1) 0)) (+ a -1)) -1) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.005971891
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.006389291
    },
    "speedup": 0.9346719377783858,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (pow 0 1) (pow a (pow (* 1 (pow (+ b (pow -1 b)) (* b b))) (* a 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005526036
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.00590755
    },
    "speedup": 0.9354192516356188,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* -1 (+ b (- (+ (pow -1 b) b) (pow (- -1 (* (- -1 1) a)) 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10816)",
      "output_term": "(+ b (+ (pow -1 b) (+ b (+ 1 (* a -1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.752855402
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10466)",
      "output_term": "(+ 1 (+ (+ b (pow -1 b)) (- b a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.802677675
    },
    "speedup": 0.9379299131497585,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow 1 a) (- (pow (- (* (/ -1 1) (/ (+ -1 b) b)) (- (* -1 a) a)) 1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10081)",
      "output_term": "(* (pow 1 a) (+ a (+ (/ 1 b) (+ a -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.651219878
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 a) (+ (- a (/ (+ -1 b) b)) (+ a -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.6942993120000001
    },
    "speedup": 0.9379526477191727,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ 0 1) (+ (+ (- (+ -1 (+ 1 1)) (/ (/ -1 0) (+ a 0))) a) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 1 (/ (/ -1 0) a)) (+ 1 a))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.023566294
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- 2 (/ (/ -1 0) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.025109732000000003
    },
    "speedup": 0.9385322790382629,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (+ 0 a) (* a (+ (pow (- b (+ a (- b -1))) b) (pow (pow 0 0) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(18387)",
      "output_term": "(- a (pow a (* a (+ (pow (* -1 (+ a 1)) b) (/ 1 (pow 0 0))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 1.591028032
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14180)",
      "output_term": "(- a (pow a (* a (+ (pow (- -1 a) b) (/ 1 (pow 0 0))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.6842502529999999
    },
    "speedup": 0.9446506118470509,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- (/ (/ 1 a) (- (+ a (/ 1 (+ (/ -1 -1) b))) a)) 1) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(19847)",
      "output_term": "(/ (+ -1 (/ (/ 1 a) (/ 1 (+ 1 b)))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 1.8139877489999998
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10699)",
      "output_term": "(/ (- (/ (/ 1 a) (/ 1 (+ 1 b))) 1) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.916472529
    },
    "speedup": 0.9465242634844988,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (/ (pow (* a (+ (* (* -1 (pow (* a -1) c)) (+ 0 1)) (+ 1 -1))) c) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (pow (* a (* -1 (pow (* a -1) c))) c) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.017280768999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (pow (- 0 (* a (pow (- 0 a) c))) c) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.018201597
    },
    "speedup": 0.9494094941229606,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (- (- (pow (/ (- 1 (+ -1 (- a (- a 0)))) (* (- 1 -1) a)) a) 0) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (pow (/ 2 (* a 2)) a) c))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.025427493000000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- c (- (pow (/ 2 (* a 2)) a) 1))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.026757747
    },
    "speedup": 0.950285276260367,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 1 (/ 1 0)) (- 0 (+ (/ 0 a) (/ (/ (pow (/ 0 0) -1) (pow 0 -1)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (/ 1 0) (/ (/ (/ 1 (/ 0 0)) (pow 0 -1)) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.074500626
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (/ 1 0) (/ (/ (/ 1 (/ 0 0)) (pow 0 -1)) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.078210471
    },
    "speedup": 0.9525658782952476,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ -1 (+ (- 0 (pow (pow (/ (+ a (+ -1 -1)) a) b) (/ (* a a) 1))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 0 (pow (pow (/ (+ a -2) a) b) (* a a))) (+ -1 b))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.020666895999999997
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 b) (pow (pow (/ (+ a -2) a) b) (/ (* a a) 1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.021632909999999998
    },
    "speedup": 0.9553451662305256,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- -1 (/ a (+ (* 1 (- (- 1 (+ a (/ 1 b))) (pow -1 -1))) b))) (pow b 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ a (+ (- 1 (+ a (/ 1 b))) (+ 1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.076379358
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ a (+ 2 (- (- b a) (/ 1 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.07977435199999999
    },
    "speedup": 0.9574425374210498,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (- (- -1 (pow (pow 1 1) (pow (* (- (pow a 0) 0) (- a b)) (* a 0)))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- -2 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.014687951999999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -2 (- c a))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.015325947999999999
    },
    "speedup": 0.9583715147669821,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ (pow -1 1) a) a) (+ 1 (pow (- (pow (/ (/ a a) a) (* 1 0)) b) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(18948)",
      "output_term": "(+ b -3)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.6441539889999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10047)",
      "output_term": "(+ b -3)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.713576491
    },
    "speedup": 0.9594867796304285,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (+ (- 0 (pow a (pow 1 (- (- 1 (* 0 (/ b b))) (/ 0 a))))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023225095999999997
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024200463
    },
    "speedup": 0.9596963496111623,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* a -1) (+ (/ b 0) (* (+ (* (+ -1 1) 1) (- -1 a)) (- -1 1)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* a -1) (+ (/ b 0) (+ 2 (* a 2)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.020847502
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (- 0 a) (+ (/ b 0) (* (- -1 a) -2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.021697268000000002
    },
    "speedup": 0.9608353457218668,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 (* a (/ b (* (pow (+ (- (- -1 c) -1) b) (/ a b)) c)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10666)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.964901153
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11500)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.004164352
    },
    "speedup": 0.9608996287093847,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 a) (* (- -1 0) (+ b (* (* (* (/ b a) 1) c) (- d 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (* -1 (+ b (* (/ b a) (* c d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.232907256
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (- -1 b) (* (/ b a) (* c d))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.242330432
    },
    "speedup": 0.9611143514983707,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(- (- 0 a) (+ a (- b (+ (* (- a b) 1) (pow (/ a (* -1 a)) 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17108)",
      "output_term": "(+ (* -1 (+ a 1)) (* b -2))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.172189399
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10313)",
      "output_term": "(+ (/ a (- 0 a)) (- (* b -2) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.218935447
    },
    "speedup": 0.9616501036908479,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a 1) (- (/ -1 (+ 1 a)) (- (+ a 0) (- (/ (/ 0 -1) b) (- -1 c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(22585)",
      "output_term": "(+ (/ -1 (+ a 1)) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.328073888
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(16434)",
      "output_term": "(+ (/ -1 (+ a 1)) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.380184667
    },
    "speedup": 0.9622436183751635,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (pow 1 (+ 1 (- (- a (* (+ (/ 1 -1) c) (- c 1))) 1)))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(23807)",
      "output_term": "(+ c (/ a (pow 1 (- a (* (+ -1 c) (+ -1 c))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.21762687
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10191)",
      "output_term": "(+ c (/ a (pow 1 (- a (pow (- 1 c) 2)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 1.261415094
    },
    "speedup": 0.9652864277522273,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (- 0 a) (pow (/ (+ (pow (/ (+ 0 -1) a) (/ a 0)) (- -1 -1)) a) -1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (- 0 a) (/ 1 (/ (pow (/ -1 a) (/ a 0)) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.01047831
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (/ 1 (/ (pow (/ -1 a) (/ a 0)) a)) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.010850704000000001
    },
    "speedup": 0.9656801991833892,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (- b 0) (pow (/ b (pow (+ (pow 0 (- 1 c)) (+ b d)) (+ 0 1))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ b (/ 1 (/ b (+ (pow 0 (- 1 c)) (+ b d))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.028925725
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ b (/ 1 (/ b (+ (pow 0 (- 1 c)) (+ b d))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.029923726
    },
    "speedup": 0.966648504935515,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (- (+ a 0) (* (* 0 (- (+ (- a 1) a) (* a -1))) (/ 1 a)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10276)",
      "output_term": "(/ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.6254669749999999
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.6461552309999999
    },
    "speedup": 0.9679825295726809,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow (- a 0) (+ (- a (+ b (* (pow (* c a) 1) (- 1 b)))) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(33230)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.5391337840000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11596)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.588578174
    },
    "speedup": 0.9688750665159271,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- a (* (- (pow a a) (pow 1 (* b (- (pow 1 -1) c)))) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16588)",
      "output_term": "(* c (- (pow a a) (pow 1 (* b (- 1 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.798597571
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10081)",
      "output_term": "(* c (- (pow a a) (pow 1 (* b (- 1 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.855167453
    },
    "speedup": 0.9695068593896898,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (pow a (* (pow a (+ a (* 0 a))) (pow (pow 0 a) a))))",
    "input_weight_simple": 17,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow a (* (pow a a) (pow (pow 0 a) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.005012527
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow a (* (pow a a) (pow (pow 0 a) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.005165093000000001
    },
    "speedup": 0.9704621001015856,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow (/ (+ (- a 0) a) (- (- a (pow (* a c) a)) a)) a) -1) (/ 1 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(30073)",
      "output_term": "(pow (+ (pow (/ (+ a a) (* (pow (* a c) a) -1)) a) 1) (/ 1 b))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 2.421616564
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14119)",
      "output_term": "(pow (+ (pow (/ (+ a a) (- 0 (pow (* a c) a))) a) 1) (/ 1 b))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 2.488837903
    },
    "speedup": 0.9729908730018244,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- 0 (* (* a a) (- 0 (pow a (+ 1 0))))) a) (pow 1 b))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (pow a 3)) (pow 1 b))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.164153777
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (pow a 3)) (pow 1 b))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.16851285600000002
    },
    "speedup": 0.9741320685942204,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- (pow (* (pow 0 (+ (- (- 0 a) a) (* 1 1))) b) a) 0) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (* (pow 0 (+ (* a -2) 1)) b) a) b) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.032527709
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (* (pow 0 (+ (* a -2) 1)) b) a) b) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.033381138
    },
    "speedup": 0.9744337955164981,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a b) (* (- (+ (- 1 a) (+ (pow (pow -1 b) 1) a)) 0) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(27730)",
      "output_term": "(* (pow a b) (+ -1 (* -1 (pow -1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.201201755
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11200)",
      "output_term": "(* (pow a b) (- -1 (pow -1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.2310824619999998
    },
    "speedup": 0.9757281027694473,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (pow (+ a 1) (* (* 0 0) (pow (+ a (- (/ b a) 0)) (/ 0 1)))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.008210182
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.008403475
    },
    "speedup": 0.9769984440960435,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ -1 a) (pow b (+ b (pow a (- (pow (+ (+ a a) 0) b) (/ 0 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (pow b (+ b (pow a (pow (+ a a) b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.007769854
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (pow b (+ b (pow a (pow (+ a a) b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.007949395
    },
    "speedup": 0.9774145076449214,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (+ (- a -1) (- (- 1 (/ (* -1 (* (pow a b) -1)) (* a a))) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.09570445400000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.097831039
    },
    "speedup": 0.9782626759182228,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a 0) (+ (+ (- (* (pow -1 (pow -1 (- a a))) (+ 1 a)) b) 1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12965)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.427028706
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12732)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.456781435
    },
    "speedup": 0.9795763947252665,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a 0) (/ -1 (/ (pow (* -1 b) (pow (* (+ a 1) a) (* 0 c))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 (* -1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.012866519
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ -1 (/ (- 0 b) 1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.013122836
    },
    "speedup": 0.9804678653303295,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* -1 (+ (* 1 a) (- -1 (- -1 (+ (pow a (- 1 1)) (/ a 1)))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10481)",
      "output_term": "(* a -2)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.954321341
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10004)",
      "output_term": "(- 0 (+ a (/ a 1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.972638566
    },
    "speedup": 0.9811674905352252,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (pow (/ a 0) (/ (pow -1 a) (* (- a (/ -1 -1)) (- 0 a)))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (/ a 0) (/ (pow -1 a) (* (* a -1) (+ a -1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.03661137
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (/ a 0) (/ (pow -1 a) (- a (pow a 2)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.037262861
    },
    "speedup": 0.9825163451620098,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (* (+ (- 1 a) (/ 1 (pow (* a -1) (pow (- a -1) 1)))) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.028600304000000003
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.029101178
    },
    "speedup": 0.9827885317907064,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (+ (pow (- 1 1) (pow a (* a (+ 1 -1)))) (- a d)))",
    "input_weight_simple": 17,
    "input_weight_complex": 28,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a d))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.013680050999999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a d))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.013905513999999999
    },
    "speedup": 0.9837860722012864,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (pow (/ (- a (* 0 a)) (- a (/ (+ (- c d) d) 0))) 0) 0) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(22675)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.752085793
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10154)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.780531876
    },
    "speedup": 0.9840238282821958,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* (+ (+ 1 (pow (- a (* (+ a a) a)) (/ a -1))) 0) a) -1) (+ a -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20567)",
      "output_term": "(+ (* a (pow (* a (+ 1 (* a -2))) (* a -1))) 2)",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.610588146
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "NodeLimit(11136)",
      "output_term": "(+ 2 (* a (pow (+ a (* a (* a -2))) (/ a -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 1.6270316079999998
    },
    "speedup": 0.9898935817109217,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (+ (- 0 (* (/ a (+ (+ -1 (* (- 1 0) a)) (- -1 -1))) a)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (/ a (+ -1 a)) (* -1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.026482070999999996
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (/ a (+ -1 a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.026693555
    },
    "speedup": 0.9920773385186048,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* a (- (* (- (- (- 1 0) 1) (- (* a 1) 1)) a) c)) (* b 1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (* (* a -1) (+ c (* a (+ a -1)))) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.190331712
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (* a (- a (+ c (* a a)))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.19168410900000002
    },
    "speedup": 0.9929446577128622,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a 1) (pow (/ -1 a) (/ 0 (- (- (- (* b b) 0) (pow -1 -1)) (pow b a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a 2)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.020443604
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a 2)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.0205789
    },
    "speedup": 0.9934254989333735,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (+ a (- (+ (+ a -1) (pow 1 (+ (/ 0 0) 1))) a)) a) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11488)",
      "output_term": "(+ a (+ a (+ -1 (pow 1 (+ 1 (/ 0 0))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 1.053727856
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10167)",
      "output_term": "(+ a (+ -1 (+ a (pow 1 (+ 1 (/ 0 0))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 1.060593232
    },
    "speedup": 0.993526852903772,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 a) (pow 1 (- (+ (- (* (/ (pow 1 -1) 1) (pow -1 a)) a) (* a b)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.022869428
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023015342999999997
    },
    "speedup": 0.9936600988305933,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (+ -1 (- (+ (+ (pow -1 (* 0 (* a -1))) (pow b 1)) -1) (/ b -1))) d) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(19800)",
      "output_term": "(* (+ -1 (+ b b)) (* d d))",
      "output_weight_simple": 7,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.181878207
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10587)",
      "output_term": "(* (+ -1 (- b (/ b -1))) (* d d))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.189313245
    },
    "speedup": 0.993748461112951,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow (/ a -1) (pow 1 (+ (- (* (* (pow a b) 0) -1) (+ -1 b)) b))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a -1) d)",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.022502913
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a -1) d)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.022630251
    },
    "speedup": 0.9943731070415436,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (pow a 0) (+ (pow (- (- 0 (/ (* a 0) 0)) (* 0 b)) 0) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.0063496659999999995
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.006382015
    },
    "speedup": 0.9949312246994091,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ 0 (- -1 a)) 0) (* a (pow 0 (+ a (* (* (+ d c) a) (/ 0 b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (- -1 a) 0) (* a (pow 0 a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.050159153
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (- -1 a) 0) (* a (pow 0 a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.050414641
    },
    "speedup": 0.9949322658074664,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ (/ 0 (pow a (+ -1 a))) a) (+ -1 (pow a (- (- (+ a b) c) b)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15633)",
      "output_term": "(+ a (+ -1 (pow a (+ a (* -1 c)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 1.100207738
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10962)",
      "output_term": "(+ (+ a -1) (pow a (- a c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.1041498280000002
    },
    "speedup": 0.9964297508363147,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (/ (+ a 1) (/ (pow (* (+ (+ (* b 1) -1) -1) -1) (+ (/ 0 0) 1)) a)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a 1) (/ (pow (+ 2 (* b -1)) (+ 1 (/ 0 0))) a)) a)",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.030644303999999997
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a 1) (/ (pow (- 2 b) (+ 1 (/ 0 0))) a)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.030727628
    },
    "speedup": 0.9972883035423364,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (pow 1 (+ 0 (pow (* (pow (- 0 1) (/ 0 a)) (/ a 1)) (+ b b)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 1 (pow a (+ b b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.009698525
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 1 (pow (/ a 1) (+ b b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.009724374000000001
    },
    "speedup": 0.9973418340347665,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (pow a (+ (* 1 (+ (+ (/ (pow (- 0 -1) 1) (pow a b)) (pow 0 b)) 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006386904999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006403163999999999
    },
    "speedup": 0.9974607865736376,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a b) (+ (+ 1 (/ (- b (+ (- b (pow a a)) a)) (* (/ c -1) 1))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11197)",
      "output_term": "(pow (- a b) (+ (/ (+ (* a -1) (pow a a)) (* c -1)) (+ a 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.983969775
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10967)",
      "output_term": "(pow (- a b) (+ a (+ 1 (/ (- (pow a a) a) (/ c -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.985530327
    },
    "speedup": 0.998416535790684,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (pow (* (- (- 1 (- a (pow (- a a) 0))) 1) 0) a) a) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(15972)",
      "output_term": "(pow (/ (pow 0 a) a) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.368373949
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10890)",
      "output_term": "(pow (/ (pow 0 a) a) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.369861185
    },
    "speedup": 0.9989143162706665,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 (* (+ (+ a -1) (/ (pow (/ (/ a 0) b) (* 0 -1)) a)) 1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(16858)",
      "output_term": "(+ 1 (* -1 (/ 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.7421798480000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13681)",
      "output_term": "(- 1 (/ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.7434674700000001
    },
    "speedup": 0.9992614591197392,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ (+ (+ (/ (pow (/ 0 (pow (/ -1 1) 0)) (/ b c)) -1) 1) 1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* -1 (pow 0 (/ b c))) 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.021770531
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (pow 0 (/ b c)) -1) 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.021772243000000004
    },
    "speedup": 0.9999213677708813,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (- (+ (* (pow a 1) (* (* (* a a) 0) (* 1 -1))) a) b) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (- a b) (* a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.05205703800000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (- a b) (* a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.051697817
    },
    "speedup": 1.0069484752131799,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (pow (+ (* a 1) (+ a (- (pow (pow (- a 1) a) (pow 1 a)) (+ 0 a)))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(23885)",
      "output_term": "(+ -1 (pow (+ a (pow (pow (+ -1 a) a) (pow 1 a))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.618415661
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10554)",
      "output_term": "(+ -1 (pow (+ a (pow (pow (+ -1 a) a) (pow 1 a))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.606843824
    },
    "speedup": 1.0072015940984194,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (- (* (+ a -1) -1) 1) 0) (* (+ b (* (* a 0) (* (* 1 b) -1))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14455)",
      "output_term": "(* (/ (* a -1) 0) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 2.388485048
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12371)",
      "output_term": "(* (/ (- 0 a) 0) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 2.364342216
    },
    "speedup": 1.0102112257001634,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- a (pow a 0)) 0) (pow (- (/ (pow (- (/ c 0) 0) (/ -1 0)) -1) b) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a -1) (/ 1 (- (* -1 (pow (/ c 0) (/ -1 0))) b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.017529594
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (/ 1 (- (/ (pow (/ c 0) (/ -1 0)) -1) b)) 1))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.017332644
    },
    "speedup": 1.011362951895856,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- (/ (/ (+ (+ a b) (- (- (- -1 a) 0) (/ 0 0))) a) -1) a) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(21474)",
      "output_term": "(pow (* -1 (+ a (/ (+ b (+ -1 (* -1 (/ 0 0)))) a))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 1.143157336
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10724)",
      "output_term": "(pow (- (/ (/ (- (+ b -1) (/ 0 0)) a) -1) a) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.12803276
    },
    "speedup": 1.0134079226564308,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (+ 1 (/ 0 (* 0 (pow (+ (+ a (pow (/ a a) b)) 0) (pow (+ a b) 1))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.007663694
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (/ 0 0)) d)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.0075609860000000004
    },
    "speedup": 1.0135839426233562,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- 0 (- (- a (- 1 (+ -1 (* (pow (- (pow a a) 0) 1) (+ 1 0))))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14468)",
      "output_term": "(+ (* -1 (pow a a)) 2)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.2650630710000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10259)",
      "output_term": "(- 2 (pow a a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.2477820689999999
    },
    "speedup": 1.0138493751668107,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (- (- a (* (pow (/ (pow (pow (+ -1 a) -1) (pow -1 -1)) b) -1) -1)) b) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024401440000000003
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024050131000000002
    },
    "speedup": 1.0146073632613477,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 0 (/ (+ 0 a) a)) (/ (pow 0 a) (* (* (+ (+ a 1) -1) a) (* b 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(33308)",
      "output_term": "(- 0 (/ (pow 0 a) (* (* a a) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.276824621
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11146)",
      "output_term": "(- 0 (/ (pow 0 a) (* a (* a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.2581176490000001
    },
    "speedup": 1.014869016434885,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (+ (- (pow -1 (/ (- -1 (pow (pow (+ a b) 0) 0)) (* 1 (pow b -1)))) a) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(25359)",
      "output_term": "(pow -1 (pow -1 (/ -2 (/ 1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 2.2529981379999997
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11306)",
      "output_term": "(pow -1 (pow -1 (/ -2 (pow b -1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 2.218789523
    },
    "speedup": 1.0154176926857608,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a (- a 1)) (/ (pow (* 0 (+ b a)) (+ c (/ (/ (- a 1) b) b))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15806)",
      "output_term": "(- 1 (/ (pow 0 (+ c (* (+ a -1) (pow b -2)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.5470159460000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10277)",
      "output_term": "(- 1 (/ (pow 0 (+ c (/ (/ (+ a -1) b) b))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 1.519496525
    },
    "speedup": 1.0181108811683528,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow -1 1) (- -1 (pow a (pow b (+ 0 (+ a (pow -1 1)))))))",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- -1 (pow a (pow b (+ -1 a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.006139234
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- -1 (pow a (pow b (+ -1 a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.006024056
    },
    "speedup": 1.0191196761783092,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ 0 (+ (+ -1 (pow (- (/ (/ 1 a) -1) 0) (- a 0))) a)) -1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14584)",
      "output_term": "(+ (pow (* -1 (pow a -1)) a) (+ -1 a))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.634458717
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10755)",
      "output_term": "(+ -1 (+ a (pow (/ (/ 1 a) -1) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.5940452870000001
    },
    "speedup": 1.0253527489649044,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (- (* (* a a) (/ 1 a)) (/ (+ -1 (- 0 (pow (* 1 a) 0))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(21429)",
      "output_term": "(/ a (+ a -2))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 3.591217861
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12605)",
      "output_term": "(/ a (- a 2))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 3.499862556
    },
    "speedup": 1.0261025407536033,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow (* (- a (pow (- (pow (- a a) a) a) (* 1 a))) -1) d) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow (+ (pow (- (pow 0 a) a) a) (* a -1)) d) b) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.009507648
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow (- (pow (- (pow 0 a) a) a) a) d) b) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.009263302
    },
    "speedup": 1.0263778510082042,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- -1 (/ a (pow a (- (* (- (- (+ a b) 0) (- a 1)) (pow -1 a)) b)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(27404)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.0798207359999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10716)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.04859354
    },
    "speedup": 1.029780076653915,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 a) (- (pow (+ (pow 0 a) (- (+ (/ a 0) a) (/ a b))) (- 1 0)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* -1 a) (+ (- (+ a (/ a 0)) (/ a b)) (+ (pow 0 a) 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.126471287
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 a) (+ a (+ (/ a 0) (+ 1 (- (pow 0 a) (/ a b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.12278818100000001
    },
    "speedup": 1.0299956068247316,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (/ (- -1 -1) (/ (pow (- (/ (/ (* a 1) 0) 0) (/ -1 1)) 0) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0038269750000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0037110969999999996
    },
    "speedup": 1.0312247295072052,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (pow a b) (- 1 (- (+ (pow -1 0) (/ 0 0)) 0))))",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(27854)",
      "output_term": "(pow a (+ (* -1 (/ 0 0)) (pow a b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 1.987267353
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13352)",
      "output_term": "(pow a (- (pow a b) (/ 0 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 1.926017815
    },
    "speedup": 1.031801127446996,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ 0 (+ a (+ (pow (/ -1 (pow (* -1 (- 1 a)) (+ -1 1))) c) 1))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012077058
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011695666
    },
    "speedup": 1.0326096863573224,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (/ (- (- (+ -1 -1) (+ a -1)) (+ (- (* -1 b) 1) (+ b a))) -1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(15126)",
      "output_term": "(+ a (* a -2))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.6571673199999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11495)",
      "output_term": "(- a (/ (/ (* a -2) -1) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.636096342
    },
    "speedup": 1.0331254506726906,
    "weight_simple_diff": -4,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(* -1 (* 1 (pow (pow a (* (- (+ (+ (+ b 1) a) (+ 0 0)) -1) a)) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.053576719
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.051857188
    },
    "speedup": 1.0331589711343392,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- -1 (- (+ -1 (+ a a)) (+ b (pow b (pow c (* 0 (* b 0))))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13510)",
      "output_term": "(/ (+ b (+ b (* a -2))) 0)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.896593457
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10358)",
      "output_term": "(/ (* 2 (- b a)) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.8674670369999999
    },
    "speedup": 1.0335763997450893,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (pow (+ -1 (* -1 (- (* (pow (* (- a 0) a) 0) 1) 1))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0030761570000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0029749810000000002
    },
    "speedup": 1.034008956695858,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (+ (pow (pow b b) (* (- 0 (pow (- -1 b) a)) (/ -1 1))) (pow -1 1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15832)",
      "output_term": "(/ a (pow (pow b b) (pow (- -1 b) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 3.0988285519999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16314)",
      "output_term": "(/ a (pow (pow b b) (pow (- -1 b) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 2.996462856
    },
    "speedup": 1.0341621775137397,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (+ (+ (+ (- 1 (/ (- (- a -1) (/ 0 a)) (- a b))) 1) 0) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16944)",
      "output_term": "(/ 1 (- 1 (/ (+ 1 a) (- a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.6824491830000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11443)",
      "output_term": "(/ 1 (- 1 (/ (+ 1 a) (- a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.6255971850000002
    },
    "speedup": 1.0349729924021738,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* (+ -1 1) (- (- a (+ (/ (pow (+ 0 a) 1) (pow c a)) (/ b c))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.101961185
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.098511116
    },
    "speedup": 1.0350221288732533,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (* (+ (/ (+ 0 (+ (pow 1 (* a a)) 0)) -1) 1) 1) 1) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0049693179999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004800072
    },
    "speedup": 1.0352590544475166,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow (* a a) (+ (pow (pow (pow (+ (+ b -1) 0) (/ -1 0)) (/ b b)) 0) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005661935
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0054686760000000004
    },
    "speedup": 1.0353392667621923,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a 0) (- (+ 1 -1) (+ (* (- (+ (- a -1) -1) (- -1 1)) 1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 25,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11649)",
      "output_term": "(+ -2 (* a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.924541802
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "NodeLimit(11445)",
      "output_term": "(- -2 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.892291473
    },
    "speedup": 1.0361432670555175,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a (+ (- (pow 1 (/ (* (/ (- 0 a) -1) (/ 0 1)) a)) c) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 1 c) (+ a a))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.041348175
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (+ a 1) c))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.039848226
    },
    "speedup": 1.0376415502160623,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* (/ (* 1 (pow (- a (* (pow (+ -1 b) b) -1)) 0)) (pow c c)) 1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ 1 (pow c c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.007895226
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ 1 (pow c c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.0076039
    },
    "speedup": 1.038312707952498,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a 0) (* b (pow a (+ (+ (* (/ (pow b a) a) (/ 1 -1)) (/ b c)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* b (pow a (+ a (+ (* (/ (pow b a) a) -1) (/ b c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.025695495000000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* b (pow a (+ (/ b c) (- a (/ (pow b a) a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.024716705999999998
    },
    "speedup": 1.0396003011080848,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (- (+ a (- (+ b 1) (+ (* (/ b (/ b a)) b) a))) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11392)",
      "output_term": "(+ a (* b (+ (/ b (/ b a)) -1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.8654008639999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(15026)",
      "output_term": "(+ a (- (* b (/ b (/ b a))) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.830937923
    },
    "speedup": 1.041474748048056,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (pow (+ (pow a (- -1 1)) a) (+ 0 (- (pow -1 (- c c)) (+ 0 1)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.007128949000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.006843209
    },
    "speedup": 1.0417552642334906,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a 1) (pow a (/ (* 0 (+ (+ (- (/ a b) c) c) (/ 0 -1))) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20190)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.6799615940000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11554)",
      "output_term": "(/ (/ a 1) 1)",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 1.610613845
    },
    "speedup": 1.0430567197812708,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(pow 0 (- 0 (+ (* (/ a (pow 0 (- (* a b) (/ a a)))) -1) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (/ a (pow 0 (+ (* a b) -1))) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.045621547
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (/ a (pow 0 (- (* a b) 1))) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.043701575000000006
    },
    "speedup": 1.0439337026182693,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (- (* (+ (+ (- (pow 0 -1) (* (/ -1 0) a)) (- (+ b a) 1)) 0) 1) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16789)",
      "output_term": "(+ a (+ (- (pow 0 -1) (* (/ -1 0) a)) (* 0 b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.853709317
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10942)",
      "output_term": "(+ a (- (pow 0 -1) (* (/ -1 0) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.815959451
    },
    "speedup": 1.0462643896749226,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 0 (+ a (* -1 (pow (* (pow (- (+ (+ a 0) -1) (/ 1 1)) -1) a) (pow 0 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012140364999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011598307
    },
    "speedup": 1.0467359589636658,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ 0 (/ a a)) (* (- b b) (/ (+ -1 (+ (+ a a) d)) 1))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.018677972
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.017823758
    },
    "speedup": 1.0479255833702412,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (/ (- -1 (/ (- 1 -1) (- a (+ a (- a 0))))) 0) (pow 1 (* -1 c))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16420)",
      "output_term": "(- (- (/ (- -1 (/ 2 (* -1 a))) 0) (pow 1 (* -1 c))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.089332852
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10245)",
      "output_term": "(- (/ (- -1 (/ 2 (- 0 a))) 0) (+ a (pow 1 (- 0 c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.039375422
    },
    "speedup": 1.0480648560111903,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (- a (+ (+ (* 0 (pow 0 0)) (pow a (pow (+ (* 0 b) 0) (/ 0 b)))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(26841)",
      "output_term": "(pow -1 (* -1 (pow a (pow 0 0))))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 2.380188897
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11502)",
      "output_term": "(pow -1 (- 0 (pow a (pow 0 0))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 2.269806162
    },
    "speedup": 1.0486309081576983,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ -1 (- a (- (+ (+ (- (+ b a) (pow c 1)) a) (- (pow 1 1) e)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10220)",
      "output_term": "(/ a (/ -1 (+ (* -1 b) (+ -1 (+ e c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.614142205
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10331)",
      "output_term": "(/ a (/ -1 (+ c (- e (+ b 1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.584540119
    },
    "speedup": 1.0506416669066987,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ a a) 0) (pow (pow a 1) (+ (+ 0 b) (pow 0 (* 0 1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 6,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (+ b (pow 0 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.004708670999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (+ b (pow 0 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.004473905
    },
    "speedup": 1.052474516110646,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 (pow 1 (pow a (- (- (- (- b b) 0) b) (pow (* 1 c) -1))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010859403
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010311942000000001
    },
    "speedup": 1.0530899999243595,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- 0 (- (+ (pow 1 (- -1 -1)) a) (* -1 (- (- (/ 1 -1) 0) 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (* a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.017683506999999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.016736451
    },
    "speedup": 1.0565864292256464,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (pow a (/ a 1)) b) (* (pow (- (* (+ 0 -1) 1) (- -1 b)) 0) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(41323)",
      "output_term": "(* b (- (pow a a) b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.496703852
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13356)",
      "output_term": "(* b (- (pow a (/ a 1)) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.413864835
    },
    "speedup": 1.0585904783465387,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (+ 0 (- 0 (+ (+ (+ (* 0 b) (+ (pow c a) -1)) (- (pow -1 a) a)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13200)",
      "output_term": "(pow a (- 0 (+ (pow c a) (- (pow -1 a) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.981809951
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10125)",
      "output_term": "(pow a (- (- a (pow -1 a)) (pow c a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.926423217
    },
    "speedup": 1.0597855634267854,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- (- -1 (/ 0 0)) (+ a (- a (* b (/ b (/ d (pow c d))))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (/ 0 0)) (+ (+ (* a -2) (* b (/ b (/ d (pow c d))))) -2))",
      "output_weight_simple": 17,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.284067898
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- (* b (/ b (/ d (pow c d)))) (+ (/ 0 0) (+ a (+ a 2))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.267869164
    },
    "speedup": 1.0604725596560267,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 2
  },
  {
    "base_term": "(/ (pow -1 (* a (+ a (- (pow (- 0 (* (pow a a) 0)) a) (- a (+ b a)))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(19787)",
      "output_term": "(/ (pow -1 (* a (+ (+ a b) (pow 0 a)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.386731784
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10814)",
      "output_term": "(/ (pow -1 (* a (+ a (+ (pow 0 a) b)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.305122226
    },
    "speedup": 1.0625302032056574,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- 1 (/ 1 1)) (* (pow (pow (/ 0 (+ a (* 1 0))) a) (pow 1 0)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.004511122
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.00424164
    },
    "speedup": 1.0635325015795778,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 (- (pow (- (/ a b) b) (- (/ (* 0 (+ a a)) (/ -1 a)) b)) 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- (/ a b) b) (- 0 b)) -2)",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.014688167
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- (/ a b) b) (- 0 b)) -2)",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.013762699
    },
    "speedup": 1.0672446589146505,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ (pow b c) (* (* c (+ (+ (- (+ d 0) 0) (+ b d)) d)) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (pow b c) (* c (* d (+ b (* d 3))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.167269395
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (pow b c) (* (+ b (* d 3)) (* c d))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.156719146
    },
    "speedup": 1.0673194645917734,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (- (/ a a) 1) (- (/ a (- 1 (* (- (+ (- -1 0) -1) -1) (- 0 a)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a (- 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.027486586000000004
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a (- 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.025620403
    },
    "speedup": 1.0728397207491234,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- a (pow 1 a)) (+ (/ a (* a (- b (/ (* b 0) a)))) -1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10250)",
      "output_term": "(+ (/ a (* a b)) (+ -1 (* (pow 1 a) -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.241512554
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11391)",
      "output_term": "(+ (/ a (* a b)) (- -1 (pow 1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 1.156027206
    },
    "speedup": 1.0739475226502584,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* 0 (pow 1 (- -1 (+ -1 (- -1 (pow (- (+ (- a a) 1) (- a a)) (/ a 1)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13875)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.256259771
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12022)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.100667286
    },
    "speedup": 1.0740681239894359,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* (pow (* a 0) (+ (- 0 (pow 1 -1)) (* 0 a))) (- 0 c)) 0) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* -1 (* (pow 0 -1) c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.017566422
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* (pow 0 -1) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.016339659
    },
    "speedup": 1.0750788618048885,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (/ a (+ a (- (- 0 (- 1 (* (/ (* -1 a) 0) (+ 1 a)))) a))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(34060)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.806390396
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12598)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.677420868
    },
    "speedup": 1.076885610797111,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (/ b (+ 0 (* (* (/ b (/ (* a 1) a)) a) (- (+ b b) b)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(34673)",
      "output_term": "(+ a (/ 1 (/ b (* a (* b b)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 2.0102756150000003
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10228)",
      "output_term": "(+ a (/ 1 (/ b (* b (* a (/ b 1))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.8575879940000002
    },
    "speedup": 1.0821967096542293,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow a 1) (+ (pow (* (/ (+ a 0) a) 0) (* (+ (* -1 -1) c) (pow c a))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(26781)",
      "output_term": "(* -1 (pow 0 (* (+ 1 c) (pow c a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 2.413791866
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10168)",
      "output_term": "(- 0 (pow 0 (* (+ 1 c) (pow c a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 2.228744111
    },
    "speedup": 1.0830278155696267,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (/ -1 (/ (+ (- -1 (+ a (* a (- b 1)))) b) (* 0 0)))) (pow a 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(26543)",
      "output_term": "(/ -1 (/ (+ b (- -1 (* a b))) 0))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.295391776
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10720)",
      "output_term": "(/ -1 (/ (+ -1 (- b (* a b))) 0))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.194790869
    },
    "speedup": 1.0841995947660694,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow (pow 0 a) (pow (/ 0 a) (* (pow (+ (pow 0 a) b) (+ 0 0)) (/ d 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 a) (pow 0 d))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 3,
      "simplification_time": 0.005599692
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 a) (pow 0 (/ d 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.005159316
    },
    "speedup": 1.085355500612872,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (+ a (/ (- a (/ (pow (/ 1 (- a 0)) (* -1 a)) (pow a b))) c)) a) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(28872)",
      "output_term": "(+ (/ (- a (/ (pow (/ 1 a) (* a -1)) (pow a b))) c) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 2.344501254
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14058)",
      "output_term": "(+ (/ (- a (/ (pow (/ 1 a) (- 0 a)) (pow a b))) c) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 2.151988968
    },
    "speedup": 1.089457840566402,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (* -1 (/ a (+ -1 (- (+ -1 0) (- a (pow a c)))))))",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (pow a c) (+ -2 (* -1 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.035976673
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow a c) (+ a 2)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.032984683
    },
    "speedup": 1.0907084661083448,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (/ a (- (pow (- a (+ (+ 0 a) (pow 0 (pow a c)))) a) a)) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(33226)",
      "output_term": "(- (/ a (- (pow (* -1 (pow 0 (pow a c))) a) a)) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 2.557613286
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13900)",
      "output_term": "(- (/ a (- (pow (- 0 (pow 0 (pow a c))) a) a)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 2.334819478
    },
    "speedup": 1.095422284291908,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (pow b (- c (+ (- 1 (- c (+ (pow 1 a) b))) -1))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16281)",
      "output_term": "(* a (pow (pow b (+ c (- c (+ b (pow 1 a))))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.923372897
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12044)",
      "output_term": "(* a (pow (pow b (+ c (- c (+ b (pow 1 a))))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.842655733
    },
    "speedup": 1.0957890166042459,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (/ (/ a a) (+ (* (pow -1 -1) (pow a (+ a (+ c b)))) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 1 (+ -1 (* -1 (pow a (+ c (+ a b)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.012058003
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 1 (- -1 (pow a (+ a (+ c b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.010998752999999998
    },
    "speedup": 1.0963063721860107,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (- (pow (+ (/ a a) (pow (/ (- (/ a 1) -1) (/ a -1)) 0)) c) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(29922)",
      "output_term": "(pow 2 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 2.466765403
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10112)",
      "output_term": "(pow 2 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 2.250064546
    },
    "speedup": 1.0963087291807851,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (/ 1 (pow 0 -1)) 1) (* (* (- (pow (/ (* a 1) b) 1) (pow 1 a)) 0) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 (pow 0 -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.009466236000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 (pow 0 -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.008631688
    },
    "speedup": 1.0966842175018374,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ -1 (/ (pow a (- (+ a 1) 0)) (/ (+ (pow (- a b) 0) b) (+ 0 1)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (/ (pow a (+ a 1)) (+ 1 b))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.0121002
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (/ (pow a (+ a 1)) (/ (+ 1 b) 1))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.011015444000000001
    },
    "speedup": 1.0984759216242213,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a a) (- (+ a (- (* a -1) (+ (/ (pow 1 b) 0) b))) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12644)",
      "output_term": "(+ -1 (* -1 (+ b (/ (pow 1 b) 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 1.020431557
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11134)",
      "output_term": "(- -1 (+ b (/ (pow 1 b) 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.928783857
    },
    "speedup": 1.0986749492998562,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (pow (+ a 1) (* (* b b) (- (pow (- 1 -1) 1) -1))) (pow -1 a)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ a 1) (* (* b b) 3)) (pow -1 a))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.009505791999999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ a 1) (* (* b b) 3)) (pow -1 a))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.008637068
    },
    "speedup": 1.1005808915710749,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (+ (+ (pow (+ (/ a b) a) (/ a (pow (pow -1 1) c))) 1) (+ -1 0)) d) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(37457)",
      "output_term": "(* -1 (/ (pow (+ a (/ a b)) (/ a (pow -1 c))) d))",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 2.8427394379999997
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12360)",
      "output_term": "(/ (/ (pow (+ a (/ a b)) (/ a (pow -1 c))) d) -1)",
      "output_weight_simple": 12,
      "output_weight_complex": 38,
      "output_depth": 6,
      "simplification_time": 2.5773872349999998
    },
    "speedup": 1.1029539525130767,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (* -1 (+ 1 (pow (- a (- (pow (pow (/ 1 1) -1) (pow a -1)) (+ a -1))) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10606)",
      "output_term": "(pow 0 (+ (pow 1 (/ 1 a)) (* a -2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.099365746
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10050)",
      "output_term": "(pow 0 (+ (pow 1 (/ 1 a)) (* a -2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.9966687110000001
    },
    "speedup": 1.1030402919912672,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (* a (/ a (* (+ a (+ (* (- 0 c) d) 0)) (pow c c)))) 1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16333)",
      "output_term": "(* a (/ a (* (+ a (* c (* d -1))) (pow c c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 3.02404336
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12398)",
      "output_term": "(* a (/ a (* (- a (* c d)) (pow c c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 2.7343901219999998
    },
    "speedup": 1.105929741213423,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (- (* (pow a (- a 1)) b) (- (+ b (+ b 1)) 1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 27,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(24671)",
      "output_term": "(+ a (* b (+ (pow a (+ a -1)) -2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 1.209621896
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10784)",
      "output_term": "(+ a (* b (- (pow a (+ a -1)) 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 1.092564314
    },
    "speedup": 1.1071402209462975,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (pow a 0) (pow (* (pow 1 1) (- (/ (* 0 b) 1) b)) (pow 0 1))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 2 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.005605675
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 2 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.005061632
    },
    "speedup": 1.1074837127629982,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ 1 (+ (* a -1) (- -1 (pow (/ (/ a (+ -1 a)) -1) (pow a 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(30312)",
      "output_term": "(* a (* -1 (+ a (pow (* -1 (/ a (+ a -1))) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 1.7009078
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10850)",
      "output_term": "(- 0 (* a (+ a (pow (/ (/ a (+ a -1)) -1) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 1.5340650009999999
    },
    "speedup": 1.1087586242377223,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (- a (pow a (/ (pow 1 (pow (- (* -1 b) 0) 1)) (- (- c a) c)))) -1) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13581)",
      "output_term": "(+ (pow a (/ (pow 1 (* -1 b)) (* a -1))) (* -1 (+ a c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.2737781149999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10011)",
      "output_term": "(- (pow a (/ (pow 1 (- 0 b)) (- 0 a))) (+ a c))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.146344378
    },
    "speedup": 1.111165317722699,
    "weight_simple_diff": 1,
    "weight_complex_diff": 4,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (- (+ a a) (- a a)) (+ b (- c (- (- (pow 1 a) 1) 1)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (- c (+ (pow 1 a) -2)) (* 2 (+ a b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.271928409
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10219)",
      "output_term": "(+ (- c (- (pow 1 a) 2)) (* 2 (+ a b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.1434605169999998
    },
    "speedup": 1.1123500900031515,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (* (pow (pow 0 (/ (* (pow (* b 1) -1) (* 1 0)) (- b 0))) b) b)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow a (* b (pow (pow 0 0) b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.006723167
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (* b (pow (pow 0 0) b))) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.006042278
    },
    "speedup": 1.1126874665482125,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 1 (pow (+ a (* (- (+ 0 (pow (- 1 b) b)) (/ 1 -1)) b)) (pow a a))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021694386
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019470621
    },
    "speedup": 1.1142113032758432,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ -1 a) (/ a (pow 0 (- (- (+ a (pow (/ a b) -1)) (+ e 1)) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(22015)",
      "output_term": "(+ (/ -1 a) (/ a (pow 0 (+ (/ 1 (/ a b)) (+ -1 (* -1 e))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 1.7794844969999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14730)",
      "output_term": "(+ (/ -1 a) (/ a (pow 0 (+ -1 (- (/ 1 (/ a b)) e)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 1.594582232
    },
    "speedup": 1.1159565567014293,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ -1 (+ -1 0)) (pow (* (/ a a) (pow (/ a -1) (/ (* a -1) -1))) (* -1 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (/ 1 (pow (* -1 a) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.005588529
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (/ 1 (pow (/ a -1) (/ (* -1 a) -1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.0049989710000000005
    },
    "speedup": 1.1179358712022933,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (+ a (* 1 (pow (* (* (+ -1 (* a a)) (* 1 a)) 0) -1))) a) (+ a 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow 0 -1) (+ a -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.051506494
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (+ a (pow 0 -1))) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.046029628
    },
    "speedup": 1.1189856672315492,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (+ (pow (+ (+ a (pow b b)) (- (+ (* (/ 0 b) b) (+ a d)) c)) b) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ -1 (pow (+ a (+ (pow b b) (- (+ a d) c))) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.09424484600000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ -1 (pow (+ a (+ (pow b b) (- a (- c d)))) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.084220535
    },
    "speedup": 1.1190245466856747,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (/ 1 (pow (* a (* (/ (/ (+ a 0) a) 1) 0)) 1)) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.011398402
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.010179178999999998
    },
    "speedup": 1.1197761626944571,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- (+ (pow a (/ (/ (/ (+ 1 a) a) (+ 0 1)) a)) c) -1) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(19246)",
      "output_term": "(+ (pow a (+ (pow a -1) (pow a -2))) (+ 1 c))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 2.286506045
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15513)",
      "output_term": "(+ (pow a (/ (/ (/ (+ a 1) a) 1) a)) (+ 1 c))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 2.041440209
    },
    "speedup": 1.1200455614225633,
    "weight_simple_diff": 1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(- 0 (- (/ 1 -1) (pow (pow (- (pow (* (- -1 1) a) (* 1 b)) a) b) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- (pow (* -2 a) b) a) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.008291636
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- (pow (* -2 a) b) a) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.0073830200000000006
    },
    "speedup": 1.1230683378888313,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ (+ a -1) 1) -1) (+ a (- (* 0 0) (- -1 (+ (+ -1 a) b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(28853)",
      "output_term": "(+ a (+ 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 1.643262655
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(14506)",
      "output_term": "(+ b (- a (- (/ (+ a -1) 1) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 1.457157845
    },
    "speedup": 1.1277176735784584,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(pow a (+ (pow (- 1 a) (+ (+ (+ (* (pow 0 a) 1) 0) 0) (/ -1 (/ a 0)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ a (pow (- 1 a) (+ (pow 0 a) (/ -1 (/ a 0))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.007355061999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ a (pow (- 1 a) (+ (pow 0 a) (/ -1 (/ a 0))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.006512042
    },
    "speedup": 1.1294555532657804,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (+ (+ (pow 0 1) 1) (* (- a (+ (- (/ a a) -1) (+ -1 a))) a)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(46841)",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 1.788721159
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10728)",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 1.579596374
    },
    "speedup": 1.1323912794699793,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ -1 (pow (- a (- (pow a (+ -1 (+ 0 (* a b)))) (* (+ -1 a) a))) c)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15315)",
      "output_term": "(/ 1 (pow (+ (* a a) (* -1 (pow a (+ -1 (* a b))))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.686863729
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11725)",
      "output_term": "(/ (/ -1 (pow (- (* a a) (pow a (+ -1 (* a b)))) c)) -1)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.605996442
    },
    "speedup": 1.133445151481599,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* (* (* -1 1) (pow a (- (* 0 (/ -1 1)) (* a 1)))) a) a) (pow a a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (* -1 (* a (pow a (* -1 a)))) a) (pow a a))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.016918148
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- 0 (* a (pow a (* -1 a)))) a) (pow a a))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.014923629
    },
    "speedup": 1.133648390749998,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* 1 (* (* -1 (pow (* a (+ (pow (/ 1 1) a) (/ a b))) a)) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (pow (* a (+ (pow 1 a) (/ a b))) a) (* -1 b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.025205715
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (pow (* a (+ (pow 1 a) (/ a b))) a) (- 0 b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.022199546
    },
    "speedup": 1.135415787331867,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a 0) (/ (* (+ a (- (+ -1 (+ (/ 0 -1) 1)) (/ a a))) a) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (* a (+ a -1)) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.036232847
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (* a (+ a -1)) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.031899847
    },
    "speedup": 1.1358313724827582,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ a a) a) (/ -1 (/ (pow (pow (* b c) c) -1) 0)))",
    "input_weight_simple": 17,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(24114)",
      "output_term": "(+ a (/ 1 (/ (/ 1 (pow (* b c) c)) 0)))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.411259747
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10117)",
      "output_term": "(- a (/ -1 (/ (/ 1 (pow (* b c) c)) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 1.240780764
    },
    "speedup": 1.1373965392970906,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- (- (/ a (- (* -1 (* a (pow 0 a))) (/ 1 -1))) a) b) (/ b 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ b 0) (+ a (+ b (* -1 (/ a (+ (* a (* -1 (pow 0 a))) 1))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 10,
      "simplification_time": 0.266307961
    },
    "Extended": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (- (/ a (- 1 (* a (pow 0 a)))) (+ a b)) (/ b 0)) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.23405105799999995
    },
    "speedup": 1.1378199409805703,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 2
  },
  {
    "base_term": "(- 1 (* 0 (- (- (+ -1 a) (+ (+ (pow (pow a c) d) b) (/ a c))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11872)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.716344912
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10560)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.628931811
    },
    "speedup": 1.1389866110620377,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (- (* 0 (pow (/ (pow (* (* a a) b) (+ a 1)) (/ -1 0)) -1)) b)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (- 0 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.01505286
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.013205026999999998
    },
    "speedup": 1.1399340569315006,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* -1 (- a (- a (/ (+ (* (* (- (/ a c) d) 1) 0) (+ d (* a a))) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(39346)",
      "output_term": "(* -1 (/ (+ d (* a a)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 2.57034043
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11838)",
      "output_term": "(- 0 (/ (+ d (* a a)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 2.2534165059999998
    },
    "speedup": 1.1406415206226417,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow 1 (- (* a (- 0 0)) (- (/ (+ 1 a) 1) (* (+ 0 a) 1)))) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.027773513
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (pow 1 (- a (/ (+ 1 a) 1)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.024347581
    },
    "speedup": 1.1407093378188167,
    "weight_simple_diff": -6,
    "weight_complex_diff": -14,
    "depth_diff": -5
  },
  {
    "base_term": "(+ (+ a (/ (+ a b) (/ (+ c -1) (* (+ (/ 1 0) 1) (+ c c))))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ a b) (/ (+ c -1) (* c (+ 2 (* (/ 1 0) 2))))) (+ a d))",
      "output_weight_simple": 18,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.127413691
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ a b) (/ (- c 1) (* (+ 1 (/ 1 0)) (+ c c)))) (+ a d))",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.111444219
    },
    "speedup": 1.143295651791503,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (+ a (- a (+ a (/ (/ (- (+ 1 b) b) (- c a)) -1)))) (/ c 1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(29819)",
      "output_term": "(+ a (+ (/ 1 (- c a)) (+ c -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.294984376
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10584)",
      "output_term": "(+ a (+ -1 (- (/ c 1) (/ (/ 1 (- c a)) -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.13105563
    },
    "speedup": 1.144934291163026,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (- (* a (- (- (- (* (pow (- a 0) a) 1) (pow 0 b)) a) (/ 0 -1))) -1) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (* a (- (- (pow a a) (pow 0 b)) a)) d))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.18190340000000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (- (- (pow a a) a) (pow 0 b))) (+ 1 d))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.158337614
    },
    "speedup": 1.148832519353235,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (/ (pow 0 (+ (* (pow a a) (+ (- 1 1) (/ 0 -1))) 0)) b) (* (- a 0) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (pow 0 0) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.009661508
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (pow 0 0) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.008395789
    },
    "speedup": 1.1507564089569187,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 1 (+ (/ (/ (- (+ (/ (/ a b) 1) (pow 0 c)) (+ 1 -1)) 0) b) 0)) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ (+ (/ a b) (pow 0 c)) 0) b) e)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.012672896999999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ (+ (/ (/ a b) 1) (pow 0 c)) 0) b) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.010998751000000001
    },
    "speedup": 1.1522123739322763,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* 1 (pow (- (- (/ (+ -1 (* a (- a 0))) -1) 0) a) -1)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (* -1 (+ a (* a a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.0418083
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (/ (+ -1 (* a a)) -1) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.036273990000000006
    },
    "speedup": 1.1525696511467305,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (* (- (* (pow -1 (* (pow (+ -1 -1) a) (/ a a))) a) 0) 0) -1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005983611
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0051883879999999995
    },
    "speedup": 1.153269763171143,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow (pow (pow (* (+ -1 a) (pow 1 (- a -1))) (* (/ a a) 0)) 0) 1) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.012416779999999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.010759804999999999
    },
    "speedup": 1.1539967499411001,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 0) (+ (+ (- 0 -1) (/ (pow (- a a) (* 1 a)) (- -1 a))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14591)",
      "output_term": "(/ (pow 0 a) (- -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 3.323509878
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13863)",
      "output_term": "(/ (pow 0 a) (- -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 2.8784968539999998
    },
    "speedup": 1.1545991003539238,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (* (/ (- (pow (+ (pow (- 1 1) 0) -1) (pow a b)) a) (* 1 0)) a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (- (pow (+ (pow 0 0) -1) (pow a b)) a) 0) (* a a))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.013518867
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (- (pow (+ (pow 0 0) -1) (pow a b)) a) 0) (* a a))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.01170694
    },
    "speedup": 1.1547737495878512,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (pow 0 (- (pow (+ a -1) a) (/ (+ 1 (+ (- b c) -1)) (* 1 1)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(19465)",
      "output_term": "(* (pow 0 (- (pow (+ a -1) a) (- b c))) (* a a))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.207481686
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11879)",
      "output_term": "(* a (* a (pow 0 (- (pow (+ a -1) a) (/ (- b c) 1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.038307939
    },
    "speedup": 1.1629321520578297,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (- (pow a a) (* -1 (/ b (pow (* (+ (/ 0 b) 1) -1) (* 0 d))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (pow a a) b))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.027515185999999997
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (pow a a)) (/ b 1))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.023645064
    },
    "speedup": 1.1636756830093586,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ (/ 1 (/ (* a (- (- b (pow -1 b)) (pow c 0))) c)) 1) 1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10058)",
      "output_term": "(+ 1 (/ 1 (/ (* a (+ -1 (- b (pow -1 b)))) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.6436524220000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10404)",
      "output_term": "(+ 1 (/ 1 (/ (* a (- b (+ 1 (pow -1 b)))) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.41240479
    },
    "speedup": 1.163726173712566,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a -1) (/ (+ (* -1 (- (+ (pow (* -1 b) a) c) -1)) 1) (/ d 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(17429)",
      "output_term": "(pow (* a -1) (/ (* -1 (+ (pow (* -1 b) a) c)) (/ d 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 1.5634592029999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10490)",
      "output_term": "(pow (/ a -1) (/ (- (- 0 c) (pow (- 0 b) a)) (/ d 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 1.34101944
    },
    "speedup": 1.1658736304374528,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 1 (- a (* (- 0 1) (- -1 (/ (+ (/ (pow 1 0) 1) a) -1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(15483)",
      "output_term": "(+ 1 (+ a a))",
      "output_weight_simple": 4,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 1.6409622050000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10684)",
      "output_term": "(- a (/ (+ 1 a) -1))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.40628409
    },
    "speedup": 1.1668781696876056,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* a (* 0 (+ (- 1 (* 1 (+ (- (pow b a) 0) (* -1 b)))) c))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.39595607299999996
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.33833601399999996
    },
    "speedup": 1.170304243756918,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (pow b (- -1 (/ 1 (- (+ (* a (pow b -1)) (- 1 0)) (* b 0)))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007776074000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006616782
    },
    "speedup": 1.1752048049943313,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a a) (- -1 (+ (- -1 c) (- (- b a) (* (pow c 0) e)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10752)",
      "output_term": "(/ (* a a) (+ e (+ (* -1 b) (+ c a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.650261398
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10039)",
      "output_term": "(/ (* a a) (+ a (+ e (- c b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.553245778
    },
    "speedup": 1.1753571809453558,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ -1 (pow (- a a) (/ (+ (- (+ a a) 0) (pow -1 1)) -1))) c) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (+ 1 (* a -2))) (+ (* -1 c) -2))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.033427825
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (/ (+ -1 (+ a a)) -1)) (+ c 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.028310014
    },
    "speedup": 1.1807774097179888,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow a a) (- (+ a (+ (/ (pow a b) c) (/ (* (pow 0 b) -1) (- 1 a)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (pow a b) c) (+ (/ (* (pow 0 b) -1) (- 1 a)) (+ (pow a a) 1))))",
      "output_weight_simple": 17,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.105050302
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow a b) c) (+ (/ (- 0 (pow 0 b)) (- 1 a)) (+ a (+ (pow a a) 1))))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.088855352
    },
    "speedup": 1.1822619531122898,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (/ 1 (pow (* (* 1 0) (- (+ (pow a (- a a)) (* a a)) (+ 1 0))) 1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15568)",
      "output_term": "(+ 1 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 2.519838196
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13425)",
      "output_term": "(+ 1 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 2.131291116
    },
    "speedup": 1.1823059633116775,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (pow a b) (* 1 (/ (+ 0 (+ (pow b (+ 1 a)) -1)) (* 0 0)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a b) (/ (+ (pow b (+ a 1)) -1) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.008860293
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a b) (/ (+ (pow b (+ a 1)) -1) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.007480245
    },
    "speedup": 1.1844923528574265,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* (+ 0 1) (- a (- (/ (pow (- (pow a a) 0) (* -1 -1)) 0) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(18644)",
      "output_term": "(+ 1 (/ (pow a a) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.651178577
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10148)",
      "output_term": "(+ 1 (/ (pow a a) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.393944434
    },
    "speedup": 1.1845368701404062,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (pow a (/ (* 0 a) (- (/ (/ (+ a a) 0) (+ 0 b)) (/ b 0)))) d) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* b d)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.021024640999999997
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* b d)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.017724814
    },
    "speedup": 1.186169908468433,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (* 0 (+ 0 (+ a (pow (pow (+ (pow (* 1 a) 0) b) 0) a)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.007347991
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.006182167
    },
    "speedup": 1.188578535649393,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (+ (* 1 a) (* (/ (+ -1 (pow (pow a a) b)) 0) b)) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ a (+ -1 (* b (/ (+ -1 (pow (pow a a) b)) 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.011949795
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ -1 (+ a (* b (/ (+ -1 (pow (pow a a) b)) 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.010033894
    },
    "speedup": 1.1909429180734816,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ -1 -1) (- a (* (* (/ (+ (- (+ b 1) c) c) 0) (- (pow 0 d) -1)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(17892)",
      "output_term": "(/ 1 (- a (* a (* (/ (+ 1 b) 0) (+ 1 (pow 0 d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.647706264
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10105)",
      "output_term": "(/ 1 (- a (* (/ (+ 1 b) 0) (* a (+ 1 (pow 0 d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.382722912
    },
    "speedup": 1.191638794512143,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow a 0) (* 0 (* (+ (* (+ a (* 0 a)) (- c -1)) a) 0))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.023086785999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.019369873000000003
    },
    "speedup": 1.1918914491592172,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 (/ (/ a 1) (pow (+ (+ (* (+ a a) a) (- 1 -1)) (pow -1 -1)) a))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (pow (+ 1 (* a (+ a a))) a)) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.033431880000000004
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ a 1) (pow (+ 1 (* a (+ a a))) a)) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.027979401
    },
    "speedup": 1.194874758040746,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ -1 a) (- (* 0 (+ (* 0 (- (* a (pow 1 1)) b)) (- (+ c b) -1))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 a) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.017221636999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 a) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.014399899
    },
    "speedup": 1.1959554021871956,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (/ (/ (* (- (* -1 (* (* a 1) b)) b) a) (/ -1 -1)) 1) 0) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ b (* a b)))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.090262603
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ (* b (* a (- -1 a))) 1) 1) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.075427324
    },
    "speedup": 1.1966830879483408,
    "weight_simple_diff": -5,
    "weight_complex_diff": -17,
    "depth_diff": -3
  },
  {
    "base_term": "(pow (* a 1) (+ (/ (/ (* a 0) 1) a) (- (/ c (+ (pow e 1) -1)) (* -1 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ c (+ e -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.009101619
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ c (+ e -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.0075834579999999995
    },
    "speedup": 1.2001937638475746,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (/ (* 1 (/ (pow (pow (* -1 (- a 0)) (+ a a)) (+ 0 -1)) 1)) 1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (pow (* a -1) (+ a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.009140171
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ (/ 1 (pow (- 0 a) (+ a a))) 1) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.007609435
    },
    "speedup": 1.20116289842807,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(+ a (+ a (pow b (- (pow c b) (pow (* c (pow (+ 1 0) 1)) b)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a a))",
      "output_weight_simple": 4,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.009170883
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a a))",
      "output_weight_simple": 4,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.007633615999999999
    },
    "speedup": 1.201381232694964,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ (- 0 a) (pow (pow (/ (pow (+ b a) a) (+ b -1)) (/ 1 0)) 0)) b) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ b (* a (* b -1))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.026055191000000002
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(pow (* b (- 1 a)) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.021672148000000002
    },
    "speedup": 1.2022431279077643,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* -1 a) (/ (+ a (/ 1 (pow (+ (+ a (/ a c)) (- a 0)) (pow 0 -1)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* -1 a) (/ (+ a (/ 1 (pow (+ a (+ a (/ a c))) (pow 0 -1)))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.032871693
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 a) (/ (+ a (/ 1 (pow (+ a (+ a (/ a c))) (pow 0 -1)))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.027332556000000004
    },
    "speedup": 1.2026571170292304,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- -1 (+ -1 (* (+ (- (pow 0 -1) (- (pow a a) a)) (/ (/ b a) e)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14105)",
      "output_term": "(pow a (* -1 (+ (- (pow 0 -1) (- (pow a a) a)) (/ (/ b a) e))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 1.036026259
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11848)",
      "output_term": "(pow a (- (- (- (pow a a) a) (/ (/ b a) e)) (pow 0 -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.861159015
    },
    "speedup": 1.2030603418812262,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow a (* (pow a 1) (pow 0 (- (+ (pow (/ -1 0) b) (/ a 1)) (- 0 0))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (* a (pow 0 (+ a (pow (/ -1 0) b))))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.008268673
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (* a (pow 0 (+ (pow (/ -1 0) b) (/ a 1))))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.006867752
    },
    "speedup": 1.2039853797865736,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ 0 (- (/ (/ (- b a) (+ (pow (- -1 -1) -1) (pow b 1))) 1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(28354)",
      "output_term": "(/ (- b a) (+ b (pow 0 -1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 2.1000153900000003
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10312)",
      "output_term": "(/ (/ (- b a) (+ (pow 0 -1) b)) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 1.7432312300000001
    },
    "speedup": 1.2046682929148762,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ a (- a (+ (+ 1 (+ a (/ (- -1 (* a 0)) (* b 0)))) 0))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(19977)",
      "output_term": "(+ 1 (/ a (+ -1 (pow 0 -1))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.923270603
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11306)",
      "output_term": "(+ 1 (/ a (- -1 (/ -1 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.5915081939999998
    },
    "speedup": 1.208457870497147,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 (* (+ 0 (pow (/ (- (- (pow a -1) 1) -1) a) (pow (pow a -1) 0))) -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(34982)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.6720803960000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11771)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.383185999
    },
    "speedup": 1.2088615682987405,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ 0 (pow (+ (pow (- (- a 0) a) (* (/ -1 (/ 1 1)) (* 0 c))) 0) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007503419999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006205044
    },
    "speedup": 1.209245252733099,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (* a 1) (* (* (pow (/ 0 (/ (/ 1 0) a)) a) (+ (/ a -1) a)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(32481)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.627732416
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11706)",
      "output_term": "(* (pow 0 a) (+ a (/ a -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 2.172428913
    },
    "speedup": 1.2095826934890366,
    "weight_simple_diff": -6,
    "weight_complex_diff": -15,
    "depth_diff": -3
  },
  {
    "base_term": "(pow (+ (/ a (+ (+ (* (+ (+ a (- -1 a)) (- a b)) 0) 0) 1)) d) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14910)",
      "output_term": "(pow (+ a d) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.463058201
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10151)",
      "output_term": "(pow (+ (/ a 1) d) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 1.2054697970000001
    },
    "speedup": 1.2136830011345359,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow (* 0 a) (* 1 (+ 1 (/ a (- (+ (* a a) 1) 1))))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14935)",
      "output_term": "(- (pow 0 (+ 1 (/ a (* a a)))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 2.445722001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13483)",
      "output_term": "(- (pow 0 (+ 1 (/ a (* a a)))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 2.014304122
    },
    "speedup": 1.214177131590063,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ (pow (- (pow 1 (pow (- (* a a) b) (* a -1))) 0) -1) 0) -1) (/ a a))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (pow 1 (pow (- (* a a) b) (* a -1)))) -2)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.011298622000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (pow 1 (pow (- (* a a) b) (- 0 a)))) 2)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.009293711
    },
    "speedup": 1.2157277109219344,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (/ a a) (pow c (- (+ (/ a (* -1 (+ b 0))) (- 1 0)) 1))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14985)",
      "output_term": "(- (+ 1 (pow c (/ a (* -1 b)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.6335539800000003
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13521)",
      "output_term": "(- 1 (- a (pow c (/ a (- 0 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 2.164721438
    },
    "speedup": 1.2165786940388772,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ (- (/ -1 (/ 1 a)) -1) (pow -1 (- (* (/ (* a b) a) (+ 1 -1)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14887)",
      "output_term": "(+ -1 (/ 1 (/ 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 2.085997474
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10482)",
      "output_term": "(- -1 (/ -1 (/ 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.713323942
    },
    "speedup": 1.2175149268999126,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow (+ (* a a) (pow (* (pow a (* 1 (* a 1))) 0) 1)) (- a (pow a a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow (* a a) (- a (pow a a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.006706301999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow (* a a) (- a (pow a a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.005506861
    },
    "speedup": 1.2178084756451995,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ -1 (- (- (- 1 a) (* (pow (* b (+ 0 -1)) (+ a -1)) -1)) b)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12535)",
      "output_term": "(+ (pow (* -1 b) (+ -1 a)) (* -1 (+ a b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.0008292109999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10062)",
      "output_term": "(- (pow (- 0 b) (+ -1 a)) (+ a b))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.821819779
    },
    "speedup": 1.2178207881755057,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* 1 0) 1) (+ (- 0 a) (+ a (* 0 (- -1 (* b a))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 29,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.022804777000000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018703483
    },
    "speedup": 1.219279692450866,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 1 1) (- (pow 0 0) (- 0 (- (/ a (pow -1 (/ a a))) (+ 1 -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 2 (- (pow 0 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.007502496
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 2 (+ (pow 0 0) (/ a -1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.006144883
    },
    "speedup": 1.2209339054950272,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ a (+ a (/ a 0))) (- (- (/ 1 (+ (pow 1 a) a)) (+ a a)) b)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15047)",
      "output_term": "(+ (/ a 0) (+ (/ 1 (+ a (pow 1 a))) (* -1 (+ b c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.363412811
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10186)",
      "output_term": "(+ (- (/ 1 (+ a (pow 1 a))) b) (- (/ a 0) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.1155981320000001
    },
    "speedup": 1.2221361544911584,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (* (* 1 -1) 1) (* (/ 1 -1) -1)) (- (* (* a 1) a) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 5,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (- (* a a) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 4,
      "simplification_time": 0.014349731999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (- (* a a) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 4,
      "simplification_time": 0.011735742
    },
    "speedup": 1.2227375141682562,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* 1 (pow 1 (- (pow (pow (/ (+ a b) 0) (pow 0 -1)) b) a))) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- (pow (pow (/ (+ a b) 0) (pow 0 -1)) b) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.007979826
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow 1 (- (pow (pow (/ (+ a b) 0) (pow 0 -1)) b) a)) -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.006522597000000001
    },
    "speedup": 1.2234123923339124,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(pow a (pow (+ a a) (+ 1 (+ (pow 0 -1) (pow (- (+ b 1) 1) -1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13685)",
      "output_term": "(pow a (pow (+ a a) (+ 1 (+ (pow 0 -1) (/ 1 b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 2.321008227
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13328)",
      "output_term": "(pow a (pow (+ a a) (+ (pow 0 -1) (+ 1 (/ 1 b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.896125663
    },
    "speedup": 1.2240793278056066,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (pow 1 (* -1 (pow (* (+ (pow (* 1 (- a 1)) 0) (pow a 1)) 0) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow 1 (* -1 (pow 0 0))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.005395664
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow 1 (- 0 (pow 0 0))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.004404577
    },
    "speedup": 1.2250129808151837,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (+ (- (+ (- (pow (* -1 (+ 0 (pow 1 a))) b) (pow (- 1 0) c)) b) a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ 1 (- (+ b (- (pow (* -1 (pow 1 a)) b) (pow 1 c))) a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.11407653699999999
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ 1 (- b (- (+ a (pow 1 c)) (pow (- 0 (pow 1 a)) b)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.09306674699999999
    },
    "speedup": 1.2257496976874027,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- 0 (- a (pow 0 1))) (- -1 (/ 0 (pow (* (- a (/ b 0)) a) (- 1 c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.077173556
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.062947419
    },
    "speedup": 1.2260003225866973,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a -1) (/ -1 (* 0 (pow a (+ (+ 1 (* (* 1 a) a)) (/ 1 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a 1) (/ -1 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.012377063
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a 1) (/ -1 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.010086276
    },
    "speedup": 1.2271192063354206,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (/ (/ a (+ (- a (- 1 -1)) (/ (/ (+ 0 a) -1) 0))) 1) 0) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ a (+ (- a 2) (/ (* a -1) 0))) 0) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.01796285
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ (/ a (+ (- a 2) (/ (/ a -1) 0))) 1) 0) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.014635193000000001
    },
    "speedup": 1.2273736328588216,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (+ (+ a 0) (pow a (+ (* a 1) (- -1 (/ c c))))) (pow c 0)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ a (pow a (+ a -2))))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.011797003
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (pow a (+ a -2))) 1) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.009601864
    },
    "speedup": 1.228615922908302,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (+ (pow (* b (- (- -1 -1) (- a 1))) (+ (+ 0 a) 1)) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 27,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (* -1 (* b (+ a -1))) (+ a 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.048712217
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (* b (- 1 a)) (- a -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.03959009100000001
    },
    "speedup": 1.230414373131903,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* -1 (pow (pow -1 0) 1)) (- (pow (/ a a) (* (* (pow 1 a) 1) (- a 1))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 1 (* (pow 1 a) (+ -1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.013391314
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 1 (* (pow 1 a) (- a 1))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.010863972999999999
    },
    "speedup": 1.2326350590157027,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow 1 (* (+ a (pow (pow (+ c (+ (+ 0 b) 0)) (/ -1 a)) (/ a 1))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 1 (+ a (pow (pow (+ c b) (/ -1 a)) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.007703042
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 1 (+ a (pow (pow (+ c b) (/ -1 a)) (/ a 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.006248063999999999
    },
    "speedup": 1.2328686133816813,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (pow (/ -1 0) (+ (/ (- a (- (pow a a) 0)) 0) 1)) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ -1 0) (+ 1 (/ (- a (pow a a)) 0))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.007311696
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ -1 0) (+ 1 (/ (- a (pow a a)) 0))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.005924181000000001
    },
    "speedup": 1.2342121214729935,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ (/ (* -1 (+ a (- (+ (- (- 0 a) b) (pow 0 b)) (+ -1 c)))) d) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16891)",
      "output_term": "(* a (/ (+ c (+ -1 (+ b (* -1 (pow 0 b))))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.9109787650000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10951)",
      "output_term": "(* a (/ (/ (- c (+ 1 (- (pow 0 b) b))) d) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.7380272560000001
    },
    "speedup": 1.2343429833978923,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* -1 (pow (pow a b) (/ (+ (/ -1 1) (- (* 1 a) -1)) (/ 0 a)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(19454)",
      "output_term": "(* -1 (* b (pow (pow a b) (/ a 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 1.4669492009999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10501)",
      "output_term": "(- 0 (* b (pow (pow a b) (/ a 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.184559908
    },
    "speedup": 1.2383917361147088,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* (* (pow 1 (pow (pow (- (* 1 -1) 0) (pow 0 a)) (- a a))) a) b) -1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (+ -1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.030547518
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- a (* a b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.024619948
    },
    "speedup": 1.240762896818466,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (* (* (pow a 0) 1) (- (/ (pow (pow (pow 0 a) a) a) a) a)) 0) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow (pow (pow 0 a) a) a) a) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.008353839000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow (pow (pow 0 a) a) a) a) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.00672101
    },
    "speedup": 1.2429439920488143,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 0 a) (- (- (pow (+ a a) 0) (pow a (* (pow (/ a d) -1) -1))) (* b b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (- 1 (pow a (* -1 (/ 1 (/ a d))))) (* b b))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.026735647
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (- 1 (pow a (/ -1 (/ a d)))) (* b b))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.021494152
    },
    "speedup": 1.243856794164292,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ a 0) (+ (* (/ 1 (- (+ 1 (pow 1 a)) 1)) (+ -1 1)) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15236)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.4778812439999998
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13500)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.989862606
    },
    "speedup": 1.2452524292523943,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a 0) (* 0 (pow -1 (+ (+ (- a a) (/ 0 1)) (/ b (* 0 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.006854056
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005495749
    },
    "speedup": 1.247155938162387,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 a) (+ (/ (+ (* a a) a) (+ 1 (- (/ (- 1 1) a) (/ 0 a)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (* a a) (+ 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.014036301
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (/ (+ a (* a a)) 1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.011225530000000001
    },
    "speedup": 1.250390939225141,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(* 0 (+ a (/ (+ b (/ (pow (* (/ (* 0 0) -1) (+ 0 a)) (* 0 c)) 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005059246999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004034404
    },
    "speedup": 1.2540258734623502,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a b) (* 1 (* (/ 0 0) (pow (+ (pow -1 (pow 1 1)) (- 1 1)) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (* a b) (/ 0 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.0057351319999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (* a b) (/ 0 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.004563395
    },
    "speedup": 1.256768699619472,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (- (* a 1) 1) (pow (pow c -1) (- (- c (/ (+ c e) b)) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(18070)",
      "output_term": "(+ 1 (* -1 (pow (/ 1 c) (+ -1 (- c (/ (+ c e) b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 1.9050251950000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10644)",
      "output_term": "(- 1 (pow (/ 1 c) (- c (+ 1 (/ (+ c e) b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.513024336
    },
    "speedup": 1.2590843053035996,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (/ (+ -1 (+ (+ (+ (* -1 a) (/ 1 0)) (- (/ b 1) 1)) 0)) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (* -1 a) (+ (/ 1 0) (+ b -2))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.384758374
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (- (- (/ b 1) a) (- 2 (/ 1 0))) 1) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.305243145
    },
    "speedup": 1.2604980007003925,
    "weight_simple_diff": 0,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (pow (/ 0 (pow (pow (* (- (/ (* 0 -1) -1) (+ 0 -1)) a) b) a)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow 0 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.0057202880000000005
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow 0 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.004535676
    },
    "speedup": 1.2611765037890714,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (pow a (/ (/ (/ (+ (pow -1 (/ 1 -1)) 1) (* 0 1)) -1) 0)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (/ (* -1 (/ 0 0)) 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.004381215
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (/ (/ (/ 0 0) -1) 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.003466729
    },
    "speedup": 1.2637892953270937,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (+ (/ a (* (+ (+ -1 a) c) (pow (* (/ -1 0) -1) (- -1 1)))) a) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(22490)",
      "output_term": "(* -1 (/ a (* (+ -1 (+ a c)) (pow (* -1 (/ -1 0)) -2))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.4336661179999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10002)",
      "output_term": "(- 0 (/ a (* (+ a (+ -1 c)) (pow (- 0 (/ -1 0)) -2))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.13176443
    },
    "speedup": 1.2667531157521887,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (pow a (+ (+ (* -1 (* 1 -1)) (* (* (pow b a) 0) (pow 0 -1))) -1))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007019266
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005537668999999999
    },
    "speedup": 1.2675488549423954,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 a) (+ (pow a b) (+ 0 (+ (+ (/ (+ b b) a) 0) (- c -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (* -1 a) (+ 1 (+ (/ (+ b b) a) (+ (pow a b) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.078682008
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 a) (+ (/ (+ b b) a) (+ (pow a b) (+ c 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.061996380999999996
    },
    "speedup": 1.2691387260169267,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (* (* (* (pow (/ a (* b a)) (- (+ (* 1 0) -1) 0)) 0) a) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007616139000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005999186
    },
    "speedup": 1.2695287327314073,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ (- (pow a (- (- (* a 1) (- (/ 0 a) a)) 1)) 0) (- b a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow a (+ a (+ a -1))) (- b a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.032732345999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow a (+ a (- a 1))) (- b a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.025754159999999998
    },
    "speedup": 1.270953741065521,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow a 0) (pow a (pow (/ b (- b (pow (* 0 -1) b))) (- (pow 1 -1) 1)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.009680043000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.007605185
    },
    "speedup": 1.272821502698488,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a 1) (- (- (- 1 0) (+ (+ a (+ (* b 1) a)) (* a 0))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a 3) (+ -1 (+ b b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.23631773500000003
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ a b) 2) (- 1 (/ a 1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.18564524599999999
    },
    "speedup": 1.2729533348782873,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* 0 0) (/ (* 0 0) (- (+ (+ (pow a a) a) (- a a)) a))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20706)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.692732705
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10105)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.329504199
    },
    "speedup": 1.2732059863167082,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- -1 (pow (+ (+ -1 -1) 1) (- 1 (/ (- a (+ a 0)) 1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006055413999999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004755053
    },
    "speedup": 1.273469296767039,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (* -1 (* (pow (+ 0 a) b) (/ (- -1 b) (* -1 (pow -1 1))))) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow a b) (+ b 1)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.058526198
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- c (* (pow a b) (/ (- -1 b) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.045930946
    },
    "speedup": 1.2742214802194582,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (- a (- b (* (/ (pow (pow (pow (/ 0 b) 1) 1) c) -1) 0))))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.013496741
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.010575530999999999
    },
    "speedup": 1.2762234823007943,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (- -1 (/ a 1)) (/ a (+ (* -1 a) (+ (/ (pow a -1) d) (/ e a))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (/ a (+ (* -1 a) (+ (/ (/ 1 a) d) (/ e a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.030471488
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- -1 (/ a 1)) (/ a (+ (/ (/ 1 a) d) (- (/ e a) a)))) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.02385475
    },
    "speedup": 1.277376120059946,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 0 0) (* (pow -1 a) (+ (pow 0 1) (- (pow (+ -1 0) -1) (* 1 b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 0) (* (pow -1 a) (- -1 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.033896665
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 0) (* (pow -1 a) (- -1 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.026535792000000002
    },
    "speedup": 1.277394132423106,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (+ (pow a (- -1 (- -1 (+ (+ (pow b a) 1) (* b -1))))) (* a -1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16044)",
      "output_term": "(* a (+ a (* -1 (pow a (+ (pow b a) (+ 1 (* -1 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 1.6153772690000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10335)",
      "output_term": "(* a (- a (pow a (- (pow b a) (+ -1 b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 1.261917211
    },
    "speedup": 1.2800976600674956,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": 2
  },
  {
    "base_term": "(- a (/ 0 (- (+ 1 a) (pow b (+ (- (/ c (* -1 a)) (pow c 1)) (* 0 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.029101847000000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.022717779
    },
    "speedup": 1.281016379286021,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a a) (+ a (+ (/ (pow (* 0 b) (/ a (+ 0 a))) -1) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.013338725000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.010327004
    },
    "speedup": 1.2916355024167707,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (- (+ 1 -1) (* (/ 1 1) (/ (+ 0 (- (+ a 0) a)) (+ b 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009768625
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0075500210000000005
    },
    "speedup": 1.2938540170947868,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- (/ -1 a) (+ a (- (pow -1 (pow b (pow c (- 0 c)))) 0))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (/ -1 a) (+ a (pow -1 (pow b (pow c (- 0 c)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.023344838000000003
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (- (/ -1 a) a) (pow -1 (pow b (pow c (- 0 c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.018032313
    },
    "speedup": 1.2946114012107044,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ (+ 1 (/ a 1)) (/ (pow (/ -1 -1) (+ 1 (* (+ 1 a) -1))) b)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14147)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.3447246560000004
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12791)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.8056678229999998
    },
    "speedup": 1.2985359910243028,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* a a) -1) (- (+ (pow (pow b 1) (+ (/ (/ a b) -1) (+ d 0))) 1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15333)",
      "output_term": "(/ (* (* a a) -1) (pow b (+ (* -1 (/ a b)) d)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 2.92073401
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13550)",
      "output_term": "(/ (/ (* a a) -1) (pow b (+ (/ (/ a b) -1) d)))",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 2.2413135239999997
    },
    "speedup": 1.303134960247534,
    "weight_simple_diff": 0,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 (pow -1 (+ (pow a a) (- (* (* a (pow c 0)) d) (/ -1 d))))) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 (+ (pow a a) (+ (* a d) (/ 1 d)))) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.017801708
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 (+ (pow a a) (- (* a d) (/ -1 d)))) e)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.013659639999999999
    },
    "speedup": 1.3032340530204312,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (+ (+ a (+ (- a -1) a)) (pow (- (- -1 -1) (/ (/ -1 0) c)) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (/ 1 (- 0 (/ (/ -1 0) c))) (* a 3)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.046210962
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ 1 (* a 3)) (/ 1 (- 0 (/ (/ -1 0) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.03544766
    },
    "speedup": 1.303639281126032,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ (+ (/ 0 a) (+ (* a (pow (+ (pow b 1) a) (- -1 0))) 1)) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (* a (/ 1 (+ a b))) (+ b 1)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.020332586
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ b (+ 1 (/ a (+ a b)))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.015573151
    },
    "speedup": 1.305617983155753,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (+ (pow a (+ 1 (- (/ (+ (pow -1 -1) b) (+ a b)) (pow -1 1)))) -1) b) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 (pow a (+ (/ (+ -1 b) (+ a b)) 2))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.035289616
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ (/ (+ -1 b) (+ a b)) 2)) (+ 1 b))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.026925406
    },
    "speedup": 1.3106437837928981,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow (* a (pow b (- (/ 0 c) (- (* (/ c 0) 0) (* -1 -1))))) 0) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.008220685
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.006270264
    },
    "speedup": 1.3110588326105568,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (/ b (pow -1 -1)) (- (- 0 (- (+ (* (- -1 0) -1) b) (* c a))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (* b -1) (+ (* b -2) (+ -1 (* a c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.079869971
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ b -1) (- -1 (- (+ b b) (* a c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.060909438999999996
    },
    "speedup": 1.3112905374157198,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- (+ a a) a) 1) (- (+ b 1) (pow (/ d (- (pow d 0) 1)) (+ a c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(48759)",
      "output_term": "(* (+ a 1) (- (+ 1 b) (pow (/ d 0) (+ a c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 2.2332608
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14183)",
      "output_term": "(* (+ a 1) (- (+ 1 b) (pow (/ d 0) (+ a c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 1.7007099920000002
    },
    "speedup": 1.31313440298762,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ a (- (* -1 a) (pow (pow (/ (pow 1 1) 1) (+ 1 0)) 0))) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(17983)",
      "output_term": "(pow (- -1 b) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 1.7419752769999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11562)",
      "output_term": "(pow (- -1 b) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 1.3211103610000001
    },
    "speedup": 1.318569082814119,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (* (/ (pow -1 (/ (+ 1 b) (+ (* c -1) d))) 0) -1)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ a (/ (pow -1 (/ (+ 1 b) (+ (* -1 c) d))) 0)))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.024824458
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- 0 a) (/ (pow -1 (/ (+ 1 b) (- d c))) 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.018793441
    },
    "speedup": 1.320910736889535,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(pow a (* (- 0 (- b (- (+ -1 (* (- a (- c b)) 1)) (* (/ 1 b) b)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14442)",
      "output_term": "(pow a (* a (+ a (+ (* -1 c) -2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.863642011
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10571)",
      "output_term": "(pow a (* a (+ a (- -2 c))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.650633832
    },
    "speedup": 1.3273856484610225,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (* -1 -1) (+ (+ a (+ a (* a a))) (* (- (- 1 (/ 0 a)) a) (+ 0 a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(27613)",
      "output_term": "(/ 1 (* a 3))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.130969377
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10508)",
      "output_term": "(/ 1 (* a 3))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.8511461440000001
    },
    "speedup": 1.3287605013223203,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (* (* (* a 0) (* (- -1 (- (- a 1) a)) (+ 0 0))) b) -1) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(11187)",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.6761122259999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11704)",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.259564186
    },
    "speedup": 1.3307080692114883,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 (pow a (pow (- (* a a) (* a (pow (+ 0 -1) 0))) 1))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (pow a (- (* a a) a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 6,
      "simplification_time": 0.016922564
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (pow a (- (* a a) a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 6,
      "simplification_time": 0.012678411
    },
    "speedup": 1.334754331595655,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- a (/ -1 (* 1 (* (pow (- -1 (pow 1 a)) (pow -1 -1)) (* b a))))) c) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.026719171
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019981909
    },
    "speedup": 1.337168085391641,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- -1 (* (/ 1 (+ 1 (+ -1 (+ 1 (pow (pow 0 0) a))))) 1)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10589)",
      "output_term": "(pow (- -1 (/ 1 (+ 1 (pow (pow 0 0) a)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 1.9131758360000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11071)",
      "output_term": "(pow (- -1 (/ 1 (+ 1 (pow (pow 0 0) a)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 1.429096594
    },
    "speedup": 1.3387309465520987,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a -1) (/ 0 (+ (- (/ b (+ (/ -1 (/ 1 1)) 1)) (+ b (- 0 a))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(17944)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.894344327
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10314)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.414705409
    },
    "speedup": 1.339038018055673,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (pow a a) (* (* a 0) (pow (- (+ a (* 1 0)) (pow -1 b)) (pow a 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.009621012
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.007183465
    },
    "speedup": 1.339327469403693,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (- (pow (pow (- (+ (/ a (* (* b 1) -1)) b) (/ (+ a b) b)) d) -1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10420)",
      "output_term": "(/ 1 (pow (- (+ b (/ a (* -1 b))) (/ (+ a b) b)) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 2.395349933
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10907)",
      "output_term": "(/ 1 (pow (- b (- (/ (+ a b) b) (/ a (- 0 b)))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 1.785891474
    },
    "speedup": 1.3412628750810642,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (pow a (* (+ (+ b (/ (pow (+ b 1) c) a)) e) 0)) (- 1 -1)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* 2 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.014568966
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* 2 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.010858398999999998
    },
    "speedup": 1.3417232135234671,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow (+ 1 (* (+ (- (pow (/ 1 a) (- -1 a)) (+ -1 a)) a) 0)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(17439)",
      "output_term": "(pow 1 (pow 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.610974761
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10988)",
      "output_term": "(pow 1 (pow 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.200343044
    },
    "speedup": 1.3420953027158127,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- 0 (pow a (/ 1 (- (+ (+ (- b (+ 0 b)) (pow -1 c)) (- b a)) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11286)",
      "output_term": "(+ a (- 0 (pow a (/ 1 (- (+ (pow -1 c) (- b a)) c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.012670653
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10031)",
      "output_term": "(- a (pow a (/ 1 (+ b (- (pow -1 c) (+ a c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.7543494719999999
    },
    "speedup": 1.3424423169742739,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (+ a -1) 1) (/ (* (- (- (- a (/ 1 (pow -1 a))) a) b) a) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "NodeLimit(19124)",
      "output_term": "(/ a (* -1 (+ (/ 1 (pow -1 a)) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.688228238
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "NodeLimit(10772)",
      "output_term": "(/ a (/ (* a (- (- 0 b) (/ 1 (pow -1 a)))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.512309156
    },
    "speedup": 1.3433846144260595,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ (/ 1 (+ (+ -1 (* (* (- (* a a) -1) 1) 0)) (* -1 -1))) 1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 0) 2)",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.008382393
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 0) 2)",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.006229799
    },
    "speedup": 1.345531854237994,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow -1 1) (* (* 1 (/ (/ 0 a) 0)) (- 0 (+ (* (- 0 0) -1) (- 1 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* (/ 0 0) (+ -1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.066793908
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* (/ 0 0) (+ -1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.049593041000000004
    },
    "speedup": 1.346840335925357,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (+ (pow 0 (+ -1 a)) (pow (- (+ (pow 0 1) (/ (/ 1 b) 0)) 0) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* -1 (pow 0 (+ -1 a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.006678946999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 0 (+ -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.004946192
    },
    "speedup": 1.3503210146310534,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* (- 1 (- a (/ (* -1 (/ (* (- 1 1) 0) 1)) (+ (/ b b) b)))) 1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.015372389
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 2 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.011383998
    },
    "speedup": 1.350350641312481,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* 1 (+ a (* (* (* a -1) b) (/ (/ (pow (/ (- -1 0) a) (* 0 a)) 0) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (* (/ (/ 1 0) c) (* -1 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.175625342
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (* b (/ (/ 1 0) c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.129936764
    },
    "speedup": 1.3516216395846212,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (+ 0 1)) (/ (* -1 (* (pow a (/ 0 0)) (- (+ (pow 0 -1) a) a))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20892)",
      "output_term": "(pow a (/ (* -1 (* (pow a (/ 0 0)) (pow 0 -1))) 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 2.6278811810000002
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11326)",
      "output_term": "(pow a (/ (* (pow a (/ 0 0)) (- 0 (pow 0 -1))) 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.943860196
    },
    "speedup": 1.351887952851523,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (pow a (/ (* (+ (+ b 0) 0) (+ -1 b)) (pow (/ 0 a) (- (+ c -1) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (/ (* b (+ b -1)) (pow 0 (- (+ -1 c) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.047471256
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (/ (- (pow b 2) b) (pow 0 (- -1 (- a c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.035017877
    },
    "speedup": 1.3556291833454095,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (- (pow (/ (* (pow 1 (pow -1 (+ b -1))) (* 1 a)) c) b) 0)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (pow (/ (* a (pow 1 (pow -1 (+ -1 b)))) c) b)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.019586828
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (pow (/ (* a (pow 1 (pow -1 (+ -1 b)))) c) b)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.014434017999999998
    },
    "speedup": 1.3569906868621062,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (pow 1 a) (pow (/ 1 (- (/ (* (+ -1 -1) a) 1) -1)) 0)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.0052434280000000005
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.003862381
    },
    "speedup": 1.3575636375593192,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ (+ -1 -1) (- 0 (pow (pow 0 (- (- (* a 1) -1) 1)) (pow (* a 1) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14055)",
      "output_term": "(/ 1 (/ -2 (- 0 (pow 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 2.35156945
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12682)",
      "output_term": "(/ 1 (/ -2 (- 0 (pow 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.726807822
    },
    "speedup": 1.3618014813463126,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (- 1 (pow (pow a 0) (/ a a))) (pow (* (pow b 1) b) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(19424)",
      "output_term": "(+ a (pow (* b b) c))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 2.2593314909999997
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12070)",
      "output_term": "(+ a (pow (* b b) c))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.655080801
    },
    "speedup": 1.3650883326269698,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (- 1 (+ b (- 1 (- (- (- (pow b 1) 1) -1) (/ 0 0))))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(22254)",
      "output_term": "(+ a (/ 1 (* -1 (/ 0 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.289647017
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10640)",
      "output_term": "(+ a (/ 1 (- 0 (/ 0 0))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.942869384
    },
    "speedup": 1.367789684217809,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (+ a (* -1 (* (- (- (- (/ (pow -1 0) b) (* 0 -1)) (+ 0 a)) 0) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16910)",
      "output_term": "(+ 1 (/ 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.955112191
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11277)",
      "output_term": "(+ 1 (/ 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.424881202
    },
    "speedup": 1.372122944885338,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (+ 1 (* (+ (+ (+ -1 (pow (+ a -1) 0)) a) (- -1 (- a 1))) a)) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(46365)",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.722670409
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10963)",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.254860208
    },
    "speedup": 1.3727986575856106,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 (/ 0 (* (- (/ 1 (+ 1 (- 0 (pow a a)))) (/ (* 0 0) -1)) 1))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.006657281000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.0048479709999999995
    },
    "speedup": 1.3732097407348356,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (* -1 a) (* (- (pow (+ b a) (pow (/ 0 b) b)) (* (- b 0) a)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.013437033000000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.009782421
    },
    "speedup": 1.3735897279415803,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ -1 (+ 1 (* (pow (/ (+ a a) (* (* -1 -1) 1)) (+ (+ a 0) a)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10789)",
      "output_term": "(- 0 (* a (pow (+ a a) (+ a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 5,
      "simplification_time": 2.520343175
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10429)",
      "output_term": "(- 0 (* a (pow (/ (+ a a) 1) (+ a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 1.832309271
    },
    "speedup": 1.3755009674892378,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (+ a (- b c)) c) (- b (pow -1 (* (- (- (+ a 1) a) (- c c)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10845)",
      "output_term": "(/ (/ (+ a (- b c)) c) (+ b -1))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.3247372849999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10411)",
      "output_term": "(/ (/ (+ a (- b c)) c) (- b 1))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.960174284
    },
    "speedup": 1.3796841959579078,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ (* (pow a (+ (pow (+ (* (+ 1 -1) 1) 1) a) a)) a) (pow 0 c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (pow a (+ a (pow 1 a)))) (pow 0 c))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.006414808
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (pow a (+ a (pow 1 a)))) (pow 0 c))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.004646941
    },
    "speedup": 1.3804367217057416,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (- a (/ (pow 0 a) 0)) (+ (+ (* (pow b (pow -1 c)) (* a 1)) 1) c)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (pow 0 a) 0)) (+ c (+ 1 (* a (pow b (pow -1 c))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.0133187
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (pow 0 a) 0)) (+ c (+ 1 (* a (pow b (pow -1 c))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.00963192
    },
    "speedup": 1.3827668834458757,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a (- (+ -1 (+ (* a c) (* (+ (/ 0 b) 0) b))) 0)) (- 0 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ a (+ -1 (* a c))))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.022465203000000003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (+ -1 (* a c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.016218048
    },
    "speedup": 1.3851977130663322,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (* (+ a a) (* a (/ b (* (* (pow (+ b d) 0) 0) (* c d))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (* a (* (/ b 0) -2)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.33967577399999993
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(* (* a a) (* (/ b 0) -2))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.24502105999999998
    },
    "speedup": 1.3863125643158998,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ 0 (- a (- (+ 1 -1) (pow (/ 0 (- (/ a a) a)) (- c 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (pow 0 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.06851061
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (pow 0 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.04937855000000001
    },
    "speedup": 1.3874569018328806,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (+ (* -1 (* (- 1 (+ (/ 1 (- -1 b)) (+ b c))) -1)) (/ -1 b)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* d (+ (- 1 (+ b (+ (/ 1 (- -1 b)) c))) (/ -1 b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 1.460163881
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (+ 1 (- (/ -1 b) (+ b (+ (/ 1 (- -1 b)) c)))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 1.048839108
    },
    "speedup": 1.3921714683049367,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (+ (pow (pow a a) (/ (+ a (+ 1 -1)) (* (pow (/ 1 c) 0) 1))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ a (pow (pow a a) a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.005409382
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ a (pow (pow a a) (/ a 1))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.0038854700000000002
    },
    "speedup": 1.3922078924814758,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (* (/ (* 0 a) (- 1 (pow (/ (pow b a) -1) (* 1 -1)))) -1) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.023664692
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.016978423
    },
    "speedup": 1.3938097784464436,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (/ (pow 1 a) (- (+ 1 -1) (- (+ (- 1 b) 1) 1))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15354)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 2.0735153029999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12621)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.4833519970000002
    },
    "speedup": 1.3978578969749413,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 1 1) (/ 0 (pow (+ (+ (- -1 (pow 0 a)) (- (/ a 0) -1)) -1) (- -1 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(18502)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.910937777
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10561)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.3661878600000001
    },
    "speedup": 1.3987371963618531,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a 0) (pow a (+ (+ (* a 1) (pow a (- b 1))) (+ (* (* -1 -1) a) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow a (+ b (+ (pow a (+ b -1)) (+ a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.027218806999999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow a (+ b (+ (pow a (- b 1)) (+ a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.019443787
    },
    "speedup": 1.3998716916617115,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (- a (- (- (/ -1 -1) (+ (pow b 0) a)) (pow (+ 0 -1) -1))) a) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(39443)",
      "output_term": "(/ (+ a -1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 2.509004493
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(16131)",
      "output_term": "(/ (+ a -1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.784577283
    },
    "speedup": 1.405937706873746,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow 0 (* (* (pow (- a (pow (* a b) c)) (pow (/ a 0) -1)) c) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (* c (pow (- a (pow (* a b) c)) (/ 1 (/ a 0))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.012431253
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (* c (pow (- a (pow (* a b) c)) (/ 1 (/ a 0))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.008836183
    },
    "speedup": 1.4068578027412968,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (+ (* a (+ a (pow (- (/ 1 a) (pow -1 (+ a -1))) (+ (* a 1) 0)))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (+ a (pow (- (/ 1 a) (pow -1 (+ a -1))) a))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.025095322
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (+ a (pow (- (/ 1 a) (pow -1 (+ a -1))) a))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.017837788
    },
    "speedup": 1.4068628912957144,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ -1 (- a (+ (- a (+ (* (pow (* b 0) -1) 0) c)) (+ c (* -1 d))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(48216)",
      "output_term": "(+ a (+ -1 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 3.528467939
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(28111)",
      "output_term": "(+ a (+ -1 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 2.50240726
    },
    "speedup": 1.4100294525999737,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a a) (* -1 (pow (pow (- a (- (+ 1 a) (/ 1 a))) -1) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(19570)",
      "output_term": "(pow 1 (* -1 (pow (/ 1 (+ -1 (/ 1 a))) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.783558784
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10474)",
      "output_term": "(pow 1 (- 0 (pow (/ 1 (+ (/ 1 a) -1)) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.2639655589999998
    },
    "speedup": 1.411081790401854,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 1 (pow (+ (+ (* -1 (/ (pow 1 (/ 0 a)) (- -1 a))) a) b) (* 1 -1))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (/ 1 (+ (* -1 (/ 1 (- -1 a))) (+ a b)))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.036072319
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (/ 1 (+ a (- b (/ 1 (- -1 a)))))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.025414884
    },
    "speedup": 1.4193383294607995,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ a (* -1 (pow (* a -1) (- (pow (* (pow a 0) 1) (+ -1 -1)) (* 1 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (* -1 (pow (* a -1) (pow 1 -2)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.021307056
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (pow (- 0 a) (pow 1 -2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.014985667000000001
    },
    "speedup": 1.4218290050085858,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (- (* (pow 0 (- (pow (pow a (pow (+ 1 -1) 1)) (- 0 a)) -1)) -1) (- a b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (+ 1 (pow 1 (- 0 a)))) (+ a (- a b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.088386393
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (pow 0 (+ 1 (pow 1 (- 0 a)))) (- a b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.062089395
    },
    "speedup": 1.423534453830642,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (- -1 1) (/ (/ (+ (pow (+ (- a a) a) (* 0 a)) a) b) 0)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -2 (/ (/ (+ 1 a) b) 0)) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.019652789
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -2 (/ (/ (+ a 1) b) 0)) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.013804883999999998
    },
    "speedup": 1.4236113103159724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 1 (+ 0 (/ 1 (* (* (pow (+ -1 a) (+ a a)) 1) c)))) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (/ 1 (* (pow (+ -1 a) (+ a a)) c))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.010283356
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (/ 1 (* (pow (- a 1) (+ a a)) c))) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.00720784
    },
    "speedup": 1.426690381584497,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- a (pow a (/ (pow (+ c (+ (* (/ c 0) 1) (/ a c))) 0) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ 1 0)) (* -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.016573434999999997
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (/ 1 0)) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.011612889
    },
    "speedup": 1.4271586510471252,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (+ (pow a 0) -1) (+ (- b c) (+ (+ 1 (/ 0 (* -1 b))) (+ -1 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(20050)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 2.261049
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14423)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.5835758000000002
    },
    "speedup": 1.4278122967021847,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a 0) (pow 0 (pow a (pow (/ (pow 0 0) (/ a (- 0 1))) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 (pow a (pow (/ (pow 0 0) (* a -1)) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.009027246
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 (pow a (pow (/ (pow 0 0) (/ a -1)) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.006319452000000001
    },
    "speedup": 1.4284855712172508,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (- a (+ b (* (+ (/ (pow (* a 0) 0) 1) b) 1))) b) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(36395)",
      "output_term": "(pow (+ a (* (+ b (pow 0 0)) -1)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 2.5239035850000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13189)",
      "output_term": "(pow (- (- a b) (/ (pow 0 0) 1)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.766522262
    },
    "speedup": 1.42874145392457,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ a a) (* 0 (pow (* (pow c -1) (pow (* (* 0 c) 0) (/ 1 d))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.008064896
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.005639308000000001
    },
    "speedup": 1.4301215681072925,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow a (* 1 (pow (/ 0 a) (+ (+ -1 a) (- -1 (- a -1)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow a (pow 0 -3)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.03303504
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow a (pow 0 -3)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.022995399
    },
    "speedup": 1.4365934681107295,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (+ (* a a) (pow (pow (+ (+ b (- d (pow b -1))) 0) a) (/ c -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.017821251
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012346024999999998
    },
    "speedup": 1.4434808774484096,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (* (pow a 0) (/ (* (/ a a) (* (pow b c) c)) (/ (+ 0 b) a)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ (* c (pow b c)) (/ b a))) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.019645318
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ (* c (pow b c)) (/ b a))) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.013606581000000001
    },
    "speedup": 1.443810021047903,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ b (* (* (* 1 (pow a (pow (pow (* -1 a) a) (* -1 b)))) b) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ b (* b (* -1 (pow a (pow (pow (* a -1) a) (* b -1)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.025988801000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ b (* (- 0 b) (pow a (pow (pow (* a -1) a) (- 0 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.017999963
    },
    "speedup": 1.4438252456407827,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ a -1) (+ a (* (+ a (- b (+ (pow (pow a 0) 1) (- b -1)))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18929)",
      "output_term": "(+ 1 (* a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 1.0042749770000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(13714)",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.6942090430000001
    },
    "speedup": 1.4466463482815795,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (/ (* (/ (+ (- a 1) (- (pow b a) (* 0 0))) (+ -1 -1)) 1) 0) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (* (+ a (+ (pow b a) -1)) -0.5) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.024761725
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ (+ a (- (pow b a) 1)) -2) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.017092195
    },
    "speedup": 1.4487153346893127,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ -1 (+ a (pow (+ b (* (- (- a a) (- 1 1)) -1)) (+ (* 0 -1) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ -1 (+ a (pow b a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.006677593999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ -1 (+ a (pow b a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.004602253000000001
    },
    "speedup": 1.4509402242771092,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (pow b -1) (- a (pow 0 (* (- (+ (pow 1 b) b) (/ 1 c)) (* 0 -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(20715)",
      "output_term": "(+ (/ 1 b) (pow 0 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 2.2062125430000004
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10734)",
      "output_term": "(+ (/ 1 b) (pow 0 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 1.5153409919999998
    },
    "speedup": 1.455918208936039,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ (- -1 (/ (* 0 (/ (pow (+ -1 a) -1) -1)) (pow (/ a a) -1))) b) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 b) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.00758036
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 b) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.005203063999999999
    },
    "speedup": 1.4569030863352828,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (pow (/ a 0) 0) (+ 1 (pow (pow a a) (+ (* (pow 0 1) b) (pow -1 0))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a a) 3)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.009929692
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a a) -3)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.006814860000000001
    },
    "speedup": 1.4570647085926929,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ b (* 0 (- a (- (pow 1 (+ b (* (* b 1) a))) (* (* 0 1) 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ b 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.020706065000000003
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ b 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.014200171999999999
    },
    "speedup": 1.458155929378884,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow (- a -1) (pow 0 (+ 0 (+ (+ b (* 0 1)) a)))) (* (pow a 0) a)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (+ a 1) (pow 0 (+ a b))) a) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.020823789
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (+ a 1) (pow 0 (+ a b))) a) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.014269945999999999
    },
    "speedup": 1.459275949607658,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (pow (* (* a 1) (* (pow (pow a 1) (/ b b)) (pow -1 b))) 0) a) (pow -1 c))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 a) (pow -1 c))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 3,
      "simplification_time": 0.012957069000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 a) (pow -1 c))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 3,
      "simplification_time": 0.008878285
    },
    "speedup": 1.459411248906743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (- a (pow (pow (/ 1 a) 0) (pow (pow (- 1 (- 0 -1)) (+ 0 0)) a)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (pow 1 (pow (pow 0 0) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.012164608
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (pow 1 (pow (pow 0 0) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.008333632
    },
    "speedup": 1.4597006443289071,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (- a (/ (- (- (+ 1 c) (/ (- 1 c) 1)) (+ (/ 1 1) b)) -1)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17936)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.315293853
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10171)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.9009495790000001
    },
    "speedup": 1.459897294652046,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (- a (* (/ -1 1) (+ (pow (+ (+ a (* -1 -1)) (pow -1 a)) a) (pow -1 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ (+ 1 a) (pow -1 a)) a) (+ a (pow -1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.020647079
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ a (+ 1 (pow -1 a))) a) (+ a (pow -1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.014132044000000002
    },
    "speedup": 1.4610115139749067,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 0 (+ a (/ (- (* -1 (pow (- -1 (pow (* a 1) a)) (- 0 0))) a) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (/ (- -1 a) 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.006436192
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (/ (- -1 a) 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.004398875
    },
    "speedup": 1.4631450086669888,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (* a 0) (- (- (+ a (pow (* (+ 1 a) -1) 1)) b) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(17782)",
      "output_term": "(+ a (+ a (+ 1 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 1.612412147
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10375)",
      "output_term": "(+ (+ a 1) (+ a b))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.099788641
    },
    "speedup": 1.4661109297636399,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ (- a (/ (pow (pow (/ (pow -1 (- 0 a)) (* b 0)) (* 1 a)) -1) c)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (/ (/ 1 (pow (/ (pow -1 (- 0 a)) 0) a)) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.024905241
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a a) (/ (/ 1 (pow (/ (pow -1 (- 0 a)) 0) a)) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.016983686
    },
    "speedup": 1.4664214234766233,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (- (+ a (- (/ -1 (/ (pow (- 1 1) b) (/ -1 1))) c)) 0) d) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (- (/ -1 (* -1 (pow 0 b))) c) (+ a d)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.168730963
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ -1 (/ (pow 0 b) -1)) (+ a (- d c))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.114967076
    },
    "speedup": 1.4676459458706248,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow a (/ (* a (pow (* a (* (pow (/ a a) -1) (pow -1 1))) a)) -1)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow a (* a (* -1 (pow (* a -1) a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.016225753
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (/ (* a (pow (- 0 a) a)) -1)) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.011027926000000002
    },
    "speedup": 1.471333140973198,
    "weight_simple_diff": -1,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (+ (pow (/ a a) b) (+ (* (pow b -1) (* -1 0)) b)))",
    "input_weight_simple": 17,
    "input_weight_complex": 35,
    "input_depth": 6,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ b (pow 1 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.006475161
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ b (pow 1 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.004396957
    },
    "speedup": 1.4726459685641684,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ a a) (pow b -1)) (- (+ (* a (pow (* (- a b) -1) c)) 1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (/ 1 b)) (+ (* a (pow (+ b (* a -1)) c)) 2))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.031967078999999995
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (/ 1 b)) (+ (* a (pow (- b a) c)) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.02170657
    },
    "speedup": 1.4726914017276793,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (/ -1 (/ (pow (+ -1 (+ a (+ (pow a (/ a a)) (+ 1 d)))) e) 1)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17338)",
      "output_term": "(/ -1 (pow (+ a (+ a d)) e))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.291965802
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10127)",
      "output_term": "(/ -1 (/ (pow (+ a (+ a d)) e) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.8766548949999999
    },
    "speedup": 1.473745038519405,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (/ (* (+ (+ -1 (- 1 a)) a) (- -1 (* (pow -1 1) b))) b) a) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(44922)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.673239689
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10721)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.129136552
    },
    "speedup": 1.4818754082809995,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a (- (pow b b) (+ (- b 0) (pow c (+ (+ -1 0) -1))))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow b b) (+ b (pow c -2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.061571638
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow b b) (+ b (pow c -2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.041477121
    },
    "speedup": 1.484472319088878,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 0) (pow a (+ (/ 0 (* a -1)) (- -1 (+ (/ a (/ 1 0)) (- 1 a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 0 0) (pow a (+ a (* -1 (+ (/ a (/ 1 0)) 2)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.100059279
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 0 0) (pow a (- (- a (/ a (/ 1 0))) 2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.06731200799999999
    },
    "speedup": 1.4864996896244724,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow (+ 0 (- (pow (- 1 a) a) a)) (- b (+ 0 b))) c)",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.009037392
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.006064073999999999
    },
    "speedup": 1.4903169057633534,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 1 (/ 0 (pow (pow (* (* 0 1) (+ (/ 0 a) 0)) b) (* 1 0)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.004619611
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.003093292
    },
    "speedup": 1.4934286837453432,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ (- (- a (- (/ (pow (- 1 -1) 0) (pow -1 a)) (- -1 1))) a) -1) 0) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(20764)",
      "output_term": "(+ (* -1 (/ 1 (pow -1 a))) -3)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.746255476
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10520)",
      "output_term": "(- -3 (/ 1 (pow -1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.1683542139999998
    },
    "speedup": 1.4946284740322768,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ a (/ a (/ 1 (/ (+ 1 (pow (+ (- (- a 1) a) (- 1 b)) (- 0 c))) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(23063)",
      "output_term": "(/ a (/ a (/ 1 (/ (+ 1 (pow (* b -1) (- 0 c))) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 1.279581284
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13595)",
      "output_term": "(/ a (/ a (/ 1 (/ (+ 1 (pow (- 0 b) (- 0 c))) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.8557211769999999
    },
    "speedup": 1.4953250175319666,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (+ a b) (* (pow (/ (pow (+ (+ 1 1) 1) a) (* 1 1)) -1) -1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15930)",
      "output_term": "(+ b (/ 1 (pow 3 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.846106441
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11021)",
      "output_term": "(+ b (/ 1 (/ (pow 3 a) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.2342088230000001
    },
    "speedup": 1.49578127023323,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ 1 (* (/ 1 (- a (- (pow b (* c -1)) (- 0 (pow c c))))) a)) (- b c))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (* a (/ 1 (- a (+ (pow b (* c -1)) (pow c c)))))) (- b c))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.035899269
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- c (- b (/ 1 (* a (/ 1 (- (- a (pow b (- 0 c))) (pow c c)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 10,
      "simplification_time": 0.023943317
    },
    "speedup": 1.4993440131958324,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow (* -1 (pow (+ (pow (pow 1 a) (- (pow a -1) 0)) (+ (* 0 -1) a)) c)) a) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (* -1 (pow (+ a (pow (pow 1 a) (/ 1 a))) c)) a) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.007288207999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- 0 (pow (+ a (pow (pow 1 a) (/ 1 a))) c)) a) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.004816235
    },
    "speedup": 1.513258385440079,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (+ 1 a) (- (+ (/ (- (* a 1) (- b 0)) (/ b -1)) 1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (+ a 1) (+ 2 (* a (+ -1 (/ 1 (* b -1)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.054244300999999995
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (+ a 1) (+ (/ (- a b) (/ b -1)) (- 1 a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.035843564
    },
    "speedup": 1.5133623709963662,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 2
  },
  {
    "base_term": "(- 0 (* (* a (/ (* (/ (+ (pow a 0) (* 1 1)) 1) 0) 1)) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002311412
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001524597
    },
    "speedup": 1.5160806429502356,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (+ (pow a (pow (+ 1 (pow (- -1 (* (- 1 a) 0)) (+ b 0))) 1)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (+ 1 (pow -1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.007873202000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (+ 1 (pow -1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.0051917610000000005
    },
    "speedup": 1.51648005368506,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 a) (* b (pow -1 (+ -1 (* (+ (* 1 a) (- 0 d)) (pow 1 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (pow -1 (+ -1 (* (+ a (- 0 d)) (pow 1 b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.029272955
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (pow -1 (+ -1 (* (- a d) (pow 1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.019300098999999998
    },
    "speedup": 1.5167256395938695,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ -1 (* a (pow a (* 0 (* (- 0 a) (* (pow b c) (* 1 a)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.036683770000000004
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.024174809999999998
    },
    "speedup": 1.5174377792421123,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ -1 1) (* (+ 1 1) (pow (+ a (+ (- b a) (+ -1 0))) (+ (- b -1) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(23955)",
      "output_term": "(* (pow (+ -1 b) (+ a (- b -1))) -2)",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.912136989
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10804)",
      "output_term": "(* (pow (+ -1 b) (+ 1 (+ a b))) -2)",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.2595551280000001
    },
    "speedup": 1.5181050408140608,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (pow (pow a a) 0) 1) (/ (* (/ 1 (- a -1)) 1) a))",
    "input_weight_simple": 17,
    "input_weight_complex": 40,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (+ a 1)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.006418211
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (+ a 1)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.004227198999999999
    },
    "speedup": 1.51831295380227,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (+ 0 (+ (+ (+ (- (- (pow 1 1) a) -1) a) a) a)) c) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(44109)",
      "output_term": "(+ (/ (+ (+ a a) 2) c) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.7761250769999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10021)",
      "output_term": "(+ (/ (- a (- -2 a)) c) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 1.163748347
    },
    "speedup": 1.526210612095503,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (pow a (- (/ b b) (pow (* (* (pow 1 0) b) (pow -1 1)) b))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow a (- 1 (pow (* b -1) b))) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.012961355999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow a (- 1 (pow (- 0 b) b))) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.008464757
    },
    "speedup": 1.5312141860658255,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow 0 a) (- (* 1 (+ a (+ (- 1 (/ 0 b)) 1))) -1)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow 0 a) (+ a 3)) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.015942902000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow 0 a) (+ a 3)) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.010406981000000001
    },
    "speedup": 1.5319430293953646,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ (* (/ 0 (* a (pow (* a (- (* a -1) 0)) a))) a) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014064505
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009168024
    },
    "speedup": 1.5340824805868745,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow (- (- (- (+ (pow (/ a a) 1) a) (+ b a)) 0) c) 0) (/ b -1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11163)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.185075995
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10208)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.7723993760000001
    },
    "speedup": 1.534278809412192,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (+ (+ (/ (pow a b) -1) (* (pow b (pow (* b b) 0)) (pow 1 1))) c)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (+ (* (pow a b) -1) (+ b c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.013292742
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ (/ (pow a b) -1) (+ b c))) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.008645931999999999
    },
    "speedup": 1.5374562279694082,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (pow -1 a) 0) (* (* (+ (* b -1) (pow 0 (/ (* 1 0) 1))) a) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 a) (* a (* b (+ (* -1 b) (pow 0 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.063529252
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 a) (* a (* b (- (pow 0 0) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.041186536999999995
    },
    "speedup": 1.5424761737069568,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 0 a) (* (- 0 (pow (+ -1 (+ (* -1 (pow -1 0)) -1)) (pow -1 (pow b b)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003728357
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002416203
    },
    "speedup": 1.543064469334737,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (* (* (/ a (* (* (* -1 (- -1 a)) a) (- 0 c))) a) c) a) (/ a b))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (* a (* c (/ a (* (- -1 a) (* a c)))))) (/ a b))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.833122218
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (* a (* c (/ a (* a (* (- -1 a) c)))))) (/ a b))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.539433363
    },
    "speedup": 1.544439545538454,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (- (* (* 0 -1) a) (+ -1 (- a (+ (pow (* 0 a) -1) (/ a -1))))) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(35956)",
      "output_term": "(* a (+ (/ 1 0) (* a -2)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.580533516
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13725)",
      "output_term": "(* a (+ (pow 0 -1) (- (/ a -1) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.019896552
    },
    "speedup": 1.5496998326944045,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (* (/ (* a 1) -1) (+ (/ 1 (+ (pow -1 (/ (pow a 1) 0)) (- 0 b))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (* a -1) (/ 1 (+ (pow -1 (/ a 0)) (- 0 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.020652522
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (/ a -1) (/ 1 (- (pow -1 (/ a 0)) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.013320609
    },
    "speedup": 1.5504187533768161,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow (pow (pow a (pow (pow 1 (+ -1 (- b 0))) c)) 0) c) -1) (/ (* 1 a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (pow 1 c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.007213927
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow 1 c) -1) (/ a 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.004651301
    },
    "speedup": 1.5509482185736851,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (* (* (+ (- (pow a a) (* 0 a)) 1) -1) (pow (* 0 a) 0)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (+ -1 (* (pow a a) -1))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.009708727
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (- -1 (pow a a)) (pow 0 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.006258099
    },
    "speedup": 1.551385972002041,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow (* (* (+ (pow a (* (+ 0 (pow -1 a)) b)) (+ b 0)) c) a) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (+ b (pow a (* (pow -1 a) b))) (* a c))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.041668735
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (+ b (pow a (* (pow -1 a) b))) (* a c))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.026855667
    },
    "speedup": 1.5515807147891727,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ a 1) 0) (/ a (- (* (* (/ a 0) (/ -1 -1)) (pow (* a -1) a)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a (* (/ a 0) (pow (* a -1) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.009952393
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a (* (/ a 0) (pow (- 0 a) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.006412915
    },
    "speedup": 1.5519296606925244,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a -1) (/ a (- 1 (- (pow 1 (/ (pow (+ c 1) 0) 1)) (/ (pow 1 a) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13642)",
      "output_term": "(/ (* a -1) (/ a (/ (pow 1 a) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 1.97719023
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10203)",
      "output_term": "(/ (- 0 a) (/ a (/ (pow 1 a) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 1.271773393
    },
    "speedup": 1.5546717999312634,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (* (+ 0 0) (- (- (- 1 a) (* (+ a a) -1)) 0)) (pow -1 a)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(37157)",
      "output_term": "(pow (pow 0 (pow -1 a)) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 2.202514802
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11342)",
      "output_term": "(pow (pow 0 (pow -1 a)) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.4163179430000001
    },
    "speedup": 1.5550991307323994,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (/ 1 a) (* (+ 1 (+ (* (- (+ 1 1) 1) (pow -1 b)) (/ b a))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ 1 a) (+ 1 (+ (pow -1 b) (/ b a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.014555721999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ 1 a) (+ (pow -1 b) (+ 1 (/ b a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.009353867
    },
    "speedup": 1.5561181274012126,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a 0) (- (* b (/ -1 (+ -1 -1))) (- (/ 0 (* a (- 1 a))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(10148)",
      "output_term": "(* b -0.5)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 2.10479459
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10014)",
      "output_term": "(- 0 (* b 0.5))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 1.352166554
    },
    "speedup": 1.5566089722997245,
    "weight_simple_diff": -2,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(/ -1 (/ 1 (pow (- 0 (* 1 a)) (pow b (* 1 (/ (/ (* 1 b) b) (+ 1 0)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ 1 (pow (- 0 a) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.0069754990000000005
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ 1 (pow (- 0 a) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.004481079
    },
    "speedup": 1.5566561089416189,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow a (pow (* (/ (pow (+ (pow (- 0 -1) b) 0) (- -1 -1)) 1) 0) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.003027526
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.001941903
    },
    "speedup": 1.5590510957550403,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (- 1 a) (* b (- 1 (* (+ 0 (- (* a c) c)) 0)))) (/ 1 -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (- 1 a) b) -1)",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.015634188
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- 1 a) b) -1)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.010025495
    },
    "speedup": 1.5594430000713182,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (* a (/ a (+ (* (- a a) (- 1 (- -1 0))) (* b (+ 1 b))))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (* a (/ a (* b (+ 1 b))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.01451874
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (* a (/ a (* b (+ 1 b))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.009308886
    },
    "speedup": 1.5596646043361149,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (+ (+ (* (* a 1) b) (/ -1 (/ a (- (/ (pow 1 a) b) a)))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ (/ -1 (/ a (- (/ (pow 1 a) b) a))) (+ -1 (* a b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.017662771
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ -1 (+ (* a b) (/ -1 (/ a (- (/ (pow 1 a) b) a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.01132014
    },
    "speedup": 1.5602961624149527,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ (- a -1) (* 0 (+ (+ b 0) (- a (pow 0 (* c a)))))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ a 1) 0) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.033004798999999994
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ a 1) 0) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.021109855999999996
    },
    "speedup": 1.563478168681018,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 0 (* 1 (pow (/ (* a a) (+ -1 (pow (/ -1 a) 1))) a))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- 0 (pow (/ (* a a) (+ -1 (/ -1 a))) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.015263286
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (/ (* a a) (+ -1 (/ -1 a))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.009749022
    },
    "speedup": 1.5656222747266342,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- -1 a) (pow a (/ (+ (pow (* (+ (* a b) a) (* 1 c)) b) b) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (/ (+ b (pow (* (* a (+ b 1)) c) b)) a)) (- -1 a))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.07893139099999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (- -1 a) (pow a (/ (+ b (pow (* a (* c (+ b 1))) b)) a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.05037937199999999
    },
    "speedup": 1.566740272189181,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (- (- (- (* 0 a) -1) (pow (/ (pow (+ a a) 0) 1) (- 0 a))) a) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (- 1 (pow 1 (- 0 a))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.06254225199999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (- (- 1 a) (pow 1 (- 0 a))) 1))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.039916378
    },
    "speedup": 1.5668318403037467,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ (* 0 (- (* -1 (+ (/ (* (+ 0 1) 0) 1) a)) b)) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008931267000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005690170999999999
    },
    "speedup": 1.5695955358810838,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a b) (+ (/ a (- (pow (+ a (* (pow 1 b) -1)) 0) (- (pow 0 a) 1))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a b) (+ 1 (/ a (+ (* -1 (pow 0 a)) 2))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.018743175999999997
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a b) (+ 1 (/ a (- 1 (- (pow 0 a) 1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.011939426
    },
    "speedup": 1.5698557032808778,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (- a (+ (* a (+ (- a (/ (+ 1 1) 0)) -1)) 1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 25,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(35508)",
      "output_term": "(* a (+ (* a -1) (+ 2 (/ 2 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.53352709
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10199)",
      "output_term": "(* a (+ 2 (- (/ 2 0) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.975178036
    },
    "speedup": 1.5725611461577258,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (* a a) (+ (- (+ (- b -1) c) 1) -1)) (- (pow 0 b) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17121)",
      "output_term": "(/ (+ (* a a) (+ b (+ -1 c))) (+ 1 (pow 0 b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 1.14137015
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10704)",
      "output_term": "(/ (+ (* a a) (+ -1 (+ b c))) (+ 1 (pow 0 b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.725159901
    },
    "speedup": 1.573956514178519,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ 0 (+ a (- (/ -1 (- c (* a (/ 1 -1)))) a))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(36238)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 3.5891928870000003
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12633)",
      "output_term": "(/ a (- 0 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 2.2671278
    },
    "speedup": 1.5831453731898133,
    "weight_simple_diff": -3,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(- (+ -1 (+ (* (/ 0 (- (* (/ (/ a 1) a) -1) (/ a 1))) 1) c)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.032882229
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.020701587
    },
    "speedup": 1.5883917015637496,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (/ a (pow (pow (- -1 a) (- (- (* 1 a) a) 0)) c))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (pow 1 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.01457958
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (pow 1 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.009166574
    },
    "speedup": 1.5905157150315918,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 (- -1 (- (/ 1 0) (- (- a (* (+ a -1) a)) (- a -1))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12149)",
      "output_term": "(+ a (+ -3 (* -1 (+ (/ 1 0) (* a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.774459046
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "NodeLimit(10169)",
      "output_term": "(- a (+ (/ 1 0) (+ (* a a) 3)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.48553017099999995
    },
    "speedup": 1.5950791366990047,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ -1 (pow a (pow (+ -1 (* (+ (- (/ (pow 1 1) -1) (+ 0 a)) (* 1 0)) b)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow a (+ -1 (* b (- -1 a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.044459214999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow a (+ -1 (* (- -1 a) b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.027828288
    },
    "speedup": 1.5976266667931565,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ a (- 0 (/ (pow (- -1 -1) (* (- (+ 0 b) 1) (pow b a))) (* a 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a (- 0 (/ (pow 0 (* (+ -1 b) (pow b a))) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.027173777
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- a (/ (pow 0 (* (- b 1) (pow b a))) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.016988160000000002
    },
    "speedup": 1.5995715251092524,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* -1 (pow (+ 1 (* (pow (- (+ (- (pow 0 0) a) (+ a a)) a) a) (pow 0 0))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(28235)",
      "output_term": "(* -1 (pow (+ 1 (* (pow 0 0) (pow (pow 0 0) a))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 1.876362313
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10586)",
      "output_term": "(- 0 (pow (+ 1 (* (pow 0 0) (pow (pow 0 0) a))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 1.172410361
    },
    "speedup": 1.6004313638098255,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (+ -1 (/ (* -1 a) (+ 1 (/ 1 (- 1 (+ -1 1)))))) -1) (pow -1 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11136)",
      "output_term": "(* a 0.5)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 2.374431699
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10818)",
      "output_term": "(/ (/ (- 0 a) 2) -1)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.480185703
    },
    "speedup": 1.60414446254113,
    "weight_simple_diff": -4,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(+ 1 (/ (pow (* 1 (* (pow (pow (/ (* a 1) -1) (+ 1 a)) (/ a 0)) 1)) b) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (pow (pow (pow (* a -1) (+ 1 a)) (/ a 0)) b) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.010973711
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (pow (pow (pow (/ a -1) (+ 1 a)) (/ a 0)) b) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.006820154
    },
    "speedup": 1.609012201190765,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (pow a a) (pow (- a b) (- (- 1 (+ (+ b b) -1)) (- 0 a)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (pow a a) (pow (- a b) (+ a (+ (* b -2) 2)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.15827882499999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a a) (- (pow (- a b) (+ a (- 2 (+ b b)))) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.098298717
    },
    "speedup": 1.6101820026806657,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (* a a) (pow (* a 0) (/ (+ (* b b) (+ 1 a)) (- c 0)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (* a (pow 0 (/ (+ (* b b) (+ a 1)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.040111240000000006
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (* a (pow 0 (/ (+ (* b b) (+ a 1)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.02488992
    },
    "speedup": 1.6115455573983366,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow (+ 0 (- (- (pow (- a -1) (pow (- 1 0) 0)) (- (pow -1 a) -1)) -1)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20085)",
      "output_term": "(* -1 (pow (+ (+ a 1) (* -1 (pow -1 a))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 2.099693134
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10259)",
      "output_term": "(- 0 (pow (+ a (- 1 (pow -1 a))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 1.3026035729999998
    },
    "speedup": 1.6119202937270003,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (/ (- 0 (+ (- b a) (* (pow (- b 0) a) (/ 1 a)))) 0) (* -1 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (/ (+ a (* -1 (+ b (* (pow b a) (/ 1 a))))) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.073218857
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (/ (- (- a (* (pow b a) (/ 1 a))) b) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.045408712000000004
    },
    "speedup": 1.6124407360420174,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a (- (+ (pow -1 a) a) (* (+ (- (* (* 1 a) b) b) (pow c c)) 1))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (+ (pow c c) (* a (+ b -2)))) (+ (pow -1 a) (+ b b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.4995420659999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a (- a (* b (- a 2)))) (- (pow c c) (pow -1 a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.9276198010000001
    },
    "speedup": 1.616548142227507,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (+ (- (- -1 1) (pow (/ (+ a -1) (/ 0 b)) (- a a))) a)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ -3 (+ a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.068308812
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -3 (+ b (+ a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.042234593
    },
    "speedup": 1.6173664086214823,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a a) (/ (- -1 (- (+ -1 a) (pow (* (pow 0 b) c) c))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20489)",
      "output_term": "(pow (+ a a) (/ (+ (pow (* (pow 0 b) c) c) (* -1 a)) 0))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 1.771786386
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12159)",
      "output_term": "(pow (+ a a) (/ (- (pow (* (pow 0 b) c) c) a) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.094214989
    },
    "speedup": 1.6192305934496756,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- 1 (+ a (/ 0 (/ (- (* (/ b 1) 0) a) a)))) (/ 1 c)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (- 1 a) (/ 1 c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.037221031
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (- 1 a) (/ 1 c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.022903993
    },
    "speedup": 1.6250891711327367,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (pow (+ -1 (/ 0 (- -1 (- a (+ (/ (* a -1) b) a))))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(48681)",
      "output_term": "-2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.735267453
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12575)",
      "output_term": "-2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.6825573180000002
    },
    "speedup": 1.6256607865527704,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (+ -1 (- 0 (* (- (pow (* a 0) (- a a)) (- a a)) b)))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10708)",
      "output_term": "(+ a (- 0 (* (pow 0 0) b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 1.749535249
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11562)",
      "output_term": "(- a (* (pow 0 0) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.075922496
    },
    "speedup": 1.6260792533888984,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (- (* (- (pow (- 0 a) (pow 0 (/ a (pow 0 c)))) 1) (+ (+ -1 1) -1)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* -1 (+ c (+ -1 (pow (- 0 a) (pow 0 (/ a (pow 0 c))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.028676384
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- 1 (+ c (pow (- 0 a) (pow 0 (/ a (pow 0 c)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.017632362999999998
    },
    "speedup": 1.62634945752875,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* a (+ (+ (/ a (pow a -1)) 1) (- (- (pow a (pow a 1)) b) 0))) (/ 0 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (+ (/ a (/ 1 a)) (- (pow a a) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.138108208
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (/ a (/ 1 a)) (+ (pow a a) (- 1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.084711937
    },
    "speedup": 1.6303275888969462,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ a (/ a (+ (+ (+ 0 (* (+ a 0) 1)) (* (/ b c) -1)) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (+ a (* (/ b c) -1))) (+ a a))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.034499213
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (/ a (- a (/ b c)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.021143840000000004
    },
    "speedup": 1.6316436844016977,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (pow (pow (+ a a) b) (pow (pow 0 c) (- (pow a 1) 0))))",
    "input_weight_simple": 17,
    "input_weight_complex": 41,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (pow (+ a a) b) (pow (pow 0 c) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 5,
      "simplification_time": 0.007086006000000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (pow (+ a a) b) (pow (pow 0 c) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 5,
      "simplification_time": 0.0043369310000000005
    },
    "speedup": 1.6338756600001245,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (pow (- (pow a -1) (- a (/ 0 (* (- 0 a) a)))) a) -1) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- (/ 1 a) a) a) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.014863458999999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- (/ 1 a) a) a) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.009094429000000001
    },
    "speedup": 1.6343476869191016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (+ (/ -1 -1) (+ 1 (pow (* (- (+ (/ 1 -1) a) (* 0 0)) (- 1 -1)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (* -1 (pow (+ -2 (* a 2)) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.014205503
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ 1 (pow (* (+ -1 a) 2) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.008682046
    },
    "speedup": 1.6361930125686963,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 0 (/ -1 (pow 0 (* a (* (+ (* (+ 1 -1) a) (+ 1 a)) (* a 0)))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018611938
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011360366
    },
    "speedup": 1.638322039976529,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (- (+ (* a 0) (/ (/ (pow a 0) (pow a b)) (pow a 0))) -1) a) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (+ (/ 1 (pow a b)) 1) a) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.046318285
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ (/ 1 (pow a b)) 1) (- 1 a)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.028222055
    },
    "speedup": 1.641208799288358,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (+ (/ (+ (+ a (+ (- a (* -1 a)) (/ b 1))) -1) (* -1 c)) 1) c) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10251)",
      "output_term": "(/ (- (+ 1 (/ (+ b (+ -1 (* a 3))) (* -1 c))) c) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.986147275
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 (- c (/ (+ (/ b 1) (+ -1 (* a 3))) (- 0 c)))) d)",
      "output_weight_simple": 17,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.600515955
    },
    "speedup": 1.642166651508868,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 a) (- (+ a (- (- a (- (- (* b 0) a) 1)) (- (* a -1) c))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 a) (- (+ 1 (+ c (* a 4))) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 1.425774026
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10413)",
      "output_term": "(- (pow 0 a) (+ 1 (+ (- c b) (* a 4))))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.867012959
    },
    "speedup": 1.6444667997171194,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (+ a (+ b (pow (pow b (- (* a (+ (* c -1) d)) 1)) d))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow (pow b (+ -1 (* a (+ (* c -1) d)))) d) (+ a b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.028752822000000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ a (+ b (pow (pow b (- -1 (* a (- c d)))) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.017423589
    },
    "speedup": 1.650223843089963,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- 1 (- (/ a a) (- (/ (pow a 1) (- (/ a c) -1)) (pow (* d b) d)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(21870)",
      "output_term": "(- -1 (- (/ a (+ 1 (/ a c))) (pow (* d b) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 2.278304735
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10706)",
      "output_term": "(- (pow (* d b) d) (+ 1 (/ a (+ 1 (/ a c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 1.375134202
    },
    "speedup": 1.6567871933418756,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (* (* (/ b -1) (pow -1 (/ (* a 1) (* b c)))) 1)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (* -1 (* b (pow -1 (/ a (* b c)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.017408978
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (* (/ b -1) (pow -1 (/ a (* b c))))) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.010494686999999999
    },
    "speedup": 1.658837276423775,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 0 (/ 1 (/ (- -1 (+ 0 (* (+ -1 (+ 0 (- 0 -1))) 0))) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 28,
    "input_depth": 10,
    "Baseline": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000353573
    },
    "Extended": {
      "iterations": 1,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000212844
    },
    "speedup": 1.6611837777903065,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a (- (- (/ a (* (+ (- (* a 0) a) (/ 1 -1)) (/ 1 1))) 0) 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 0 a) (/ a (+ (- 0 a) -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.05255786900000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (/ a (- -1 a))) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.03163864
    },
    "speedup": 1.661192421671728,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (/ (* -1 (/ a (* 0 0))) (+ (pow 0 b) (- (- c -1) a))) 0) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* -1 (/ a 0)) (+ (pow 0 b) (- (+ c 1) a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.036693679
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (/ a 0)) (+ (pow 0 b) (- (+ c 1) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.022051322
    },
    "speedup": 1.6640126610096209,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ a (+ -1 (- (* (* b 1) (+ (- 1 (pow a 0)) c)) -1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(32307)",
      "output_term": "(* -1 (* b c))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.853395366
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(14738)",
      "output_term": "(- 0 (* b c))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.113346764
    },
    "speedup": 1.66470629450718,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow 0 (- (* -1 (+ a (pow -1 (* (* a a) (pow 1 1))))) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 (+ (* -1 (pow -1 (* a a))) (* a -2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.026485939
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 (- 0 (+ a (+ a (pow -1 (* a a)))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 8,
      "simplification_time": 0.015900279
    },
    "speedup": 1.6657530977915544,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (+ (+ 0 (/ (- (/ a (pow (- a (* a 1)) a)) a) 1)) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (/ a (pow 0 a)) a) -2)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.028398978
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- (/ a (pow 0 a)) a) 1) -2)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.017040220000000002
    },
    "speedup": 1.6665851731961205,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ -1 1) (* (* (pow 1 -1) (* (* (+ (pow 0 1) 1) (- 1 a)) (- -1 1))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a (+ -2 (* a 2))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.031103974
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* (- 1 a) (* a -2)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.018618403
    },
    "speedup": 1.6706037569387666,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ a (* (- a (/ 0 (+ (pow a (/ (pow d (+ 1 -1)) (pow 1 -1))) (* a 0)))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a c))",
      "output_weight_simple": 4,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.019368861
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a c))",
      "output_weight_simple": 4,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.011587956
    },
    "speedup": 1.6714648381474697,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 1) (/ (+ (+ 0 a) (+ (* (* (+ a a) 1) a) (/ c c))) (- -1 e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (+ (* (* a a) 2) (+ 1 a)) (- -1 e)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.132613293
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (+ a (+ 1 (* a (+ a a)))) (- -1 e)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.079066493
    },
    "speedup": 1.677237575214067,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* -1 (+ (- (+ -1 (pow (- (* (- 1 -1) a) a) (pow a -1))) a) 0)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(41148)",
      "output_term": "(* (- (+ -1 (pow a (/ 1 a))) a) (* -1 b))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 2.080367791
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10066)",
      "output_term": "(* (+ 1 (- a (pow a (/ 1 a)))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 1.23940161
    },
    "speedup": 1.6785259710934215,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* (- a 1) (+ (- (- (- (/ -1 1) 0) (/ 0 a)) (/ -1 a)) 1)) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(55312)",
      "output_term": "(+ (/ 1 a) -2)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 2.642619615
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10879)",
      "output_term": "(+ -1 (* (- a 1) (/ -1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.57283346
    },
    "speedup": 1.6801649266795227,
    "weight_simple_diff": -2,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ -1 (- 1 (+ (+ a (+ a -1)) (pow (* a (+ (pow a 1) -1)) (/ b c))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15317)",
      "output_term": "(/ (+ 1 (* -1 (+ (pow (* a (+ -1 a)) (/ b c)) (+ a a)))) 0)",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 1.466577164
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10253)",
      "output_term": "(/ (+ 1 (- (* a -2) (pow (- (pow a 2) a) (/ b c)))) 0)",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.8715155379999999
    },
    "speedup": 1.6827894627852293,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (+ (pow a 1) (pow (+ (pow (* (* (pow 1 1) b) b) (* -1 0)) 1) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011971599
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0071113850000000004
    },
    "speedup": 1.6834412705823125,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (+ (pow (- 0 0) (/ (+ (- (* a b) -1) (* a b)) (- a b))) 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (/ (+ 1 (* a (+ b b))) (- a b))) (+ a -1))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.07127011
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (pow 0 (/ (+ 1 (* a (+ b b))) (- a b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.042247505000000005
    },
    "speedup": 1.6869661297158256,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (- a (* (- (- (* a a) 0) 0) (pow (- a (* (pow a 1) 0)) (/ -1 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(21473)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 4.868731674999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10941)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.881940145
    },
    "speedup": 1.689393752138457,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (pow -1 0) (pow (* a a) (* (* (+ (* 1 0) 1) (* -1 -1)) (+ a -1)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (pow (* a a) (+ -1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.006923892
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (pow (* a a) (+ -1 a))) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.004081939
    },
    "speedup": 1.696226229740327,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ 1 (+ 0 (pow (* (- (pow (* 1 (pow -1 0)) (* a 0)) (pow 0 0)) 1) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ 1 (/ 1 (- 1 (pow 0 0)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.009977375
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ 1 (/ 1 (- 1 (pow 0 0)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.005876882
    },
    "speedup": 1.6977327433152478,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (* a 0) (- a (- b (/ 1 (- a (/ (+ a 0) 1)))))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.023273374
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.013678943999999998
    },
    "speedup": 1.7014013654855231,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (* (+ (- (pow (/ (/ (- 1 -1) 1) a) b) 1) a) -1) 0) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.025866744
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.015130512000000002
    },
    "speedup": 1.7095749304451824,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- (+ a 1) (pow (* 0 (+ b a)) (/ -1 (/ a (- (- -1 a) 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a 1) (pow 0 (/ -1 (/ a (+ -1 (- -1 a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.020321627000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (pow 0 (/ -1 (/ a (- -1 (+ a 1))))) 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.011858170000000001
    },
    "speedup": 1.7137237027298478,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (* -1 (pow (- a (* (+ b c) (/ (* a (/ 1 a)) (- 0 c)))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- a (* (+ b c) (/ 1 (- 0 c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.046820261
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- a (* (+ b c) (/ 1 (- 0 c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.027300965
    },
    "speedup": 1.71496725482048,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (* (+ (+ (/ 0 (/ (+ (/ 0 (- 0 1)) a) (* -1 b))) a) (/ 0 a)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.0192899
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.011235931
    },
    "speedup": 1.7168047756790248,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ -1 (+ (- (/ (* 1 (* (* (- a a) c) (- -1 0))) b) -1) e)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(21757)",
      "output_term": "e",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 4.039350905
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10103)",
      "output_term": "e",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.343043717
    },
    "speedup": 1.7239759018119933,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (pow b (* (* c 0) (pow (- (pow (* c d) d) 0) -1))) d))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.006975301000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.004042215
    },
    "speedup": 1.725613555934061,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* -1 (+ 0 (- 1 (+ (* (* -1 (pow 1 a)) (+ (+ -1 b) a)) b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ b (+ -1 (* -1 (* (+ -1 (+ a b)) (pow 1 a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.43264049399999993
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ (+ -1 b) (* (pow 1 a) (- 1 (+ a b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.250610793
    },
    "speedup": 1.7263442201389942,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (/ 1 (+ (pow a (- (pow (+ (- (* 0 0) 0) a) (+ 1 a)) 0)) b)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ 1 (+ (pow a (pow a (+ 1 a))) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.005963657
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ 1 (+ (pow a (pow a (+ 1 a))) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.0034522579999999997
    },
    "speedup": 1.7274656181548425,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (pow (* a b) (pow (+ 0 (* (* b d) (* 0 b))) (- (- 1 -1) 0))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 1 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.018286405
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 1 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.010576088
    },
    "speedup": 1.729032984596951,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ (pow (* (pow (+ (- (* (/ -1 -1) 1) (- -1 a)) (+ -1 a)) 0) 1) 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(22377)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.597498477
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10336)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.497541738
    },
    "speedup": 1.7345082351220582,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (/ (- a (* (- 0 a) (- 1 (- a (- b -1))))) -1) (/ a (pow b 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10313)",
      "output_term": "(/ a (* a (+ a (+ (* b -1) -2))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.774313118
    },
    "Extended": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (/ (* a (+ b (- 3 a))) -1) (/ a 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.445857709
    },
    "speedup": 1.7366821350620631,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow -1 (/ (pow (- a (pow (+ b (* (+ -1 1) b)) (pow 1 b))) -1) (- 0 0))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow -1 (/ (/ 1 (- a (pow b (pow 1 b)))) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.009747654000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow -1 (/ (/ 1 (- a (pow b (pow 1 b)))) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.005611049
    },
    "speedup": 1.737224893241888,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* (+ 1 (/ (/ a 0) (* (/ a a) b))) (+ 1 -1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006973366999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004003912
    },
    "speedup": 1.7416384276177896,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 0 0) (* 1 (- 0 (/ (* (+ 1 0) a) (* (pow a a) (pow a 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- 0 (/ a (pow a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.012580278
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- 0 (/ a (pow a a))))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.007210936000000001
    },
    "speedup": 1.7446109631260072,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ -1 (* (+ (/ (pow a 0) (pow (* (/ b b) 0) (- c a))) -1) 1)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ -1 (+ -1 (/ 1 (pow 0 (- c a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.008137585999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ -1 (+ -1 (/ 1 (pow 0 (- c a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.00466071
    },
    "speedup": 1.7459970691160784,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 a) (/ a (pow (- (+ (+ (+ 1 (+ 1 0)) 0) (* 1 b)) 1) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (/ a (pow (+ 1 b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.013747304000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (/ a (pow (+ 1 b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.007871871
    },
    "speedup": 1.74638329312053,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ (/ (pow 0 a) a) b) (- -1 a)) (/ (* 1 a) 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 38,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (/ (pow 0 a) a) b) (+ a 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.048330049
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (/ (pow 0 a) a) b) (+ 1 (/ a 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.027657202
    },
    "speedup": 1.747467043123162,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 (* (/ (/ a (+ -1 (pow (pow a (+ b -1)) 0))) 1) (/ a a))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ a 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.015356531
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (/ a 0) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.008764787999999999
    },
    "speedup": 1.7520710141534515,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ a 0) (+ a (pow (- a (pow (/ (/ (* 1 b) b) (* b 1)) 0)) (- 1 c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(32316)",
      "output_term": "(* -1 (pow (+ a -1) (- 1 c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 2.664991751
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11168)",
      "output_term": "(- 0 (pow (- a 1) (- 1 c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.520868022
    },
    "speedup": 1.752283375315784,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 1 (/ a a)) (+ (* 1 (+ (* (+ 1 (- -1 (* a 0))) (+ 0 0)) 0)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0036274470000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002069657
    },
    "speedup": 1.7526802750407438,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- a (/ (/ (- 1 (* (* (pow (pow a -1) 1) 0) (+ a 0))) -1) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010533339
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006007966
    },
    "speedup": 1.7532287965677567,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ 1 a) (* 0 (+ (pow 0 (+ (+ (/ -1 a) 0) -1)) (- (/ a b) -1)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.021296915
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.012132602000000001
    },
    "speedup": 1.7553460502536882,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ (- 1 (+ 1 (- (* (+ (- (pow 0 a) 0) (/ b 0)) (* 0 b)) -1))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016008744
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009110512000000001
    },
    "speedup": 1.7571728131196136,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (* (pow a 0) (+ (* (pow -1 a) (pow (* (+ b b) 0) (/ b a))) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011141437999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006334049
    },
    "speedup": 1.7589756568034127,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ (pow (- a a) (+ (pow (* (+ (- b 0) a) (* -1 b)) (* -1 a)) -1)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (+ -1 (pow (* -1 (* b (+ a b))) (* a -1)))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.030775359000000002
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (+ -1 (pow (* b (- (* a -1) b)) (* a -1)))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.017452673000000002
    },
    "speedup": 1.7633607757390515,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (- a 1) (pow (+ (/ 0 0) a) (pow (+ (+ 0 a) (* 1 c)) (+ b a)))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (+ (pow (+ a (/ 0 0)) (pow (+ a c) (+ a b))) -1)) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.05135703
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow (+ a (/ 0 0)) (pow (+ a c) (+ a b))) (- a 1)) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.029097443
    },
    "speedup": 1.7650014814016475,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (/ a a) (pow 0 (+ (* 1 b) (pow (+ (pow (* b c) b) (- a c)) (* 1 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.014570296
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.008253227
    },
    "speedup": 1.765405943638773,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (* 0 (pow (* (- -1 (pow a (+ (pow 1 b) (+ -1 b)))) 1) (/ a 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010865864999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006136455000000001
    },
    "speedup": 1.7707071916929233,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (/ 0 0) -1) (- (pow (/ (/ a (* 1 (* 0 0))) (+ (+ -1 b) 0)) -1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 (/ 0 0)) (/ 1 (/ (/ a 0) (+ -1 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 5,
      "simplification_time": 0.010261755000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (/ 0 0)) (/ (/ a 0) (+ -1 b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 33,
      "output_depth": 4,
      "simplification_time": 0.005793375
    },
    "speedup": 1.7712913457181696,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow (* (- -1 (* 1 a)) 1) a) (pow (/ (- a a) (* (/ 1 (/ -1 b)) b)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010206538
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005760199
    },
    "speedup": 1.771907185845489,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a 0) (* (+ b (/ (+ (/ (- (+ 0 c) b) c) (pow -1 c)) 1)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- c b) c) (+ a (+ b (pow -1 c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.177261386
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ a (/ (+ (/ (- c b) c) (pow -1 c)) 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.100014455
    },
    "speedup": 1.772357665699423,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(* -1 (* 1 (+ 0 (/ a (pow (/ 1 1) (- (* (* -1 0) a) (pow 1 b)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ a (pow 1 (- 0 (pow 1 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.015321435999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (pow 1 (- 0 (pow 1 b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.008619452
    },
    "speedup": 1.7775417741174264,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (/ -1 a) (* (* (+ (* (pow (* -1 b) 0) (/ c 0)) (/ -1 0)) 1) d)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 a) (* (+ (/ c 0) (/ -1 0)) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 5,
      "simplification_time": 0.016149353
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 a) (* (+ (/ c 0) (/ -1 0)) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 5,
      "simplification_time": 0.009084673
    },
    "speedup": 1.7776482433655016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 (* a (pow a (pow -1 (+ (+ 0 (pow (+ a a) 0)) (/ 0 b)))))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.017981755
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.01011021
    },
    "speedup": 1.7785738377343299,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 0 0) (/ 0 (pow (+ -1 (pow (* (+ (/ 1 0) -1) (* 1 a)) (+ b 1))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014957577
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008407028
    },
    "speedup": 1.779175351860372,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (+ (/ (/ a -1) 0) (- (* a (* (pow (+ b -1) c) (* b -1))) b)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10061)",
      "output_term": "(/ a (/ (+ (/ (* a -1) 0) (- (* (pow (+ -1 b) c) (* a (* -1 b))) b)) a))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.9649295920000001
    },
    "Extended": {
      "iterations": 19,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (+ (/ (/ a -1) 0) (* b (- -1 (* a (pow (+ -1 b) c))))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.54040411
    },
    "speedup": 1.7855704169237352,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ a (* (+ (- (* (* b (- (+ 0 a) a)) (pow d -1)) 1) -1) a)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (* a -2)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.06232270499999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (* a -2)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.034780709
    },
    "speedup": 1.7918756342776103,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ (/ 1 (- a (* (* b 1) (* (/ 1 (* b 1)) (* -1 -1))))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (/ 1 (+ a -1)) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.010063983
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (/ 1 (- a 1)) 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.005615336
    },
    "speedup": 1.7922316669919662,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (- 0 (- (/ 0 a) a)) (pow (+ (pow (+ (pow a a) 1) a) (+ -1 -1)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (+ (pow (+ 1 (pow a a)) a) -2) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.013003415
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (+ (pow (+ 1 (pow a a)) a) -2) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.007249444999999999
    },
    "speedup": 1.7937117944890957,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- -1 a) (* (* a 1) (+ (* (pow (- (+ 0 0) b) 0) 0) (+ (+ b b) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (* a (+ b (+ 1 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.025585024
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (* a (+ 1 (+ b b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.014249518
    },
    "speedup": 1.79550101273601,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (- (pow b (/ a 1)) (+ (/ 1 (* a (- (pow 1 d) a))) a)) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(24924)",
      "output_term": "(+ (pow b a) (* -1 (+ d (/ 1 (* a (- (pow 1 d) a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 2.3895329500000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10933)",
      "output_term": "(- (pow b (/ a 1)) (+ d (/ 1 (* a (- (pow 1 d) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.329831199
    },
    "speedup": 1.7968693709373564,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ b (pow (* (pow a (/ 0 1)) b) (+ (pow (/ 1 (+ b a)) d) (pow 1 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ b (pow b (+ (pow (/ 1 (+ a b)) d) (pow 1 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.012113577
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ b (pow b (+ (pow (/ 1 (+ a b)) d) (pow 1 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.006737097
    },
    "speedup": 1.7980410553685067,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a 0) (/ (/ (+ (+ (pow (pow (- a 1) b) (/ 0 1)) b) a) 0) (/ -1 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (+ 1 b)) 0) (/ -1 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.011889970000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (+ b 1)) 0) (/ -1 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.006609589
    },
    "speedup": 1.7988970267288937,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (pow (- 1 (- (- (/ (- (* 1 0) 1) a) -1) (+ (/ 0 a) -1))) 1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12268)",
      "output_term": "(/ a (+ (/ 1 a) -2))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 2.87947938
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11882)",
      "output_term": "(/ a (- -2 (/ -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.600529814
    },
    "speedup": 1.799078876764991,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 0 (/ 0 (* (pow a (- a (+ (/ (pow a a) 0) (* -1 0)))) 1))) (- a -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a 1))",
      "output_weight_simple": 5,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.012141132
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.006744694
    },
    "speedup": 1.8001012351338699,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow (+ a -1) -1) (pow a (+ -1 (- (/ 0 1) (pow (pow 0 -1) a)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (+ a -1)) (pow a (+ -1 (- 0 (pow (pow 0 -1) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.009841483
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (+ a -1)) (pow a (- -1 (pow (pow 0 -1) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.005463012999999999
    },
    "speedup": 1.8014753030973936,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ 0 (* (pow 0 (pow (/ 0 0) (+ (* (/ a 1) b) (* 1 b)))) (- 0 a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (pow 0 (pow (/ 0 0) (+ b (* a b)))) (- 0 a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.037915906
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (pow 0 (pow (/ 0 0) (+ b (* b (/ a 1)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.021017175000000003
    },
    "speedup": 1.804043883157465,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (+ a 0) (* 1 -1)) (pow (+ a -1) (+ 1 (* (- (pow 1 1) -1) (pow b -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a -1) (pow (+ a -1) (+ 1 (* 2 (/ 1 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.019695729000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a 1) (pow (- a 1) (+ 1 (/ 2 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.010880842
    },
    "speedup": 1.8101291241982929,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- (pow (pow -1 (* (pow (- (pow (* 1 a) a) (* b b)) c) 0)) 0) 0) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.00942894
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ b 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.00520851
    },
    "speedup": 1.8102950747910629,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ a (- (pow -1 (pow 1 (- (pow (/ b (* 0 a)) (- b a)) a))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(29046)",
      "output_term": "(pow -1 (pow 1 (- (pow (/ b 0) (- b a)) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 2.3226582049999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10145)",
      "output_term": "(pow -1 (pow 1 (- (pow (/ b 0) (- b a)) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.282446612
    },
    "speedup": 1.8111149292817499,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (+ a a) (- 1 (- (+ (* b (pow -1 (+ b 0))) 1) (- c (/ 1 c))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(22827)",
      "output_term": "(+ (- c (/ 1 c)) (+ (* a -2) (* -1 (* b (pow -1 b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.273162195
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11429)",
      "output_term": "(+ (- (- c (* b (pow -1 b))) (/ 1 c)) (* a -2))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.699330813
    },
    "speedup": 1.820543541529894,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ (* a 0) (- (+ 1 (- a (+ (* a a) a))) b)) b) (/ 0 b))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(25797)",
      "output_term": "(/ (- 0 b) 0)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.351967285
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10182)",
      "output_term": "(/ (- 0 b) 0)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.742230755
    },
    "speedup": 1.821491868792206,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ (- a a) (- (- (* 1 (- (pow (- 1 a) -1) (- 0 0))) a) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012390628
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0067937349999999995
    },
    "speedup": 1.8238315153593718,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (/ (* 0 1) -1)) (pow -1 (* b (* (* (/ (/ -1 -1) b) -1) (/ b 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(24431)",
      "output_term": "(pow -1 (* -1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 4.137987546
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11780)",
      "output_term": "(pow -1 (- 0 (/ b 1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 2.258875616
    },
    "speedup": 1.8318793282330068,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ 0 (+ a (/ (* a 0) (pow (* b -1) (* (- c 0) 1))))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011023594000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006017208
    },
    "speedup": 1.8320114578056803,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (pow (pow (* (* (pow (* (* a 0) 1) -1) (/ 0 b)) -1) b) a) d) (* c 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (pow (pow 0 b) a) d) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.027342759
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow 0 b) a) (- c d))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.014879776999999999
    },
    "speedup": 1.8375785470440857,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ a (+ (- 1 (* (/ 1 (+ (- -1 (* -1 -1)) (* a a))) a)) 0)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- 1 (* a (/ 1 (+ -2 (* a a))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 7,
      "simplification_time": 0.034501662
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- 1 (* a (/ 1 (+ -2 (* a a))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 7,
      "simplification_time": 0.01874275
    },
    "speedup": 1.8408004161609157,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (pow (* b 0) (pow (/ -1 (- 0 (+ (- c 0) b))) (pow c (- 0 b)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (pow 0 (pow (/ -1 (- 0 (+ b c))) (pow c (* b -1)))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.013434518
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (pow 0 (pow (/ -1 (- 0 (+ b c))) (pow c (- 0 b)))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.007291778
    },
    "speedup": 1.8424200517349816,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (- (- a a) (/ (/ 1 -1) (* (pow (- -1 a) b) a))) 1) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (/ 1 (* a (pow (- -1 a) b)))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.008615817000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 (/ -1 (* a (pow (- -1 a) b)))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.0046734739999999995
    },
    "speedup": 1.8435572766639983,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* (pow 1 (* (* (+ (/ (+ (- a a) 0) (/ 1 1)) (/ a a)) 1) a)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (pow 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.013651583999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (pow 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.007399576
    },
    "speedup": 1.8449143572550641,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 0 (+ (+ a (* 0 (+ (- (/ (pow a a) 0) (- a 1)) -1))) 1)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20031)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 2.225395808
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10199)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.2058468599999999
    },
    "speedup": 1.8455045012929754,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a a) (+ (- (- (+ (* 1 (* (- -1 b) 0)) -1) (- (+ 1 -1) c)) c) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(17624)",
      "output_term": "(/ 1 (+ -1 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 2.345476271
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10753)",
      "output_term": "(/ 1 (+ -1 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 1.270648658
    },
    "speedup": 1.8458889136921435,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (- (pow (+ (* b (pow (/ (pow -1 -1) a) (- -1 -1))) -1) b) 0) (pow b -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (pow (+ b -1) b) (/ 1 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.013245326
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (pow (- b 1) b) (/ 1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.007174158999999999
    },
    "speedup": 1.8462548711284488,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ a 0) a) (- (pow (pow b b) (+ (* (/ (* 0 1) -1) (- 0 0)) b)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a a) (pow (pow b b) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.004172501
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a a) (pow (pow b b) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.002244531
    },
    "speedup": 1.8589634092823846,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (/ (/ (+ (pow 0 -1) (/ -1 (+ (+ a 0) 0))) 0) a) (+ a 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ (+ (pow 0 -1) (/ -1 a)) 0) a) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.008287546
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ (+ (pow 0 -1) (/ -1 a)) 0) a) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.0044536820000000005
    },
    "speedup": 1.8608302074553142,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow -1 0) (+ (* a (* a (- 0 0))) (pow (* -1 (- a (pow b 0))) (- 1 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006331846
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003402469
    },
    "speedup": 1.8609562644068176,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 0 a) (+ 1 (- a (pow (* (* (* b (- 1 -1)) (pow a b)) b) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow a b) (* b (* b -2))) (+ a 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.075352511
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (* b (* 2 (* b (pow a b)))) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.040479696
    },
    "speedup": 1.8614890536727349,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(* -1 (* (+ (* (pow a 1) (/ (* b (pow (+ 1 b) b)) -1)) a) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (* b (+ -1 (* b (pow (+ 1 b) b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.217552062
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* a (* b (- -1 (/ (* b (pow (+ 1 b) b)) -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.11674475299999999
    },
    "speedup": 1.863484708387708,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- 1 (* (+ a a) (pow (pow b 1) (/ (pow (pow 0 (* 1 a)) a) b))))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (pow b (/ (pow (pow 0 a) a) b)) (* a -2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.049987986
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* a (* (pow b (/ (pow (pow 0 a) a) b)) 2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.026762291
    },
    "speedup": 1.867851522875975,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (+ a 0) (- 1 (pow (/ (* (pow (/ b c) 0) (- -1 1)) (/ 0 b)) 0))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.009002839
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.004818684
    },
    "speedup": 1.8683190265225942,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (* (* -1 a) (* (- (- 0 (- 0 (pow 0 -1))) (/ (+ a 1) -1)) (/ 1 b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (pow 0 -1) (+ a 1)) (* a (/ 1 b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.5614194389999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (- (pow 0 -1) (/ (+ a 1) -1)) (/ 1 b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.300211027
    },
    "speedup": 1.8700826702145084,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(pow 1 (* (* 1 1) (/ (pow a (- (- a (/ a a)) (* 0 a))) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* (pow a (+ a -1)) -1))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.007162011
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (pow a (- a 1)) -1))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.003825761
    },
    "speedup": 1.872048724423716,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* (pow 0 (pow (- a (+ (* (* a -1) c) (pow -1 a))) 1)) 0) c) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.054545091000000004
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.029111465999999996
    },
    "speedup": 1.8736634905298144,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* a (* (* (* (pow 0 (/ (pow b b) c)) b) (pow (pow a -1) a)) e)) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (pow 0 (/ (pow b b) c)) (* a (* (pow (/ 1 a) a) (* b e)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.13236926799999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* b (* (pow 0 (/ (pow b b) c)) (* a (* (pow (/ 1 a) a) e)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 45,
      "output_depth": 8,
      "simplification_time": 0.0705635
    },
    "speedup": 1.8758886393106915,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ -1 (* (+ (pow (+ (- (/ (/ 0 0) 1) (- a -1)) -1) -1) 1) 0)) (+ 1 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-3",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.022347365
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-3",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011911181
    },
    "speedup": 1.876167023236403,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (/ -1 (pow (+ a 1) (+ (+ (* (pow 0 a) -1) (+ a 1)) 0))) -1) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (pow (+ a 1) (+ (+ a 1) (* -1 (pow 0 a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.046282386999999994
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 (pow (+ a 1) (+ a (- 1 (pow 0 a))))) (- 0 a))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.024655115
    },
    "speedup": 1.8771920958389363,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a a) (* (+ (* (* b (- a b)) (pow (+ (/ -1 1) 1) 1)) (+ 1 0)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a a) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.016886236
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a a) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.008981493
    },
    "speedup": 1.8801145867396432,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* a (pow (* 1 (pow (- (pow -1 1) (/ (* b -1) -1)) (pow (/ 0 b) a))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (* a (/ 1 (pow (- -1 b) (pow 0 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.011240344
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (pow (- -1 (/ (* -1 b) -1)) (pow 0 a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.005976044000000001
    },
    "speedup": 1.880900475297705,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (pow -1 (* (+ 1 0) (* (+ a (pow 0 (* 1 -1))) (pow b b)))) 0) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ (pow -1 (* (+ a (pow 0 -1)) (pow b b))) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.014425262
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ (pow -1 (* (+ a (pow 0 -1)) (pow b b))) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.0076358319999999995
    },
    "speedup": 1.8891539258590289,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ -1 (/ (* (+ (pow (- a 0) (/ (pow a 1) 1)) 1) (* a (* 1 0))) a)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.018437187
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.009755267
    },
    "speedup": 1.8899725655894402,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 (* (pow (/ a (- a (- (* (pow -1 a) -1) (pow -1 b)))) 0) a)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.023654132
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.012490613999999999
    },
    "speedup": 1.8937525409079172,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (pow a (pow (/ -1 (pow (+ (* (- a (* 1 a)) 0) (/ a a)) 1)) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007554399999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003975707
    },
    "speedup": 1.9001400254093168,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (+ 1 (pow (+ (- (/ (* (pow -1 1) a) a) 0) (+ 1 (pow 1 0))) a)) a) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (pow 1 a)) (+ 1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.025766974999999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (+ 1 (pow (+ (/ (- 0 a) a) 2) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.013553414
    },
    "speedup": 1.9011427674237649,
    "weight_simple_diff": -5,
    "weight_complex_diff": -9,
    "depth_diff": -4
  },
  {
    "base_term": "(pow (pow (/ (* a b) (/ (- 1 0) -1)) (* (pow -1 1) (+ (- (- 1 b) b) a))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (* b (* a -1)) (+ b (+ b (+ -1 (* a -1))))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.075459359
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ (* a b) -1) (- -1 (- a (+ b b)))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.039626991
    },
    "speedup": 1.9042414550224114,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ b (* (* (/ c (/ (+ (pow b -1) (* 1 b)) (pow -1 1))) 0) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.017831562
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.009357993
    },
    "speedup": 1.9054899912833871,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 (/ -1 0)) (pow -1 (/ (pow a -1) (- (/ a a) (+ 0 (* 1 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (/ 1 a) (- 1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.010618161
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (/ 1 a) (- 1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.005548689999999999
    },
    "speedup": 1.9136338487102362,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* a -1) (+ a (* 0 (pow (- (* a (pow 1 a)) (- 0 0)) 0)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (* a -1) a) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.006438128
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- 0 a) a) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.003358455
    },
    "speedup": 1.916990997348483,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (+ (- 1 (pow (/ a b) 1)) 0)) (* b (pow a -1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (- 1 (/ a b))) (* b (/ 1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.036261615999999997
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (- 1 (/ a b))) (/ b a))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.018899658
    },
    "speedup": 1.918638739388829,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ a (pow 0 (* 1 (- (/ -1 (- 0 (/ (- a a) 1))) (pow (/ 1 c) b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 (- (/ -1 0) (pow (/ 1 c) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.011870239
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 (- (/ -1 0) (pow (/ 1 c) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.006181623000000001
    },
    "speedup": 1.9202463495428301,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (pow a (pow 1 (- (pow -1 b) (- (/ -1 (+ c b)) 0)))) -1) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (pow a (pow 1 (- (pow -1 b) (/ -1 (+ b c)))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.007887110000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (pow a (pow 1 (- (pow -1 b) (/ -1 (+ b c)))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.004103681999999999
    },
    "speedup": 1.9219593526009089,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- a (/ -1 (- 1 (/ a (+ (- a (/ (pow -1 a) a)) 0))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (/ 1 (- 1 (/ a (- a (/ (pow -1 a) a)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.039814687
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 (- 1 (/ a (- a (/ (pow -1 a) a))))) (- -1 a))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.020709271
    },
    "speedup": 1.922553768309855,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ 0 (pow a (+ (/ 1 1) (+ (/ a a) (+ (/ b c) 0))))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010512098
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005466352
    },
    "speedup": 1.9230554490453595,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* a 0) (- (pow (- a (* (/ (- c -1) b) (+ 1 -1))) (/ -1 b)) 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- 0 (pow a (/ -1 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.017642434
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow a (/ -1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.009165448
    },
    "speedup": 1.924885068356724,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow a (/ (/ 0 (- (* (/ -1 (+ a (- b 1))) 1) -1)) (/ -1 a))) (+ 0 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.035042487
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.018202708
    },
    "speedup": 1.9251249319606727,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- 1 1) (+ (pow (pow 0 (* 0 (+ (- 0 a) 0))) (pow (* a a) a)) -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 (+ (pow (pow 0 0) (pow (* a a) a)) -1)) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.006719142000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 (+ (pow (pow 0 0) (pow (* a a) a)) -1)) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.00348857
    },
    "speedup": 1.9260447690601024,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (/ (pow 0 1) (pow a (+ (- 0 (- (* 0 b) (+ 0 0))) (/ (pow a -1) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009976332999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005178474000000001
    },
    "speedup": 1.9265005482310036,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 1 (- a (* (- b (- (pow (- (/ a c) c) d) (+ a b))) 0))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.096144952
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0498449
    },
    "speedup": 1.928882433308122,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow (+ (/ 0 a) 1) (- (+ (- (pow (+ (pow -1 a) a) (+ c c)) -1) 1) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (+ (pow (+ a (pow -1 a)) (+ c c)) 3)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.016515571
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (+ (pow (+ a (pow -1 a)) (+ c c)) 3)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.008541829
    },
    "speedup": 1.9334935176061236,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ 1 (* 1 (/ (* b a) (- a (* (pow (+ b 0) c) (pow a 0)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ (* a b) (- a (pow b c)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.042389721
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (/ (* a b) (- a (pow b c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.021903924
    },
    "speedup": 1.9352569430025413,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ -1 (pow (pow a (pow (/ a (* (/ a 0) 1)) 0)) 1)) c) (+ 0 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.007606739
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.003919205
    },
    "speedup": 1.9408882668806555,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow -1 (* (- -1 (/ (/ a a) (/ -1 (pow a b)))) 1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (- -1 (/ 1 (/ -1 (pow a b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.00769887
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (- -1 (/ 1 (/ -1 (pow a b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.003960532
    },
    "speedup": 1.943897940983686,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (pow 1 (* 0 (- (/ (* (+ (* a 1) 0) (* -1 0)) (/ 1 a)) c))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.009371498
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.004813704
    },
    "speedup": 1.9468371964707427,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 0 (* (- a (+ -1 (+ (pow a (+ 1 (- (pow 1 a) c))) (- (- c c) 0)))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* d (- a (+ -1 (pow a (+ 1 (- (pow 1 a) c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.173696422
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (- 1 (pow a (- (pow 1 a) (+ -1 c))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.08897589500000001
    },
    "speedup": 1.9521739230608466,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (/ (- (pow 1 (* (+ (pow a (* (+ a 0) 0)) (- b a)) -1)) -1) c) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (+ 1 (pow 1 (+ a (+ -1 (* b -1))))) c) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.038897787
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (+ 1 (pow 1 (- -1 (- b a)))) c) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.019923762
    },
    "speedup": 1.952331442224616,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* (pow -1 (pow -1 (/ (/ (/ (- (/ a a) -1) (pow a 0)) (/ -1 0)) 1))) -1) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow -1 (pow -1 (/ 2 (/ -1 0)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.006358122
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow -1 (pow -1 (/ (/ 2 (/ -1 0)) 1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.003254445
    },
    "speedup": 1.9536732069523375,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (* (- a 0) (- a a)) (- a (/ 0 (pow (+ (pow a 0) 0) 0)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.005213006
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.002658937
    },
    "speedup": 1.9605601787481237,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow b (* b (- (- (- d a) (- (+ (+ c 1) a) b)) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15395)",
      "output_term": "(* a (pow b (* b (+ d (+ b (+ (* c -1) (+ (* a -2) -2)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.9924259019999999
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow b (* b (- b (+ (- a d) (+ a (+ c 2)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.505124241
    },
    "speedup": 1.964716442899837,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (- 1 (* (/ a a) a)) (+ c (+ (* (* (- (* 1 1) 0) (- b a)) c) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 a) (+ (* c (- b a)) (+ c -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.061398532
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 a) (+ (* c (- b a)) (+ c -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.031236912
    },
    "speedup": 1.96557623877802,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow 0 (/ a (- (* (* (* 0 (pow (/ a 0) 0)) (- -1 0)) b) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow 0 (* a -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.0038551799999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow 0 (/ a -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.001959643
    },
    "speedup": 1.9672868986851175,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (/ a (pow (+ (* (+ (- (+ 1 a) -1) (pow b c)) (* -1 0)) 0) 0)) b) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ a (pow 0 0)) b) d)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.025609496
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ a (pow 0 0)) b) d)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.013006193000000001
    },
    "speedup": 1.9690232184006493,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (* 0 -1) (* (+ -1 (+ -1 (* (- 0 (/ 1 -1)) (- a a)))) 0)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003389763
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001716176
    },
    "speedup": 1.9751837806844985,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 0 (- (/ 1 0) (* 1 (+ (+ a (* (/ 0 -1) a)) (/ a 0))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (/ 1 0) (+ a (/ a 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.014840414
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (/ 1 0) (+ a (/ a 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.007507212
    },
    "speedup": 1.9768209556357272,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- -1 (- (* a 1) 1)) (* -1 (pow (+ (* (/ (* a 0) a) 0) a) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(27729)",
      "output_term": "(* a (pow a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 3.026707628
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10659)",
      "output_term": "(* a (pow a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 1.5307390349999999
    },
    "speedup": 1.9772851928349762,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a 0) (+ (* 1 a) (- (+ (- a (- a (- a b))) a) (- (/ a -1) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(25146)",
      "output_term": "(+ b (+ (/ a 0) (+ (* -1 c) (* a -4))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.631957301
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11209)",
      "output_term": "(+ (/ a 0) (- b (+ c (- (* a 3) (/ a -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.824647989
    },
    "speedup": 1.9789744506367795,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow 1 (- (- a 1) (- a (- (- (+ (pow a 0) 1) (+ 1 1)) (pow a a))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(17833)",
      "output_term": "(/ (pow 1 (+ (- 0 (pow a a)) -1)) 0)",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.825440359
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11510)",
      "output_term": "(/ (pow 1 (- -1 (pow a a))) 0)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.9219377739999999
    },
    "speedup": 1.9800038684606496,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 1 (/ (/ 1 (* (- (/ a (/ (+ (* 0 1) a) a)) 1) 1)) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ 1 (+ a -1)) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.008617073
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ 1 (- (/ a 1) 1)) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.004346780000000001
    },
    "speedup": 1.982403756343776,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ 0 a) (/ (+ 1 (* (+ (/ a (- 1 b)) (+ -1 1)) 1)) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a (/ a (- 1 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.022036867999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (+ 1 (/ a (- 1 b))) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.011082398
    },
    "speedup": 1.9884566499055527,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (pow 1 (/ 1 (+ (pow (* 0 (+ (/ 0 (+ a b)) a)) (+ (/ -1 b) c)) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 1 (/ 1 (+ -1 (pow 0 (+ (/ -1 b) c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.011179956
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 1 (/ 1 (+ -1 (pow 0 (+ (/ -1 b) c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.005620006
    },
    "speedup": 1.9893138904122165,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- -1 (* 1 (- (pow a (/ (- 0 (/ (+ -1 a) 0)) (+ b -1))) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- -1 (- (pow a (/ (- 0 (/ (+ a -1) 0)) (+ -1 b))) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.043904794999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- (pow a (/ (- 0 (/ (+ a -1) 0)) (+ -1 b))) (+ a b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.022052982
    },
    "speedup": 1.9908779229947224,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (/ a 0) (- (+ 1 (pow (+ b (/ (- 1 1) a)) (- 0 0))) 1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.005209758
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ a 0) 1) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.0026113710000000004
    },
    "speedup": 1.9950278991380388,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow a (/ 1 (* 1 a))) (pow (- a a) (/ (+ (/ -1 0) (pow 1 1)) (+ 0 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ 1 a)) (pow 0 (+ 1 (/ -1 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.007577461
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ 1 a)) (pow 0 (/ (+ 1 (/ -1 0)) 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.003797466
    },
    "speedup": 1.9953993004808994,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ a -1) (pow b (- a (* b (+ (/ c (- (+ b c) c)) 0)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(74277)",
      "output_term": "(pow (+ a -1) (pow b (- a c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 3.4746644
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11050)",
      "output_term": "(pow (- a 1) (pow b (- a (* b (/ c b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 1.725679092
    },
    "speedup": 2.0135055330437996,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(+ 0 (+ (+ a (* a (- (/ (pow 1 1) 0) (+ (/ a (* a 0)) (- -1 -1))))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (* a (- (/ 1 0) (/ a 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.089704144
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (+ (/ 1 0) (- 1 (/ a 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.044499245
    },
    "speedup": 2.015857662304158,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 0 (+ (* (* (+ -1 1) a) a) (- (/ 1 (* 0 b)) (- a 1)))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019171922
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009509468
    },
    "speedup": 2.016087755908112,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (- a 0) (+ 0 (/ (pow (+ (* (- a a) b) a) b) e))))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (/ (pow a b) e)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.048166408
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (/ (pow a b) e)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.023863538
    },
    "speedup": 2.0184101787421462,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ -1 (pow (/ -1 (/ 1 (pow (- (/ (pow -1 -1) 0) (/ -1 1)) (/ a -1)))) a)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (/ -1 (/ 1 (pow (+ 1 (/ -1 0)) (* -1 a)))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.00779962
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (/ -1 (/ 1 (pow (+ 1 (/ -1 0)) (/ a -1)))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.0038564669999999997
    },
    "speedup": 2.02247808680847,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (pow (/ a 1) (* 0 (pow (* (* (- a a) 0) (+ -1 c)) (* 0 c))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a 1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.00676462
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a 1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.003341916
    },
    "speedup": 2.024174156382147,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow 0 (+ (+ 1 a) (+ (pow a (- (- (/ c 0) -1) (- a -1))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(16612)",
      "output_term": "(* a (pow 0 (+ a (+ a (+ 1 (pow a (+ (/ c 0) (* a -1))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 1.7367353090000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10940)",
      "output_term": "(* a (pow 0 (+ 1 (+ a (+ a (pow a (- (/ c 0) a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 9,
      "simplification_time": 0.856778867
    },
    "speedup": 2.0270519919348104,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (* (/ 0 (pow (- (+ a (+ (+ (/ -1 0) b) (/ 1 c))) c) (- c -1))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.085052141
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.04190844
    },
    "speedup": 2.029475232196665,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* 1 (pow (pow 0 a) (* (/ (* 1 (- (* b 0) c)) (/ 1 a)) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow (pow 0 a) (/ (- 0 c) (/ 1 a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.017166684
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow (pow 0 a) (/ (- 0 c) (/ 1 a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.008443767
    },
    "speedup": 2.033059889028203,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (* 0 (- (/ 1 (- (/ (pow (pow (+ 1 1) 0) 0) (/ 0 0)) a)) (/ 1 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012910159000000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006341989
    },
    "speedup": 2.035664047982423,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (/ -1 (pow (+ 0 (* (+ (* a (pow a a)) -1) (pow a 0))) -1)) a) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (/ 1 (+ -1 (* a (pow a a))))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.021318062000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (/ 1 (+ -1 (* a (pow a a))))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.010418085
    },
    "speedup": 2.0462553338737397,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* b (- b (pow (- (pow (* b (* (* b c) b)) (* b 1)) a) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* b (- b (/ 1 (- (pow (* c (* b (* b b))) b) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.041514907000000004
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* b (- b (/ 1 (- (pow (* b (* b (* b c))) b) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.020261770999999998
    },
    "speedup": 2.0489278553192616,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (+ (+ (pow (* (/ (- (/ 0 a) -1) (pow 1 a)) (* b 0)) 0) 0) b) c) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* -1 (+ b c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.024890424999999997
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ b c))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.012137341999999999
    },
    "speedup": 2.050731123832549,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (+ (- (/ a (pow (/ (+ (/ a a) (+ 1 a)) a) (- (* a -1) a))) c) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(35100)",
      "output_term": "(- 0 (/ a (pow (/ (+ a 2) a) (* a -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 3.62550779
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10353)",
      "output_term": "(- 0 (/ a (pow (/ (+ a 2) a) (* a -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.7638972069999999
    },
    "speedup": 2.0553962983853173,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow -1 (- a (- (/ (+ 0 (pow (pow (+ a 0) -1) (+ -1 a))) -1) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow -1 (+ (pow (/ 1 a) (+ -1 a)) (+ a b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.024548507000000004
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow -1 (- b (- (/ (pow (/ 1 a) (+ -1 a)) -1) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.011943220999999999
    },
    "speedup": 2.055434375701497,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (- a (+ (/ b b) c)) (+ (/ (/ -1 (+ d (- (- -1 0) 1))) (pow c 1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (+ (/ (/ -1 (+ d -2)) c) (+ a (* c -1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.23914609200000003
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (/ (/ -1 (+ d -2)) c) (+ c 2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.116301237
    },
    "speedup": 2.056264388658222,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (/ a 1) (/ 1 (- (+ (* -1 (/ (* a 1) a)) b) b))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012968694999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006299077
    },
    "speedup": 2.0588246500241225,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (+ 1 (+ (+ (pow a (/ (/ (+ (- 1 a) b) 0) a)) a) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ (pow a (/ (/ (+ (- 1 a) b) 0) a)) (+ b (+ 1 a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.032537077000000005
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ (pow a (/ (/ (+ (- 1 a) b) 0) a)) (+ a (+ 1 b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.015786215
    },
    "speedup": 2.061106921450139,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (* 1 -1) (+ -1 (+ 1 (- (pow (* (pow a 0) b) (pow -1 b)) (* 0 1))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14005)",
      "output_term": "(/ (pow -1 (pow b (pow -1 b))) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 2.721023473
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10804)",
      "output_term": "(/ (pow -1 (pow b (pow -1 b))) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.318325849
    },
    "speedup": 2.063999181282836,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (* a (- (* 0 -1) -1)) (pow (+ (pow -1 (* c (/ 1 1))) (* 1 c)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (+ (pow -1 c) c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.016393304
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (+ (pow -1 c) c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.007941884
    },
    "speedup": 2.064158076345613,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ a (* (pow (* -1 1) (/ (/ 0 (+ a a)) (* b b))) (/ 0 c))) 1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.023267548
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.011271651
    },
    "speedup": 2.064253763712166,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (+ (* 1 (pow (pow (pow a 1) (+ a (* b a))) 1)) -1)) (/ 0 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (+ (pow a (+ a (* a b))) -1)) (/ 0 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.013578215999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (+ (pow a (+ a (* a b))) -1)) (/ 0 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.006576546
    },
    "speedup": 2.0646424430088377,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (pow a (/ a (/ (- (+ (- 0 (* -1 -1)) (+ a 1)) 0) -1))) -1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(22591)",
      "output_term": "(+ 1 (pow a (/ a (* a -1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 2.1496966630000003
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10145)",
      "output_term": "(+ 1 (pow a (/ a (/ a -1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.039210695
    },
    "speedup": 2.068585969469839,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow b (+ (* (+ (- (/ b (pow (* 1 1) b)) (/ d a)) a) (pow 1 0)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow b (+ (- (/ b (pow 1 b)) (/ d a)) (+ a 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.037727883
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow b (+ (- (/ b (pow 1 b)) (/ d a)) (+ a 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.018218091000000002
    },
    "speedup": 2.0709021049461214,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* 0 (/ a (pow (* (+ (pow (+ 0 1) 0) (pow a a)) (* 1 a)) -1))) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 a) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.01717117
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 a) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.008287448
    },
    "speedup": 2.0719490487300796,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (/ (/ a 1) (- (* (- (/ (- 1 0) b) (pow a 1)) (/ -1 1)) 1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (/ a (+ a (+ -1 (* (/ 1 b) -1))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.046592862
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (/ (/ a 1) (- (+ a -1) (/ 1 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.022485467000000002
    },
    "speedup": 2.0721322799299653,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 2
  },
  {
    "base_term": "(- (pow 1 (* 0 (+ a 0))) (/ a (pow (* (* a (pow (* -1 a) 0)) (/ 0 1)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.014541056
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.0070053960000000005
    },
    "speedup": 2.075693651008451,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 (/ a (+ (- (+ (pow 0 (+ (- -1 -1) -1)) a) (* (pow 1 1) -1)) 1))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (+ (+ a (pow 0 -1)) 2)) (+ -1 a))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.035655325
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (+ (+ a (pow 0 -1)) 2)) (+ -1 a))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.017160587
    },
    "speedup": 2.0777450678114913,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (pow (+ (pow (* (/ (pow 1 (+ (+ 1 1) 1)) (pow a a)) 1) -1) b) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008348788
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004014813
    },
    "speedup": 2.079496106045288,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (+ 0 (pow (+ 0 1) (- (* 0 (- 1 0)) a))) (+ b 0)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 (- 0 a)) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.0039043430000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow 1 (- 0 a)) b) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.001873113
    },
    "speedup": 2.0844140209373383,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (pow (/ (* a 1) (- b c)) (+ (pow a (pow a (/ b b))) (/ c d))) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ a (- b c)) (+ (pow a a) (/ c d))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 5,
      "simplification_time": 0.012753818
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ a (- b c)) (+ (pow a a) (/ c d))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 5,
      "simplification_time": 0.006073892
    },
    "speedup": 2.0997768811167536,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow (pow (* a 1) (* (* 0 (* (/ a 0) b)) (/ 1 1))) -1) c) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 c) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.012019647999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 c) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.00572014
    },
    "speedup": 2.1012856328691254,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (pow a (* 0 (+ (* (/ (+ -1 (- 0 -1)) (- a 0)) b) b))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.015542825
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.007361976
    },
    "speedup": 2.1112300556263697,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (* -1 (/ (pow a (* a (/ (- (pow a a) 1) 1))) c)) (+ c -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (+ -1 c) (/ (pow a (* a (+ -1 (pow a a)))) c)) (* a -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.309113461
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (- 1 c) (/ (pow a (* a (/ (- (pow a a) 1) 1))) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.146327823
    },
    "speedup": 2.112472219312659,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (- -1 (- (+ (+ a 1) (- c (/ a (/ (pow d 1) e)))) e)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ e (+ (/ a (/ d e)) (+ (* -1 (+ a c)) -2))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.848841775
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- e (+ (- (+ a c) (/ a (/ d e))) 2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.40159377999999996
    },
    "speedup": 2.113682574964184,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 (/ (pow 1 (pow (pow (pow 0 (pow (+ a -1) 1)) (+ a -1)) a)) (+ a 0))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.010961079
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005158266000000001
    },
    "speedup": 2.124954199725256,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- a a) (pow (pow (* (/ (- (+ a 1) -1) (/ 0 1)) -1) a) b)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008564638
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004017461999999999
    },
    "speedup": 2.131852896181719,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (/ a (- a 0)) (pow a (+ 0 a))) (- (pow a -1) b))",
    "input_weight_simple": 17,
    "input_weight_complex": 41,
    "input_depth": 5,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow a a)) (- (/ 1 a) b))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 4,
      "simplification_time": 0.009025638
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow a a)) (- (/ 1 a) b))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 4,
      "simplification_time": 0.004233466
    },
    "speedup": 2.131973659408154,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a 0) (- (pow (- (pow a (+ (pow (* c 1) 1) c)) (* (+ -1 b) a)) 1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (- (pow a (+ c c)) (* (+ -1 b) a)) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.079560869
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ c c)) (- c (* a (- 1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.037309727
    },
    "speedup": 2.1324430757694905,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (* (+ 0 (pow a (pow (- (* (- -1 1) b) (* b 0)) a))) b) b) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012106691
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0056687230000000005
    },
    "speedup": 2.1356998745572855,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a 1) (/ (* (pow (+ (/ -1 (* (pow a a) 1)) (- a a)) e) 1) (* -1 c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (/ (pow (/ -1 (pow a a)) e) (* -1 c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.025878946999999996
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (/ (pow (/ -1 (pow a a)) e) (- 0 c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.012113704000000001
    },
    "speedup": 2.13633641700342,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (pow a a)) (/ (* (- (pow (pow (+ (pow a 0) a) (* b 1)) -1) a) 0) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.011611156999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.005414911
    },
    "speedup": 2.144293230304247,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ (- a (pow (- 0 (* (/ -1 (* (- 1 -1) a)) (/ -1 0))) c)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (pow (* (/ -1 0) (/ 1 (* a 2))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.026295327
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (pow (- 0 (* (/ -1 (* a 2)) (/ -1 0))) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.012238802
    },
    "speedup": 2.1485213176910616,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (pow (/ a a) -1) (+ (* -1 1) (+ 1 (- b (+ (* -1 0) 0))))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14336)",
      "output_term": "(pow (/ 1 b) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 2.507720046
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10622)",
      "output_term": "(pow (/ 1 b) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 1.167070008
    },
    "speedup": 2.148731463245691,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (* (* a (- (- (pow (pow (/ a 0) 1) (+ 1 a)) (- b 0)) 0)) c)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (- (pow (/ a 0) (+ a 1)) b) (* c (* a a))) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.182401538
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (* (- (pow (/ a 0) (+ a 1)) b) (* a c))) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.08477607999999999
    },
    "speedup": 2.1515684377008233,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- 1 (/ (/ -1 a) 0)) (+ a (+ (- (pow (pow a -1) (- 1 1)) (- b a)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(21570)",
      "output_term": "(+ (- 1 (/ (/ -1 a) 0)) (+ (* -1 b) (+ a a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 1.778542039
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11521)",
      "output_term": "(+ 1 (+ a (- (- a b) (/ (/ -1 a) 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.82496137
    },
    "speedup": 2.1559094809493926,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow -1 a) (* -1 (+ a (pow 1 (* (* (pow (+ a 0) b) (* 1 0)) (* c a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 a) (+ -1 (* -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.028923901000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 a) (- -1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.013408640000000001
    },
    "speedup": 2.157109222113503,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ a (- (/ a (/ (+ 1 (* a (/ a (- a a)))) 1)) 0)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (/ a (+ 1 (* a (/ a 0))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.019296943
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (/ a (/ (+ 1 (* a (/ a 0))) 1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.008916248
    },
    "speedup": 2.1642447585576354,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ -1 (+ (* (+ 1 a) (pow -1 (* 0 (* (pow 1 a) 1)))) (pow (+ 1 a) 0))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(46001)",
      "output_term": "(+ a (* a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 2.675736793
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10437)",
      "output_term": "(+ a (* a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 1.2349754
    },
    "speedup": 2.1666316535535852,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* -1 (pow (* a c) (pow c (- (/ (- -1 0) -1) 0)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (* a c) c))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.005671729
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (* a c) c))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.0026083309999999998
    },
    "speedup": 2.17446673754213,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (pow a (- (+ (+ (- (/ a a) 1) b) (- (* 1 a) b)) c)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(22028)",
      "output_term": "(/ a (* (pow a (- a c)) -1))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 2.036635912
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(12147)",
      "output_term": "(/ a (- 0 (pow a (- a c))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.9363467240000001
    },
    "speedup": 2.1750873472378376,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 0 (* (/ 0 (pow (/ (+ (* a 1) (+ b 1)) 1) 1)) a)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 0) -1)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.015254556999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 0))",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.007012552
    },
    "speedup": 2.175321765884944,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (+ (- (pow 1 -1) (pow (pow a (pow (+ (- 0 a) a) (+ 1 -1))) 0)) (* b 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0054443899999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0024937229999999998
    },
    "speedup": 2.1832376731497445,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* a (pow (+ (- a -1) -1) (* b (pow (pow (* a (pow b b)) e) 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(42710)",
      "output_term": "(* a (+ (pow a b) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 2.751281084
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11668)",
      "output_term": "(+ a (* a (pow a b)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.259292483
    },
    "speedup": 2.184783218466968,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (/ (* (* (pow (* (* (- a -1) -1) (/ a 1)) (pow 1 b)) 1) 1) c) c) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ (pow (* a (+ -1 (* a -1))) (pow 1 b)) c) c) e)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.024200965999999997
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ (pow (* (- -1 a) (/ a 1)) (pow 1 b)) c) c) e)",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.011067948000000001
    },
    "speedup": 2.18658110789823,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (pow (- -1 b) (- (/ (- (* -1 (+ -1 (/ c 1))) (* 0 c)) b) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (- -1 b) (- (/ (+ 1 (* -1 c)) b) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.073704628
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (- -1 b) (- (/ (- 1 (/ c 1)) b) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.033609928
    },
    "speedup": 2.1929421568531775,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (+ a (* (* (+ (* a b) a) -1) (- (* (+ c -1) (/ 0 c)) (- b b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10348)",
      "output_term": "(+ 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.9795796890000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.446465621
    },
    "speedup": 2.194076414676507,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ a (* a (+ a (+ (pow (+ 1 1) (+ a 0)) (- -1 b))))) b) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (/ a (* a (+ (pow 2 a) (+ a (- -1 b)))))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.18157289900000004
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (/ a (* a (+ (pow 2 a) (- (+ a -1) b))))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.082458478
    },
    "speedup": 2.201991880082968,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (pow a 0) (- (- a (- (/ (+ (+ 0 0) 1) b) (/ 0 1))) -1)) (pow -1 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(22854)",
      "output_term": "(/ (+ (/ 1 b) (* a -1)) (pow -1 a))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 2.0655166659999997
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10088)",
      "output_term": "(/ (- (/ 1 b) a) (pow -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.9371277779999999
    },
    "speedup": 2.2040928830518562,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 (pow a (pow (pow (- 1 (/ a a)) (* a (* (pow 1 a) 0))) e))) (pow b b))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (pow a (pow (pow 0 0) e))) (pow b b))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.007224073
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (pow a (pow (pow 0 0) e))) (pow b b))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.0032765399999999997
    },
    "speedup": 2.204787061961704,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ (pow (- (* a -1) (pow (* (* -1 a) 1) (* -1 1))) -1) (- a b)) 0) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.018451327
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.008365804000000001
    },
    "speedup": 2.205565298924048,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (- a (+ b (- b b))) (+ (/ (/ (+ -1 (+ 1 -1)) (pow a b)) -1) c)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (- a b) (+ (/ 1 (pow a b)) c)) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.619487802
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ (/ -1 (pow a b)) -1) (+ a (- c b))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.280057776
    },
    "speedup": 2.2120000053131896,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- (+ (/ (/ (- (/ (+ 1 a) a) a) (+ 1 -1)) b) -1) -1) b) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(25092)",
      "output_term": "(+ 1 (- (/ (/ (- (+ 1 (/ 1 a)) a) 0) b) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 2.236273616
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10041)",
      "output_term": "(+ 1 (- (/ (/ (- (/ (+ 1 a) a) a) 0) b) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 1.00872497
    },
    "speedup": 2.21693095988295,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (/ (+ (* b (- (* (/ (+ c a) -1) 0) (* -1 -1))) -1) 1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ -1 (* b -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.017153934
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (/ (- -1 b) 1)) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.00773433
    },
    "speedup": 2.2178952798755676,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (* (+ a -1) 1) b) (* c (pow (pow (- (pow (+ a c) 0) (- c 1)) b) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (+ a -1) b) (* c (/ 1 (pow (+ (* -1 c) 2) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.041278261
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (- a 1) b) (/ c (pow (- 1 (- c 1)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.018561941999999998
    },
    "speedup": 2.2238115494596418,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (* (+ (/ (/ (pow (* 1 (* (* 0 -1) a)) (+ -1 a)) 0) 0) b) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (/ (/ (pow 0 (+ a -1)) 0) 0) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.016850827000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (/ (/ (pow 0 (+ a -1)) 0) 0) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.007567908
    },
    "speedup": 2.2266162590771454,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (- a 0) (/ -1 (/ -1 (pow (- (/ 0 (* b 0)) a) (+ -1 a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(33079)",
      "output_term": "(/ -1 (/ -1 (pow (* a -1) (+ a -1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 2.975477088
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10053)",
      "output_term": "(/ -1 (/ -1 (pow (- (/ 0 0) a) (+ a -1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.332825051
    },
    "speedup": 2.2324588555471263,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ (+ (/ a (pow (- (* (pow b (- 1 b)) 0) c) (* (pow 0 0) -1))) 1) 0) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 (/ a (pow (- 0 c) (* (pow 0 0) -1)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.020651762
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (pow (- 0 c) (- 0 (pow 0 0)))) (- c 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.00924419
    },
    "speedup": 2.2340261288441714,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (/ a (pow 1 (* (pow 1 (/ 1 (* (- (/ a 1) a) (* -1 -1)))) 0))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.008232546
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a 1))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.0036815389999999997
    },
    "speedup": 2.2361697105476814,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- a b) (- 1 (pow 1 (* (pow (- (- (- a a) e) c) (* a -1)) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a b) (- 1 (pow 1 (pow (- (- 0 e) c) (* a -1)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.015817971
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a b) (- 1 (pow 1 (pow (- 0 (+ e c)) (- 0 a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.007072693
    },
    "speedup": 2.236484886308511,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (+ (- a (/ 0 (+ a b))) (/ (/ b (/ 0 a)) a)))",
    "input_weight_simple": 17,
    "input_weight_complex": 43,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.020217343
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009011754
    },
    "speedup": 2.243441509832603,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 0 (* (pow (* -1 a) (pow (- (+ 0 a) (pow c a)) (- -1 0))) a)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.009124724
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.0040659170000000005
    },
    "speedup": 2.2441982952431148,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (/ (pow b a) (* 0 (- (+ (- (pow 1 1) 0) (/ b 1)) (+ a 0)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ (pow b a) 0) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.032518901
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ (pow b a) 0) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.014455220000000001
    },
    "speedup": 2.2496303065605368,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a 1) (* -1 (/ 0 (+ (* b -1) (pow (* (+ 1 1) b) (* -1 -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(50801)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 3.559430524
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11305)",
      "output_term": "(/ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.5814552339999999
    },
    "speedup": 2.2507311288205583,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (* -1 (* (pow a (- (+ (+ (+ a a) a) (- b b)) a)) -1)) 0) (* b b))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(42414)",
      "output_term": "(/ (pow a (+ a a)) (* b b))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 2.501050514
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10124)",
      "output_term": "(/ (pow a (+ a a)) (* b b))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.109952332
    },
    "speedup": 2.253295427104882,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ (pow 1 (* (/ 1 -1) (pow (* (pow (pow a -1) 0) (+ 1 b)) (* 1 c)))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ c (pow 1 (* -1 (pow (+ 1 b) c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.012124643999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ c (pow 1 (- 0 (pow (+ 1 b) c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.005380500999999999
    },
    "speedup": 2.2534414546154715,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ -1 (* (pow (+ -1 a) (+ (/ a (/ (+ b c) c)) (- c 0))) c)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* c (pow (+ -1 a) (+ c (/ a (/ (+ b c) c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.025160659999999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (* c (pow (+ -1 a) (+ c (/ a (/ (+ b c) c)))))) 1)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.011156605
    },
    "speedup": 2.2552254919843446,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ a 1) (- (pow b (* (* (/ b (pow (- a 1) 1)) e) (* (/ -1 -1) d))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow b (* (/ b (+ a -1)) (* e d))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.043981704
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a 1) (- (pow b (* e (* d (/ b (- a 1))))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.019495599
    },
    "speedup": 2.2559811575935678,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* -1 (* (/ -1 (/ (* a b) -1)) (* a (pow b (* (+ (* b a) b) (* 1 a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (pow b (* (* a b) (+ a 1))) (* a (/ 1 (* -1 (* a b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.220137757
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- 0 (* (/ -1 (/ (* a b) -1)) (pow b (* a (+ b (* a b)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.097277161
    },
    "speedup": 2.262995288277379,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(* (- a a) (/ (* a (pow -1 (+ (* (/ 1 (- a b)) (+ b 0)) (+ 0 e)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012269578
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005413853
    },
    "speedup": 2.266330097991209,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow (* (/ 1 1) a) 1) b) (* 1 (+ (- a (pow (/ (pow b a) c) e)) e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a b) (+ e (- a (pow (/ (pow b a) c) e))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.017496578999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a b) (+ e (- a (pow (/ (pow b a) c) e))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.007709776
    },
    "speedup": 2.2694017309971133,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a 0) (pow (- 0 a) (pow (/ (/ 1 (+ a (/ 0 0))) 1) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.014203704
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 3,
      "output_depth": 2,
      "simplification_time": 0.0062579390000000006
    },
    "speedup": 2.269709564123268,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow a (/ (/ (pow 1 (* -1 (- (pow (pow -1 a) a) (* a a)))) 0) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow a (* -1 (/ (pow 1 (+ (* a a) (* -1 (pow (pow -1 a) a)))) 0))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.014417464999999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow a (/ (/ (pow 1 (- (* a a) (pow (pow -1 a) a))) 0) -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.006327938
    },
    "speedup": 2.2783827844078117,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow (/ -1 a) (+ -1 a)) (+ (* c (+ (pow (* 1 a) (/ -1 b)) 0)) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (/ -1 a) (+ -1 a)) (+ (* c (pow a (/ -1 b))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.013541417
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (/ -1 a) (+ -1 a)) (+ (* c (pow a (/ -1 b))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.005931952
    },
    "speedup": 2.2827927468057734,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- -1 (* 1 (pow a (* a (+ (/ 1 (* (* c a) d)) (pow 0 1)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (pow a (* a (/ 1 (* (* a c) d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.014693762999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (pow a (* a (/ 1 (* (* a c) d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.006432969
    },
    "speedup": 2.2841339667578064,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* a a) (pow a (pow a (+ a (+ (+ (/ 1 a) a) c))))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a a) (pow a (pow a (+ a (+ (/ 1 a) (+ a c))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.024813889
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a a) (pow a (pow a (+ (/ 1 a) (+ c (+ a a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.01085933
    },
    "speedup": 2.2850294631436743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (pow a (* 1 (/ a (pow (pow (- a 0) (- a a)) (- (/ b 0) -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (/ a (pow 1 (+ 1 (/ b 0))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.009950745
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (/ a (pow 1 (+ 1 (/ b 0))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.0043534739999999995
    },
    "speedup": 2.285702177157829,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 -1) (/ (- (- (* (- (/ (- 1 1) a) a) 1) (- 0 (/ b c))) a) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ b c) (* a -2)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.135161204
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ b c) (* a -2)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.05902884
    },
    "speedup": 2.2897486042415878,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (- (+ -1 (/ -1 (+ (- (- 0 1) -1) a))) (+ -1 0)))",
    "input_weight_simple": 17,
    "input_weight_complex": 25,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14066)",
      "output_term": "(pow -1 (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 3.1522678859999997
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10880)",
      "output_term": "(pow -1 (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 1.375814347
    },
    "speedup": 2.291201493045631,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (/ a (- (+ (pow (pow (- b (+ b 1)) a) (+ c e)) 0) e)) 0) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (- (pow (pow -1 a) (+ c e)) e)) e)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.027720978
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (- (pow (pow -1 a) (+ c e)) e)) e)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.012089377000000002
    },
    "speedup": 2.293003022405538,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (+ 0 (- a (- -1 (+ (pow (/ (- a -1) c) (pow d 0)) c)))) (* 0 -1)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (+ a 1) c) (+ b (+ c 1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.5562235879999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ a 1) c) (+ a (+ c (+ b 1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.24217512199999996
    },
    "speedup": 2.296782524176864,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ -1 a) (+ (- (- (/ a 1) 1) a) (+ (* 0 (+ (* 1 1) 1)) (* a -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12702)",
      "output_term": "(+ 1 (/ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.591989438
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (+ (/ a 1) (+ -1 (* a -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.257564113
    },
    "speedup": 2.2984158433593582,
    "weight_simple_diff": -6,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(/ a (* 1 (* (pow b 0) (pow a (pow (pow (- (- 1 a) -1) -1) (pow 0 -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (pow (/ 1 (+ 1 (- 1 a))) (pow 0 -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.011180761
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (pow (/ 1 (- 1 (+ a -1))) (pow 0 -1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.004858807
    },
    "speedup": 2.3011329735879613,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 (/ -1 (pow (- 0 (- a 0)) (/ (* (+ (+ 1 a) a) (* 1 c)) -1)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.068048227
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.029559618000000003
    },
    "speedup": 2.3020671985679924,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow a 1) (- (- 0 (/ -1 (* (- (/ a a) a) (* 1 b)))) 1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (/ -1 (* (- 1 a) b)) (+ a 1)) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.030072392999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (+ a (/ -1 (* (- 1 a) b)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.013055813
    },
    "speedup": 2.303371915636353,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- 0 a) (* (/ b (* (pow 0 a) d)) (pow e (- (pow -1 (- 1 -1)) (/ d d)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (- 0 a) (/ b (* (pow 0 a) d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.048605252
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (- 0 a) (/ b (* (pow 0 a) d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.021066207
    },
    "speedup": 2.3072616726874466,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* 1 (+ (pow 0 (+ (/ a (* (+ (- -1 a) -1) (+ 0 0))) a)) -1)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (pow 0 (+ a (/ a 0)))) d)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.022321178000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (pow 0 (+ a (/ a 0)))) d)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.009671684
    },
    "speedup": 2.3078895050748147,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (+ (- 0 1) (/ -1 (* a (pow (* (+ a a) c) (/ c c))))) (/ -1 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15601)",
      "output_term": "(pow a (/ -1 (* (* a a) (+ c c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 3.480229901
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10932)",
      "output_term": "(pow a (/ -1 (* (+ a a) (* a c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.503522717
    },
    "speedup": 2.3147172049014006,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (+ 1 a) (/ -1 (pow (* (/ -1 (/ a -1)) a) (pow (+ a 0) 1)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 a) (/ -1 (pow 1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.022759048
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 a) (/ -1 (pow (* a (/ -1 (/ a -1))) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.009830537
    },
    "speedup": 2.3151378200397392,
    "weight_simple_diff": -3,
    "weight_complex_diff": -12,
    "depth_diff": -3
  },
  {
    "base_term": "(/ (/ (- 0 (* (- -1 0) (- a (* (pow b (/ a 0)) (/ -1 b))))) c) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ (+ a (pow b (+ -1 (/ a 0)))) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.10424665
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- a (* (pow b (/ a 0)) (/ -1 b))) c) -1)",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.045015796
    },
    "speedup": 2.315779332214852,
    "weight_simple_diff": -1,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (+ -1 (/ (- (/ -1 -1) (+ (pow (pow 0 1) 1) (pow -1 a))) 0))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (+ -1 (/ (- 1 (pow -1 a)) 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.011219386
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (+ -1 (/ (- 1 (pow -1 a)) 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.004844009
    },
    "speedup": 2.316136489424359,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- -1 (- (+ a (* (- a -1) b)) (* -1 (pow (pow (pow 0 d) -1) e)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* -1 (+ (pow (/ 1 (pow 0 d)) e) (* (+ a 1) (+ b 1)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.393262709
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (* (+ a 1) (- -1 b)) (pow (/ 1 (pow 0 d)) e)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.16970316900000001
    },
    "speedup": 2.3173563069997822,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* 0 (* (+ (+ (- (/ -1 (+ (pow -1 a) b)) -1) (/ 0 b)) -1) (/ a a))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15510)",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 3.215733373
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10098)",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 1.383346318
    },
    "speedup": 2.324604714782636,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (+ 1 (- (* a (pow (pow (/ -1 (* (* a a) a)) (+ 0 0)) (+ -1 1))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(64764)",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 3.300793923
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15968)",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.4198604709999998
    },
    "speedup": 2.324731190435402,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a a) (+ (pow (pow (pow a a) 0) (+ a (/ (pow a (+ a 0)) (pow b a)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a a) (+ (pow 1 (+ a (/ (pow a a) (pow b a)))) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.009329289999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a a) (+ (pow 1 (+ a (/ (pow a a) (pow b a)))) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.0040116909999999995
    },
    "speedup": 2.325525570139874,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (- (/ a 1) a) (* -1 (pow (pow (/ (* (/ a 0) -1) c) (/ c 0)) -1))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.09077591899999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ (- a (/ a 1)) (pow (/ (- 0 (/ a 0)) c) (/ c 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.039006487
    },
    "speedup": 2.327200575637585,
    "weight_simple_diff": -12,
    "weight_complex_diff": -38,
    "depth_diff": -6
  },
  {
    "base_term": "(/ a (- -1 (- (pow (* -1 (+ (/ (+ (+ a a) 0) (/ b b)) (- 0 1))) -1) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- -1 (- (/ 1 (+ 1 (* a -2))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.040302885000000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- b (+ 1 (/ 1 (- 1 (/ (+ a a) 1))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.017294891
    },
    "speedup": 2.330334721392578,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (pow -1 (* (/ (+ (/ a b) 1) 1) (+ a (+ (- 1 (- 0 a)) (+ b 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(18922)",
      "output_term": "(pow -1 (pow -1 (* (+ (/ a b) 1) (+ (+ b 2) (+ a a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.032466479
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow -1 (* (/ (+ (/ a b) 1) 1) (+ a (+ a (+ b 2))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.442249087
    },
    "speedup": 2.3345813690735784,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* a 0) (* 0 (- b (- 1 (+ (* (pow (- 0 -1) a) (* 1 b)) (/ -1 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.132145284
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.05658916900000001
    },
    "speedup": 2.3351691911220676,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow a (pow (* 0 0) (pow 0 (- a -1)))) (* 1 c)) (* 0 -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow a (pow 0 (pow 0 (- a -1)))) c) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.007957223000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow a (pow 0 (pow 0 (- a -1)))) c) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.003401814
    },
    "speedup": 2.3391117209818058,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- -1 1) (+ a (* (- (- 1 -1) (+ (pow b 1) -1)) (- (* -1 0) 1)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(25961)",
      "output_term": "(* -1 (+ -1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 1.380438918
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10248)",
      "output_term": "(- 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.588838593
    },
    "speedup": 2.344341784676468,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow 0 (+ a 1)) (/ (/ 0 (* (- 0 1) (- 0 (/ a b)))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.034660991
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014751703
    },
    "speedup": 2.3496264126250375,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ a (/ a (pow 0 (- (- (pow (+ (* -1 a) c) (/ d b)) (/ -1 1)) e)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (/ a (pow 0 (- (+ (pow (+ (* a -1) c) (/ d b)) 1) e)))))",
      "output_weight_simple": 18,
      "output_weight_complex": 46,
      "output_depth": 10,
      "simplification_time": 0.029312321000000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (/ a (pow 0 (- (pow (- c a) (/ d b)) (+ -1 e))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 43,
      "output_depth": 8,
      "simplification_time": 0.012465691999999999
    },
    "speedup": 2.3514395350053574,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(/ a (pow 1 (* (- (- (- 0 (+ 0 (pow (+ a a) -1))) (+ -1 b)) 0) (pow b b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 1 (* -1 (* (pow b b) (+ (/ 1 (+ a a)) (+ -1 b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.166376024
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 1 (* (- (- 1 b) (/ 1 (+ a a))) (pow b b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.070735136
    },
    "speedup": 2.3520987363338075,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow a (* 1 (- a (pow (+ a (* (- (+ 1 1) -1) a)) (pow (+ b -1) b))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (- a (pow (* a 4) (pow (+ -1 b) b)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.012689225000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (- a (pow (* a 4) (pow (+ -1 b) b)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.005390589
    },
    "speedup": 2.353958908757466,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (/ 1 1)) (pow a (pow (* (pow (- a 0) (+ 0 (* b b))) 0) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -1) (pow a (pow 0 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.00499889
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a 1) (pow a (pow 0 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.002121608
    },
    "speedup": 2.356179840950826,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (* a a) (- (/ a 1) 0)) (- (- b -1) (* -1 (pow (- (+ 0 b) b) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (* a (* a a)) (+ 1 (+ b (/ 1 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.49443587600000005
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (* a a) (* (/ a 1) (+ b (+ 1 (/ 1 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.2097308
    },
    "speedup": 2.357478615444179,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ 0 a) (pow (pow (+ 0 (- a (+ (* 1 (/ 1 b)) a))) 1) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(31592)",
      "output_term": "(+ a (pow (* (/ 1 b) -1) b))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 2.4058988610000003
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10327)",
      "output_term": "(+ a (pow (- 0 (/ 1 b)) b))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.018559503
    },
    "speedup": 2.3620601976750693,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow a (* -1 (+ (/ 1 -1) (* (/ 0 (+ (- -1 -1) a)) (* 0 a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0055343860000000005
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0023407540000000004
    },
    "speedup": 2.364360372768774,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow (/ 0 (* (+ (/ 0 0) (pow (- a 1) 0)) (pow (* -1 a) 0))) b) d) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow 0 b) d) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.013197222000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow 0 b) d) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.005580508
    },
    "speedup": 2.364878251227308,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (+ a (pow (* -1 a) (- a (/ (- (/ 1 c) -1) (pow -1 1))))) 0) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (* a -1) (+ a (+ 1 (/ 1 c))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.019730829000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (- 0 a) (- a (/ (+ 1 (/ 1 c)) -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.008325656
    },
    "speedup": 2.369882805631172,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow (pow -1 a) -1) (- (* 1 (* a (/ 1 1))) (* a a)))",
    "input_weight_simple": 17,
    "input_weight_complex": 38,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow -1 a)) (- a (* a a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.020062354
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow -1 a)) (- a (* a a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.008462937
    },
    "speedup": 2.3706136533924336,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 (- 0 (/ (pow -1 (pow -1 -1)) (pow (pow a (* -1 (* b c))) 0)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009061353
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00382184
    },
    "speedup": 2.3709399137588174,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow (/ (- 1 a) 0) (pow a (+ 0 (pow 0 1)))) a) -1)",
    "input_weight_simple": 17,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ (- 1 a) 0)) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.005678899
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ (- 1 a) 0)) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.002394343
    },
    "speedup": 2.3717984432472705,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (* a (- (* 1 (- (- a b) 0)) (+ -1 c))) c))",
    "input_weight_simple": 17,
    "input_weight_complex": 25,
    "input_depth": 8,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ c (* a (+ 1 (- (- a b) (+ -1 c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 1.684951151
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- c (* a (+ c (+ b (- -2 a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.7103823
    },
    "speedup": 2.3718934874925797,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (/ (* -1 1) (pow (+ 0 (/ (+ (* a -1) a) -1)) a)) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ -1 (pow 0 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.007941804
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ -1 (pow 0 a)) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.003343405
    },
    "speedup": 2.375364037560511,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (+ (* -1 a) (/ a (pow -1 (pow (pow (/ (- 0 1) a) (pow 1 a)) (/ c d))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (* a -1) (/ a (pow -1 (pow (pow (/ -1 a) (pow 1 a)) (/ c d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 47,
      "output_depth": 8,
      "simplification_time": 0.024513978000000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ a (pow -1 (pow (pow (/ -1 a) (pow 1 a)) (/ c d)))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 45,
      "output_depth": 8,
      "simplification_time": 0.010316196
    },
    "speedup": 2.3762613661082055,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- (pow (pow (/ 1 (+ a (/ -1 b))) (/ (+ (/ a -1) b) (- 1 1))) 1) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ d (* -1 (pow (/ 1 (+ a (/ -1 b))) (/ (+ b (* -1 a)) 0))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.014836088
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- d (pow (/ 1 (+ a (/ -1 b))) (/ (+ b (/ a -1)) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.0062150090000000005
    },
    "speedup": 2.3871386187855883,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (* a (/ a (* 0 (* (pow (+ (+ (/ a b) b) (- 0 a)) (/ 0 1)) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (/ a 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.061110050000000006
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (/ a 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.025597388000000002
    },
    "speedup": 2.38735491293096,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ a (+ -1 (- (pow (- a (pow a (pow -1 a))) (- 0 0)) 1))) c) (- d -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (* -1 (+ a c)) d))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.045682800999999995
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a -1) (+ 1 (- d c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.019096754
    },
    "speedup": 2.3921762305782437,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* 0 (pow (/ (pow (* a a) (+ 0 b)) (pow c (- (/ (/ -1 0) c) (- b a)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.029812764
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012448257
    },
    "speedup": 2.3949348089455413,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (pow (/ a -1) (- 0 (* (/ (* (pow a b) c) (+ b -1)) -1))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow (* a -1) (/ (* (pow a b) c) (+ -1 b))) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.058464211
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow (/ a -1) (/ (* (pow a b) c) (+ -1 b))) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.024351144999999998
    },
    "speedup": 2.4008813959261466,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (* -1 (* (pow 1 a) (- (+ (* (- a (+ b 0)) a) (/ c 0)) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.740791493
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.308117976
    },
    "speedup": 2.4042462650734793,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (pow (/ (- -1 1) 1) (- b (- (+ -1 (- (* a b) a)) (+ 1 1)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (pow -2 (- b (+ (* a (+ -1 b)) -3)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.40228938099999995
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (pow -2 (+ a (+ 3 (* b (- 1 a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.16724319199999998
    },
    "speedup": 2.4054155878584282,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a 1) (* 0 (- (pow (/ (/ 0 a) 0) (pow (+ (+ a 0) b) 0)) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.02016038
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008366824
    },
    "speedup": 2.4095618600319546,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (/ -1 a) (- (+ (* (+ -1 -1) (+ (- -1 0) a)) 0) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 a) (- (+ 2 (* a -2)) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.014056493
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 a) (- (* -2 (+ -1 a)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.005824835
    },
    "speedup": 2.413200202237488,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a a) (* (/ (* 0 (* (pow (pow (* 0 b) a) (+ c c)) 1)) (pow d d)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014724549
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006096843999999999
    },
    "speedup": 2.4151100142959216,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 1 a) (/ 0 (pow -1 (+ (* (pow a (pow (/ 1 a) 1)) (* 0 1)) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.003374371
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.001386255
    },
    "speedup": 2.434163267219956,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- a (/ (- b 0) (pow (- b (/ (pow 0 -1) -1)) (* b a)))) 0) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (/ b (pow (+ b (pow 0 -1)) (* a b)))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.056102243999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ b (/ b (pow (- b (/ (pow 0 -1) -1)) (* a b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.023043745999999997
    },
    "speedup": 2.4345973957532774,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ a (+ (* 0 a) (- (/ a b) (/ (/ (/ -1 -1) a) -1)))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (+ (/ a b) (/ 1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.013209235
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (- (/ a b) (/ (/ 1 a) -1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.005421555
    },
    "speedup": 2.436429216341068,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (- (+ (pow (- (* (- (- (pow 0 a) a) (* a a)) (+ a a)) b) c) -1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(60720)",
      "output_term": "(+ a (pow (- (* (- (- (pow 0 a) a) (* a a)) (+ a a)) b) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 2.2805948050000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10897)",
      "output_term": "(+ a (pow (- (* a (* (- (pow 0 a) (+ a (* a a))) 2)) b) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.935586318
    },
    "speedup": 2.4376102569298155,
    "weight_simple_diff": -1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* (* (* (+ a 0) (+ a -1)) (+ 1 b)) (/ c 1)) c)",
    "input_weight_simple": 17,
    "input_weight_complex": 32,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (* (+ a -1) (+ c (* b c)))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.511406707
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (* a (- a 1)) (* (+ 1 b) (/ c 1))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.209782759
    },
    "speedup": 2.4377918826017537,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- (- (pow (/ 0 (+ 1 (+ 1 1))) (- (/ (+ a -1) 0) (pow -1 0))) -1) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (pow 0 (+ -1 (/ (+ a -1) 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.008590196
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 2 (pow 0 (- (/ (+ a -1) 0) 1))) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.0035217470000000004
    },
    "speedup": 2.4391860062633683,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ a 1) (/ -1 (/ -1 (* (pow (+ (/ (* a 1) 1) (- 0 -1)) (+ a a)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (/ -1 (/ -1 (pow (+ a 1) (+ a a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.023251841
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (/ -1 (/ -1 (pow (+ 1 (/ a 1)) (+ a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.009512975
    },
    "speedup": 2.4442239152315652,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (pow (/ 0 a) (/ (pow (+ a 1) (pow (- b 0) 1)) c)) 1) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 (/ (pow (+ a 1) b) c)) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.009685742
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (/ (pow (+ a 1) b) c)) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.003960525
    },
    "speedup": 2.4455702211196746,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a a) (* a (pow 1 (- (+ a (pow (pow b (pow 0 c)) c)) (/ 0 (+ b d))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* a (pow 1 (+ a (pow (pow b (pow 0 c)) c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.016356066
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* a (pow 1 (+ a (pow (pow b (pow 0 c)) c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.006678904
    },
    "speedup": 2.4489146722276587,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ 1 (+ (pow a a) (/ (pow (- c -1) (* 1 (+ c a))) d))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ 1 (+ (pow a a) (/ (pow (+ 1 c) (+ a c)) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.013905524999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ 1 (+ (pow a a) (/ (pow (+ 1 c) (+ a c)) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.005675937000000001
    },
    "speedup": 2.449908270652052,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* -1 -1) (- (pow a -1) (pow (pow 0 (* b (- b (* b 1)))) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.014774615999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 a) 1)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.006027324000000001
    },
    "speedup": 2.451272903198832,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 (pow (/ 0 a) 0)) (pow (* (+ (* a 1) (* a (- a b))) 0) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.039622788
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (pow 0 0)) (pow 0 b))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.016130271
    },
    "speedup": 2.4564241977087673,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (+ (pow 0 a) (+ (pow (* (* (- 1 (pow 1 b)) (pow b 0)) (pow c b)) -1) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (/ 1 (* (- 1 (pow 1 b)) (pow c b))) (+ (pow 0 a) -1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.030104407
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (pow 0 a) (+ -1 (/ 1 (* (- 1 (pow 1 b)) (pow c b))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.012240075999999999
    },
    "speedup": 2.459495104442162,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow 1 a) (* (pow 1 0) (+ -1 (/ a (pow (- a (pow b -1)) (* b b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 a) (+ -1 (/ a (pow (- a (/ 1 b)) (* b b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.012602803999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 a) (+ -1 (/ a (pow (- a (/ 1 b)) (* b b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.005121209
    },
    "speedup": 2.460904056053951,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (/ -1 (+ a (* a (/ (* a (/ (/ 0 a) -1)) 1))))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.016811113
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.006829746
    },
    "speedup": 2.4614550819313044,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (/ 0 (pow (* a -1) (+ (pow a (/ (+ b a) 1)) (pow a 0)))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012112393
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0049188289999999996
    },
    "speedup": 2.46245458014499,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (* (- a 0) (+ -1 a))) (- (pow (+ b (+ c (+ b (- c 1)))) -1) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (* a (+ a -1))) (- (/ 1 (+ -1 (* (+ b c) 2))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.060744345000000005
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (- (pow a 2) a)) (- (/ 1 (- b (- (- 1 (+ c c)) b))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.024630616
    },
    "speedup": 2.4662129846854013,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ 1 (* -1 (pow 0 (* (/ (/ (* (pow a -1) 1) (pow a b)) a) 0)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* -1 (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.015298687
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.006198143
    },
    "speedup": 2.4682694478007368,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (* (/ a (pow (pow c (pow (+ b (- (+ 0 b) c)) (/ 1 a))) -1)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* -1 (/ a (/ 1 (pow c (pow (+ b (- b c)) (/ 1 a)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.022298305
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 0 (/ a (/ 1 (pow c (pow (+ b (- b c)) (/ 1 a)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.009014683999999999
    },
    "speedup": 2.4735537041564633,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (- (* (pow a (pow (* (pow (- a 0) b) 1) 1)) 1) (* b b)) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (* b b) (* (pow a (pow a b)) -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.015662107
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (- (pow a (pow a b)) (* b b)) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.006330194
    },
    "speedup": 2.4741906804120064,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 (pow a (/ a (* (+ (pow -1 -1) (+ (+ 0 -1) 0)) (+ (+ b b) 1))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (/ a (+ -2 (* b -4)))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.021432895
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (/ a (* -2 (+ b (+ b 1))))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.008643297
    },
    "speedup": 2.4797128919670355,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (pow (+ (* -1 0) (pow (- a 1) (- (pow b 0) (+ 0 b)))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow (pow (+ -1 a) (- 1 b)) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.005155173
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow (pow (- a 1) (- 1 b)) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.002078916
    },
    "speedup": 2.479740884191569,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (/ a (* b (- (+ -1 a) (* 1 (+ 0 (+ 0 c)))))) (* a 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (* b (- (+ a -1) c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.077863528
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (* b (+ a (- -1 c)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.031376671
    },
    "speedup": 2.481573905657487,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ (- -1 a) (+ (+ b (/ (* 1 (* 0 a)) a)) (/ (pow a 0) d))) c) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.215973437
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.086944418
    },
    "speedup": 2.4840402865196016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (+ 1 (pow (* (pow -1 -1) (- (pow (* b c) 1) -1)) -1))) (pow 1 c))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (+ 1 (/ 1 (+ -1 (* -1 (* b c)))))) (pow 1 c))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.018317394
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (+ 1 (/ 1 (- -1 (* b c))))) (pow 1 c))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.007371425
    },
    "speedup": 2.484918994631296,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ (- (pow (pow a a) b) (+ b (/ (- b (* b (pow c -1))) 1))) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* -1 (+ (pow (pow a a) b) (* b (+ (/ 1 c) -2)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.275848657
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ 1 (- (/ (- b (/ b c)) 1) (pow (pow a a) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.11087442099999999
    },
    "speedup": 2.487937745352465,
    "weight_simple_diff": 2,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ 0 (* a (* a (+ (pow (+ (- (+ a c) -1) (/ -1 b)) (+ d 1)) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (+ b (pow (+ c (+ a (+ (/ -1 b) 1))) (+ d 1))) (* a a)))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.051831747
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (+ b (pow (+ c (+ 1 (+ a (/ -1 b)))) (+ d 1))) (* a a)))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.020816447000000002
    },
    "speedup": 2.4899420635999983,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (- b -1) (+ 0 (+ (pow (pow (* (/ 0 -1) a) -1) -1) (/ (pow -1 a) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ b 1) (+ (/ 1 (/ 1 0)) (/ (pow -1 a) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.011741395
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ b 1) (+ (/ 1 (pow 0 -1)) (/ (pow -1 a) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.004698373
    },
    "speedup": 2.499034240150793,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- 0 (pow -1 a)) (- (/ (+ 0 (pow (pow 1 (/ a -1)) (+ a c))) -1) c)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (* -1 c) (+ (pow -1 a) (+ c (pow (pow 1 (* -1 a)) (+ a c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.11345873
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* c (- (/ (pow (pow 1 (/ a -1)) (+ a c)) -1) (+ (pow -1 a) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.045360476999999996
    },
    "speedup": 2.5012684500650204,
    "weight_simple_diff": 0,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a a) (/ -1 (* b (* (* (pow (pow (+ 1 -1) a) (* b a)) (- d 0)) e))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (/ -1 (* (pow (pow 0 a) (* a b)) (* b (* d e))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.048622119
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a a) (/ -1 (* b (* (pow (pow 0 a) (* a b)) (* d e)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.019430684
    },
    "speedup": 2.5023369738296397,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (pow a (+ (* (pow (+ (* (* b 0) -1) (* a 1)) (/ 0 -1)) 0) d)) 1) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (pow a d)) e)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.01369469
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- (pow a d) 1) e)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.0054604269999999995
    },
    "speedup": 2.5079888440958924,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (+ (- a (pow (+ (- (pow b -1) (/ b c)) (* a 1)) d)) e) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (pow (+ a (- (/ 1 b) (/ b c))) d)) (+ 1 e))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.040240361
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (- a (pow (+ a (- (/ 1 b) (/ b c))) d)) (+ 1 e)) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0159854
    },
    "speedup": 2.517319616650193,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- 1 (- (+ a a) a)) (+ 0 (pow a (/ (pow 1 (pow b -1)) b))))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(47189)",
      "output_term": "(/ (- 1 a) (pow a (/ (pow 1 (/ 1 b)) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 2.886672604
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10120)",
      "output_term": "(/ (- 1 a) (pow a (/ (pow 1 (/ 1 b)) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.143668338
    },
    "speedup": 2.5240469706874062,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (pow (/ (/ a a) (* (* (/ c 1) 0) (- (+ b -1) 1))) 1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (/ 1 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.010321651999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (/ 1 0)) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.004073302
    },
    "speedup": 2.5339766116040496,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 (/ 1 (- a (/ (* b -1) (+ 1 (pow a 0)))))) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (+ a (* b 0.5))) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.01018692
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (- a (/ (- 0 b) 2))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.004016956
    },
    "speedup": 2.5359799808611294,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- a (* a (+ (- a (- (/ (pow -1 (- a a)) (- 1 a)) (/ 1 a))) 0))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10231)",
      "output_term": "(+ (- 1 a) (- (/ 1 (- 1 a)) (/ 1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.8249916380000001
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (* a (+ a (- (/ 1 a) (/ 1 (- 1 a)))))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.32530802600000003
    },
    "speedup": 2.536032228113548,
    "weight_simple_diff": -3,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(- a (+ -1 (+ (pow (/ a (- (+ 0 c) (* (* c c) a))) c) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (pow (/ a (- c (* c (* a c)))) c) -2))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.07130750200000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (- a (pow (/ a (- c (* a (* c c)))) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.02810173
    },
    "speedup": 2.5374773012195337,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- 1 (pow (/ a (* 1 (- 0 (/ (* a a) (* 0 0))))) (* a b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- 1 (pow (/ a (- 0 (/ (* a a) 0))) (* a b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.012054867
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- 1 (pow (/ a (- 0 (/ (* a a) 0))) (* a b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.004743612
    },
    "speedup": 2.5412843630549884,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (pow 0 (pow 1 (* 1 (- 0 -1)))) (+ 0 (- a b))) b)",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.042758685
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016778857
    },
    "speedup": 2.5483669716000317,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- a (* (* (+ (- -1 (/ (* 0 b) a)) (/ b 1)) b) -1)) 0) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (* b (+ -1 b))) 0) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.036823471
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (* b (+ -1 (/ b 1)))) 0) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.014414847000000001
    },
    "speedup": 2.554551636933781,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* 0 1) (- (pow (+ (* a (- -1 (- (- 0 a) a))) (- (/ -1 -1) 1)) a) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.075997866
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.029748763999999997
    },
    "speedup": 2.554656253953946,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (pow (+ -1 (/ (- a a) a)) (/ c d)) (* 1 c)) -1)",
    "input_weight_simple": 17,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow -1 (/ c d)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.009934313
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow -1 (/ c d)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.00388641
    },
    "speedup": 2.556167002452135,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 a) (pow a (+ 1 (+ b (/ (pow (+ (pow -1 c) -1) 1) (pow b -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 0 a) (pow a (+ (/ (+ -1 (pow -1 c)) (/ 1 b)) (+ 1 b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.038518705
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ 1 (+ b (/ (+ -1 (pow -1 c)) (/ 1 b))))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.015055385
    },
    "speedup": 2.558466953850732,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (- -1 1) (* (- (pow (+ 0 (/ 0 (/ 1 -1))) a) 1) -1)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -2 (+ 1 (* -1 (pow 0 a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.00850331
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -2 (- 1 (pow 0 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.00331531
    },
    "speedup": 2.5648612045329093,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ 1 (+ a (pow (* 0 a) (* 0 (* (pow a a) -1))))) (+ -1 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (+ a (pow 0 0))) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.009647144
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (+ 1 (pow 0 0))) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.003760895
    },
    "speedup": 2.5651192069972706,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ (+ (* (/ (* (/ (pow (/ -1 1) a) (* 0 1)) 1) b) 0) 1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.008998347
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ 1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.003506908
    },
    "speedup": 2.5658919481206808,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (* a (+ (/ a (- (pow (pow (* 0 a) a) a) (/ -1 0))) 0)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ a (- (pow (pow 0 a) a) (/ -1 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.019361143
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ a (- (pow (pow 0 a) a) (/ -1 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.007545192000000001
    },
    "speedup": 2.5660238997231613,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 1 (- a (- (- 0 (+ a 1)) (pow b c)))) (/ c 0))",
    "input_weight_simple": 17,
    "input_weight_complex": 32,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (+ 1 (+ a (+ a (pow b c))))) (/ c 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.066665941
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (+ (+ 1 a) (+ a (pow b c)))) (/ c 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.025940216
    },
    "speedup": 2.5699840355993957,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow a (* a (+ a (- -1 (+ (- b (- (+ a a) 0)) (* -1 0)))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (* a (+ -1 (* -1 (+ b (* a -3)))))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.43891374899999996
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (* a (- -1 (+ b (* a -3))))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.17066213400000002
    },
    "speedup": 2.571828552196587,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 1 (/ a (/ 1 (+ -1 (* (pow (pow a (+ a (pow -1 a))) -1) (+ (- a b) 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (/ 1 (+ -1 (* (/ 1 (pow a (+ a (pow -1 a)))) (- a b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 10,
      "simplification_time": 0.037143825
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (/ 1 (+ -1 (/ (- a b) (pow a (+ a (pow -1 a))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.014430308000000003
    },
    "speedup": 2.5740147057152205,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ -1 a) (+ (pow (pow (* 0 a) (- (pow (* a b) 1) -1)) 1) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (+ -1 (pow 0 (+ 1 (* a b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.0060107599999999995
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (+ -1 (pow 0 (+ 1 (* a b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.002325531
    },
    "speedup": 2.5846828100764943,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ (+ (* 0 (/ (* (+ (pow 0 a) (* -1 0)) (pow a a)) 1)) 0) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.0057304240000000005
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.002212095
    },
    "speedup": 2.5904963394429266,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (/ (pow 1 1) -1) (pow (* 1 -1) (- a (* 1 (/ (/ b c) 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* -1 (pow -1 (- a (/ (/ b c) 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.009790589999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 0 (pow -1 (- a (/ (/ b c) 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.003773176
    },
    "speedup": 2.5947875211757943,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a a) (/ (- 1 (+ (- (+ (/ (+ a b) a) (* b -1)) (pow d 1)) e)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10038)",
      "output_term": "(pow 1 (/ (+ d (* -1 (+ e (* b (+ -1 (/ 1 a)))))) 0))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.8350350689999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (+ 1 (+ b (- (- d e) (/ (+ a b) a)))) 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.321650389
    },
    "speedup": 2.596095318261841,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ a (* 1 (* (- (pow (* a c) (* (pow c (/ -1 b)) (+ 1 0))) a) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a (* -1 (pow (* a c) (pow c (/ -1 b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.04686217900000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- a (pow (* a c) (pow c (/ -1 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.01804597
    },
    "speedup": 2.596822393032905,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 1 (* 1 (+ (+ (pow -1 a) 1) (pow (* (/ 0 (pow (+ 0 1) a)) (+ -1 0)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 (+ (pow -1 a) (pow 0 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.014484743
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 (+ (pow -1 a) (pow 0 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.005567885
    },
    "speedup": 2.6014802748260784,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a -1) (* (- (/ b (- a (- 0 (* (* b -1) 0)))) (pow 1 (/ c b))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11880)",
      "output_term": "(* d (+ (* -1 b) (* a (pow 1 (/ c b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.016297998
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (- (pow 1 (/ c b)) (/ b a)) (* a d))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.38954213699999996
    },
    "speedup": 2.6089552360801473,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (* (+ (+ (pow (+ 1 (- (/ (- a 1) -1) 1)) (pow -1 b)) -1) -1) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(20457)",
      "output_term": "(+ 2 (* -1 (pow (+ 1 (* a -1)) (pow -1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 4.1335554000000005
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10306)",
      "output_term": "(- 2 (pow (/ (- a 1) -1) (pow -1 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 1.5808926529999998
    },
    "speedup": 2.6146970777275165,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (* (+ (* 1 b) (+ (- a 1) (pow (+ (+ a b) d) (/ 1 0)))) (/ 1 -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (* -1 (+ b (+ a (pow (+ b (+ a d)) (/ 1 0)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.393718869
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (- 1 a) (+ b (pow (+ b (+ a d)) (/ 1 0)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.150375478
    },
    "speedup": 2.6182385202459675,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (pow (+ 0 (* (+ (pow (- (pow (- -1 a) 0) (pow b c)) (+ 0 c)) 0) b)) a) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00788807
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003007075
    },
    "speedup": 2.6231703565757423,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (- (pow a a) (/ 0 (pow (+ b (/ -1 a)) (* (+ a (+ a 0)) (- b a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.09220437999999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.03499096
    },
    "speedup": 2.635091463623747,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow a (+ 1 (+ (+ a b) (pow c (/ (+ c (+ -1 -1)) (- a c)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (+ a b) (+ 1 (pow c (/ (+ c -2) (- a c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.043164134
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ b (+ (pow c (/ (+ c -2) (- a c))) (+ a 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.016373599
    },
    "speedup": 2.6362031951558116,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (+ (* (* a (+ 0 (/ (* 0 0) 1))) a) a) a))",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(39254)",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 3.368036168
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11342)",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.277138751
    },
    "speedup": 2.6371732635650016,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 0 a) (pow (pow -1 (+ (+ (* 0 (+ (- -1 1) 1)) (* a a)) a)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024341698999999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009218924
    },
    "speedup": 2.6404056482079685,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (+ a 1) (/ a (+ (* 1 a) (- -1 (+ (/ 1 c) b))))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (+ a 1) (/ a (+ a (- -1 (+ (/ 1 c) b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.044163626
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (+ 1 (/ a (- a (+ 1 (+ (/ 1 c) b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.016631172
    },
    "speedup": 2.6554728674563646,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (pow (* a -1) (* (pow a (/ (pow (pow 1 1) b) b)) (+ (+ a 1) 0))) c) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (* a -1) (* (pow a (/ (pow 1 b) b)) (+ a 1))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.016293966
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (- 0 a) (* (pow a (/ (pow 1 b) b)) (+ a 1))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.006123685
    },
    "speedup": 2.6608106066853536,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ 0 (* (* 1 (+ (/ (/ 0 (+ (pow b 1) a)) a) (pow a -1))) (- c a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (* (/ 1 a) c) -1))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.033190404
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (- c a) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.012440008
    },
    "speedup": 2.6680371909728673,
    "weight_simple_diff": 3,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (pow (+ (+ (/ -1 a) (/ b (/ (/ (* b 0) b) (+ 0 1)))) (- -1 c)) c) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ (+ (/ -1 a) (/ b 0)) (- -1 c)) c) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.050685976
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ (/ -1 a) (+ (/ b 0) (- -1 c))) c) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.018992752
    },
    "speedup": 2.668700986565822,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a (* a (pow (+ (- (pow b (/ 0 (/ a 0))) (* b 0)) a) 1))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.015768531
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005872486999999999
    },
    "speedup": 2.6851538368667316,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (- a (- 0 (+ a (- a (pow (* a (- (* -1 c) a)) (+ b a)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* -1 (+ (pow (* a (* -1 (+ a c))) (+ a b)) (* a -3))))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.09750974500000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (* a 3) (pow (- 0 (* a (+ a c))) (+ a b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.036290055
    },
    "speedup": 2.686955007370477,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (* 1 (- (- 0 a) (pow 0 (/ b (* (pow (pow a 0) d) (* -1 0)))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 (/ b 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.013275789
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (- 0 a) (pow 0 (/ b 0))) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.0049399280000000005
    },
    "speedup": 2.6874458494131894,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow (pow 1 (pow a (* (+ (- 0 (- a 0)) b) (pow (pow a b) b)))) a) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (pow 1 (pow a (* (+ (- 0 a) b) (pow (pow a b) b)))) a) e)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.025749077999999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (pow 1 (pow a (* (- b a) (pow (pow a b) b)))) a) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.009557087
    },
    "speedup": 2.6942391546712923,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* 0 (/ -1 (- (/ 1 (* 0 (* a (- (* 0 0) -1)))) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.00970651
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.003601851
    },
    "speedup": 2.694867166909458,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (- (pow -1 (pow (/ (pow (+ a (* 0 1)) -1) 1) (* (+ 0 1) a))) 1) -1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (pow -1 (pow (/ 1 a) a))) 2)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.012590747
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (- (pow -1 (pow (/ (/ 1 a) 1) a)) 1) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004671115
    },
    "speedup": 2.695447874864995,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (- 0 (/ a (pow a (* a c)))) (* (pow (- -1 a) (* 0 -1)) (* -1 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 0 (/ a (pow a (* a c)))) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.014997652
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ a (pow a (* a c))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.005537886
    },
    "speedup": 2.7081908150510863,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (* b (* b (pow (/ (+ (* (/ (pow 0 0) 0) (/ a 0)) (pow b 0)) 0) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (* b (pow (/ (+ (* (/ (pow 0 0) 0) (/ a 0)) 1) 0) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 10,
      "simplification_time": 0.01097205
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (* b (pow (/ (+ (* (/ (pow 0 0) 0) (/ a 0)) 1) 0) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 10,
      "simplification_time": 0.004049539
    },
    "speedup": 2.7094565578946153,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (- 1 a) (- (pow (+ 1 b) (/ b (* (* 1 b) b))) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (- 1 a) (- (pow (+ 1 b) (/ b (* b b))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.051214022000000005
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (- 1 a) (- (pow (+ 1 b) (/ b (* b b))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.018876662
    },
    "speedup": 2.713086773498408,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (* (+ 0 (pow (- (pow a a) a) (- (+ a (- (- -1 a) c)) (- 0 b)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(24781)",
      "output_term": "(+ 1 (pow (- (pow a a) a) (+ -1 (+ b (* -1 c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.9828400099999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10210)",
      "output_term": "(+ 1 (pow (- (pow a a) a) (+ b (- -1 c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.730418595
    },
    "speedup": 2.714662555927947,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow a (- 1 1)) (* (/ a 1) (* (- (+ (* -1 a) a) a) (/ b (/ 0 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(65914)",
      "output_term": "(pow 1 (* -1 (* a (* a (/ b 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 3.283470447
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10673)",
      "output_term": "(pow 1 (* a (* (/ b 0) (- 0 (/ a 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.208253178
    },
    "speedup": 2.7175351216001515,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (* a (+ (- -1 -1) (pow 1 (/ (+ (* 0 0) a) 0)))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* a (pow 1 (/ a 0))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.006801178999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* a (pow 1 (/ a 0))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.0024984679999999998
    },
    "speedup": 2.7221397272248433,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 0 1) (pow (pow (* (+ 1 a) a) (+ (/ (pow (- b 1) 0) 1) (- 0 b))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009314320000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0034216599999999995
    },
    "speedup": 2.7221640957897635,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (/ 0 (/ (- (/ (pow (pow (+ (pow a -1) 1) 0) (- a a)) 1) 0) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005165624000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001897303
    },
    "speedup": 2.722614152826407,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (/ (/ (* 0 1) (- -1 0)) (* 1 (/ a (pow (pow (* a a) -1) 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010317698
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0037884470000000003
    },
    "speedup": 2.723463730652692,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (* (pow (/ (pow (pow (* (+ 1 a) 1) a) a) -1) a) a) b) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (pow (* (pow (pow (+ 1 a) a) a) -1) a) (* a b)) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.014665109999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (pow (/ (pow (pow (+ 1 a) a) a) -1) a) (* a b)) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.005381558
    },
    "speedup": 2.7250677220239936,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (* (- (+ (pow (pow a (pow a (- 0 b))) (pow -1 0)) 0) b) b) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* b (- (pow a (pow a (- 0 b))) b)) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.018228294
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* b (- (pow a (pow a (- 0 b))) b)) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.006688042999999999
    },
    "speedup": 2.7255049047980107,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (* (* (- b (/ (* (+ (* 0 a) a) (- 0 c)) -1)) 0) c)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.032924787
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.012067641999999998
    },
    "speedup": 2.7283529789829695,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (- a (- b (- c b))) c) (+ b (+ 0 (- c (pow (- (- 1 -1) -1) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16865)",
      "output_term": "(* (+ c (+ a (* b -2))) (* c (+ b (- c (pow 3 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.934430154
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* c (* (- a (+ b (- b c))) (+ c (- b (pow 3 b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.34219984200000003
    },
    "speedup": 2.7306562987834457,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (pow a (+ (+ (pow (* (/ (* -1 a) 0) (pow a 0)) a) (+ 1 1)) b)) -1) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (pow a (+ (pow (/ (* a -1) 0) a) (+ 2 b)))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.021664185
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (pow a (+ (pow (/ (- 0 a) 0) a) (+ 2 b)))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.007915983
    },
    "speedup": 2.7367649728403913,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (pow 1 a) (pow a (/ (- (pow a (+ a 0)) (/ (+ 1 0) -1)) -1))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (pow a (+ -1 (* (pow a a) -1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.012092492
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (pow a (/ (+ 1 (pow a a)) -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.0044115529999999995
    },
    "speedup": 2.7410963894120735,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ a (/ a (+ b (+ (* (- d (* a d)) (* -1 -1)) (pow 0 -1))))) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ b (pow (/ a (/ a (+ (- d (* a d)) (+ b (pow 0 -1))))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.06540003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ b (pow (/ a (/ a (- (pow 0 -1) (- (* d (- a 1)) b)))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.023812923
    },
    "speedup": 2.7464091661489856,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (/ (/ (pow (* (- 0 (* (pow a (pow c -1)) b)) (+ a (pow a 1))) d) 1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (pow (* a (* (pow a (/ 1 c)) (* b -2))) d) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.180792127
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (/ (pow (* a (* (pow a (/ 1 c)) (* b -2))) d) 1) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.06580749899999999
    },
    "speedup": 2.7472876153521657,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ 0 (+ a (- (pow (- a (pow (* (- b 1) a) -1)) 1) -1))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.030456685999999997
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011063835000000001
    },
    "speedup": 2.752814553000835,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 (* (/ a 1) a)) (/ (+ (+ (/ 0 a) (pow (- a b) 0)) (+ a 0)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (* a a)) (/ (+ 1 a) 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.011389215000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (* a (/ a 1))) (/ (+ a 1) 0))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.004134952
    },
    "speedup": 2.75437659252151,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ (/ 1 (+ (* -1 (pow -1 (/ (/ (/ a a) 1) a))) -1)) a) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ 1 (+ -1 (* -1 (pow -1 (/ 1 a))))) a) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.020100662000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ 1 (- -1 (pow -1 (/ 1 a)))) a) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.007295961
    },
    "speedup": 2.755039671950001,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- a (/ 1 (/ (pow a a) (* (/ 0 (+ (* 0 -1) 0)) (- a a))))) (- 1 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (/ (pow a a) 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.010152616
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (/ (pow a a) 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.0036814969999999997
    },
    "speedup": 2.7577412123383507,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a 0) (* 1 (- -1 (+ a (pow (* a (pow (* 0 a) a)) (pow c 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (- -1 (+ a (pow (* a (pow 0 a)) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.03743089399999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 0) (+ a (+ 1 (pow (* a (pow 0 a)) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.013553062000000001
    },
    "speedup": 2.761803495033077,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ a a) (* -1 (/ (pow (+ a (- (/ 0 -1) 1)) (- -1 a)) a))) (* a c))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (+ a a) (/ (pow (+ a -1) (- -1 a)) a)) (* a c))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.025225756000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ a (/ (pow (+ a -1) (- -1 a)) a))) (* a c))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.009110393999999999
    },
    "speedup": 2.7688984691551215,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (* a (+ (/ -1 (+ (- (/ -1 (pow 1 1)) (+ 0 a)) (pow c b))) 1)) -1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (/ 1 (+ (- -1 a) (pow c b))) -2))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.09886435099999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (+ (/ -1 (+ -1 (- (pow c b) a))) 2)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.035696394
    },
    "speedup": 2.7695893036142527,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -2
  },
  {
    "base_term": "(* (* (pow -1 (* (* a b) -1)) (+ 1 (* -1 (/ 0 (* (* 0 a) 1))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.041002769
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014799951999999998
    },
    "speedup": 2.770466350161136,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (- -1 (pow (* (/ (+ (+ (pow (pow 1 a) 0) (/ 0 a)) (* 0 -1)) -1) 0) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- -1 (pow 0 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.00837928
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- -1 (pow 0 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.0030191149999999997
    },
    "speedup": 2.7754093500910035,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ -1 (/ (+ a (* (pow (* (+ (- a -1) a) (pow 1 b)) a) a)) 0)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.039236347
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014120893
    },
    "speedup": 2.778602387256953,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (pow (+ (pow -1 (* a (pow (pow 1 (/ (/ b -1) 0)) (+ c 0)))) 0) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (pow -1 (* a (pow (pow 1 (/ (* -1 b) 0)) c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.0074521380000000005
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (pow -1 (* a (pow (pow 1 (/ (/ b -1) 0)) c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.0026804380000000003
    },
    "speedup": 2.7801941324514874,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (- a a) (/ a (/ b (pow 1 (/ (pow b (* 1 a)) (+ 0 a)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019302812000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0069391999999999995
    },
    "speedup": 2.7817056721235884,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* -1 (- (/ (/ 0 a) (pow (* -1 (+ 1 (pow a a))) (/ a -1))) (- a b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.091863969
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.03295243
    },
    "speedup": 2.7877752566350953,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (/ (+ -1 a) (+ b (+ (pow (+ (+ a 0) -1) (/ 0 0)) a))) (/ c c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ -1 (/ (+ a -1) (+ (pow (+ a -1) (/ 0 0)) (+ a b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.03193999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (/ (+ a -1) (+ a (+ b (pow (+ a -1) (/ 0 0))))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.011448884000000001
    },
    "speedup": 2.789790690516211,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 1 (- 0 (/ (* a (- (- a (- -1 a)) 0)) (/ 1 (+ 0 b)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- 0 (/ (+ a (* a (+ a a))) (/ 1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.370631832
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (- a (* -2 (* a a))) (/ 1 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.132550265
    },
    "speedup": 2.7961606263103285,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- a -1) (/ -1 (+ (/ (+ 0 (+ a (pow (pow 1 b) -1))) b) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (/ -1 (/ (+ a (/ 1 (pow 1 b))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.027329897
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (/ -1 (/ (+ a (/ 1 (pow 1 b))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.009752186
    },
    "speedup": 2.8024380379947633,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (pow (- a a) 1) (* b (pow 0 (/ (* (pow (pow -1 a) d) (/ a b)) 1)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019381903
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006912702
    },
    "speedup": 2.8038100007782774,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (+ (pow a (* (pow b (pow b (- (- 1 -1) -1))) -1)) 1) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012375661000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004400337
    },
    "speedup": 2.8124348203330793,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (* a a) (- (- (pow (- c (+ (- d c) 0)) 1) (- (pow d b) e)) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11351)",
      "output_term": "(pow a (* -1 (* (* a a) (+ (- (pow d b) e) (* (- d c) 2)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 1.0972394319999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (* a (+ e (- (* 2 (- c d)) (pow d b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.389947286
    },
    "speedup": 2.813814767773508,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (pow -1 (- (+ (/ 0 b) (pow (- (- b a) 1) -1)) 0)))",
    "input_weight_simple": 17,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow -1 (/ 1 (+ -1 (- b a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.012864365
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow -1 (/ 1 (- b (+ a 1)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.004563086
    },
    "speedup": 2.8192247527221705,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (/ (* -1 -1) (- (/ 1 (- (pow (+ (+ a 1) b) (/ b a)) (- c 0))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (/ 1 (- (pow (+ 1 (+ a b)) (/ b a)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.014631434
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (/ 1 (- (pow (+ 1 (+ a b)) (/ b a)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.0051896
    },
    "speedup": 2.8193760598119315,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ -1 (- (/ -1 0) (- (- (/ (* 1 a) a) (* b 1)) (/ 1 -1)))) 0) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ -1 (+ (/ -1 0) (+ b -2))) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.036489446
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ -1 (- (/ -1 0) (- 2 b))) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.01293739
    },
    "speedup": 2.8204642512902525,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow 0 0) a) (pow (/ a (* 1 b)) (- (- (pow (* (+ 0 0) -1) 1) 0) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow 0 0) a) (pow (/ a b) (- 0 d)))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 4,
      "simplification_time": 0.010989673
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow 0 0) a) (pow (/ a b) (- 0 d)))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 4,
      "simplification_time": 0.003892373
    },
    "speedup": 2.8233864020740045,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 0 (* (+ (/ 0 (- (+ (* a a) 1) (/ (+ a a) 0))) c) 1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ c a)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 0.018191822
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ c a)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 0.006428736000000001
    },
    "speedup": 2.829766535754462,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (pow (/ -1 a) 0) 0) (- a (pow (* 1 (+ (pow (- 0 a) 0) (pow a 0))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- a (pow 2 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.020436140999999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- a (pow 2 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.0072071109999999996
    },
    "speedup": 2.8355524148302975,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 (- -1 (/ a (+ (* (pow 0 (+ (pow -1 1) -1)) (+ 0 -1)) a)))) (+ 0 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021069342999999997
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007430098
    },
    "speedup": 2.835674980330003,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ (* (- (pow a (pow (pow (* (* a -1) 1) 1) (pow 1 -1))) a) c) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (- (pow a (* a -1)) a) c) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.027688723000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (- (pow a (- 0 a)) a) c) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.009757334
    },
    "speedup": 2.837734467222297,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (* (- a (+ (pow (* (/ b a) (* (- c 0) c)) (pow (- 0 c) b)) d)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (+ (pow (* (/ b a) (* c c)) (pow (- 0 c) b)) d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.0595737
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ (pow (* (/ b a) (* c c)) (pow (- 0 c) b)) (- d a)))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.020982697
    },
    "speedup": 2.8391822080831646,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ (* 0 a) (pow (/ (+ (pow (pow b c) (+ c 1)) a) (/ (* c 1) a)) d)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a (pow (pow b c) (+ c 1))) (/ c a)) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.022246783
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a (pow (pow b c) (+ c 1))) (/ c a)) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.007828171
    },
    "speedup": 2.8418877155340625,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (* (pow a (/ b 0)) 1) (/ (* (pow (/ c c) (* -1 b)) (pow c 0)) e)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ (pow a (/ b 0)) (/ (pow 1 (* b -1)) e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.013763029999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ (pow a (/ b 0)) (/ (pow 1 (* b -1)) e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.004839982
    },
    "speedup": 2.843611815085263,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (- a -1) (- (- (+ b (/ (pow (pow a -1) a) (* 0 0))) c) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (+ a 1) (- (+ b (/ (pow (/ 1 a) a) 0)) c)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 1.776733063
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (+ a 1) (- (- c (/ (pow (/ 1 a) a) 0)) b)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.6221001310000001
    },
    "speedup": 2.856024254719213,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ 0 (pow -1 (+ (pow (- (pow -1 (pow 0 (+ a -1))) (- 0 b)) a) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007556305000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00264503
    },
    "speedup": 2.8567936847597197,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a 1) (+ (/ -1 (pow a (pow (* (pow (pow -1 0) b) c) 0))) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.017811346999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (/ -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.006226639
    },
    "speedup": 2.8605074101774646,
    "weight_simple_diff": -3,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(- -1 (/ (pow -1 a) (* (pow (/ (* (+ (+ a a) 0) -1) (- -1 -1)) b) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (pow -1 a) (pow (/ (* a -2) 0) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.021235386999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (pow -1 a) (pow (/ (* a -2) 0) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.007407457
    },
    "speedup": 2.8667580520548412,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 0 a) (+ b (pow (- 0 a) (/ (pow (+ (* d a) 0) (* d -1)) (+ a d)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ b (pow (- 0 a) (/ (pow (* a d) (* d -1)) (+ a d)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.015121454000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ b (pow (- 0 a) (/ (pow (* a d) (- 0 d)) (+ a d)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.0052739959999999995
    },
    "speedup": 2.8671720645976984,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (/ -1 (- 0 (* (* a (+ a (+ 1 (- b 0)))) 0))) b) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ -1 0) b) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.078579314
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ -1 0) b) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.027386731999999997
    },
    "speedup": 2.86924756119131,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (pow (* (/ (pow a (+ (/ (pow 1 b) a) (* b b))) (* b 0)) 1) a)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (pow (/ (pow a (+ (/ (pow 1 b) a) (* b b))) 0) a)) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.014464438999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (pow (/ (pow a (+ (/ (pow 1 b) a) (* b b))) 0) a)) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.005013297999999999
    },
    "speedup": 2.885214284090034,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a (/ a (* (* (- (- (pow (* b a) c) (/ 1 -1)) c) 1) b))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (* b (- (+ (pow (* a b) c) 1) c))) (* a a))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.062904005
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (* a (/ a (* b (- (pow (* a b) c) (+ c -1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.02178035
    },
    "speedup": 2.888108088253862,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow a (+ (* 1 1) (* (- (* (pow (* b 0) b) a) b) 0))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.005784608
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.002000628
    },
    "speedup": 2.8913961016240903,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (- a -1) (* a (* (* b 1) (+ (+ -1 a) (* c -1))))) (* -1 -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* b (* a (+ a (+ -1 (* -1 c))))) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 18,
      "output_depth": 8,
      "simplification_time": 0.604185401
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* b (* a (+ -1 (- a c)))) 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 16,
      "output_depth": 7,
      "simplification_time": 0.208570532
    },
    "speedup": 2.8967917720994256,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* 1 0) (pow (- (* (+ 1 1) (- (+ (+ 0 1) -1) (+ a a))) a) (- a a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.038375401
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013229792
    },
    "speedup": 2.9006806002694527,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (/ 1 1) (+ (/ 0 1) (- (* (+ 0 (/ 0 a)) (* -1 a)) 1))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.019873581
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.006841430000000001
    },
    "speedup": 2.9048869900006284,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (pow (pow 0 -1) (/ a a)) (pow (/ -1 a) (* (* a (* a c)) (pow d 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow 0 -1) (pow (/ -1 a) (* a (* c (* a d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.027181286
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow 0 -1) (pow (/ -1 a) (* a (* c (* a d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.009349369
    },
    "speedup": 2.907285614676242,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (* (pow (/ a b) (+ a (pow (- (pow -1 -1) a) (/ c c)))) 1) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow (/ 1 (/ a b)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.017035215
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow (/ 1 (/ a b)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.005858723
    },
    "speedup": 2.9076669096661507,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ (+ a -1) (pow -1 b)) (/ -1 (- (/ (pow (- -1 c) -1) (+ 0 a)) 0))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a (+ -1 (pow -1 b))) (/ -1 (/ (/ 1 (- -1 c)) a))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.047387184
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a (+ -1 (pow -1 b))) (/ -1 (/ (/ 1 (- -1 c)) a))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.016283881
    },
    "speedup": 2.910066955168734,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (/ (* -1 (pow (* 1 (+ (+ -1 (- a a)) a)) (pow (pow a b) b))) -1) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow (+ a -1) (pow (pow a b) b)) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.029459546000000003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ (- 0 (pow (+ a -1) (pow (pow a b) b))) -1) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.010085674999999999
    },
    "speedup": 2.920929536198619,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- (+ (/ 0 (pow (+ (pow a (* a (- (* -1 0) 0))) a) (* a a))) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.009828514
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.0033624530000000005
    },
    "speedup": 2.923018998332467,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ (pow (/ 0 (- (/ (* (+ a 1) -1) (+ a -1)) 1)) 1) (+ -1 -1)) -1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -3 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.046507992
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- -3 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.015898871000000002
    },
    "speedup": 2.9252386537383686,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a a) (* (pow a (* (* (* (pow (- 0 a) a) 1) 1) (/ a (* b -1)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a a) (pow a (* (pow (- 0 a) a) (/ a (* b -1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.023834902999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a a) (pow a (* (pow (- 0 a) a) (/ a (- 0 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.008144843
    },
    "speedup": 2.9263796736167897,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (pow (* (/ (pow (+ 0 (+ a (/ -1 a))) a) -1) 0) (pow c -1)) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (pow 0 (/ 1 c)) a) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.010698757
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (pow 0 (/ 1 c)) a) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.003654314
    },
    "speedup": 2.927705993518893,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow 1 (+ a a)) -1) (- (- a (pow (* 0 (* (* -1 a) a)) b)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow 1 (+ a a))) (- a (pow 0 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.014293473000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow 1 (+ a a))) (- a (pow 0 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.004881356999999999
    },
    "speedup": 2.928176119878141,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow -1 (+ a (+ (- (* a (/ (+ (pow 0 -1) b) (- a -1))) 0) c))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ (* a (/ (+ (pow 0 -1) b) (+ a 1))) (+ a c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.10759281700000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ (* a (/ (+ (pow 0 -1) b) (+ a 1))) (+ a c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.036709729999999996
    },
    "speedup": 2.9309073371010905,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (* 1 a) (* (/ 0 0) (pow (+ -1 1) (pow (- -1 a) a)))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (* (/ 0 0) (pow 0 (pow (- -1 a) a)))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.010235536
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (* (/ 0 0) (pow 0 (pow (- -1 a) a)))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.0034824490000000003
    },
    "speedup": 2.939177573024041,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (+ (/ a 0) (- (* (pow (- (/ 0 b) 0) (+ 1 a)) a) c)) 0) (+ d 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (/ a 0) (- (* a (pow 0 (+ a 1))) c)) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.065870012
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (* a (pow 0 (+ a 1))) (- (/ a 0) c)) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.022370347000000002
    },
    "speedup": 2.9445234801230398,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 0 (+ (pow 1 (/ 1 (- (+ (+ (/ (* a 1) a) (/ -1 1)) (/ 0 a)) a))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(20088)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 4.009443947
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10175)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.3576880409999998
    },
    "speedup": 2.9531407995955092,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow 1 a) (+ b (+ (* (/ (* -1 (* -1 -1)) a) 0) (pow (* c -1) -1)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ c (/ (pow 1 a) (+ b (/ 1 (* -1 c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.013686151
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ c (/ (pow 1 a) (+ b (/ 1 (- 0 c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.004632724
    },
    "speedup": 2.954234053226568,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ -1 (pow (pow (/ (pow a (* 0 a)) 1) -1) b)) (* -1 0))",
    "input_weight_simple": 17,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0043992
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001487829
    },
    "speedup": 2.9567914054639344,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow 0 (* (* 1 (- (pow (+ 0 -1) (pow (pow 0 -1) a)) b)) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (* a (- (pow -1 (pow (pow 0 -1) a)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.024604602
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (* a (- (pow -1 (pow (pow 0 -1) a)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.008310533
    },
    "speedup": 2.9606527042248674,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (/ a (* (+ (+ (- a (pow (pow 0 a) 0)) -1) (* (+ 1 a) b)) -1)) c) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ (/ a (* -1 (+ a (+ b (+ (* a b) -2))))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 9,
      "simplification_time": 0.267778255
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (/ a (- (- 2 (* (- a -1) b)) a)) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.090247524
    },
    "speedup": 2.967153481130408,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 0 (* (/ a (pow (* -1 (pow a (* a a))) (* (pow (* -1 a) 1) (+ 0 a)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ a (pow (* -1 (pow a (* a a))) (* a (* a -1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.018501858
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (pow (- 0 (pow a (* a a))) (- 0 (* a a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.00623294
    },
    "speedup": 2.968399824160027,
    "weight_simple_diff": 1,
    "weight_complex_diff": 5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (pow a -1) b) (/ (pow a c) (+ (pow (* (* (- e 0) b) -1) (+ c 0)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (/ 1 a) b) (/ (pow a c) (+ a (pow (* -1 (* b e)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.016106847
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (/ 1 a) b) (/ (pow a c) (+ a (pow (- 0 (* b e)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.005420233
    },
    "speedup": 2.9716152423705773,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (+ a -1) (+ (pow (pow (- a c) 0) (* a e)) (* (* (+ a d) -1) 0))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow (+ a -1) (pow 1 (* a e))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.012658564
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow (+ a -1) (pow 1 (* a e))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.00425915
    },
    "speedup": 2.9720869187513945,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (/ 1 1) (pow a (pow (* (pow b (/ (/ 0 b) -1)) -1) (pow (- -1 a) c)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow -1 (pow (- -1 a) c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.011710274
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow -1 (pow (- -1 a) c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.003937599
    },
    "speedup": 2.973963067341291,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (pow -1 a) (pow (* b (- 1 (/ b 1))) (* (+ (/ a a) 0) (+ c 1)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.015580136000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005232415000000001
    },
    "speedup": 2.977618556632071,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- (* a a) (pow (* (- (/ (* (+ 1 1) b) 0) (pow d 0)) c) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (pow (* (+ (/ (* 2 b) 0) -1) c) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.016807739
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (pow (* (- (/ (* 2 b) 0) 1) c) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.005643336
    },
    "speedup": 2.9783339145498338,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ a (- (+ (/ a (- (* (* (- 1 a) 0) 1) 0)) a) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 29,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (/ a 0) (+ a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.05467874400000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* a -2) (/ a 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.018348506
    },
    "speedup": 2.9800106886086533,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (- (+ (/ (/ 0 (/ (pow (- a -1) a) (+ (pow a 0) -1))) 0) 0) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- (/ 0 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.010843799999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- (/ 0 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.0036250450000000004
    },
    "speedup": 2.991355969374173,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (+ 0 (- 0 (- a (pow 0 (/ (- -1 (- (- 1 -1) 0)) 0))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ (pow 0 (/ -3 0)) (* -1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.010155718
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- (pow 0 (/ -3 0)) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.0033819120000000004
    },
    "speedup": 3.0029515847839914,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (+ (pow (- a a) (* 0 (/ a (+ (+ (pow a a) -1) a)))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ a (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.014500419
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a (pow 0 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.004821344
    },
    "speedup": 3.0075470657144563,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (+ -1 a) (+ (* a (- (+ (* b b) (- b 1)) 0)) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (+ a -1) (+ -1 (* a (+ -1 (* b (+ b 1)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.074444099
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (+ a -1) (+ -1 (* a (+ (* b b) (- b 1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.024705382
    },
    "speedup": 3.013274556936622,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (* (pow a (+ (/ (+ b (+ (- (/ b b) -1) 0)) 0) b)) b) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* b (* -1 (pow a (+ b (/ (+ b 2) 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.017075864
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (pow a (+ b (/ (+ b 2) 0)))) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.005665892
    },
    "speedup": 3.01379976886252,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (* a (- -1 1)) (+ c (* 0 (* 1 (+ (/ (pow c a) b) -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ c (* a 3))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.033874602999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- c (* a -3))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.01123501
    },
    "speedup": 3.0150932664946444,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- -1 0) (- (- (+ -1 1) (/ (+ (/ (* a 1) 0) (- b 0)) (+ 0 b))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- (- 0 (/ (+ (/ a 0) b) b)) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.08953038
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- 0 (+ b (/ (+ (/ a 0) b) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.029692887
    },
    "speedup": 3.0152130373850143,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (+ (pow (pow a (/ (pow b (* b (pow -1 1))) (/ d c))) (pow -1 b)) 0)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow (pow a (/ (pow b (* b -1)) (/ d c))) (pow -1 b))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.013008407999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow (pow a (/ (pow b (- 0 b)) (/ d c))) (pow -1 b))) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.004313236000000001
    },
    "speedup": 3.0159277164523335,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (/ (- -1 (* (* (/ a (* (- -1 -1) -1)) -1) 0)) (pow (pow -1 0) 0)) 0) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.003987086
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.001316161
    },
    "speedup": 3.029329998381657,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (- (/ (/ (pow (- (pow b (/ 0 a)) -1) (* 0 -1)) 0) 0) a) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (/ 1 0) 0) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.011484784000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (/ 1 0) 0) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.003772072
    },
    "speedup": 3.044688436487957,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow 0 (* 0 (pow (/ (* a (* (- a (/ 1 a)) -1)) -1) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.026700476
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.008763532000000001
    },
    "speedup": 3.046771096402683,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ a (pow (pow (pow 0 (/ -1 b)) (/ (+ (+ 0 (pow b 0)) a) (pow b 1))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (pow (pow (pow 0 (/ -1 b)) (/ (+ a 1) b)) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.018605503
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (pow (pow (pow 0 (/ -1 b)) (/ (+ a 1) b)) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.006093761
    },
    "speedup": 3.053205237291059,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (/ -1 (pow 1 (/ (+ (/ a 1) (- (+ a -1) 1)) 1))) (- 1 -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (/ -1 (pow 1 (+ (+ a a) -2))) 0.5))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.026704719
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (/ -1 (pow 1 (/ (+ (/ a 1) (- a 2)) 1))) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.008735075
    },
    "speedup": 3.0571825656906206,
    "weight_simple_diff": -1,
    "weight_complex_diff": -12,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (pow a (/ a (- (pow (pow (pow (/ -1 1) a) (* 0 a)) (* 1 1)) b))) 1) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (/ a (- 1 b))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.011622354
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (/ a (- 1 b))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.003800894
    },
    "speedup": 3.057794824059813,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (+ a a)) (+ a (pow a (* (pow (/ (pow (pow c a) d) (- d 0)) e) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (+ a a)) (+ a (pow a (pow (/ (pow (pow c a) d) d) e))))",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.013957960000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (+ a a)) (+ a (pow a (pow (/ (pow (pow c a) d) d) e))))",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.004560556
    },
    "speedup": 3.0605829640070206,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- (- 0 -1) (/ (pow 1 (* (+ a (- (* 0 a) a)) a)) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ 1 c))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.019028725
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ 1 c))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.006215535999999999
    },
    "speedup": 3.0614777229188284,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (+ a (+ (+ a (/ (/ (/ (* -1 -1) b) (+ 1 (+ c 1))) 1)) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (/ 1 b) (+ c 2)) (+ a d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.030324341
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (/ (/ 1 b) (+ c 2)) 1) (+ a d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.009902156
    },
    "speedup": 3.062397825281686,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ (pow a 0) (pow (+ (- (- (/ (- a a) a) (pow b b)) (- 1 0)) 1) -1)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(21201)",
      "output_term": "(+ b (+ 1 (/ 1 (- 0 (pow b b)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 4.115195451
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11482)",
      "output_term": "(+ b (+ 1 (/ 1 (- 0 (pow b b)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 1.342926461
    },
    "speedup": 3.0643490693717146,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ (/ -1 -1) (/ (pow (+ 0 (pow (/ -1 (+ a 1)) (+ a 1))) -1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ 1 (pow (/ -1 (+ 1 a)) (+ 1 a))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.00947347
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ 1 (pow (/ -1 (+ 1 a)) (+ 1 a))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.00307962
    },
    "speedup": 3.076181476935466,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* (+ a (/ b (- a (- (- (- 1 0) (* 0 0)) 1)))) d))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* (+ a (/ b a)) d))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.022904063
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* (+ a (/ b a)) d))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.007442825
    },
    "speedup": 3.0773346142089864,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (* (pow (/ a (+ (/ (* a (* (/ -1 -1) 0)) (+ a -1)) b)) 1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009586348
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.003113281
    },
    "speedup": 3.079178525806055,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (+ (* 1 (- (* (pow (pow (* (- 0 0) b) b) 1) (+ b (/ b a))) b)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (* (pow 0 b) (+ b (/ b a))) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.067716651
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (* (pow 0 b) (+ b (/ b a))) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.021940385
    },
    "speedup": 3.0863930145254974,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (/ (+ 0 a) (pow 0 (+ a (pow (pow (- -1 c) 0) -1)))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (pow 0 (+ a 1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.014693859000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (pow 0 (+ a 1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.004759147
    },
    "speedup": 3.0874984529790743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (* (- (+ a a) (+ 1 (/ (+ (pow (pow 0 a) 0) b) 0))) (+ 1 (* b 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a a) (+ 1 (/ (+ 1 b) 0)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.029770219
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a a) (+ 1 (/ (+ 1 b) 0)))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.009565984999999999
    },
    "speedup": 3.112091331943339,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ b (- (* (+ (- (+ -1 (/ b a)) 0) (- (* a -1) 1)) a) (/ -1 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14435)",
      "output_term": "(* a (/ b (+ (* a (* -1 (+ a 2))) (+ -1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.439552676
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ b (- -1 (* a (+ a (- 2 (/ b a)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.46222008400000003
    },
    "speedup": 3.114431254354581,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 0 (* (* 0 (- (- 0 (+ a a)) (/ (- (* -1 b) (pow 0 -1)) 0))) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.028989509999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.009280733
    },
    "speedup": 3.1236228862526265,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (/ a (* a (+ (+ (* (* a b) 0) (pow b a)) (pow (- 0 -1) 0)))) 1) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014531911
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004644057
    },
    "speedup": 3.129141395120689,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ -1 (pow (* (+ (pow (* (pow (/ 1 b) b) -1) (- 1 1)) a) (/ a 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.012949797
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.004132326
    },
    "speedup": 3.1337791355280293,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow (/ (/ (* a 0) (- -1 1)) (- (* (* (* a 0) -1) a) (- a 0))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.006200865
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.001977119
    },
    "speedup": 3.136313494534219,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (/ (pow b a) (pow c 1)) (/ d (pow (- 0 (- a (* 0 b))) (- 1 b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (pow b a) c) (/ d (pow (- 0 a) (- 1 b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.028476024
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (pow b a) c) (/ d (pow (- 0 a) (- 1 b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.009060941
    },
    "speedup": 3.142722593602585,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow (+ -1 (+ (pow -1 a) 0)) (* a -1)) (+ b d)) (* -1 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (pow (+ -1 (pow -1 a)) (* -1 a)) (+ b d)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.02160247
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (pow (+ -1 (pow -1 a)) (- 0 a)) (+ b d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.006842313
    },
    "speedup": 3.15718821983151,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 (+ (pow 1 (+ (* a a) a)) (* b (pow (+ -1 0) (+ c b))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (pow 1 (+ a (* a a))) (* b (pow -1 (+ b c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.013864634999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (pow 1 (+ a (* a a))) (* b (pow -1 (+ b c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.004379491
    },
    "speedup": 3.165809679709354,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a 0) (/ a (pow -1 (/ 0 (+ (* (* (/ -1 1) 0) (/ b a)) (- 1 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009968644999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0031467749999999997
    },
    "speedup": 3.16789252488659,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 -1) (* (- a a) (pow c (+ (pow (+ (pow a d) 1) (* 0 a)) (* 0 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007910997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002490615
    },
    "speedup": 3.176322715473889,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- a (pow (+ (/ 0 b) (pow 0 (/ -1 (/ (+ 1 a) -1)))) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (/ -1 (+ -1 (* -1 a)))) (* -1 a))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.018690882
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (/ -1 (/ (+ a 1) -1))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.00588314
    },
    "speedup": 3.1770248540745247,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* 0 (* (+ a (- (- 1 (* 1 (/ (+ 0 a) 1))) (* (* a 1) 0))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10642)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.81683928
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.256829029
    },
    "speedup": 3.1804787923720257,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (* -1 a) (+ (pow (pow 1 (- -1 (- (/ 0 b) a))) 0) c)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- 0 a) (+ 1 c)) 0)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.012784971999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- 0 a) (+ 1 c)) 0)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.0040082239999999995
    },
    "speedup": 3.1896850076243246,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 0 -1) (* 1 (- (- a a) (/ a (pow (+ (/ a -1) b) (+ 1 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (pow (+ (* -1 a) b) (+ 1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.01554145
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (pow (+ (/ a -1) b) (+ 1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.004871005
    },
    "speedup": 3.1906044029928116,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (+ a (* (pow 1 (pow (* 1 (pow b (pow a 0))) (/ a 0))) a))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a (* a (pow 1 (pow b (/ a 0))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.016010639
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (+ a (* a (pow 1 (pow b (/ a 0)))))) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.004987734
    },
    "speedup": 3.2100025783251476,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (/ -1 (/ -1 (* (+ b b) (/ (* (- -1 d) (- 1 1)) (pow c c))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ -1 (/ -1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.039577598000000005
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ -1 (/ -1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.012317709
    },
    "speedup": 3.213064864578308,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ 0 (* b (/ (/ a (/ (+ (pow (- c 0) a) (pow -1 -1)) -1)) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (/ (/ a (* -1 (+ (pow c a) -1))) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.016233202
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (/ (/ a (/ (+ (pow c a) -1) -1)) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.005039717
    },
    "speedup": 3.2210542774524837,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (/ -1 1) (* (* 1 1) -1)) (pow (* -1 (- (- a (pow (/ b b) d)) 0)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ 1 (* -1 (- a (pow 1 d)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.011052437
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ 1 (- (pow 1 d) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.003431057
    },
    "speedup": 3.2212921557409278,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow a -1) (* (- (- (* 0 b) (- (+ 0 (* 1 1)) (* 0 b))) 0) (pow c e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (pow c e))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 3,
      "simplification_time": 0.010626053
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (pow c e))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 3,
      "simplification_time": 0.003296595
    },
    "speedup": 3.2233419634501663,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a (pow (pow (* (+ 1 (+ (pow 1 (* a a)) b)) (* (+ 1 0) a)) a) -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (/ 1 (pow (+ a (* a (+ (pow 1 (* a a)) b))) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 10,
      "simplification_time": 0.034808227
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (/ 1 (pow (* a (+ (pow 1 (* a a)) (+ 1 b))) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.010794603
    },
    "speedup": 3.2245953834522676,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ -1 (+ (- (/ 0 (pow 0 (- 1 (- (pow (+ 0 1) 0) (/ a a))))) -1) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(21363)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 4.05390207
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11416)",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.255471726
    },
    "speedup": 3.228987149647686,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ (+ 0 (/ (pow (/ (* 1 (* (+ 0 a) a)) (* b 1)) (/ 1 b)) a)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.026104998999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008083134
    },
    "speedup": 3.229564052754785,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (+ (pow (/ (pow (/ -1 -1) (* (/ -1 0) -1)) 0) 0) 0) 0) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003310201
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001023323
    },
    "speedup": 3.2347567679022164,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a b) (- b (+ c (pow b (+ (pow 1 (+ (* 1 a) -1)) (+ d -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a b) (- b (+ c (pow b (+ (pow 1 (+ a -1)) (+ -1 d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.023998334000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a b) (- b (+ c (pow b (+ (pow 1 (+ a -1)) (+ -1 d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.007415826
    },
    "speedup": 3.2360972331335716,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ -1 (+ -1 (+ a (* (- (/ a (/ 1 -1)) (/ 0 1)) (pow 1 a))))) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (+ (* -1 (* a (pow 1 a))) (+ a -2)) a) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.052379325
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (+ (* (/ a -1) (pow 1 a)) (+ a -2)) a) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.01618331
    },
    "speedup": 3.2366261908101617,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (- -1 (pow (- -1 a) (pow (* 1 a) (+ (pow a (pow 1 a)) (/ a b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a (pow (- -1 a) (pow a (+ (pow a (pow 1 a)) (/ a b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.025819965
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ 1 (pow (- -1 a) (pow a (+ (pow a (pow 1 a)) (/ a b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.007976176000000001
    },
    "speedup": 3.237135815458435,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- -1 (pow -1 (/ (/ a a) (* (* (pow (/ 1 0) c) (- -1 1)) (- b 0))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow -1 (/ 1 (* (pow (/ 1 0) c) (* -2 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.01854956
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow -1 (/ 1 (* (pow (/ 1 0) c) (* -2 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.005727434
    },
    "speedup": 3.2387208652251602,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* (pow 0 (- (pow a 1) (+ a (* (pow -1 (/ a 0)) (* b 0))))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* b (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.0162637
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* b (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.005015273
    },
    "speedup": 3.2428344379259113,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (/ -1 0)) (* (pow 1 a) (/ (- 0 (- a 0)) 0)))",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 6,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ -1 0)) (* (pow 1 a) (/ (- 0 a) 0)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.006445529
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ -1 0)) (* (pow 1 a) (/ (- 0 a) 0)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.001987
    },
    "speedup": 3.2438495218923,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 (- a (pow a (/ (* (* (- b (/ 0 b)) (/ -1 0)) 0) (/ b b))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.01409269
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a 1) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.004340743
    },
    "speedup": 3.2466077812024343,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (* (- (pow (- (+ -1 (* -1 (/ 0 a))) (pow a a)) (- 1 b)) -1) -1) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (pow (- -1 (pow a a)) (- 1 b)) (+ 1 d)) (* a -1))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.12441588399999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (- -1 (+ (pow (- -1 (pow a a)) (- 1 b)) d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.038299033
    },
    "speedup": 3.2485385205417585,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ (+ (- a (- -1 b)) -1) (- (* -1 (* (- a (+ 1 1)) (pow 0 b))) b)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(34138)",
      "output_term": "(+ a (* -1 (* (+ a -2) (pow 0 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.8838044200000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "NodeLimit(10069)",
      "output_term": "(- a (* (- a 2) (pow 0 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.579822955
    },
    "speedup": 3.2489303911743197,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- (* (* (pow (pow (+ a (+ 1 (pow a 1))) (- c 1)) a) d) c) c) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (- (* (pow (pow (+ 1 (+ a a)) (+ c -1)) a) (* c d)) c) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.040959368999999995
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* (pow (pow (+ 1 (+ a a)) (- c 1)) a) (* c d)) (+ a c))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.012593501
    },
    "speedup": 3.2524211496072453,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (- (pow (/ a 1) a) (/ -1 (pow (+ -1 (/ (pow (* a 0) 0) (pow a a))) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 (pow (+ -1 (/ (pow 0 0) (pow a a))) a)) (* (pow a a) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.015034367
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 (pow (+ -1 (/ (pow 0 0) (pow a a))) a)) (pow (/ a 1) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.004618998
    },
    "speedup": 3.2548979237488305,
    "weight_simple_diff": -2,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ (pow (/ (- 1 0) a) (+ -1 (pow (- (* a 1) 1) (+ 1 a)))) a) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ a (pow (/ 1 a) (+ -1 (pow (- a 1) (+ 1 a))))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.023972961999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ a (pow (/ 1 a) (+ -1 (pow (- a 1) (+ 1 a))))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.007360666
    },
    "speedup": 3.2569012097546604,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (+ a (+ (pow (+ (pow b (+ (/ c 1) c)) (/ d -1)) d) -1))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (+ a (+ -1 (pow (+ (pow b (+ c c)) (* d -1)) d)))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.014379021
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (+ a (+ -1 (pow (+ (pow b (+ c (/ c 1))) (/ d -1)) d)))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 10,
      "simplification_time": 0.004414899
    },
    "speedup": 3.2569309060071365,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ -1 -1) (/ (+ (pow -1 -1) (+ a (pow (- b (/ a 1)) b))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -2 (/ (+ -1 (+ a (pow (- b a) b))) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.012195343
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -2 (/ (+ -1 (+ a (pow (- b (/ a 1)) b))) 0))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.003735706
    },
    "speedup": 3.2645350035575604,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (- (/ -1 (+ (+ (* a a) (* b 0)) (* (pow b (+ a 1)) (+ 0 -1)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ -1 (+ (* a a) (* -1 (pow b (+ a 1)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.028788393000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (/ -1 (- (* a a) (pow b (+ a 1))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.008818048
    },
    "speedup": 3.264712666567476,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 1 (/ 0 (- (+ a (pow (pow a (* (* (/ 0 b) 1) b)) b)) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.017076157
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005229621
    },
    "speedup": 3.2652762026158304,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 -1) (- -1 (pow 1 (+ a (/ (/ (- a (+ 0 a)) 0) (/ 1 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- -1 (pow 1 (+ a (/ (/ 0 0) (/ 1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.011962717
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- -1 (pow 1 (+ a (/ (/ 0 0) (/ 1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.003663072
    },
    "speedup": 3.265760814966236,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a (+ (+ a (- (- (+ (+ (pow -1 a) 1) c) (pow 1 b)) d)) -1)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(22869)",
      "output_term": "(+ b (pow a (+ (* -1 (+ (pow 1 b) d)) (+ a (+ (pow -1 a) c)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.829059525
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10349)",
      "output_term": "(+ b (pow a (+ (pow -1 a) (- a (+ (pow 1 b) (- d c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.559973288
    },
    "speedup": 3.266333527323539,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 0 (* (+ a a) (+ (pow -1 (/ (+ (* a 1) c) (* a -1))) -1))) (- b a))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 (* a (+ -2 (* (pow -1 (/ (+ a c) (* a -1))) 2)))) (- b a))",
      "output_weight_simple": 17,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.129201898
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 (* a (+ -2 (* (pow -1 (/ (+ a c) (- 0 a))) 2)))) (- b a))",
      "output_weight_simple": 17,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.03944818
    },
    "speedup": 3.275230897851308,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ (* (pow (- (- a a) (/ (* (- c 0) 0) 1)) a) 0) (/ 0 c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008268705
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0025218259999999996
    },
    "speedup": 3.2788562731925204,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (- 0 -1) (- -1 (pow 0 (+ a (/ (- (pow a a) b) c))))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (+ a (/ (- (pow a a) b) c))) 2)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.040938107999999994
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (+ a (/ (- (pow a a) b) c))) 2)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.012481313
    },
    "speedup": 3.2799520370973783,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (+ 1 b)) (pow a (/ b (* (- -1 (pow (pow (- 0 0) 1) (- b 1))) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ 1 b)) (pow a (/ b (- -1 (pow 0 (+ b -1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.012983090999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ 1 b)) (pow a (/ b (- -1 (pow 0 (- b 1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.003952422
    },
    "speedup": 3.2848443308938164,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (pow (+ (/ (+ -1 (+ (* (- (pow a a) 0) (- b b)) (pow b 1))) a) -1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021321908999999997
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006488236
    },
    "speedup": 3.2862412834551638,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (- a (* (/ -1 1) (- -1 (+ (* (+ (+ b c) -1) 0) (/ a c))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- -1 (/ a c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.070290619
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (/ a c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.02138362
    },
    "speedup": 3.2871243970852455,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (- (* (/ (pow b (pow (* (+ 0 b) b) a)) 1) 1) (/ -1 e))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (pow b (pow (* b b) a)) (/ 1 e)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.024687075999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 e) (- (/ (pow b (pow (* b b) a)) 1) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.007497355000000001
    },
    "speedup": 3.292771384041438,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow 1 a) (* (+ 0 a) (pow (/ a c) (- c (- (* -1 c) d)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 a) (* a (pow (/ a c) (+ c (+ c d)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.027994943
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 a) (* a (pow (/ a c) (+ c (+ c d)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.008489674000000001
    },
    "speedup": 3.2975286212403443,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (- (* a b) (pow 0 a)) (+ 1 (+ (/ 0 (* (- a a) 0)) (* 0 b)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* a b) (pow 0 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.012297039999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (* a b) (pow 0 a)) (+ 1 (/ 0 0)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 4,
      "simplification_time": 0.003721143
    },
    "speedup": 3.3046405365233205,
    "weight_simple_diff": -4,
    "weight_complex_diff": -12,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* (pow (* 1 1) (- -1 (+ (pow a -1) (* (pow a a) a)))) (pow (* a c) 1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 (- -1 (+ (/ 1 a) (* a (pow a a))))) (* -1 (* a c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.049570022
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (pow 1 (- -1 (+ (/ 1 a) (* a (pow a a))))) (- 0 c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.014997632
    },
    "speedup": 3.3051899126475432,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- a -1) (pow (* (/ a (+ (* (pow (* 0 a) 0) (+ a 0)) 1)) (/ -1 1)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (* -1 (/ a (+ a 1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.020414756
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a -1) (- 0 (/ a (+ (* a (pow 0 0)) 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.0061715039999999995
    },
    "speedup": 3.3079061441100905,
    "weight_simple_diff": -4,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (pow (/ (+ (/ (/ a a) (- (- (+ -1 a) 1) (pow a 0))) b) 0) (- b c)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ (+ (/ 1 (+ a -3)) b) 0) (- b c)) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.016464431999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ (+ (/ 1 (- a 3)) b) 0) (- b c)) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.004969515
    },
    "speedup": 3.313086287092402,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ (pow a (pow 1 (+ (* (* (pow a -1) c) b) 1))) a) -1) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014008925
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004223114
    },
    "speedup": 3.317202661353684,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 (+ a (/ a (pow (* (+ 0 a) (pow (pow b a) b)) (/ (/ c 1) b))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ a (pow (* a (pow (pow b a) b)) (/ c b)))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.021048725
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ a (pow (* a (pow (pow b a) b)) (/ (/ c 1) b)))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 43,
      "output_depth": 8,
      "simplification_time": 0.006336340000000001
    },
    "speedup": 3.3219058636373675,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ -1 (pow a (* (* a (pow (pow (- (pow 0 a) 0) 1) (- b -1))) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ -1 (pow a (* b (* a (pow (pow 0 a) (+ 1 b)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.014490508999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ -1 (pow a (* a (* b (pow (pow 0 a) (+ 1 b)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004355111
    },
    "speedup": 3.3272421759169855,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (pow (* (* a 1) (+ (+ (- (- 0 0) 1) (+ a -1)) -1)) (+ 0 b))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (pow (* a (+ a -3)) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.061444755
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (pow (* a (- a 3)) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.01846505
    },
    "speedup": 3.327624620566963,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (- 0 0) (* (pow a (- (/ (pow (+ b c) 0) 1) (+ 0 a))) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (* (pow a (- 1 a)) d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.011351206999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (* (pow a (- 1 a)) d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.003406221
    },
    "speedup": 3.3324928124158704,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ (pow (+ (/ -1 -1) 1) (+ 0 (- 0 (pow (* (- 0 -1) 1) (/ a 1))))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005827673
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001745684
    },
    "speedup": 3.3383321380043585,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 0) (* (pow a a) (pow (+ a -1) (pow (pow (- 0 1) 0) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 0 0) (* (pow a a) (pow (+ a -1) (pow 1 a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.012428353999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 0 0) (* (pow a a) (pow (+ a -1) (pow 1 a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.0037177910000000002
    },
    "speedup": 3.3429404719092597,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow (* -1 (/ -1 a)) -1) (* (pow a b) (* 1 -1))) (+ a (* (- b 0) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (/ 1 (/ 1 a)) (* -1 (pow a b))) (* a b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.023664311
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (/ 1 (- 0 (/ -1 a))) (- 0 (pow a b))) (* a b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.00705578
    },
    "speedup": 3.3538901439670736,
    "weight_simple_diff": -2,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow 1 (pow (- a (- (* (pow (* (/ b 1) a) (* d 0)) (* 0 0)) 1)) d)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 (pow (+ 1 a) d)) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.0069774519999999994
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (pow (+ 1 a) d)) 1)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.00207896
    },
    "speedup": 3.356222341940201,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 0 a) (+ (+ a (+ a 1)) (pow (+ b b) (+ (pow (* c a) c) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ (* (pow (+ b b) (+ a (pow (* a c) c))) -1) (* a -2)))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.055752247
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ (pow (+ b b) (+ a (pow (* a c) c))) (+ a a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.016606156
    },
    "speedup": 3.3573240550070707,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* (* a (+ (/ -1 (pow -1 (- (* (/ b b) -1) b))) 0)) (* -1 c)) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* (/ 1 (pow -1 (- -1 b))) (* a c)) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.071474181
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* (/ -1 (pow -1 (- -1 b))) (* c (- 0 a))) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.021286999999999997
    },
    "speedup": 3.3576446187814164,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* (* (* 0 a) 1) a) (+ (/ (pow (pow (- a b) a) (/ -1 a)) 0) 1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016145864
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004800542
    },
    "speedup": 3.3633418893116653,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ a 1) (+ a (pow (* (* -1 a) (pow (/ 1 c) -1)) 0))) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* c (pow (+ a 1) (+ a 1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.015470147
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* c (pow (+ a 1) (+ a 1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.004597286
    },
    "speedup": 3.3650608206668022,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a -1) (/ 0 (/ -1 (+ (+ (pow a -1) (/ (- a 0) -1)) (- (- 0 -1) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.049112285000000006
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.014590421
    },
    "speedup": 3.36606359747947,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ a a) (pow a (pow (- a (+ b (* c (* 1 1)))) (* (* b -1) e)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (+ a a) (pow a (pow (- a (+ b c)) (* (* b -1) e)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.02309608
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (+ a a) (pow a (pow (- a (+ b c)) (- 0 (* b e))))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.006843924
    },
    "speedup": 3.374683880183357,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (pow 1 (- (- (pow 0 a) (/ (pow (pow b c) (/ -1 a)) -1)) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow 1 (+ (pow 0 a) (pow (pow b c) (/ -1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.007575369
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow 1 (- (pow 0 a) (/ (pow (pow b c) (/ -1 a)) -1))))",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.002243918
    },
    "speedup": 3.3759562515207775,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (pow (pow 1 (pow (pow 1 a) (+ (* 0 (- (* -1 -1) -1)) b))) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (pow 1 (pow (pow 1 a) b)) c))",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.004664934
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (pow 1 (pow (pow 1 a) b)) c))",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.0013813710000000002
    },
    "speedup": 3.377031948694449,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 (* -1 1)) (- -1 (pow (- (/ a (+ (- (pow b 0) a) (* 0 b))) b) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013434933999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003973724
    },
    "speedup": 3.38094291400208,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- b (/ (+ (/ (pow (pow (+ 1 (+ 1 a)) a) (* b 0)) 0) -1) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- b (/ (+ (/ 1 0) -1) 0)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.007905833000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- b (/ (+ (/ 1 0) -1) 0)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.002332131
    },
    "speedup": 3.389960941302183,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (- (- -1 (pow (/ (* -1 (/ 1 (/ (/ -1 -1) 0))) (* 1 (/ 0 a))) a)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow -1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.019109615
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (/ (- 0 (/ 1 (/ 1 0))) 0) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.005635427
    },
    "speedup": 3.390979068666846,
    "weight_simple_diff": -4,
    "weight_complex_diff": -16,
    "depth_diff": -4
  },
  {
    "base_term": "(/ 1 (+ (/ (pow (pow (* (* a (+ 0 (pow 0 a))) (pow -1 a)) -1) a) 0) (pow 1 a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (/ (pow (/ 1 (* a (* (pow 0 a) (pow -1 a)))) a) 0) (pow 1 a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.015086301
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (/ (pow (/ 1 (* a (* (pow 0 a) (pow -1 a)))) a) 0) (pow 1 a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.004436849
    },
    "speedup": 3.4002286307241922,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 0 (/ (/ a a) (pow -1 (+ (/ (- (- a a) -1) (pow 1 -1)) a)))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (pow -1 (+ a 1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.008815214000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (pow -1 (+ a 1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.002591591
    },
    "speedup": 3.4014680557232997,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow (pow (* a (+ 1 1)) (- (pow 0 (pow (* (/ 1 -1) 1) (+ a b))) -1)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006261659000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001840726
    },
    "speedup": 3.4017333378243158,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a a) (* (* (/ (pow (* -1 a) (+ (pow 0 1) -1)) (* (* b -1) 0)) 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008251635
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002425063
    },
    "speedup": 3.4026476837921327,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (pow 1 (- -1 (+ (/ -1 (* a (* (/ -1 1) 1))) 0))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (pow 1 (+ -1 (/ 1 (* a -1)))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.006828975
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (pow 1 (- -1 (/ -1 (- 0 a)))) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.00200337
    },
    "speedup": 3.4087437667530214,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (- (pow a 1) a) -1) (+ (- 0 a) (+ (* (* (pow a 1) a) (+ c 0)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 0) (+ -1 (* a (+ -1 (* a c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.120151873
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 0) (+ -1 (- (* (* a a) c) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.035187641000000006
    },
    "speedup": 3.414604377713186,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ (pow -1 (+ -1 (pow (pow (pow (* (* -1 a) a) 0) (* 1 1)) a))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (pow -1 (+ -1 (pow 1 a))) 0))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.008835685
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (pow -1 (+ -1 (pow 1 a))) 0))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.002582248
    },
    "speedup": 3.4217027179418857,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (+ 0 a) (* -1 (* (- (+ 0 -1) (/ (pow b -1) a)) (* (- 0 b) d)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17253)",
      "output_term": "(- (/ a (* -1 (* d (+ b (/ 1 a))))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 1.211250593
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (* b (* d (- -1 (/ (/ 1 b) a))))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.35380507999999994
    },
    "speedup": 3.4234968955222467,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 1 (- (- 0 (+ a (pow b (pow 1 (+ (/ (- 1 b) 0) d))))) (* a 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (* (pow b (pow 1 (+ (/ (- 1 b) 0) d))) -1) (* a -2)))",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.031960607
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- 0 (+ a (+ a (pow b (pow 1 (+ (/ (- 1 b) 0) d)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.009331546
    },
    "speedup": 3.425006638771325,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (- 1 (/ (/ -1 -1) (/ 1 (+ (+ (* 1 0) a) (pow 1 -1))))) 0) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008575855
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0025012380000000002
    },
    "speedup": 3.428644135424138,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- a (* (+ -1 (pow a 0)) (pow (* (* -1 (- (* 1 -1) 0)) (/ 0 -1)) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007320871999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0021349480000000002
    },
    "speedup": 3.429063377656036,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (pow a 1) (- (- (pow (* 1 a) a) (+ b 0)) 1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 37,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (+ (- (pow a a) b) -1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.016766089
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (- (pow a a) (+ 1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.004885784
    },
    "speedup": 3.431606677659103,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (- 1 a) (+ b (pow 1 (/ b (+ 1 (pow (pow 0 a) b)))))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow 1 (/ b (+ 1 (pow (pow 0 a) b)))) (+ (- 1 a) b)) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.035840142000000005
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow 1 (/ b (+ 1 (pow (pow 0 a) b)))) (- 1 (- a b))) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.010430415000000002
    },
    "speedup": 3.4361185053518963,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow -1 a) (pow (* a (+ (/ 0 (+ (+ a 0) 1)) (pow a -1))) (pow -1 a))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 a) (pow 1 (pow -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.014980149000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 a) (pow 1 (pow -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.004359413
    },
    "speedup": 3.436276627151408,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ (pow (+ a (+ 1 a)) 1) (- 0 (/ (/ (- (/ a b) 1) (/ -1 a)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ -1 (/ a b)) (/ -1 a)) (+ (* a -2) -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.770773647
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (/ (- (/ a b) 1) (/ -1 a)) 1) (* 2 (- -1 a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.22422438700000002
    },
    "speedup": 3.4375103320050546,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- -1 (* (/ (- 0 -1) (pow (- (pow (pow (pow a a) a) (/ a 1)) (- -1 c)) 1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (+ 1 (+ (pow (pow (pow a a) a) a) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.02337805
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (+ 1 (+ (pow (pow (pow a a) a) (/ a 1)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.006787161
    },
    "speedup": 3.4444519586318934,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a (pow -1 (- (+ (* 0 (+ (/ (/ 1 1) -1) 0)) (+ (* a 1) a)) a))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(39985)",
      "output_term": "(+ 1 (- a (pow -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 3.531734009
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10877)",
      "output_term": "(+ 1 (- a (pow -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 1.024299147
    },
    "speedup": 3.4479517232283703,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 (- (* a 0) (+ a (* (pow a (pow (+ a 1) a)) (+ a 0))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 (* a (* -1 (+ 1 (pow a (pow (+ 1 a) a)))))) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 9,
      "simplification_time": 0.028948846
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (* a (- -1 (pow a (pow (+ 1 a) a))))) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.008381101
    },
    "speedup": 3.4540624197226593,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(- -1 (* (* 0 (/ (pow a (- (pow (pow a a) c) -1)) (* b (- (* a 0) 0)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018386739
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005320514
    },
    "speedup": 3.4558200579868785,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow (pow (+ 0 (pow a (- a (/ (+ 0 (pow b c)) (+ 1 -1))))) b) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007457047
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0021563010000000002
    },
    "speedup": 3.4582588423415834,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (* (/ 0 a) (* 1 0)) (/ 1 (- 0 (* (/ (+ -1 0) a) (pow b b))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.01466007
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004234165
    },
    "speedup": 3.4623284638175416,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (* 1 a) (/ (* a a) (+ (+ (/ -1 -1) b) (/ (pow -1 b) 0)))) (- -1 c))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ (* a a) (+ 1 (+ b (/ (pow -1 b) 0))))) (- -1 c))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.024845998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ (* a a) (+ 1 (+ b (/ (pow -1 b) 0))))) (- -1 c))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.007169428
    },
    "speedup": 3.4655481580957366,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ (- (/ (- a 0) (* (* (* (pow 0 a) a) 1) 1)) b) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024747594999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007121291
    },
    "speedup": 3.475155698594538,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 (pow a (pow b 1))) (* (- (+ 0 0) (/ 0 (+ c (* 0 d)))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010085297
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0029016899999999997
    },
    "speedup": 3.4756631480275293,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ -1 a) (* 0 (- (- (- (- 1 0) (* (pow -1 a) a)) (- (/ b c) a)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.246167129
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.070680976
    },
    "speedup": 3.4827918759922047,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* a (pow (- a b) (/ 1 (* (+ (+ (/ a 0) a) b) 0)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* a (pow (- a b) (/ 1 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.012054757999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* a (pow (- a b) (/ 1 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.003459568
    },
    "speedup": 3.484469159155131,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ -1 (* 1 (/ (- a -1) (/ a (pow (+ 0 (* -1 c)) (+ 0 1)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.01856257
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005314317000000001
    },
    "speedup": 3.4929361571769237,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow b (pow (* (- (/ (pow a (* -1 (+ c 0))) (/ d a)) -1) -1) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow b (pow (+ -1 (* -1 (/ (pow a (* -1 c)) (/ d a)))) b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.025190651
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow b (pow (- -1 (/ (pow a (- 0 c)) (/ d a))) b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.007208946000000001
    },
    "speedup": 3.4943597857439905,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* a (pow a (pow (- (pow (+ (+ (/ a -1) 1) (/ a 0)) (/ a -1)) a) a))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (pow a (pow (- (pow (+ (+ (* a -1) 1) (/ a 0)) (* a -1)) a) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.013917516999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (pow a (pow (- (pow (+ (+ (/ a -1) 1) (/ a 0)) (/ a -1)) a) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 10,
      "simplification_time": 0.003980483
    },
    "speedup": 3.496439251216498,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (+ (pow (+ a (+ b -1)) a) a) (+ (* d c) d)) (/ c b))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ a (pow (+ a (+ b -1)) a)) (+ d (* d c))) (/ c b))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.018381306
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ a (pow (+ a (+ b -1)) a)) (+ d (* d c))) (/ c b))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.005250713
    },
    "speedup": 3.500725710965349,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ (+ (/ 0 0) 0) (* -1 0)) (- 0 (+ -1 (- -1 (+ (+ a a) b))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ (/ 0 0) 0) (+ (+ a (+ a b)) 2)) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 2.361420838
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ (/ 0 0) 0) (- -2 (+ a (+ a b)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.6734168479999999
    },
    "speedup": 3.5066257178050293,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* 1 -1) (+ (/ a (* (- (- a (+ (/ -1 a) b)) (* b 0)) -1)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ b (/ a (+ b (+ (/ -1 a) (* -1 a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.041656373000000003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ b (/ a (- (/ -1 a) (- a b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.011871792
    },
    "speedup": 3.508853002141547,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* a b) (+ (/ (- 0 (- (* (- (- -1 a) b) (+ c 0)) (- a 0))) b) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10030)",
      "output_term": "(* a (+ b (+ a (* c (+ a (+ b 1))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 7,
      "simplification_time": 0.586335967
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (* b (+ (/ (+ a (* c (+ b (+ a 1)))) b) 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 9,
      "simplification_time": 0.16685977400000002
    },
    "speedup": 3.5139443914145536,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ a (+ 1 (* (- (+ (/ (- a (+ -1 (* -1 b))) a) (pow (+ 1 d) d)) b) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17691)",
      "output_term": "(/ a (+ b (* -1 (+ (pow (+ 1 d) d) (* (+ 1 b) (/ 1 a))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.284051373
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ 1 (- (- b (pow (+ 1 d) d)) (/ (+ a (+ 1 b)) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.36525601799999996
    },
    "speedup": 3.515483139828788,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 1 -1) (- a (+ 1 (+ a (pow (/ 0 (- (/ 1 a) -1)) (/ 1 a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(43816)",
      "output_term": "(pow 0 (/ 1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 2.490558336
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(11443)",
      "output_term": "(pow 0 (/ 1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.707806076
    },
    "speedup": 3.518701548981899,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (- 1 (+ -1 (pow (+ (* (- (/ 0 (+ -1 a)) 1) 1) (pow -1 (- 1 0))) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0051381809999999995
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0014583040000000001
    },
    "speedup": 3.5233949848591233,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (/ (/ a (* 0 -1)) (- a (- (pow (- a 1) (* a 1)) (- -1 b)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.04900127
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013897273
    },
    "speedup": 3.525962971296599,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ -1 (pow (* 1 (* (* 0 a) (/ a (* (pow 0 a) 0)))) b)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 b) -2)",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.030655761
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 b) 2)",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.008687374000000001
    },
    "speedup": 3.528771870533028,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* 0 0) (* (+ a a) (pow (* (* (pow a a) -1) (+ a -1)) a))) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (* (pow (* (pow a a) (+ 1 (* a -1))) a) (* a -2)) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.145839777
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (* (pow (* (pow a a) (- 1 a)) a) (* a -2)) e)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.041323682
    },
    "speedup": 3.5292057711604694,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ 1 (/ (* a a) (- (pow a a) (pow (* (* -1 -1) a) (+ a 1))))) (pow a c))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 (/ (* a a) (- (pow a a) (pow a (+ a 1))))) (pow a c))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.025111500999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (pow a c) (/ (* a a) (- (pow a a) (pow a (+ a 1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.007105561
    },
    "speedup": 3.5340631091619645,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (- -1 (- (+ a 1) (pow (- 0 (- (/ 0 1) a)) (pow -1 a)))) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (* (/ 1 a) (+ (pow a (pow -1 a)) -2))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.371787506
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ (pow a (pow -1 a)) (- -2 a)) a) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.10507912200000001
    },
    "speedup": 3.5381672298327724,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (- a (pow (- 1 (* (- b (/ -1 c)) (- (* (* -1 c) 0) (/ -1 1)))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- a (/ 1 (- 1 (- b (/ -1 c))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.025424672
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- a (/ 1 (- 1 (- b (/ -1 c))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.007181831
    },
    "speedup": 3.5401378840577005,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (/ a (/ (+ 1 -1) (- (/ (* (pow (- 0 -1) b) 1) (/ c 1)) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ a 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.014547888000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ a 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.004101621
    },
    "speedup": 3.5468630573131947,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- (- -1 1) (* (* a -1) (pow (pow 0 (- b 1)) (/ (/ -1 a) b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (* a (pow (pow 0 (+ -1 b)) (/ (/ -1 a) b)))) 2)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.038704137
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 2 (* a (pow (pow 0 (- b 1)) (/ (/ -1 a) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.010895828
    },
    "speedup": 3.5521978687622457,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (+ a b) (/ b (+ a (/ (pow (pow (+ -1 0) 1) (+ 1 c)) d)))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ b (+ a (/ (pow -1 (+ 1 c)) d))) (* (+ a b) -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.083437391
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ b (+ a (/ (pow -1 (+ 1 c)) d))) (+ a b))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.023486339999999998
    },
    "speedup": 3.552592315362888,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ 0 (- 1 (/ a (/ (pow 0 (* a b)) (+ (pow (pow 0 a) 0) (+ b c)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- 1 (/ a (/ (pow 0 (* a b)) (+ 1 (+ b c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.057084204
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a 1) (/ a (/ (pow 0 (* a b)) (+ b (+ 1 c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.0160442
    },
    "speedup": 3.5579339574425646,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (* (pow (+ a 0) (/ (- a (/ 0 (+ (* -1 a) a))) (* (/ 1 -1) a))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11606)",
      "output_term": "(* (pow a (/ a (* a -1))) (* a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.137976662
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (/ a (- 0 a))) (* a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.319605067
    },
    "speedup": 3.5605714035816582,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (/ -1 -1) (* a (pow -1 (pow (pow (+ (+ b 0) b) (pow 0 -1)) (pow a 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (* a (pow -1 (pow (pow (+ b b) (pow 0 -1)) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.010182579
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (* a (pow -1 (pow (pow (+ b b) (pow 0 -1)) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.002859105
    },
    "speedup": 3.5614568195291887,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ -1 a) (pow (pow 0 a) (* (pow (- a 0) a) (- (* 1 (pow c 1)) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 a) (pow (pow 0 a) (* (pow a a) (- c a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.028752597999999997
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 a) (pow (pow 0 a) (* (pow a a) (- c a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.008072221000000001
    },
    "speedup": 3.56191908026304,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (/ (pow a (- a (- (* (pow (- a c) 0) (/ b 0)) -1))) c)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ (pow a (- a (+ (/ b 0) 1))) c)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.025251271999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ (pow a (- a (+ 1 (/ b 0)))) c)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.0070619770000000005
    },
    "speedup": 3.5756661342850586,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (/ (pow a (pow -1 (+ (* (* (* a 0) 0) (pow 1 a)) b))) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (/ (pow a (pow -1 b)) 0)) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.016598512
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (/ (pow a (pow -1 b)) 0)) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.004641444
    },
    "speedup": 3.576152593891039,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (* a a) (- (* 1 (+ (pow (/ (+ a a) b) (pow -1 -1)) (+ c d))) a)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a a) (- (+ (/ 1 (/ (+ a a) b)) (+ c d)) a)) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.05391683
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a a) (- (/ 1 (/ (+ a a) b)) (- (- a c) d))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.015071981999999998
    },
    "speedup": 3.5772886406047997,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow (pow (pow a (+ 0 1)) (* 0 (/ (- (+ 0 1) (pow -1 1)) (* -1 0)))) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.005068123
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.001416617
    },
    "speedup": 3.577624015524309,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a (* (/ 0 1) (+ 0 (pow (+ (+ (pow -1 0) a) 1) (+ b 0))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a 0) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.009887858999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a 0) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.002758551
    },
    "speedup": 3.5844394394013372,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 1 0) (pow (+ (/ (pow (* a (* (* b 0) 0)) (pow 0 -1)) a) b) (- c c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009829687
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002741866
    },
    "speedup": 3.585035519605991,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (/ (/ 0 (pow 1 (/ (+ (pow -1 a) 0) 0))) 0) (* a 0)) (+ a (pow -1 -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 0 0) (+ -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.00972841
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 0 0) (+ -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.002711872
    },
    "speedup": 3.5873411429447994,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (pow (* 1 a) (pow (/ 0 a) (/ (* (- -1 0) a) (pow 0 1)))) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (pow 0 (/ (* a -1) 0))) (* a -2))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.027656459
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (pow 0 (/ (- 0 a) 0))) (+ a a))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.007707907
    },
    "speedup": 3.588063400349797,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a (pow (- b (/ a (- a c))) (* (* (* 1 1) 0) (- 0 (- a c))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a c)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.066579631
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a c)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.018476752
    },
    "speedup": 3.6034272149130975,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 0 a) (pow a (- c (+ 1 (- (- (+ (pow c 0) 1) 0) -1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 a) (pow a (+ c -4)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.005073136000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 a) (pow a (- c 4)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.0014063909999999999
    },
    "speedup": 3.6072016956877575,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (pow (pow (/ (+ a a) 1) b) (* (* b (/ b 0)) a)))",
    "input_weight_simple": 17,
    "input_weight_complex": 39,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (pow (+ a a) b) (* a (* b (/ b 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.013592922
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (pow (/ (+ a a) 1) b) (* a (* b (/ b 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.003767747
    },
    "speedup": 3.6077056129299554,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* (* 1 -1) (pow (* (+ (+ (+ (/ a b) -1) a) (* b -1)) b) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16651)",
      "output_term": "(+ a (/ 1 (* (+ a (* -1 b)) (+ 1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 1.4292982310000002
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 (* b (+ -1 (+ a (- (/ a b) b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.39602174100000004
    },
    "speedup": 3.609140819872311,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (pow (- 0 (- (pow (- (/ a (+ -1 a)) 0) -1) a)) 1) (/ a a))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (/ 1 (/ a (+ a -1)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.028362566999999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (/ 1 (/ a (+ a -1)))) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.007845771
    },
    "speedup": 3.615013361975515,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 1 (* (/ a -1) (+ (- 0 (pow (* (pow a 1) 0) (+ a a))) -1))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (- 1 (* a (+ 1 (pow 0 (+ a a))))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 7,
      "simplification_time": 0.09898612799999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ a -1) (+ 1 (pow 0 (+ a a)))) (- 1 b))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.027366677
    },
    "speedup": 3.6170313260904856,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 1
  },
  {
    "base_term": "(/ a (/ (pow 1 (+ (* 0 (+ (* 0 (* (- -1 a) 0)) a)) a)) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (pow 1 a) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.008830621
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (pow 1 a) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.002437132
    },
    "speedup": 3.623365907140032,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (* (* a (pow 0 (/ (/ 1 (* (* a b) b)) (+ 1 b)))) b) -1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (* a b) (pow 0 (/ (/ 1 (* a (* b b))) (+ 1 b)))) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.01898389
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (* b (* a (pow 0 (/ (/ 1 (* a (* b b))) (+ 1 b))))) -1) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.005232192
    },
    "speedup": 3.62828619439042,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (- a (+ b (* 1 (* 0 (+ (- (+ (* b b) 0) (- a 0)) b))))) (/ 1 -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.069474082
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a b) -1)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.019133171
    },
    "speedup": 3.6310803891315246,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (* (* (/ (pow (+ -1 a) (pow (+ (* b a) a) (/ -1 c))) -1) -1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014833674
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004079959
    },
    "speedup": 3.635740947396775,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (+ a a) (* (* -1 (- b (- (- (/ a -1) b) (* a 0)))) (+ b -1))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(16706)",
      "output_term": "(+ a (+ c (* b (+ (+ a (+ b b)) -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 14,
      "output_depth": 7,
      "simplification_time": 1.2330265790000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (- (+ b b) (/ a -1)) (+ -1 b)) (+ a (+ a c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.339079084
    },
    "speedup": 3.636398224433095,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (pow (pow 0 a) 0) (- (+ (pow a (pow (* a 0) (- (+ b a) -1))) 1) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (pow 0 (+ a (+ b 1)))) (+ (* -1 c) 2))",
      "output_weight_simple": 14,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.027820495
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (pow 0 (+ b (+ a 1)))) (- c 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.007647498000000001
    },
    "speedup": 3.637855805911946,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (+ a (/ (- (- (* 1 1) 1) a) (+ (+ (+ a a) 0) 0))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (+ a (/ (- 0 a) (+ a a))) d))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.050193726999999994
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (- 0 a) (+ a a)) (- d a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.013794274
    },
    "speedup": 3.6387364061348926,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ 1 (- (* a 1) (- (- (/ -1 (/ (/ 0 0) a)) (pow -1 a)) a))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.123568993
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.033957552
    },
    "speedup": 3.6389252381914927,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (+ a a) (pow -1 (pow (+ (* 1 0) (/ (+ a b) 0)) c))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ a a) (pow -1 (pow (/ (+ a b) 0) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.008791999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ a a) (pow -1 (pow (/ (+ a b) 0) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.002415925
    },
    "speedup": 3.639185405176071,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a (pow (- (* (* (pow (+ -1 (* -1 1)) (/ a 0)) a) -1) (pow a -1)) b)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016679164
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004562714
    },
    "speedup": 3.6555357184342476,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ 1 a) 1) (pow (* a (pow (+ (/ (+ (pow b -1) -1) b) 0) 0)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.022420796000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 a) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.0061086099999999996
    },
    "speedup": 3.670359705399429,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (pow (+ 1 -1) (- (+ (/ (- (+ 1 1) a) (* a 0)) (* 0 a)) 0))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019665443
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0053565190000000006
    },
    "speedup": 3.6713102296472764,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (/ (pow (/ (+ a (+ (* b 0) (pow b d))) (* d (/ -1 -1))) d) d) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.020494788
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005573855999999999
    },
    "speedup": 3.676949673619125,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (- -1 0) (* (pow (* -1 a) -1) (* a a))) (/ b (/ (- b b) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 (* a (* a (pow (* -1 a) -1)))) (/ b 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.013618373
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 (/ (* a a) (* -1 a))) (/ b 0))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.0037004539999999997
    },
    "speedup": 3.6801897821186267,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 2
  },
  {
    "base_term": "(pow a (* (* b 1) (+ (pow c (+ (/ (+ (pow 1 -1) b) (pow -1 0)) (/ b d))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (+ b (pow c (+ b (+ 1 (/ b d)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.028879746999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (+ b (pow c (+ (/ (+ b 1) 1) (/ b d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.007846573
    },
    "speedup": 3.68055544758202,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- (- (* (pow (* (+ (/ 1 0) a) a) (+ -1 a)) a) (/ 0 a)) 0) -1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (* -1 (pow (* a (+ (/ 1 0) a)) (+ a -1)))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.023153775999999997
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 (* a (pow (* a (+ (/ 1 0) a)) (+ a -1)))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.006286214
    },
    "speedup": 3.68326245336223,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (pow a (pow b (+ -1 (- b (pow (+ (/ b 0) a) (+ 0 1)))))) c) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow a (pow b (+ -1 (- b (+ a (/ b 0)))))) c) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.03797877
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow a (pow b (+ -1 (- b (+ a (/ b 0)))))) c) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.010309677
    },
    "speedup": 3.6837982412058112,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow -1 (/ (/ -1 (- 1 0)) (pow (- a a) (/ (pow (+ a 0) 0) 0)))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 (/ -1 (pow 0 (/ 1 0)))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.005714019
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 (/ -1 (pow 0 (/ 1 0)))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.001548939
    },
    "speedup": 3.6889890434678185,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (- 0 0) (* (pow 1 -1) (* (+ 1 0) (* 1 (/ a a))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.005823796
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.001578047
    },
    "speedup": 3.69050858434508,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a (/ a (/ b (+ (+ b (+ (/ b 1) (/ 0 b))) (* (/ e 1) b))))) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (/ b (* b (+ e 2)))) (* a e))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.058177291000000006
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (/ b (+ b (+ (/ b 1) (* b (/ e 1)))))) (* a e))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.015744679
    },
    "speedup": 3.695044592525513,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (/ -1 (+ a (pow 1 (+ (pow (pow (* -1 (/ a 0)) (+ a a)) (+ -1 a)) 0)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ a (pow 1 (pow (pow (* -1 (/ a 0)) (+ a a)) (+ -1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.010693655
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (+ a (pow 1 (pow (pow (- 0 (/ a 0)) (+ a a)) (+ -1 a))))) 1)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.002891523
    },
    "speedup": 3.698277689646598,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ a b) (/ (pow (pow -1 (pow a a)) (* (pow -1 -1) 1)) (* b 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a b) (/ (/ 1 (pow -1 (pow a a))) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.012558831
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ b (/ (/ 1 (pow -1 (pow a a))) 0)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.0033947979999999997
    },
    "speedup": 3.699433957484363,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 1 (/ (+ 0 (pow (pow (- a -1) (- (+ (- b a) 0) (+ a b))) (* 0 c))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(27922)",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 3.240472091
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10067)",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.875905764
    },
    "speedup": 3.699567035843824,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (* -1 a) a) (/ (* a 0) (pow (* -1 a) (pow (- (pow b 0) -1) (pow c 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007760324
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0020975909999999998
    },
    "speedup": 3.699636392413965,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 (* -1 a)) (* (+ 1 a) (/ 1 (* 0 (+ (+ (/ b 1) d) 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016328351999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004412779
    },
    "speedup": 3.7002424096017488,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (* (/ -1 0) (/ a (- -1 (/ -1 (* a (- (/ -1 0) b)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 0) (/ a (+ -1 (/ 1 (* a (- (/ -1 0) b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.032952447999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 0) (/ a (- -1 (/ -1 (* a (- (/ -1 0) b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.008897485
    },
    "speedup": 3.703568817480445,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (* a 1) a) (+ (/ 0 (/ (pow (pow (* b (- c 1)) a) b) (/ 1 c))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.021584607
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.005819608999999999
    },
    "speedup": 3.7089445356208643,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a 0) (+ (+ (pow b a) 1) (* (/ (- c (pow (* -1 0) b)) (- -1 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a 0) (+ (pow b a) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.012492364999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a 0) (+ 1 (pow b a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.003367771
    },
    "speedup": 3.709386713051451,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (- (/ 0 a) (+ (* 0 (+ 1 1)) (+ (+ (/ a -1) 1) 1))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (+ a -2) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.025064953
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 0 (+ 2 (/ a -1))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.006747443
    },
    "speedup": 3.7147335664784427,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(pow a (/ (pow 0 (- (pow b (pow a (- d c))) (pow (pow (/ c e) c) (* c 1)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow 0 (- (pow b (pow a (- d c))) (pow (pow (/ c e) c) c))) 0))",
      "output_weight_simple": 16,
      "output_weight_complex": 47,
      "output_depth": 8,
      "simplification_time": 0.013445098
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow 0 (- (pow b (pow a (- d c))) (pow (pow (/ c e) c) c))) 0))",
      "output_weight_simple": 16,
      "output_weight_complex": 47,
      "output_depth": 8,
      "simplification_time": 0.0036124670000000003
    },
    "speedup": 3.7218604349880566,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (/ a -1) -1) (+ -1 (- (- (pow 1 (+ a (pow (pow -1 0) -1))) 1) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow 1 (+ a 1)) (* -1 (+ c 2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.32970186
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a -1) (+ 2 (- c (pow 1 (+ a 1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.088487228
    },
    "speedup": 3.7259824660797376,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* 0 (/ a (* 0 a))) (/ (/ (pow a (/ 0 (/ 1 (* b a)))) 1) (+ -1 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.009364525
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.00251301
    },
    "speedup": 3.7264177221738075,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (- (/ (pow (/ (pow (pow (pow (/ 0 a) -1) -1) a) (pow (* 0 0) a)) a) 1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* -1 (pow (/ (pow (/ 1 (/ 1 0)) a) (pow 0 a)) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.013600550000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (pow (/ (pow (/ 1 (pow 0 -1)) a) (pow 0 a)) a) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.003639929
    },
    "speedup": 3.736487717205473,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow (/ (pow (/ a (pow a -1)) b) (+ (- (+ -1 1) c) 1)) c) (+ a 0)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow (/ (pow (/ a (/ 1 a)) b) (+ 1 (- 0 c))) c) a) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.014839736999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow (/ (pow (/ a (/ 1 a)) b) (- 1 c)) c) a) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.003965169
    },
    "speedup": 3.742523206450973,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (- a (* (* 1 b) (* a (/ -1 (- (- a 0) c))))) 1) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (* (* a b) (/ 1 (- a c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.10775562600000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (- a (* a (* b (/ -1 (- a c))))) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.028788888
    },
    "speedup": 3.7429589499948737,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(* -1 (/ (+ a (pow b (* (- (+ a (+ -1 (+ 1 1))) (+ b c)) 0))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ (+ a 1) 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.034217747
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (+ a 1) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.009141654
    },
    "speedup": 3.7430586412480715,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (+ (+ 1 1) (/ (/ (* (- (* -1 0) -1) -1) (pow 1 b)) (/ a a))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ -1 (pow 1 b)) 3))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.010491244
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ (/ -1 (pow 1 b)) 1) 3))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.002802423
    },
    "speedup": 3.743633277346068,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (- a (/ (* 0 -1) (/ (pow (* 1 (- (pow b b) 0)) (pow 0 c)) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.015831363
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.004222222
    },
    "speedup": 3.749533539449134,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (/ a 1) (- (/ (pow a b) (pow (- (pow b b) a) (+ d d))) 1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow a b) (pow (- (pow b b) a) (+ d d))) (+ a -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.019506431
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 1) (- (/ (pow a b) (pow (- (pow b b) a) (+ d d))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.005198838
    },
    "speedup": 3.752075175260318,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* (+ 1 0) (* 0 -1)) (/ (+ (* -1 0) (/ a a)) (* a -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 5,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 (* -1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.003404532
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 (- 0 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.0009066580000000001
    },
    "speedup": 3.755034423123162,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (pow (/ 0 (pow a (- b (+ (* (+ a c) 0) d)))) d)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (pow 0 d)) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.010874588000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (pow 0 d)) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.002895649
    },
    "speedup": 3.7554924647289782,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ (+ a (pow 0 (* (/ (/ 1 (pow 0 -1)) 1) (/ a a)))) 1) (/ b 0)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (+ a (pow 0 (/ 1 (pow 0 -1)))) (/ b 0)) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.015688237
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ (+ a (pow 0 (/ (/ 1 (pow 0 -1)) 1))) 1) (/ b 0)) 0)",
      "output_weight_simple": 14,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.004171459999999999
    },
    "speedup": 3.760850397702484,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (pow (pow (* 1 (* b (+ (pow (+ a (- 1 -1)) 0) (- 1 a)))) 1) (/ b a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (+ b (* b (- 1 a))) (/ b a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.031940916
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (* b (+ 1 (- 1 a))) (/ b a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.008473379
    },
    "speedup": 3.7695606439886618,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 1 (pow -1 (/ 1 -1))) (/ (pow 1 (+ (- (+ a a) (/ a 0)) 0)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024039215
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006377099
    },
    "speedup": 3.769616090325711,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (* (pow (/ (pow a (/ b (* (pow -1 1) 1))) (* (pow b 0) a)) a) 1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ 1 (pow (/ (pow a (* b -1)) a) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.01601363
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ 1 (pow (/ (pow a (/ b -1)) a) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.004242695
    },
    "speedup": 3.774400469512892,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (- (pow (pow a 0) (pow (pow (pow (/ a 0) 1) (pow 0 a)) (* -1 c))) -1) -1) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (+ 1 (pow 1 (pow (pow (/ a 0) (pow 0 a)) (* -1 c))))) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.007648663
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (+ 1 (pow 1 (pow (pow (/ a 0) (pow 0 a)) (- 0 c))))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.0020260340000000003
    },
    "speedup": 3.7751898536747155,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a b) (* (/ (pow b (pow (pow (- (- a -1) b) 0) (pow 1 b))) 0) (pow e -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a b) (* (/ (pow b (pow 1 (pow 1 b))) 0) (/ 1 e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.023741187
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a b) (/ (/ (pow b (pow 1 (pow 1 b))) 0) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.006282156
    },
    "speedup": 3.7791463631275635,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a 0) (* -1 (* (+ -1 (pow (- (pow (pow a 1) 1) (/ a b)) (/ -1 0))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (* (+ -1 (pow (- a (/ a b)) (/ -1 0))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.086486678
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (* (+ -1 (pow (- a (/ a b)) (/ -1 0))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.022789399000000002
    },
    "speedup": 3.7950398779713317,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (- 0 (pow (- b (* (* 0 0) (pow 0 (* -1 b)))) 1))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (- 0 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.010209285
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (- 0 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.0026899290000000006
    },
    "speedup": 3.7953734094840414,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a a) (* c (* (* (* 0 (+ (* (/ c d) a) a)) -1) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.116580517
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.030697303000000002
    },
    "speedup": 3.797744609681182,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ a a) 1) (pow (/ -1 0) (+ (- (/ (+ (* 1 -1) -1) (- 0 1)) 0) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a a) (/ -1 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.016501653
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a a) (/ -1 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.004334386
    },
    "speedup": 3.8071489248996286,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* (+ -1 0) -1) (pow (- a 0) (/ (pow 1 a) -1))) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 35,
    "input_depth": 6,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (pow a (* -1 (pow 1 a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.004995558
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (pow a (/ (pow 1 a) -1))))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.00131141
    },
    "speedup": 3.8093029639853286,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (* (/ -1 0) (* (- (/ (+ (+ 0 a) 0) (+ -1 0)) (+ -1 a)) -1)) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ -1 0) (+ -1 (+ a a))) (+ b 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.20952365499999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ -1 0) (- (+ -1 a) (/ a -1))) (+ b 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.054978917999999995
    },
    "speedup": 3.810981783963082,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a a) (- (+ (pow a a) -1) (pow b (* (- (/ (pow c b) -1) b) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- (+ (pow a a) -1) (pow b (- (* -1 (pow c b)) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.018074995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- (+ (pow a a) -1) (pow b (- (/ (pow c b) -1) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.004738688
    },
    "speedup": 3.814345869574026,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (/ (/ 1 (* (* a (pow 1 a)) (pow (/ (* a a) 1) (* -1 b)))) 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ 1 (* (* a (pow 1 a)) (pow (* a a) (* -1 b)))) 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.01663689
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (/ 1 (* a (* (pow 1 a) (pow (/ (* a a) 1) (- 0 b))))) 0) 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 10,
      "simplification_time": 0.004357137
    },
    "speedup": 3.818307755757967,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(+ a (- a (+ (* (/ c 1) (- (pow (+ (+ 1 b) a) -1) (* 1 0))) (+ -1 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (+ (* c (/ 1 (+ 1 (+ a b)))) -2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.035803027
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (+ (/ (/ c 1) (+ a (+ 1 b))) -2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.00934022
    },
    "speedup": 3.8332102455830808,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (/ (/ (pow (/ -1 (* (+ (* (+ 0 a) 0) (/ a a)) -1)) b) 1) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.008111049
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow 1 b) 1) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.002113286
    },
    "speedup": 3.8381217686579103,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ a (pow (+ 1 (- a c)) b)) (+ 0 (* a (* c -1))))",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 6,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (pow (+ 1 (- a c)) b)) (* a (* c -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.083386694
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (pow (+ 1 (- a c)) b)) (* c (* a -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.021722698999999998
    },
    "speedup": 3.8386893820146386,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 1 (* (- (+ a (/ (/ -1 a) (/ (- 1 1) a))) -1) 1)) (* -1 a))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (+ (/ (/ -1 a) 0) (+ 1 a))) (* a -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.022771873
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (+ 1 (+ a (/ (/ -1 a) 0)))) (- 0 a))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.005929418
    },
    "speedup": 3.8404904157541266,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (* (* (- 1 (* (* a (/ (* (* a 1) a) -1)) b)) 0) (/ c c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.06516053399999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.016947544999999998
    },
    "speedup": 3.844836169486495,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (pow a -1) (+ (- a b) (/ (* (+ -1 b) (* b -1)) (- 1 0)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14176)",
      "output_term": "(+ (/ 1 b) (* -1 (* (/ 1 a) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.7753805869999999
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ (- a b) (/ (- b (* b b)) 1)) a) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.201578621
    },
    "speedup": 3.8465417768682912,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (* (* (/ 1 -1) (/ 0 (+ (pow a 0) (+ (* 1 -1) 0)))) (pow b -1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.029100476
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007564768000000001
    },
    "speedup": 3.846843155004885,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (pow a (* a c)) (* (/ c a) (pow c (* 1 e)))) (+ a 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow a (* a c)) (* (/ c a) (pow c e))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.017673928
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow a (* a c)) (* (/ c a) (pow c e))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.004585390999999999
    },
    "speedup": 3.854399330395162,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (pow a (* (pow (/ (- a (/ b (* b a))) (/ 1 1)) -1) -1)) 1) (+ 0 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (* -1 (/ 1 (- a (/ b (* a b)))))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.020340866
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (/ -1 (/ (- a (/ b (* a b))) 1))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.005276923
    },
    "speedup": 3.8546831174152056,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ -1 a) (/ b (* 1 (* (+ (pow a (* (pow 1 a) b)) -1) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 a) (/ b (+ -1 (pow a (* b (pow 1 a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.021765632
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 a) (/ b (+ -1 (pow a (* b (pow 1 a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.005643463
    },
    "speedup": 3.85678651565537,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- a (pow a (+ (- (+ -1 -1) (+ (* a b) c)) -1))) d) (- (pow d c) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- a (pow a (+ (* -1 (+ (* a b) c)) -3))) d) (pow d c))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.044098212
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- a (pow a (- -1 (+ (* a b) (- c -2))))) d) (pow d c))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.011414429
    },
    "speedup": 3.863374330857899,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a (+ b (* (* c (- (pow b (+ (pow d -1) 0)) (* b b))) 0))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ a a))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.037404402
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.009676002
    },
    "speedup": 3.865687708621805,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 a) (- a (- -1 (+ (- (* (pow (- a b) b) (+ c 1)) c) e))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (+ 1 (+ (- (* (pow (- a b) b) (+ 1 c)) c) (+ a e))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.536296945
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (+ (* (pow (- a b) b) (+ 1 c)) (+ a (- 1 (- c e)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.13800347899999998
    },
    "speedup": 3.886111776935711,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (+ (/ a (pow b 0)) b) (+ b (pow (pow (- (* (pow b -1) c) 1) b) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ (+ b a) (pow (+ -1 (* (pow b -1) c)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.029129769
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ (/ a 1) (+ b (pow (- (/ c b) 1) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.007490874
    },
    "speedup": 3.888700971341929,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (- 0 (* (* (pow -1 (/ (+ (+ b a) 1) a)) a) (+ a (* -1 b))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* (* a a) (+ 1 (* (pow -1 (/ (+ b (+ a 1)) a)) (+ b (* a -1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.041161805
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (* a (* (pow -1 (/ (+ b (+ a 1)) a)) (- b a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 9,
      "simplification_time": 0.267698183
    },
    "speedup": 3.8893121848346652,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(* -1 (* a (/ (pow (+ -1 a) (pow (pow 0 (* 0 0)) (/ (/ 0 1) b))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (* a (/ (+ -1 a) 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.016846141
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (/ (+ -1 a) 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.004329568
    },
    "speedup": 3.890951937930066,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (- (* (/ (/ (* (pow (- b 0) 0) 1) (/ c a)) 1) c) e) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (* c (/ 1 (/ c a))) e) (+ a -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.039763217
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (* c (/ (/ 1 (/ c a)) 1)) (+ 1 e)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.010200195
    },
    "speedup": 3.8982800819003947,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (+ (- -1 (pow (* 0 1) (/ (pow (+ 1 a) a) 0))) a) 0) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013272474999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0033987080000000003
    },
    "speedup": 3.905153075815868,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (* (+ -1 0) -1) (- (/ 0 a) (pow a (* (/ -1 0) (+ b 0))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- 0 (pow a (* (/ -1 0) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.008986613
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- 0 (pow a (* (/ -1 0) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.002298374
    },
    "speedup": 3.909987234453574,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ -1 a) (/ a (* (- (- 0 (* (/ (- -1 0) 0) 1)) (+ (* 0 b) 1)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 a) (/ a (* (* -1 c) (+ 1 (/ -1 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.08302658100000002
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 a) (/ a (* (- -1 (/ -1 0)) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.021218706
    },
    "speedup": 3.912895583736351,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* 1 (- b (pow 0 (- (/ (pow (- (+ 1 0) b) (/ b d)) (- 1 a)) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- b (pow 0 (- (/ (pow (- 1 b) (/ b d)) (- 1 a)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.039703712
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (- b (pow 0 (- (/ (pow (- 1 b) (/ b d)) (- 1 a)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.010125997
    },
    "speedup": 3.920968177257015,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a (pow (- (- 1 (pow (+ 0 (/ (+ a 1) -1)) 1)) a) a)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 2 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.036065681
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 1 (+ a (/ (+ a 1) -1))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.009182847
    },
    "speedup": 3.9275053804119797,
    "weight_simple_diff": -5,
    "weight_complex_diff": -9,
    "depth_diff": -4
  },
  {
    "base_term": "(/ a (/ a (/ (- (- (* -1 (- (- a (+ -1 -1)) (* 0 0))) 1) 1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (+ -1 (* (pow a -1) -4))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.200767615
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a (/ (- -4 a) a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.051096235
    },
    "speedup": 3.9292056449951747,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow (/ (/ (/ 1 -1) (* a (+ a -1))) 1) (* b a)) 1)",
    "input_weight_simple": 17,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 (* a (+ -1 a))) (* a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.007391307
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ -1 (- (pow a 2) a)) 1) (* a b))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.001879463
    },
    "speedup": 3.9326695976457104,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow -1 a) (* (pow a (/ (* 0 c) 0)) (+ (* (pow -1 (pow a a)) c) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* c (* (pow a (/ 0 0)) (pow -1 (+ a (pow a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.053834925
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* c (* (pow a (/ 0 0)) (pow -1 (+ a (pow a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.013679213
    },
    "speedup": 3.935527943018359,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (pow (* 0 -1) -1) (- (- (- 0 b) (+ -1 1)) (+ (/ -1 0) (- 0 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (* (pow 0 -1) (+ b (+ 1 (/ -1 0))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.128973866
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (pow 0 -1) (- -1 (+ b (/ -1 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.032743051
    },
    "speedup": 3.9389690960686585,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- 1 (/ (/ 1 (+ (+ (/ a (pow (* b 1) a)) b) (* (- a -1) a))) a)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (/ 1 (+ b (+ (/ a (pow b a)) (+ a (* a a))))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.091495061
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ 1 (+ (/ a (pow b a)) (+ (pow a 2) (+ a b)))) a) 1)",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.023194713999999998
    },
    "speedup": 3.9446513977279483,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ (pow (+ (+ a (- (+ 0 0) -1)) a) (- (* (+ (+ a b) -1) b) d)) e) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ 1 (+ a a)) (- (* b (+ a (+ -1 b))) d)) (+ 1 e))",
      "output_weight_simple": 15,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.059233026999999994
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ a (+ a 1)) (- (* b (+ b (+ a -1))) d)) (+ 1 e))",
      "output_weight_simple": 15,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.01500716
    },
    "speedup": 3.9469844394275793,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 (+ (+ a -1) (/ a (- (pow (+ (pow 1 a) a) (* -1 a)) (/ 1 b))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (+ a -1) (/ a (- (pow (+ a (pow 1 a)) (* a -1)) (/ 1 b)))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.028752138
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (+ a -1) (/ a (- (pow (+ a (pow 1 a)) (- 0 a)) (/ 1 b)))) a)",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.0072821150000000005
    },
    "speedup": 3.9483224310519676,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a (- (* (* (* -1 0) (pow (- (* a 0) 0) (+ b 0))) -1) c)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ a (* -1 c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.009978146
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ a (- 0 c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.002512788
    },
    "speedup": 3.9709462159163444,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a (- 0 (- -1 a))) (- (+ a 0) (+ (- 0 (+ (- b 1) b)) (/ 0 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (+ a 1)) (+ a (+ -1 (+ b b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.908215292
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (+ a 1)) (+ a (+ -1 (+ b b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.22825709400000002
    },
    "speedup": 3.978913759412007,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- -1 (/ (* 0 (- -1 (- (/ (- (* a 0) 0) a) a))) 1)) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.013629068
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.003422929
    },
    "speedup": 3.9816975461658712,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (- (/ a a) -1) (- (pow 0 (- (* (+ a 0) (+ 0 0)) (* 0 a))) a)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 2 (- (pow 0 0) a)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.008225184
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 2 (- (pow 0 0) a)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.002064672
    },
    "speedup": 3.9837727251592505,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* (+ (* a a) (+ (/ (- (/ (+ 0 a) a) (/ b 1)) (* 1 1)) c)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (* a a) (+ (- 1 b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.026372954000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (/ (- 1 (/ b 1)) 1) (+ (* a a) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.0066134340000000005
    },
    "speedup": 3.9877851657701586,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(- -1 (* 0 (* (+ 0 (* a (/ (/ (- (* 1 a) a) (/ a c)) d))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.032780176
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008205772
    },
    "speedup": 3.9947705103188342,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (* a (+ 0 (+ (pow (/ (* a (+ 0 -1)) 1) 1) (pow (- -1 -1) a)))) 1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (+ (* a -1) (pow 0 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.020219265
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (* a (+ (/ (- 0 a) 1) (pow 0 a))) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.0050538580000000005
    },
    "speedup": 4.000758430490132,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (+ (- a 1) a) (/ (- 1 (pow (pow (pow a (* (/ a b) 1)) (/ e 0)) 1)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ a -1)) (/ (- 1 (pow (pow a (/ a b)) (/ e 0))) 0))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.015937627
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (- a 1)) (/ (- 1 (pow (pow a (/ a b)) (/ e 0))) 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.00397514
    },
    "speedup": 4.009324703029327,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- -1 (- (- (+ 0 a) -1) (+ (* (pow a 1) b) c))) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 27,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ c (+ -2 (* a (+ -1 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.916901585
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (* a b) (- (+ c -2) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.22831792099999998
    },
    "speedup": 4.015898449776091,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(/ a (- a (pow b (/ b (* 1 (/ 1 (/ (pow (* c c) a) 0)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- a (pow b (/ b (/ 1 (/ (pow (* c c) a) 0))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.014149532000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- a (pow b (/ b (/ 1 (/ (pow (* c c) a) 0))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.003520215
    },
    "speedup": 4.019507899375465,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ (/ (/ (- (* a 1) b) 0) a) b) (pow -1 a)) (* 1 (/ c 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (+ b (/ (/ (- a b) 0) a)) (pow -1 a)) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.023949394
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (+ b (/ (/ (- a b) 0) a)) (pow -1 a)) (/ c 1))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.005955075000000001
    },
    "speedup": 4.021677980546004,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 (/ a (* (pow (pow (+ 0 (+ (- 1 1) a)) 1) (+ -1 (pow 1 c))) b))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- 0 (/ a (* (pow a (+ -1 (pow 1 c))) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.021630563
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (* (pow a (+ -1 (pow 1 c))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.005371353000000001
    },
    "speedup": 4.027023172746233,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (* (pow -1 (+ a (* a (pow b (pow 0 (- (* -1 c) 1)))))) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* b (pow -1 (+ a (* a (pow b (pow 0 (+ -1 (* -1 c)))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 10,
      "simplification_time": 0.01611434
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* b (pow -1 (+ a (* a (pow b (pow 0 (- -1 c))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.004000726
    },
    "speedup": 4.027853944509072,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- 0 (/ (/ -1 -1) a)) (+ a (pow a (pow (* -1 (/ (- 0 b) c)) (+ 0 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (- 0 (/ 1 a)) (+ a (pow a (pow (* b (/ 1 c)) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.041297771
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a (+ (/ 1 a) (pow a (pow (- 0 (/ (- 0 b) c)) a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.010239688
    },
    "speedup": 4.03310833298827,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (- a (pow b 1)) (pow 0 (pow a (pow (+ 0 (* c (pow (- 0 a) 1))) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a b) (pow 0 (pow a (/ 1 (* a (* c -1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.018219085
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a b) (pow 0 (pow a (/ 1 (- 0 (* a c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.004514474
    },
    "speedup": 4.035704934838477,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ 1 (* (- 0 (pow (pow (- (pow (- a b) b) (- c d)) b) 0)) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ 1 (* d -1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.027220311000000004
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ 1 (- 0 d)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.006734993
    },
    "speedup": 4.041624245192238,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (/ 0 (* a (/ -1 (pow -1 (pow 1 (- (/ -1 a) 0)))))) b) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.015806169
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.003909373
    },
    "speedup": 4.04314681663786,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ (pow a -1) (* (+ a b) (- (+ (- (/ 0 1) b) (- 1 -1)) (- 1 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (/ 1 a) (* (+ a b) (+ (- 0 b) 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.139243411
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (/ 1 a) (* (+ a b) (- 2 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.034395919
    },
    "speedup": 4.048253834997112,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 1 (+ 0 (/ (* 0 (* (pow -1 (+ a (/ (- -1 0) a))) a)) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.007170466
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.0017707830000000002
    },
    "speedup": 4.049319425361549,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a b) (* (* b 0) (+ 0 (/ 1 (* (+ (/ 0 a) a) (+ 0 -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023292913000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005745267
    },
    "speedup": 4.05427859140402,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a a) (+ -1 (/ 0 (* (/ 1 (pow 1 (* 1 (pow 0 c)))) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a -2)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.034726896
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a -2)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.008554484000000001
    },
    "speedup": 4.0594962828850925,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (+ (/ a a) a)) (/ 1 (* b (pow 1 (- 0 c)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (+ a a)) (/ 1 (* b (pow 1 (- 0 c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.037136366
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (+ a 1)) (/ 1 (* b (pow 1 (- 0 c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.009138202
    },
    "speedup": 4.063859170545803,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* -1 (+ a (+ (pow 0 -1) 0))) (/ (* (* (pow (/ 0 b) 0) -1) a) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (+ a (pow 0 -1))) (* a (/ 1 b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.067024953
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (- 0 (+ a (pow 0 -1))) (/ (- 0 (* a (pow 0 0))) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.016477411
    },
    "speedup": 4.067687150608794,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ -1 a) (/ -1 (pow (+ 1 0) (* (pow (/ (pow a a) 1) (pow 0 1)) (+ 0 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.007666823
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 a) -1)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.001884242
    },
    "speedup": 4.0689163069287275,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow a (pow (/ a a) b)) (+ (+ (+ -1 1) (/ (+ a 0) c)) 1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow a (pow 1 b)) (+ 1 (/ a c))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 5,
      "simplification_time": 0.010993765999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow a (pow 1 b)) (+ 1 (/ a c))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 5,
      "simplification_time": 0.002700675
    },
    "speedup": 4.070747498310607,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ a a) 1) (+ (/ (/ (* 1 (- (/ a -1) (- a -1))) 0) -1) (+ a a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ (+ a a) (* -1 (/ (+ -1 (* a -2)) 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.022827676999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a a) 1) (+ a (+ a (/ (/ (- -1 (- a (/ a -1))) 0) -1))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.005605623
    },
    "speedup": 4.072281885528156,
    "weight_simple_diff": -3,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(+ 0 (/ (- a (/ a (- a -1))) (* (+ -1 b) (* (- (/ 0 a) 1) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (/ a (+ a 1))) (+ -1 b))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.138613558
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (/ a (+ a 1))) (+ -1 b))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.034031601
    },
    "speedup": 4.073083661271181,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow a (- b (pow 1 (pow b (+ (+ b a) (/ 1 (- e 1))))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (- b (pow 1 (pow b (+ a (+ b (/ 1 (- e 1)))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.014080713000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (- b (pow 1 (pow b (+ a (+ b (/ 1 (- e 1)))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.0034536919999999995
    },
    "speedup": 4.077003102766548,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- -1 (+ 1 (/ -1 1))) (* (* (/ a -1) 1) (* (* (- a 1) a) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (+ -1 a) (* a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.071157675
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* (/ a -1) (- (pow a 2) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.017417067
    },
    "speedup": 4.085514225787843,
    "weight_simple_diff": -2,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow (/ (pow 1 a) (- (* (/ (* (* a -1) 0) 0) (/ -1 1)) c)) c) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow (/ (pow 1 a) (* -1 (+ (/ 0 0) c))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.01271187
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow (/ (pow 1 a) (- 0 (+ (/ 0 0) c))) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.003110674
    },
    "speedup": 4.086532372083992,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 (pow (pow (/ (/ (* (pow (- -1 -1) 1) 1) a) (- (pow a b) 0)) a) 1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (- 0 (pow 0 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.023581499
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.005770273
    },
    "speedup": 4.0867215467968325,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ (+ (+ (/ (/ (/ -1 (pow -1 (* 0 b))) (- 0 c)) 1) b) 1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (+ b (/ -1 (- 0 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.044366514999999995
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ b (+ 1 (/ (/ -1 (- 0 c)) 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.010854332000000001
    },
    "speedup": 4.0874477581853945,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (* (pow (pow 1 (* a (/ b b))) (pow (pow b (* (- b c) a)) (/ e 1))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (pow (pow 1 a) (pow (pow b (* a (- b c))) e)) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.027886874
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (pow (pow 1 a) (pow (pow b (* a (- b c))) (/ e 1))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.006801895
    },
    "speedup": 4.0998683455125375,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 0 (+ (pow 0 (- (/ -1 a) a)) (+ (* (+ b (pow -1 1)) 0) (/ d d)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* (pow 0 (- (/ -1 a) a)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.018656224000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* b (+ (pow 0 (- (/ -1 a) a)) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.004549613
    },
    "speedup": 4.10061778880973,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 (pow a (/ a (+ (* a (* a b)) (pow (- (pow b b) 1) (pow c d)))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (/ a (+ (* a (* a b)) (pow (+ (pow b b) -1) (pow c d))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.016604371
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (/ a (+ (* a (* a b)) (pow (- (pow b b) 1) (pow c d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.00403783
    },
    "speedup": 4.1122016033364455,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* -1 -1) (+ 0 (* (+ a a) (/ 1 (* (pow 1 a) b))))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ 1 (* (+ a a) (/ 1 (* (pow 1 a) b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.021405973000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (* (+ a a) (/ 1 (* (pow 1 a) b)))) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.005195287
    },
    "speedup": 4.1202676579753925,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* 1 (/ (/ a a) (pow (pow (* (* 0 (/ a 0)) a) -1) (* (/ 1 1) 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.017339805
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.004195897
    },
    "speedup": 4.132562119613518,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (pow (- (- (- (- 0 a) a) (/ (pow (/ b c) -1) (pow 0 a))) 0) 0) b) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 b) 1)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.039065657
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ b 1) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.009448940000000001
    },
    "speedup": 4.134395709994982,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a a) (pow (* (/ (pow 1 b) (+ (+ (pow 0 0) b) (- a 1))) b) (* 0 c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.040189098
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a a) 1)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.0097142
    },
    "speedup": 4.137149533672356,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow (/ a (pow (- a 0) 1)) (/ a (pow (+ (* (/ -1 a) b) 0) (- 1 b)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (/ a (pow (* (/ -1 a) b) (- 1 b)))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.018365249
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (/ a (pow (* (/ -1 a) b) (- 1 b)))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.004438362
    },
    "speedup": 4.137843871229972,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 1) (pow a (* (+ (pow a (- (pow (- b -1) 0) (pow 0 c))) 1) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00790783
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0019105749999999999
    },
    "speedup": 4.138979103149575,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- (* a (- a (* a (/ (pow (pow (+ 1 -1) 0) 0) (* 1 -1))))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ b (* a (* a -2))))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.076507959
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- (* a (+ a a)) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 5,
      "simplification_time": 0.018481631
    },
    "speedup": 4.1396757136856595,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (/ 0 1) (/ (+ a -1) (pow b (* (+ (/ -1 a) -1) (+ 1 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (+ a -1) (pow b (* (+ -1 (/ -1 a)) 2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.044302048000000004
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (+ a -1) (pow b (* (+ -1 (/ -1 a)) 2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.010696255
    },
    "speedup": 4.14182795754215,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ (- a a) (- c (/ (+ (/ (/ -1 -1) 1) (+ -1 0)) (+ 1 0)))) a) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.020917023
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005043916
    },
    "speedup": 4.146980837904517,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (+ (/ 0 (pow a (- (pow (pow (* 1 a) 0) (pow 1 0)) (/ -1 1)))) b) c) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ b c) c)",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.017524068
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ b c) c)",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.00422041
    },
    "speedup": 4.152219334140522,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (/ a (/ (+ a (- (+ b (pow (/ -1 1) -1)) 1)) -1))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (+ 2 (* -1 (+ a b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.050379663000000005
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (/ (+ a (- b 2)) -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.012126914
    },
    "speedup": 4.154367962038817,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 a) (/ (- (+ (pow 1 (/ 0 (+ (pow 1 b) 0))) 1) b) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ b -2))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.018572544
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (- 2 b) -1))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.004470161
    },
    "speedup": 4.154781897117352,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (- a (/ b (* c (pow (* 1 (+ (* (+ b 0) a) -1)) (pow 1 (+ 0 0)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- a (/ b (* c (+ -1 (* a b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.034347372
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- a (/ b (* c (+ -1 (* a b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.008260497
    },
    "speedup": 4.158027295452078,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a 0) (- 0 (- a (pow b (* 0 (pow (- b b) (/ -1 -1)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008950453
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002152001
    },
    "speedup": 4.159130502262777,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (pow (pow -1 a) (/ -1 (/ (+ 1 (pow (+ a a) 1)) a)))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow 0 (pow (pow -1 a) (/ -1 (+ (/ 1 a) 2)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.02529292
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (pow (pow -1 a) (/ -1 (/ (+ a (+ a 1)) a)))) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.006064623
    },
    "speedup": 4.170567568668324,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (/ (pow a (* (+ 0 (pow (+ 1 a) 0)) (+ a (/ (+ 1 c) a)))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (pow a (+ a (/ (+ 1 c) a))) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.023898225999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (pow a (+ a (/ (+ 1 c) a))) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.0057286509999999995
    },
    "speedup": 4.171702203537971,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 (* (/ a (pow a (- (* (+ (/ -1 1) -1) (- b -1)) (/ 1 -1)))) -1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021891644
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005246382
    },
    "speedup": 4.172712547427922,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- a (* (pow (* a (- (- (+ (/ a -1) a) 1) b)) (/ 0 a)) (* d 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(24315)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.183662738
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.283625803
    },
    "speedup": 4.173325295089601,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 a) (/ a (pow (+ 0 (/ a (+ (* (- 0 1) 0) (+ -1 -1)))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ a (/ 1 (* a -0.5))))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.007889261
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ a (/ 1 (/ a -2))))",
      "output_weight_simple": 7,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.0018794420000000003
    },
    "speedup": 4.1976613271385865,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 a) (* (- (pow (* (+ (+ 1 (pow -1 a)) (* b 0)) (/ b 0)) -1) -1) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 a) (+ a (* a (/ 1 (* (+ 1 (pow -1 a)) (/ b 0))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.020048324
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 a) (* a (+ 1 (/ 1 (* (+ 1 (pow -1 a)) (/ b 0))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.004771699
    },
    "speedup": 4.201506423602997,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ (* (/ (- a a) (- (- a (* -1 a)) (/ a c))) e) e) a) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow e a))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.07839245799999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow e a))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.018644591
    },
    "speedup": 4.204568391980279,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (pow (+ (+ 1 (pow (* (/ (/ -1 a) 0) (+ a 1)) (pow -1 b))) 0) c) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (pow (+ 1 (pow (* (/ (/ -1 a) 0) (+ 1 a)) (pow -1 b))) c) b))",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.013650159000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (pow (+ 1 (pow (* (/ (/ -1 a) 0) (+ 1 a)) (pow -1 b))) c) b))",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.003245506
    },
    "speedup": 4.205864663322145,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ -1 (/ a (- (* 0 (pow (+ a (- (/ a 0) -1)) (- 0 -1))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ -1 (/ a (- 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.019468202
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ -1 (/ a (- 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.004621661
    },
    "speedup": 4.212382085142116,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (- (* (- 0 -1) 0) (pow (* 0 (pow a (pow (+ 0 a) 1))) 1)) b) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 0 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.007030266
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 b) -1)",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.0016671410000000002
    },
    "speedup": 4.216959453339579,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* (* (* a b) (+ (+ (+ (- c 0) 0) c) (/ (/ 1 0) d))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10166)",
      "output_term": "(- 1 (* a (* b (+ (/ 1 0) (* (+ c c) d)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.7460766640000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (* a (* b d)) (- (* c -2) (/ (/ 1 0) d))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.176890797
    },
    "speedup": 4.217724588577664,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 1 (- a (* (- (* a a) (/ (/ (- (* a 1) -1) (/ b 1)) (pow 1 -1))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.069511626
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.016460949
    },
    "speedup": 4.222820081636849,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a b) (- (+ a (+ (pow (/ (- (* a 0) a) (/ -1 d)) (* -1 0)) 1)) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a b) (- (+ a 2) e))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.034389307
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a b) (- a (- e 2)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.008141178999999998
    },
    "speedup": 4.224118767072928,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ (/ 1 (pow a (+ (* a 1) 1))) a) (* a (* 0 a))) (pow a a))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ 1 (pow a (+ 1 a))) a) (pow a a))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.028048493
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ 1 (pow a (+ 1 a))) a) (pow a a))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.006637397
    },
    "speedup": 4.225827233175897,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ 0 a) (- b (* (+ (* (+ (/ 1 a) 0) (- b b)) c) 0))) (/ d 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ d 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.015608118
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ d 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.0036828489999999998
    },
    "speedup": 4.238055375064251,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (/ a -1) (/ (+ (pow 0 (- (* 1 b) (/ a -1))) 0) (+ a 1))) (pow -1 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (/ (pow 0 (+ a b)) (+ a 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.02200167
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (/ a -1) (/ (pow 0 (- b (/ a -1))) (+ a 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.005187265999999999
    },
    "speedup": 4.241477109521664,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow (/ (+ (* (pow (* (- (+ 1 1) 0) a) -1) (+ a a)) b) 0) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ (+ 1 b) 0) b) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.017129437
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ (+ 1 b) 0) b) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.0040374980000000005
    },
    "speedup": 4.242587117071017,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (+ (- 0 1) (pow (+ (- (* (- -1 1) b) (+ b 1)) (/ c b)) -1)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* c (+ -1 (/ 1 (+ (+ -1 (* b -3)) (/ c b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.050143808
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* c (+ -1 (/ 1 (- (- (/ c b) 1) (* b 3))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.011818901
    },
    "speedup": 4.2426794166395,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (pow (+ 0 -1) (+ (/ a a) (pow 0 (+ (pow a -1) a)))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (pow -1 (+ (pow 0 (+ a (/ 1 a))) 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.011758243
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (pow -1 (+ 1 (pow 0 (+ a (/ 1 a)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.002757916
    },
    "speedup": 4.263452186361006,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ -1 (* -1 (pow 1 (- (+ a (- -1 (+ (- 0 0) 0))) (+ 0 (- 0 -1)))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 (* -1 (pow 1 (+ a -2)))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.009010839999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 (- 0 (pow 1 (- a 2)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.002108402
    },
    "speedup": 4.2737770121637135,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ a (* (- -1 (+ a a)) a)) (- -1 (pow (* a 1) c))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (* a (+ -1 (* a -2)))) (+ (pow a c) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.100436622
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (* a (- -1 (+ a a)))) (+ (pow a c) 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.023495524
    },
    "speedup": 4.274713004911063,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a b) (+ (pow (- (* 0 0) (pow (+ (/ c 0) b) (/ 1 0))) c) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a b) (+ 1 (pow (- 0 (pow (+ b (/ c 0)) (/ 1 0))) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.014696437
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a b) (+ 1 (pow (- 0 (pow (+ b (/ c 0)) (/ 1 0))) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.003436635
    },
    "speedup": 4.276403225829918,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ -1 (+ (pow (* a (- (* -1 -1) a)) (- (+ (pow c -1) b) (+ 0 1))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow (* a (- 1 a)) (+ -1 (+ (/ 1 c) b))) (+ -1 c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.024074269
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ -1 (+ c (pow (- a (pow a 2)) (- (pow c -1) (- 1 b))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.005628347
    },
    "speedup": 4.277324941052853,
    "weight_simple_diff": -1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- (pow 1 a) 1) (* (pow -1 -1) (+ (* (/ a -1) (+ -1 a)) a))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10015)",
      "output_term": "(+ a (* a (* (+ (pow 1 a) -1) (+ a -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 1.2715351049999999
    },
    "Extended": {
      "iterations": 21,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (+ a (* (/ a -1) (+ a -1))) (- 1 (pow 1 a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.297036535
    },
    "speedup": 4.2807363915688015,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (+ 1 (+ (pow (+ (/ (/ 1 0) (* a a)) b) b) (/ b (* 0 0)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (+ 1 (+ (pow (+ (/ (/ 1 0) (* a a)) b) b) (/ b 0))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.016303386000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (+ 1 (+ (pow (+ (/ (/ 1 0) (* a a)) b) b) (/ b 0))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.003793269
    },
    "speedup": 4.297977812804734,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (/ (* -1 a) (pow b (+ a (* a (+ (pow 1 b) c))))) 0) (+ b c))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ b c)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.047824792000000005
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ b c)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.011126934
    },
    "speedup": 4.298110512743223,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ -1 (/ (* a (/ 0 (+ -1 (- (pow -1 -1) a)))) -1)) 1) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.015147036000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.003517901
    },
    "speedup": 4.305702747177934,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (* (pow (/ 0 (+ (- 1 (+ a (pow a a))) (/ a c))) 1) 0) (* b 1)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.05688986499999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013207613
    },
    "speedup": 4.307354023774015,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (* (* (/ (+ a (pow b (pow (* a b) 0))) (* 0 e)) a) c) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a b) 0) (* c (* a a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.247152041
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a b) 0) (* c (* a a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.057280019
    },
    "speedup": 4.314803753818587,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow a (* (- (pow 0 (- (* b a) (* (pow -1 b) 0))) (pow d e)) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.009141219
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.002117646
    },
    "speedup": 4.316688908344455,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 1 (+ 1 (- (/ a (/ (* (* 1 (/ (pow a a) -1)) -1) (- (/ a -1) c))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 (/ a (/ (pow a a) (- (* a -1) c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.034104513
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 (/ a (/ (- 0 (/ (pow a a) -1)) (- (/ a -1) c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.00789948
    },
    "speedup": 4.317311139467408,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow 1 (- (* -1 a) a)) (pow (* 0 -1) (/ (pow (- 1 (+ 1 -1)) 1) (* 0 b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (* a -2)) (pow 0 (/ 1 0)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.012837639
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (* a -2)) (pow 0 (/ 1 0)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.002970296
    },
    "speedup": 4.3220066282956315,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (- (- (pow (- (- 1 (pow a (- (/ a -1) 0))) a) -1) (pow b -1)) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (- (/ 1 (- (- 1 (pow a (* a -1))) a)) (/ 1 b)) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.046587595
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (- 1 (+ a (pow a (/ a -1))))) (+ (/ 1 b) (- c 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.010778029
    },
    "speedup": 4.322459607410595,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 2
  },
  {
    "base_term": "(* (/ (pow a b) (/ 1 (- (/ a -1) (- (- 1 (- 1 -1)) (+ b b))))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (pow a b) (/ 1 (+ b (+ b (+ 1 (* a -1)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.063926269
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (pow a b) (/ 1 (+ b (+ (/ a -1) (+ b 1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.014774165
    },
    "speedup": 4.326895563979419,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ (- a (/ (pow 1 (* a (* a (pow (/ 0 -1) b)))) (* (- b -1) 1))) -1) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (- a (/ (pow 1 (* (pow 0 b) (* a a))) (- b -1)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.027640333
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (- a (/ (pow 1 (* a (* a (pow 0 b)))) (+ 1 b)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.0063842050000000004
    },
    "speedup": 4.3294870700423935,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- a a) (+ (* 0 (pow (/ (/ (- (/ -1 1) -1) (- a 1)) -1) 1)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010024710000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0023132680000000003
    },
    "speedup": 4.333570515824366,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (+ a (* (pow (+ a (pow (- -1 b) b)) -1) b)) (- -1 0)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (+ a (* b (/ 1 (+ a (pow (- -1 b) b)))))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.008494582
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (+ a (/ b (+ a (pow (- -1 b) b))))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.001960059
    },
    "speedup": 4.333839950736177,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow -1 (+ (- (- a (* a (pow (pow a (pow b a)) (/ b -1)))) d) -1)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* d (pow -1 (+ -1 (- (- a (* a (pow (pow a (pow b a)) (* -1 b)))) d))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 10,
      "simplification_time": 0.062654809
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* d (pow -1 (- (* a (- 1 (pow (pow a (pow b a)) (/ b -1)))) (+ d 1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.014394566000000001
    },
    "speedup": 4.352670931516796,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (- a (/ a (/ (+ (* (- 1 b) (- -1 1)) (- c c)) (* -1 -1)))) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ (/ a (+ -2 (* b 2))) (* a -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.091239923
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- b (- a (/ a (/ (* (- 1 b) -2) 1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.020877813999999998
    },
    "speedup": 4.370185642998831,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (/ 1 (pow (* a (/ (pow 1 (/ (/ a a) a)) (/ -1 b))) 1)) 0) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 58,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.017932352
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.004099842
    },
    "speedup": 4.373912945913525,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 0 (+ (pow (* 1 1) 0) (pow (* 0 (* (/ -1 0) (+ 0 a))) a))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.011016284000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -1 (pow 0 a)) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.002516344
    },
    "speedup": 4.377892688757977,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ 1 a) (/ (* 1 b) (* (* (+ a (/ (pow b b) a)) d) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 a) (/ b (* (+ a (/ (pow b b) a)) (* b d))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.06800825399999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 a) (/ b (* (* b d) (+ a (/ (pow b b) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.015436479999999999
    },
    "speedup": 4.405684067870395,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 0 -1) (/ a (/ b (/ (* (- 0 a) (* 0 (pow -1 c))) b))))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ b 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.021775051
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ b 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.0049349139999999994
    },
    "speedup": 4.412447917025505,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (- (* (/ (+ (* 0 (+ (pow (* a 1) -1) 1)) (pow (/ a -1) -1)) -1) a) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.040905433
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (* a (/ (/ 1 (/ a -1)) -1)) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.009266042
    },
    "speedup": 4.414552945043849,
    "weight_simple_diff": -5,
    "weight_complex_diff": -18,
    "depth_diff": -4
  },
  {
    "base_term": "(+ 0 (+ (/ a -1) (pow a (- -1 (pow (* (- (pow -1 b) b) b) (- d a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a -1) (pow a (- -1 (pow (* b (- (pow -1 b) b)) (- d a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.019846502999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a -1) (pow a (- -1 (pow (* b (- (pow -1 b) b)) (- d a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.004484841
    },
    "speedup": 4.425241162395723,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 1 (/ a (- (pow (pow (+ (- 1 0) 0) a) (- a -1)) 1))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (+ -1 (pow (pow 1 a) (+ 1 a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.008241524
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (- (pow (pow 1 a) (+ 1 a)) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.001860484
    },
    "speedup": 4.4297741877919945,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (* a (pow (/ b (pow (- -1 b) 1)) (- b c))) -1))",
    "input_weight_simple": 17,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow (/ b (- -1 b)) (- b c)) (* a -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.018077034
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 0 (* a (pow (/ b (- -1 b)) (- b c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.004075508
    },
    "speedup": 4.43552901871374,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ a a) (/ (- a (+ (* (* (- c c) (- 1 -1)) -1) 1)) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.006674549
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (/ (- a 1) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.0015042669999999999
    },
    "speedup": 4.437077327362762,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ a (* 0 (/ (* 0 (/ a (- (pow (/ b b) 0) (- 0 b)))) -1))) (/ d b))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ d b))",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.01308826
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ d b))",
      "output_weight_simple": 5,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.002947774
    },
    "speedup": 4.440048660446832,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (/ a (/ (- (pow b (+ (+ (pow (* a 0) 1) 0) (pow c a))) -1) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (+ 1 (pow b (pow c a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.00953327
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (/ (+ 1 (pow b (pow c a))) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.0021460539999999997
    },
    "speedup": 4.4422321153149,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- (/ (+ a (* (* -1 b) (* (- (- b c) d) (* 0 -1)))) 0) (pow 1 e)) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (/ a 0) (pow 1 e)) e)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.111099721
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (/ a 0) (pow 1 e)) e)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.025000440999999998
    },
    "speedup": 4.443910449419673,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 0 (+ (/ -1 a) (* 1 (* (* (pow (/ a -1) 1) b) (* 0 -1))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013129479999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0029523049999999997
    },
    "speedup": 4.447196343196248,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (- 1 -1) (/ a (- 0 (+ a (/ a (* (/ -1 -1) a)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 2 (/ a (+ -1 (* a -1)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.032806081
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 2 (/ a (- -1 a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.007372213
    },
    "speedup": 4.44996380327047,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 1 (- (+ (pow (* 1 a) (- (+ (* (- -1 1) 1) (/ a 1)) (* a a))) 1) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- (+ 1 (pow a (- (+ a -2) (* a a)))) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.030059215
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- 1 (- a (pow a (- (/ a 1) (- (* a a) -2))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.006752537000000001
    },
    "speedup": 4.451543916012603,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 0 (* a (- (pow b (+ b (+ (pow (/ (+ a 0) 0) (pow -1 b)) b))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (pow b (+ b (+ b (pow (/ a 0) (pow -1 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.014356339
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (pow b (+ b (+ b (pow (/ a 0) (pow -1 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.003208727
    },
    "speedup": 4.474154080418807,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ a a) (pow (/ (- a a) (/ (- (* a a) 0) (/ a a))) 0)) (pow 1 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.00833654
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.0018622390000000001
    },
    "speedup": 4.476621958835573,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (* (/ (* (* (+ (+ (/ -1 -1) 0) 1) (* a 0)) -1) c) c) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.010582487000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.002356245
    },
    "speedup": 4.4912506976142135,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* 1 (pow (- a (+ (/ 1 0) (/ 0 (pow 0 (- b b))))) 0)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011271943999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002499532
    },
    "speedup": 4.509621801201185,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* 0 (pow (pow (* 0 -1) (* (* (+ 1 a) b) a)) c)) 0) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.025204609
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 0 0))",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.005580637
    },
    "speedup": 4.5164394315559315,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (+ (+ (pow a (- 0 (pow (- 0 (- -1 a)) 1))) -1) -1) a) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ (pow a (- -1 a)) -2) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.073750928
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ (pow a (- -1 a)) -2) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.016327963
    },
    "speedup": 4.516848059981517,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (pow (pow (- b b) (- (- (pow a (* c -1)) (/ 1 0)) (/ 1 -1))) 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013820385
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003055921
    },
    "speedup": 4.522494200602699,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (+ 0 (- -1 (/ -1 (+ (- a (/ (* a 0) 1)) a)))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (+ -1 (/ 1 (+ a a))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.164780659
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (- -1 a) (/ -1 (+ a a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.036427575
    },
    "speedup": 4.5235143706381775,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (pow (pow (/ 0 (+ (* (- -1 (pow (pow 1 -1) 1)) (/ 1 a)) a)) a) 0) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0058930960000000004
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0013023610000000001
    },
    "speedup": 4.524932795131304,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow -1 a) (+ (pow 1 a) (/ (* 1 -1) (/ (pow a (* a c)) (/ b 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 a) (+ (pow 1 a) (/ -1 (/ (pow a (* a c)) (/ b 0)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.015247509
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow -1 a) (+ (pow 1 a) (/ -1 (/ (pow a (* a c)) (/ b 0)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.003367688
    },
    "speedup": 4.527589551051047,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (- (* 1 1) (- a (pow 1 (* (+ -1 -1) (* 1 -1))))) -1) (* 0 -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011083721
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002447591
    },
    "speedup": 4.528420393766769,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 (pow (/ 0 a) (* (pow (/ a -1) (pow (pow b c) c)) (/ 1 (+ d 0))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (pow 0 (* (pow (* a -1) (pow (pow b c) c)) (/ 1 d)))) a)",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.009128066
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (pow 0 (* (pow (/ a -1) (pow (pow b c) c)) (/ 1 d)))) a)",
      "output_weight_simple": 16,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.0020145370000000003
    },
    "speedup": 4.53109870903339,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (/ a (/ b (* (+ a a) (* (pow (- a 1) b) (/ -1 d))))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ a (/ b (* (pow (+ a -1) b) (* (+ a a) (/ -1 d)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.143608137
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (/ a (/ b (* (/ -1 d) (* a (* (pow (- a 1) b) 2)))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 10,
      "simplification_time": 0.031629956
    },
    "speedup": 4.54025724853996,
    "weight_simple_diff": -2,
    "weight_complex_diff": -3,
    "depth_diff": -2
  },
  {
    "base_term": "(- (- (/ (* a -1) (/ (* (/ b b) (pow a 1)) (* (/ c a) 1))) c) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a -1) (/ a (/ c a))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.032798209
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (- 0 a) (/ a (/ c a))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.007218255
    },
    "speedup": 4.543786413752355,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- (+ (* 1 (* (pow (/ 0 (/ (+ a 1) b)) (- c b)) 1)) (- b -1)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* -1 (+ b (+ (pow 0 (- c b)) 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.3115798169999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (pow 0 (- c b)) (- b -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.06857260100000001
    },
    "speedup": 4.543794641827862,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(- 1 (/ a (- (/ (pow (- (- (+ (pow a b) b) a) (/ a a)) c) a) (+ 0 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (+ 1 (/ (pow (+ (- (+ b (pow a b)) a) -1) c) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.045205453
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (+ 1 (/ (pow (- b (- 1 (- (pow a b) a))) c) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.009918349
    },
    "speedup": 4.557759865074319,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (pow 0 0) (pow -1 (pow -1 (/ (* (pow (pow a a) a) (* a a)) b)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 0) (pow -1 (pow -1 (/ (* (pow (pow a a) a) (* a a)) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.027647401999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 0) (pow -1 (pow -1 (/ (* a (* a (pow (pow a a) a))) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.006038144
    },
    "speedup": 4.5787914299493355,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (* 1 (- (+ a a) (- (* b b) (/ (pow (pow -1 1) 1) (- a 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (+ a a) (+ (* b b) (/ 1 (+ a -1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.040144212
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- a (- (- (* b b) a) (/ -1 (- a 1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.008757359
    },
    "speedup": 4.584054621947097,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow -1 a) (+ (* (/ a -1) (- (/ 0 (/ (/ 1 b) a)) b)) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow -1 a) (+ (* a b) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.055375917
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow -1 a) (- c (* (/ a -1) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.012076405999999998
    },
    "speedup": 4.58546334066609,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow 0 (pow (/ a -1) (pow -1 (/ (+ (* (- 1 -1) 0) 0) (+ a -1))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.008117230999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.0017678300000000002
    },
    "speedup": 4.5916355079391105,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a -1) (* 0 (- a (* b (+ (/ (- (- c d) 0) (* 1 0)) (* c -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.07935971500000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.017265054999999998
    },
    "speedup": 4.596551531402595,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a a) (pow -1 (pow b (+ -1 (pow (pow (- (- -1 c) b) (/ 1 1)) (* 0 e))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.020021603000000002
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004350841
    },
    "speedup": 4.601777679303841,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ 0 (- (+ (pow (+ (pow (* a (- 1 b)) (* -1 b)) b) a) c) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow (+ b (pow (* a (- 1 b)) (* b -1))) a) (+ -1 c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.05409027300000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow (+ b (pow (* a (- 1 b)) (- 0 b))) a) (- 1 c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.011735589000000001
    },
    "speedup": 4.609080379348663,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (/ (* a a) (/ (* (pow 1 (+ -1 (/ 1 1))) (+ 0 -1)) -1)) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* a a) a))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.005161979
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (/ (* a a) 1) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.001117278
    },
    "speedup": 4.620138407808978,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ (/ (pow a 1) (* b -1)) (* c (* (pow (/ (* a a) -1) b) (pow b 0)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ (/ a (* b -1)) (* c (pow (* a (* a -1)) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.054758557
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ (/ a (- 0 b)) (* c (pow (/ (* a a) -1) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.011847835000000001
    },
    "speedup": 4.621819682667761,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ 1 (pow (/ (pow (/ (+ (/ -1 (- a a)) (* -1 a)) a) 0) a) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (pow a -1)) -2)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.051607646
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ 1 (/ 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.011125628
    },
    "speedup": 4.638627680163313,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (/ (/ (pow 0 (pow a 1)) (/ a (+ (pow (* 1 b) a) (* 1 c)))) -1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (pow 0 a) (/ a (+ (pow b a) c))))",
      "output_weight_simple": 10,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.028851589999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 0 (/ (/ (pow 0 a) (/ a (+ (pow b a) c))) -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.006212599
    },
    "speedup": 4.644045108979349,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(* (/ -1 (* (pow -1 (+ a (+ (pow -1 b) b))) (/ 0 c))) -1)",
    "input_weight_simple": 17,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.017055988
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ -1 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.003670012
    },
    "speedup": 4.6473929785515695,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 1 (pow 0 (/ a (pow (+ 0 (pow (pow (pow a (* a b)) (* b 0)) (pow a 1))) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 (/ a (pow (pow 1 a) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.010323256999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 (/ a (pow (pow 1 a) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.0022203590000000003
    },
    "speedup": 4.649363909169642,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 1 (+ a (pow -1 a))) (- (pow (* (pow b (- 0 (* 0 c))) (- 1 c)) a) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (+ a (pow -1 a))) (- (pow (- 1 c) a) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.026950918999999997
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (+ a (pow -1 a))) (- (pow (- 1 c) a) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.0057884220000000005
    },
    "speedup": 4.656004520748486,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* -1 a) (- (pow 0 (* 1 (pow b a))) (pow (- b (- (* -1 -1) c)) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (* -1 a) (pow 0 (pow b a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.055736989
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- 1 (pow 0 (pow b a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.011970587999999999
    },
    "speedup": 4.6561613347648425,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (/ (+ 0 (+ (- -1 (+ (* (pow 0 a) a) b)) 0)) c) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (/ 1 c) (+ (* a (pow 0 a)) (+ b 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.177066687
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 0 (/ (- -1 (+ (* a (pow 0 a)) b)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.037935641
    },
    "speedup": 4.667554899098713,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -2
  },
  {
    "base_term": "(pow a (* a (* (pow (- (- (* (/ (+ b 0) a) 0) (pow c b)) c) -1) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (/ 1 (- (- 0 (pow c b)) c)) (* a c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.023260404
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (/ c (- 0 (+ c (pow c b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.004981752
    },
    "speedup": 4.669121224822111,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- a a) (pow 1 (- (pow (/ -1 a) (* -1 (- 1 d))) c))) (/ 0 -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow 1 (- (pow (/ -1 a) (+ -1 d)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.008343679
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow 1 (- (pow (/ -1 a) (- d 1)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.001786692
    },
    "speedup": 4.669903374504391,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ -1 (+ (pow (+ (pow a -1) (pow (pow (* a b) 1) (/ 1 b))) 1) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ -1 (+ (/ 1 a) (+ (pow (* a b) (/ 1 b)) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.0160299
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ -1 (+ (pow a -1) (+ (pow (* a b) (/ 1 b)) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.0034172639999999997
    },
    "speedup": 4.690857949517509,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* 1 (* b (* a (/ (/ b (* 1 (- b (+ -1 -1)))) (- (/ c b) 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (* b (/ (/ b (+ b 2)) (/ c b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.11549136800000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (* b (/ (/ b (- b -2)) (/ c b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.024586503000000003
    },
    "speedup": 4.697348297153117,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (pow 1 (/ (* a (* a (- a 0))) (/ (+ b (+ b (- 1 0))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.041030648
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008734286
    },
    "speedup": 4.697653362850724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 0) (+ (- (pow (pow a (pow 0 b)) (* (- (+ -1 -1) a) (pow -1 a))) -1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ (pow (pow a (pow 0 b)) (* (- -2 a) (pow -1 a))) 1))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.025206115
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ (pow (pow a (pow 0 b)) (* (- -2 a) (pow -1 a))) 1))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.005357193
    },
    "speedup": 4.705097426954751,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (- (pow (/ (pow a (- (pow a -1) (/ a -1))) (+ (- -1 b) -1)) a) -1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (pow (/ (pow a (+ a (/ 1 a))) (+ -1 (- -1 b))) a) 1))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.014966356
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (pow (/ (pow a (- (/ 1 a) (/ a -1))) (+ -1 (- -1 b))) a) 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.003176561
    },
    "speedup": 4.7114964894425135,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (* a (pow (+ (+ a a) (/ (/ (+ (+ 1 -1) 1) (* 0 a)) a)) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013180639999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002795866
    },
    "speedup": 4.714331802740188,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 1 (- 0 (* -1 (/ (* 1 (* (+ (/ a a) 1) (+ a b))) b)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.144103384
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.030529347000000002
    },
    "speedup": 4.720159392862218,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (+ (/ (/ (pow (/ a 1) (+ (pow -1 1) 0)) (+ (- 1 a) 1)) 1) b) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (+ (/ (/ 1 a) (+ (* a -1) 2)) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.020244788
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ (/ (/ 1 (/ a 1)) (+ 1 (- 1 a))) 1) (+ 1 b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.004286658
    },
    "speedup": 4.722743918455823,
    "weight_simple_diff": 0,
    "weight_complex_diff": -7,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- (/ a a) (/ (* (pow (pow -1 (+ (/ -1 -1) a)) -1) 1) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (/ 1 (pow -1 (+ a 1))) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.021733664
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ 1 (pow -1 (+ a 1))) b) 1)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.004596298
    },
    "speedup": 4.728514991847787,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow a (- -1 (pow (pow -1 (+ (+ (pow (+ b a) b) (/ 1 0)) d)) (pow -1 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow a (- -1 (pow (pow -1 (+ (pow (+ a b) b) (+ (/ 1 0) d))) (pow -1 a)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.015749727
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow a (- -1 (pow (pow -1 (+ (pow (+ a b) b) (+ (/ 1 0) d))) (pow -1 a)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.003329586
    },
    "speedup": 4.730235831121347,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (* -1 (/ (+ (pow (pow (/ (* (- a 0) -1) a) (- a a)) 1) 1) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013106077
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002770492
    },
    "speedup": 4.7305955043364145,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (* 0 0) (pow (+ a (+ (/ (pow (- a -1) 0) (+ a 1)) (+ b a))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.032607746
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.006881834
    },
    "speedup": 4.7382348949422495,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 1) (- (+ 0 0) (- 1 (+ 0 (/ (/ (- a a) -1) (/ c 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010187129
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002146206
    },
    "speedup": 4.746575585009081,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a (* (* (/ (- (+ (* a (/ a a)) a) d) (/ e (pow d a))) 0) 0)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.04624905
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009725358
    },
    "speedup": 4.755511313825157,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (* a 1) (* (pow (* (+ a 0) (+ a (/ -1 a))) a) b)) (/ a 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (* (pow (+ -1 (* a a)) a) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.058708843
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (- a (* (pow (* a (+ a (/ -1 a))) a) b)) (/ a 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.012329455000000001
    },
    "speedup": 4.761673812832765,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -1
  },
  {
    "base_term": "(- 1 (pow 0 (- (+ (* (pow 0 (pow 1 (- a (pow -1 0)))) a) -1) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 0 (+ (* a (pow 0 (pow 1 (+ a -1)))) -2)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.010857557
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 0 (- (* a (pow 0 (pow 1 (- a 1)))) 2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.002279985
    },
    "speedup": 4.762117733230701,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- -1 1) (/ (+ a 0) (/ -1 (+ (/ (+ (+ a a) a) a) (+ a b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (/ a (/ -1 (+ a (+ 3 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.065730484
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (/ a (/ -1 (+ (/ (* a 3) a) (+ a b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.013791172999999999
    },
    "speedup": 4.766127145239931,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ a (- -1 (+ a (- b (pow (- (- (pow 1 a) c) -1) (pow 0 -1)))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (- -1 (+ a (- b (pow (+ 1 (- (pow 1 a) c)) (pow 0 -1)))))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.067380583
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (- (pow (- (pow 1 a) (- c 1)) (pow 0 -1)) (+ a (+ b 1)))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.014110353000000003
    },
    "speedup": 4.775258492824381,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 3
  },
  {
    "base_term": "(/ a (pow a (pow (pow 0 -1) (pow (+ (pow (pow (pow 1 -1) a) (- b -1)) 0) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (pow 0 -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.009156828
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (pow 0 -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.00191372
    },
    "speedup": 4.784831636812073,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ a 0) (/ (pow 0 a) (* (* (/ (/ 0 a) a) b) (pow 1 -1)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (pow 0 a) 0)) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.030219335
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (pow 0 a) 0)) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.006311543999999999
    },
    "speedup": 4.7879464993035,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ 1 (- (* -1 -1) -1)) (/ a (- (/ (pow (* 1 0) a) a) (* b 1)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 3 (/ a (- (/ (pow 0 a) a) b))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.020082942
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 3 (- b (/ a (- (/ (pow 0 a) a) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.004191648
    },
    "speedup": 4.7911804617181595,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a (/ (/ b (* (- (* (+ (* 1 -1) 1) (/ 1 b)) (+ 1 d)) 1)) 1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (/ b (+ -1 (* -1 d)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.028449085
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (/ (/ b (- -1 d)) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.005929445
    },
    "speedup": 4.797933870707967,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ b (pow a (pow (* (/ b (pow (/ (* b a) c) (/ b -1))) 1) d))))",
    "input_weight_simple": 21,
    "input_weight_complex": 56,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ b (pow a (pow (/ b (pow (/ (* a b) c) (* b -1))) d))))",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.020384437999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ b (pow a (pow (/ b (pow (/ (* a b) c) (/ b -1))) d))))",
      "output_weight_simple": 14,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.004241095
    },
    "speedup": 4.806409193852058,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (- (pow (pow 1 (+ (* 0 (- (- 0 -1) -1)) (/ -1 b))) b) -1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 2 (pow (pow 1 (/ -1 b)) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.026704021
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 2 (pow (pow 1 (/ -1 b)) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.005545538
    },
    "speedup": 4.815406728797098,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (* a 1)) (* -1 (- b (/ (+ a (/ (/ (/ 1 1) -1) (pow a 0))) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (+ a b)) 2)",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.072856891
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (/ (- a 1) -1) b))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.015117783
    },
    "speedup": 4.819284084180861,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow -1 (pow a (* (+ b 0) (+ (/ (pow (/ -1 1) 1) (+ b c)) 1)))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 (pow a (+ b (* b (/ -1 (+ b c)))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.021365701
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 (pow a (* b (+ 1 (/ -1 (+ b c)))))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004430222
    },
    "speedup": 4.822715656235737,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* 1 (/ a (/ -1 (* b (- (/ b (* (- 0 b) -1)) c))))) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(19385)",
      "output_term": "(* c (/ a (/ -1 (* b (- 1 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.617981415
    },
    "Extended": {
      "iterations": 18,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ a (/ -1 (- b (* b c)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.334034609
    },
    "speedup": 4.843753824921777,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* 0 (* a (pow -1 (+ a (/ (/ (/ 0 (/ a 1)) (/ a 0)) (/ 0 a)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.042101344
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.00868492
    },
    "speedup": 4.84763751422005,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow 0 0) (- a (pow (- a (* (* (+ a -1) -1) b)) (+ -1 (+ 0 1))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 0) (+ a -1))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.104455897
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 0) (+ a -1))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.021540602000000002
    },
    "speedup": 4.849256162850044,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (* (* a (* b (pow a (/ (- (/ 0 (pow 1 1)) (pow 1 b)) d)))) e))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* (pow a (/ (- 0 (pow 1 b)) d)) (* e (* a b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.059808201
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (* (pow a (/ (- 0 (pow 1 b)) d)) (* b e))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.012317044
    },
    "speedup": 4.8557268286124495,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* 1 (* (* (- -1 (/ (* (/ (/ a (- a -1)) 0) -1) (* (- 1 -1) 0))) c) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (* c c) (- -1 (/ (* -1 (/ (/ a (+ 1 a)) 0)) 0)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.08503559
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (- -1 (/ (- 0 (/ (/ a (+ 1 a)) 0)) 0)) (* c c))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.017501672000000003
    },
    "speedup": 4.858712356168026,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- -1 (- (/ 1 0) (pow (+ (* -1 1) (/ (+ a 0) -1)) (pow (- 1 b) 0)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- (* -1 (+ (/ 1 0) (+ a 2))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.264077047
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a -1) (+ (/ 1 0) (+ b 2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.054149317
    },
    "speedup": 4.876830616349233,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ (/ 0 a) (+ (+ (pow (pow (/ (+ -1 a) a) (+ -1 1)) (pow c 0)) -1) 1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014748422
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0030239250000000002
    },
    "speedup": 4.877244640657423,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (- (pow (+ (* (pow 0 a) (* (- 1 a) -1)) (* (/ a 0) 0)) b) 1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ -1 (pow (* (pow 0 a) (+ a -1)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.048042193999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (pow (* (pow 0 a) (- a 1)) b) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.009798501
    },
    "speedup": 4.903014654996718,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (* a a) (* a (pow (pow (* (- b (+ a a)) 1) (+ c -1)) c))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a a) (* a (pow (pow (- b (+ a a)) (+ c -1)) c))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.025262482
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a a) (* a (pow (pow (- b (+ a a)) (+ c -1)) c))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.005139202000000001
    },
    "speedup": 4.915642934447798,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (pow (+ 0 a) (pow b (pow (/ b (/ (+ 0 (+ -1 a)) (/ 0 d))) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a (pow b (/ 1 (/ b (/ (+ -1 a) 0))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.023966234
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a (pow b (/ 1 (/ b (/ (+ -1 a) 0))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.004873675000000001
    },
    "speedup": 4.91748711188169,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 0 0) (/ (- (* (pow -1 (pow 1 (+ (pow 0 0) a))) 0) -1) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.004899814
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.000994648
    },
    "speedup": 4.92617890952377,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (/ -1 (* -1 (pow (- -1 a) (* (/ (- (/ 1 a) 1) (* -1 a)) 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* -1 (pow (- -1 a) (/ (+ -1 (/ 1 a)) (* -1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.022274626999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ -1 (- 0 (pow (- -1 a) (/ (- (/ 1 a) 1) (- 0 a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004513838
    },
    "speedup": 4.9347422304477915,
    "weight_simple_diff": -2,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- -1 (/ (+ (/ 1 (* 0 0)) a) (+ (- a -1) (+ (/ b 0) a)))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (- -1 (/ (+ (/ 1 0) a) (+ 1 (+ (/ b 0) (+ a a))))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.09989406799999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ (/ (+ (/ 1 0) a) (+ (/ b 0) (- a (- -1 a)))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.020198193
    },
    "speedup": 4.945693310287707,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (+ (- a (/ 1 (* (pow (/ (+ 1 0) a) (- 0 0)) 1))) a) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.008468330999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.0017118389999999997
    },
    "speedup": 4.946920241915274,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (* (- (+ -1 (pow a 1)) a) (* b 0)) -1) (/ -1 a))",
    "input_weight_simple": 17,
    "input_weight_complex": 32,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(29224)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.186974369
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.23994183700000002
    },
    "speedup": 4.946925404259533,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow 0 (- (* a 1) (/ (/ 1 a) (* (* a a) 0)))) b) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 (- a (/ (/ 1 a) 0))) (pow b -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.022967584
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow 0 (- a (/ (/ 1 a) 0))) b) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.004640594
    },
    "speedup": 4.949276752070964,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ (- -1 (/ (+ a a) (/ (pow (pow (- -1 a) c) a) a))) b) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -1 (/ (+ a a) (/ (pow (pow (- -1 a) c) a) a))) (+ b d))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.114989439
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- (/ (+ a a) (/ (pow (pow (- -1 a) c) a) a)) (+ b d)))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.023195386
    },
    "speedup": 4.957427265922628,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- (- a (+ (+ 0 (* -1 (* a a))) (- (* b 1) a))) 0) c) (/ 1 d))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (+ (* -1 b) (* a (+ a 2))) c) (/ 1 d))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.462877757
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (- (* a (+ a 2)) b) c) (/ 1 d))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.09315857599999999
    },
    "speedup": 4.968707948047639,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 (* -1 a)) (+ (pow (+ a -1) (* a (* (/ (- -1 a) -1) -1))) (+ 0 d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (* -1 a)) (+ (pow (+ -1 a) (* a (- -1 a))) d))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.034839906000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (- 0 a)) (+ (pow (+ -1 a) (- 0 (* a (/ (- -1 a) -1)))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.007010813
    },
    "speedup": 4.969453043463005,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(- (pow (* 0 (/ a -1)) a) (/ (- (+ (- (+ (+ -1 0) 0) (pow -1 0)) -1) -1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 a) 2)",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.006688546
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 a) -2)",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.001344053
    },
    "speedup": 4.976400484207096,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (* (/ 0 a) (+ (+ (- b 1) (- -1 (/ (* c 0) 1))) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.10802590100000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021671242
    },
    "speedup": 4.9847581878325204,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (pow 0 1) (* -1 (* (- (pow 0 a) (/ (+ a b) 0)) 0))))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008974081
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001799379
    },
    "speedup": 4.987321181363126,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (pow 0 (- a (+ 0 (* 0 (* (- (- b c) a) c))))) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.114649076
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.022976663
    },
    "speedup": 4.989805351630043,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 a) (/ (/ (/ (+ 0 a) (- a (pow (* b b) 0))) 1) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 a) (/ (/ a (+ -1 a)) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.023431875
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 a) (/ (/ (/ a (+ -1 a)) 1) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.0046876619999999996
    },
    "speedup": 4.998627247442329,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (+ 0 (* a (/ 0 (+ a (/ (* d (- (+ -1 -1) 1)) (/ c c)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.016496489
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.0033000599999999996
    },
    "speedup": 4.9988451725120155,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ (pow 0 a) (* (pow (* (/ 1 1) (+ a (/ 0 0))) (* (/ 1 c) -1)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow 0 a) (* (pow (+ a (/ 0 0)) (* (/ 1 c) -1)) b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.023074244
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow 0 a) (* (pow (+ a (/ 0 0)) (- 0 (/ 1 c))) b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.004600663
    },
    "speedup": 5.0154171257490505,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (/ 1 (/ (- (/ 0 (pow (+ (- 1 a) 0) -1)) 0) a)) (* a -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ 1 0) (* a -1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.024766843
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ 1 0) (- 0 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.004936677
    },
    "speedup": 5.016905703978607,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ -1 (/ a (pow (* 1 (- (+ (pow (+ a a) a) (* a b)) a)) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ -1 (/ a (pow (+ (pow (+ a a) a) (* a (+ -1 b))) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.030278254000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ -1 (/ a (pow (- (pow (+ a a) a) (- a (* a b))) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.006030916
    },
    "speedup": 5.0205066693019775,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (+ (pow (* 0 (pow 0 (pow (/ (/ (/ a 0) b) (- b -1)) b))) c) (* b 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.019370233
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow 0 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.003840701
    },
    "speedup": 5.0434108252634084,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (/ (/ -1 (pow (- (/ (* (- a -1) 1) b) -1) b)) -1) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (/ 1 (pow (+ 1 (/ (+ a 1) b)) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.023194602
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (/ -1 (pow (+ 1 (/ (+ a 1) b)) b)) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.004584426
    },
    "speedup": 5.059434267234328,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (pow (/ a (* (+ (* (/ (+ 1 a) a) (- b b)) -1) -1)) b) a) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (pow a b) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.019331155
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (pow (/ a 1) b) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.0038146960000000002
    },
    "speedup": 5.067547977610797,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- 1 (- (pow (+ (- -1 (/ (- a a) a)) a) (* (+ a 1) 1)) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (pow (+ -1 a) (+ 1 a)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.024834183999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (pow (+ -1 a) (+ 1 a)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.004899119
    },
    "speedup": 5.069112222013794,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (- (+ -1 (* -1 -1)) -1) (pow 0 (+ (pow (- (/ a 0) b) (+ a 1)) c))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (+ (pow (- (/ a 0) b) (+ 1 a)) c)) 2)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.011790147
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 0 (+ (pow (- (/ a 0) b) (+ 1 a)) c)) 2)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.002320329
    },
    "speedup": 5.081239341489936,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* -1 0) (+ (/ 1 (* a (+ b b))) (/ (pow (- (/ b a) -1) (pow c b)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (/ 1 (* a (+ b b))) (/ (pow (+ 1 (/ b a)) (pow c b)) c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.036950035
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (/ 1 (* a (+ b b))) (/ (pow (+ 1 (/ b a)) (pow c b)) c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.007268056000000001
    },
    "speedup": 5.083895198385923,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 a) (/ (/ (/ 1 (* -1 a)) (* (/ (pow (/ b 0) 1) b) 0)) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (/ 1 (* a -1)) 0) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.022750752000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (/ 1 (- 0 a)) 0) c))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.004453653
    },
    "speedup": 5.108335112771472,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow (/ (* (* a 0) (/ (pow 1 (/ (+ a b) c)) (* c b))) c) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.018298431
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.003557643
    },
    "speedup": 5.143414052506111,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (pow (+ (pow (/ 0 a) (+ (/ a (- (pow a a) b)) (- a 1))) c) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (pow 0 (+ (/ a (- (pow a a) b)) (+ a -1))) c) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.024524408
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (pow 0 (+ (/ a (- (pow a a) b)) (- a 1))) c) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004766685
    },
    "speedup": 5.144960910989504,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (/ (/ 1 (+ a (* 1 (+ (/ -1 a) (pow 0 a))))) b) -1) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* -1 (/ (/ 1 (+ (/ -1 a) (+ a (pow 0 a)))) b)) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.026317944
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ (/ 1 (+ a (+ (/ -1 a) (pow 0 a)))) b) -1) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.005098651
    },
    "speedup": 5.161746509027584,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* 0 (/ 1 (- (/ (pow b (/ (pow 0 (* b -1)) b)) (- (* c 0) -1)) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.012182113000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.002357652
    },
    "speedup": 5.167053068052453,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (pow (/ (+ -1 (+ (- a (+ (- 1 a) b)) (/ c d))) a) (pow d b)) -1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* -1 (pow (+ (* (/ 1 a) (+ (/ c d) (+ (* -1 b) -2))) 2) (pow d b))))",
      "output_weight_simple": 19,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 2.148931448
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (/ (+ a (+ (+ a (- (/ c d) b)) -2)) a) (pow d b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.415661826
    },
    "speedup": 5.169903305000638,
    "weight_simple_diff": 4,
    "weight_complex_diff": 7,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a b) (* (pow -1 (+ a b)) (pow (* (* a (/ (/ -1 1) a)) 1) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a b) (pow -1 (+ a (+ b d))))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.045338204
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (* (pow -1 (+ a b)) (pow (* a (/ -1 a)) d)) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.008764793
    },
    "speedup": 5.172763806287268,
    "weight_simple_diff": -3,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(- (- a (- (/ (pow 1 (/ (- (+ (/ a b) b) 0) -1)) b) (- a 0))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (- (/ (pow 1 (* (+ b (/ a b)) -1)) b) a)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.147691616
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (/ (pow 1 (/ (+ b (/ a b)) -1)) b) (- c a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.028547707999999998
    },
    "speedup": 5.173501704585181,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (+ (- (* a (/ (+ b 0) (pow (/ (- a b) -1) (- -1 -1)))) 0) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -1 (* b -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.07157001800000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- -1 (/ b 1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.013817318999999998
    },
    "speedup": 5.1797326239627255,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 1 (+ a (* b (pow (+ (/ (- 1 (pow b 1)) (pow c -1)) -1) c)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (pow (+ -1 (/ (- 1 b) (/ 1 c))) c)) (+ 1 a))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.034336207
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a (* b (pow (+ -1 (/ (- 1 b) (/ 1 c))) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.006625075
    },
    "speedup": 5.182765025301601,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 1 (/ (/ a -1) (* a (+ (- (pow a a) c) (- (* 1 (pow d 0)) (+ 0 b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (* a -1) (* a (+ (- (pow a a) c) (- 1 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.19932104399999998
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (/ a -1) (* a (+ (pow a a) (- 1 (+ c b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.038454721
    },
    "speedup": 5.183265898613593,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (pow -1 (- (pow (/ a (* a 0)) c) (/ 1 (- 0 (- 0 a))))) 0) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (- (pow (/ a 0) c) (/ 1 a))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.02650147
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (- (pow (/ a 0) c) (/ 1 a))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.005103707
    },
    "speedup": 5.192592364726266,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- (/ a (/ (/ (pow 1 -1) (/ (+ a -1) a)) (pow (/ -1 0) -1))) b) 1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (/ a (/ (/ 1 (/ (+ a -1) a)) (/ 1 (/ -1 0)))) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.022296428
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (/ a (/ (/ 1 (/ (- a 1) a)) (/ 1 (/ -1 0)))) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.004289151
    },
    "speedup": 5.198331324777328,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- -1 (/ (pow (+ -1 a) (pow (/ (- (pow -1 1) -1) (+ c a)) (pow b a))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- -1 (pow (+ a -1) (pow 0 (pow b a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.017239877
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- -1 (/ (pow (+ a -1) (pow 0 (pow b a))) 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.00331527
    },
    "speedup": 5.200142673145777,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ (* a (pow (* b c) (* 1 (pow c (- (* -1 b) e))))) (/ b 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ b 0) (* a (+ -1 (pow (* b c) (pow c (- (* b -1) e))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.032596032
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (pow (* b c) (pow c (- (- 0 b) e)))) (- a (/ b 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.006266328
    },
    "speedup": 5.201775585318866,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (/ (/ a a) (pow 0 (- (pow a (- c (* (/ b a) 1))) (* (- 1 1) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (pow 0 (pow a (- c (/ b a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.019228556
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (pow 0 (pow a (- c (/ b a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.003688251
    },
    "speedup": 5.213461882068222,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ (+ (+ 1 (+ (+ (pow (* 1 1) a) (/ a 1)) (/ 1 0))) 0) b) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (+ (pow 1 a) (+ (/ 1 0) (+ a 1))) b) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.176838805
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (+ 1 (+ (/ a 1) (+ (pow 1 a) (/ 1 0)))) b) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.033884047
    },
    "speedup": 5.218939904079344,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ 0 1) (pow (- (+ (pow 0 (/ a (pow -1 (/ a 0)))) 0) (/ 1 a)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (- (pow 0 (/ a (pow -1 (/ a 0)))) (/ 1 a)) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.01076719
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (- (pow 0 (/ a (pow -1 (/ a 0)))) (/ 1 a)) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.002063013
    },
    "speedup": 5.219157610737305,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (pow (pow 0 (/ (- a a) (pow (/ 0 0) (pow -1 -1)))) a) (* a b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow (pow 0 0) a) (* a b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.017796973
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow (pow 0 0) a) (* a b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.003400971
    },
    "speedup": 5.232909366178071,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (* (+ (- 1 (- 0 a)) (/ (/ (/ (- (* 1 -1) b) -1) a) a)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.188289068
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.035950621
    },
    "speedup": 5.237435759454614,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 0 (- (/ (pow a a) (pow b (pow (- 1 (* (pow b b) -1)) (* b a)))) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013948691999999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002661297
    },
    "speedup": 5.241313539976936,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ (+ -1 (- (* (pow (* (/ (+ a 0) 1) (/ 1 a)) (pow 1 c)) a) d)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021558931
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004112389
    },
    "speedup": 5.242434750214534,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a 1) (pow (- (pow a (/ (pow (+ (+ -1 b) a) -1) (- b a))) (+ 1 c)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.023734035
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a 1))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.004512225999999999
    },
    "speedup": 5.2599393292800505,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (pow b (pow (pow b (+ (/ (pow (- (- c -1) d) (/ c d)) (+ a -1)) 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.019309764
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.0036704550000000004
    },
    "speedup": 5.26086384385587,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (+ (/ b (* b (- 0 (/ (+ (+ a d) 0) -1)))) 1)) (pow c 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (/ b (* b (+ a d))) (+ a 1)) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.17659835000000004
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ b (- 0 (* b (/ (+ a d) -1)))) (- c (+ a 1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.033535081
    },
    "speedup": 5.266077931942375,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow a b) (+ (pow (- (pow (pow (pow 0 (- b b)) -1) (+ 0 a)) 1) (* -1 0)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a b) (+ 1 d))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.012141145
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a b) (+ 1 d))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.002303057
    },
    "speedup": 5.271751849823952,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (* 0 -1) (+ a -1)) (pow (- (- (/ (* a -1) (* 1 -1)) (- 1 -1)) a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -2)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.011509466999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (/ (- 0 a) -1) (+ a 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.0021824740000000002
    },
    "speedup": 5.2735872225740135,
    "weight_simple_diff": -6,
    "weight_complex_diff": -11,
    "depth_diff": -3
  },
  {
    "base_term": "(/ a (- 1 (- -1 (pow -1 (/ (- b (+ a (* a 0))) (/ (pow 0 b) -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (pow -1 (/ (- b a) (* -1 (pow 0 b)))) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.036246322
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (pow -1 (/ (- b a) (/ (pow 0 b) -1))) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.006869751
    },
    "speedup": 5.276220637400103,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (- (- 0 a) (+ (pow a (/ a (pow -1 (/ a b)))) 1)) b) (pow c (+ b 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 (* -1 (+ a (+ b (pow a (/ a (pow -1 (/ a b)))))))) (pow c (+ b 1)))",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 10,
      "simplification_time": 0.074839485
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 (+ a (+ b (pow a (/ a (pow -1 (/ a b))))))) (pow c (+ b 1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.014184195
    },
    "speedup": 5.276258892379864,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* a (pow a (- (/ b -1) (+ (+ (+ (pow 1 c) c) c) 0)))) (- (/ 1 c) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (pow a (+ (* c -2) (* -1 (+ b (pow 1 c)))))) (+ 1 (pow c -1)))",
      "output_weight_simple": 16,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.053121395
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (pow a (- (/ b -1) (+ c (+ c (pow 1 c)))))) (+ 1 (/ 1 c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.010061554
    },
    "speedup": 5.27964119657858,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* -1 a) (/ b (+ -1 (* (pow (/ (/ 0 0) (+ c -1)) (pow d c)) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.024394669
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (* -1 (/ b -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.004616233
    },
    "speedup": 5.284540230096704,
    "weight_simple_diff": -3,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(/ a (/ (+ b b) (+ -1 (* (/ (+ (* (/ b -1) -1) (pow 0 a)) (+ -1 1)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (+ b b) (+ -1 (/ (+ b (pow 0 a)) 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.099253221
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (+ b b) (+ -1 (/ (- (pow 0 a) (/ b -1)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.018702508
    },
    "speedup": 5.306947121744314,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 (* (* (pow (pow -1 0) a) (+ (pow -1 (/ (+ -1 -1) b)) (* b 1))) a)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (pow 1 a) (* a (+ b (pow -1 (/ -2 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.036898498
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (* (pow 1 a) (+ b (pow -1 (/ -2 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.006945696
    },
    "speedup": 5.312426285285161,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (pow a (pow (/ a (+ (/ -1 (pow (+ -1 0) c)) 0)) 0)) (* 0 c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.009370164
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.0017622010000000001
    },
    "speedup": 5.317307163030778,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (pow 1 (pow (+ (pow (* (- (/ 1 1) 1) (/ a 1)) a) 0) b)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (pow 1 (pow (pow 0 a) b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.011438879999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (pow 1 (pow (pow 0 a) b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.002150315
    },
    "speedup": 5.319629914686917,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 (+ (pow (pow a a) (- a 0)) (+ b (/ (/ (* b c) 1) (pow 1 -1))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.020478073
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0038415
    },
    "speedup": 5.330749186515684,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (- (- -1 a) (* (/ a (* (+ (pow (+ 1 a) 1) (* 1 0)) d)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- (- -1 a) (/ a (* (+ 1 a) d))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.055160428000000004
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- -1 (+ a (/ a (* (+ 1 a) d)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.010333258
    },
    "speedup": 5.338144852281827,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* a b) (* (* (pow (+ (/ (pow b (+ d d)) (- 1 -1)) (- a e)) 1) 1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (* b (+ (* (pow b (+ d d)) -0.5) (+ (* a -1) e))))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.658046142
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (* b (- (- e a) (/ (pow b (+ d d)) 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.12301436799999999
    },
    "speedup": 5.349343761210073,
    "weight_simple_diff": 2,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (pow a (* 0 (/ (pow (+ (/ a (* 0 (* 1 0))) (- 0 -1)) a) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008594185
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0016060760000000001
    },
    "speedup": 5.351045031492906,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (pow -1 (pow 1 a)) 1) (/ (* a (/ c (+ (- 0 (* b a)) (* a a)))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (pow 1 a)) (/ (* a (/ c (* a (+ a (* -1 b))))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.070751544
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (pow -1 (pow 1 a)) 1) (/ (* a (/ c (* a (- a b)))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 7,
      "simplification_time": 0.013221259999999999
    },
    "speedup": 5.351346543370299,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (- a (* b (/ (/ -1 (+ (+ (pow (/ c b) b) (pow b a)) (- b 1))) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ a (* b (/ -1 (+ (pow (/ c b) b) (+ b (+ -1 (pow b a))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.053383088
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- a (* b (/ (/ -1 (+ (pow (/ c b) b) (+ (pow b a) (- b 1)))) -1))))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.009960634
    },
    "speedup": 5.359406640179732,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (+ (* a a) (pow 1 a)) -1) (pow (- c (* -1 1)) 0))",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 5,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (+ (* a a) (pow 1 a)) -1))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.017441979
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ (* a a) (pow 1 a)) -1))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.003251894
    },
    "speedup": 5.363637006618297,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (/ -1 (* a (- 1 (+ (* a a) (- (* a a) 0))))))",
    "input_weight_simple": 17,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ -1 (+ a (* (* a a) (* a -2)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.061260785
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ -1 (* a (- 1 (* a (+ a a))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.011403312
    },
    "speedup": 5.372192306936792,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ 1 (pow (* 0 a) (pow (* a (- (* (/ a 1) 0) (/ 0 -1))) 1))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 (pow 0 0)) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.011031901
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 0) (- a 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.0020531919999999997
    },
    "speedup": 5.3730488916769605,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (/ (* (/ (* (+ a a) 1) (pow 1 (* 0 (* (/ b b) 0)))) -1) (+ b -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (* a -2) (+ -1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.044937283
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (- 0 (/ (+ a a) 1)) (+ -1 b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.008361319
    },
    "speedup": 5.374425135555765,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (+ (/ a (/ b (pow 1 (/ (+ 0 (pow (* 0 -1) 1)) (/ 1 b))))) 0) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a b) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.011234359000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a (/ b 1)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.0020891169999999997
    },
    "speedup": 5.377563343747623,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow (- a (/ (pow a (+ a b)) (+ c (/ (pow (+ a 0) a) (pow b c))))) 0) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.022292391
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004144984
    },
    "speedup": 5.3781609289686045,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a (- 0 a)) (* (* (+ 0 (- (- (* c c) 0) (+ b 1))) a) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a a) (* a (* (- (* c c) (+ b 1)) d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 1.414164098
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 2 (* d (+ 1 (- b (* c c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.262814292
    },
    "speedup": 5.3808492956692024,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (pow a (/ (* (/ a a) 0) 0)) (* 1 0)) (/ 0 (pow 1 (- 0 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (/ 0 0)) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.0068657760000000005
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (/ 0 0)) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.001275261
    },
    "speedup": 5.383820253265802,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (+ (* a (/ a 0)) (pow -1 (* (- (- (* a (+ a 1)) (/ a a)) 1) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ a 0)) (pow -1 (* a (+ (* a a) (+ a -2)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.077736051
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ a 0)) (pow -1 (* a (- (+ a (pow a 2)) 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.014417898
    },
    "speedup": 5.391635521349922,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 0 (pow (* (* 1 a) (- (pow (* b (* b (/ 1 a))) b) (* (pow b -1) c))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.055111557
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010214756
    },
    "speedup": 5.395288639297894,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (pow 1 (+ (* (/ a a) (* (/ (* (+ -1 1) 1) b) (- 1 b))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.029781961
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005512978
    },
    "speedup": 5.402154878905738,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 (+ 1 1)) (pow (* (/ -1 a) (/ 1 a)) (* a (- a (- (pow 0 a) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (* -1 (pow a -2)) (* a (- a (pow 0 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.02470993
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (* (/ -1 a) (/ 1 a)) (* a (- a (pow 0 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.004566146
    },
    "speedup": 5.411550572408329,
    "weight_simple_diff": 0,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (- 0 (+ (/ 1 (+ (pow (pow 0 (- -1 1)) (/ b 1)) (* 1 0))) 1)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.012344698
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.00227809
    },
    "speedup": 5.418880729031777,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (+ (pow (+ a b) (- 0 a)) -1) 1) (/ a (* (- a -1) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (pow (+ a b) (- 0 a)) -1) (/ a (+ b (* a b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.011661726
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (pow (+ a b) (- 0 a)) -1) (/ a (* b (- a -1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.002150879
    },
    "speedup": 5.421841953917445,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (- -1 (/ (pow (+ (* a (/ -1 (+ a 0))) 1) (* (* 0 a) -1)) 0)) b) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.015128629999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002789662
    },
    "speedup": 5.4231050213251635,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 0 -1) (- (+ (pow (pow -1 (pow (pow 0 (/ a b)) (- -1 1))) b) b) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (pow -1 (pow (pow 0 (/ a b)) -2)) b) (+ (pow 0 -1) (+ -1 b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.034939798
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow -1 (pow (pow 0 (/ a b)) -2)) b) (- (- 1 b) (pow 0 -1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.006439949
    },
    "speedup": 5.425477437787163,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ a a) (pow a (+ a (+ (/ (/ (+ a b) 1) c) (+ -1 c))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow a (+ (/ (+ a b) c) (+ c (+ a -1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.131590035
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow a (+ a (+ (/ (/ (+ a b) 1) c) (+ c -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.024216095
    },
    "speedup": 5.433990699161033,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(/ 1 (/ (- (- a (* (- (pow b -1) (- (pow a b) 0)) (* -1 (+ -1 a)))) -1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10536)",
      "output_term": "(/ 1 (/ (+ a (+ 1 (* (- (/ 1 b) (pow a b)) (+ a -1)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 1.155675811
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ a (+ 1 (* (- (/ 1 b) (pow a b)) (+ a -1)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.21259506299999997
    },
    "speedup": 5.4360425622865955,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (+ (+ 0 (pow -1 (- a (pow 0 (* (- b 1) a))))) c) d) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ (pow -1 (- a (pow 0 (* a (+ -1 b))))) c) d) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.026124340999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ (pow -1 (- a (pow 0 (* a (- b 1))))) c) d) a)",
      "output_weight_simple": 15,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.004805472
    },
    "speedup": 5.436373575790265,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (+ (+ (+ -1 (* 0 a)) (/ (- a b) (pow -1 c))) 0)) (/ a b))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (+ -1 (/ (- a b) (pow -1 c)))) (/ a b))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.034858588999999995
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (+ -1 (/ (- a b) (pow -1 c)))) (/ a b))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.006409386
    },
    "speedup": 5.438678369503724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (* a b) (* (pow (* c (* c (pow (- a a) -1))) (/ (pow c e) c)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.0177887
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.003269217
    },
    "speedup": 5.441272329123457,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ -1 a) (/ (pow a (* (/ -1 (- a (* a 1))) c)) e)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.028255496999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0051908399999999995
    },
    "speedup": 5.443338072450701,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (* (* a (- (+ (+ (+ (/ 0 a) 0) -1) (- a b)) c)) 1) 0) (+ c c))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (- (+ -1 (- a b)) c)) (+ c c))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.6942050740000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (- -1 (+ b (- c a)))) (+ c c))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.127359833
    },
    "speedup": 5.450737941843879,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (* (- (- a -1) (pow (+ 1 (- (/ a 1) a)) b)) 0) c) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019515147
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0035719140000000003
    },
    "speedup": 5.463498561275551,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (/ 1 a) (pow (- -1 (* a -1)) (pow 1 (pow (pow 0 (* 0 1)) (pow a -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (pow a -1) (pow (+ a -1) (pow 1 (pow (pow 0 0) (pow a -1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.021985882999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (/ 1 a) (pow (+ a -1) (pow 1 (pow (pow 0 0) (/ 1 a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.004023396
    },
    "speedup": 5.464508837807662,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ (* -1 0) -1) (/ (* (pow (/ a (/ (* -1 -1) 1)) 1) b) 1)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.011849441
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (* (/ a 1) b) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.002163123
    },
    "speedup": 5.477932137932055,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ (pow 0 (+ -1 (pow (* (* (- (- a a) -1) (+ -1 -1)) 0) b))) a) (/ 1 -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ a (pow 0 (+ -1 (pow 0 b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.012405063999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (pow 0 (+ -1 (pow 0 b)))) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.002260367
    },
    "speedup": 5.488075166554811,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ (- (+ 1 a) (* (* (- 1 (+ -1 -1)) -1) (* 0 a))) (- c 1)) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (/ (+ 1 a) (+ -1 c)) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.045889065
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (/ (+ 1 a) (- c 1)) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.008348379
    },
    "speedup": 5.496763503429828,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a -1) (/ (- (+ -1 (/ 1 b)) (pow b (* (pow (* -1 0) 0) (pow a d)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a 1) (/ (- (+ -1 (/ 1 b)) (pow b (* (pow 0 0) (pow a d)))) 0))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.022643256
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a 1) (/ (- (+ -1 (/ 1 b)) (pow b (* (pow 0 0) (pow a d)))) 0))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.004114931
    },
    "speedup": 5.502706120710165,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a 0) (/ (/ -1 (+ a (* (/ (- (* 0 b) 1) (pow a 1)) (* b 1)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a 0) (/ (/ -1 (+ a (* b (/ -1 a)))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.031425056
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a 0) (/ (/ -1 (+ a (* b (/ -1 a)))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.005694737
    },
    "speedup": 5.518262915390123,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (+ 1 (* a (- (* (/ b (/ b (pow (* a a) b))) -1) (/ a (* 1 b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (* a -1) (+ (/ b (/ b (pow (* a a) b))) (/ a b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.081010919
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* a (+ (/ b (/ b (pow (* a a) b))) (/ a b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.014614882000000003
    },
    "speedup": 5.543042974962096,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (/ (+ (- a a) -1) 1) (/ (+ 1 -1) (+ (/ (+ b c) 1) a))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014214123000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0025632709999999998
    },
    "speedup": 5.5453063683083075,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (+ (/ (* (- (* (* (- -1 a) 1) (pow 0 0)) -1) 0) -1) -1) a) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.040617518
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.007307046999999999
    },
    "speedup": 5.558677534166676,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (pow (- -1 0) (* (/ (- (pow (/ a a) 0) 1) b) (+ (/ 0 a) b)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ c (* a c))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.021107206
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a 1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.0037896320000000002
    },
    "speedup": 5.569724448178609,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (- a (pow 0 (/ 1 (/ (- (- (pow 0 b) 1) 0) (pow 0 1))))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.020526845000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.003683846
    },
    "speedup": 5.57212353610873,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 0 1) (* -1 (* -1 (- (/ (/ 0 (/ (pow a -1) 1)) -1) (- -1 (- 1 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011489281
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002052834
    },
    "speedup": 5.596790096033094,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 (pow a (pow b 0))) (+ (pow -1 (/ (- (pow a (/ a b)) (* 0 e)) b)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ 1 a) (pow -1 (/ (pow a (/ a b)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.019572045
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ 1 a) (pow -1 (/ (pow a (/ a b)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.003488011
    },
    "speedup": 5.6112337375082815,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (- b (/ (/ 0 (+ 0 (- 0 (+ a (+ 1 b))))) b))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow b -2))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.13314805500000002
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a b) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.02371604
    },
    "speedup": 5.614261697990052,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow a (+ (/ (/ 0 (/ 1 1)) 0) (pow (- (/ -1 0) a) (pow 1 -1)))) 0) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.011754251
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.00208815
    },
    "speedup": 5.629026171491512,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a (/ a (+ c (/ 0 (* a (/ 1 (- (/ b -1) a))))))) (+ 1 e))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ a c)) (+ 1 e))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.023927912000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (/ a c)) (+ 1 e))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.004249449000000001
    },
    "speedup": 5.630826961330751,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (+ (/ a 1) (pow -1 (+ (/ (+ (/ 0 a) (* 0 a)) a) -1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.011269716
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (/ a 1) -1))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.002000533
    },
    "speedup": 5.633356710436669,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (- (pow (+ -1 (pow (+ (* b 0) (- -1 (/ 1 -1))) (pow (/ 1 1) b))) a) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (pow (+ -1 (pow 0 (pow 1 b))) a) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.006057221
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (pow (+ -1 (pow 0 (pow 1 b))) a) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.0010745659999999999
    },
    "speedup": 5.636899920526055,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (/ 0 (pow a 0))) (- (* (* (- (- a (pow a 0)) 0) (pow a b)) c) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (* (pow a b) (* (+ a -1) c)) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.051181765
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* (- a 1) (* (pow a b) c)) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.009078639
    },
    "speedup": 5.637603279522404,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow -1 (+ 0 (pow (* (/ a (pow (- c a) b)) 0) 1))))",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.008424599
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.001492196
    },
    "speedup": 5.645772405233628,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (/ 0 (pow (+ (- (- 0 0) (/ (+ (* -1 a) -1) (/ a 1))) 0) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.046203387
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008169929
    },
    "speedup": 5.655298473218066,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (+ a a) (pow (pow a a) (+ 0 (+ (* 0 1) -1)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ a a) (/ 1 (pow a a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.006224716999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ a a) (/ 1 (pow a a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.001099809
    },
    "speedup": 5.659816386299802,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (+ a (pow (/ (- (* (/ (/ a 0) b) (+ -1 0)) (/ a -1)) -1) d))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ (/ (/ a 0) b) (* a -1)) d) (+ a a))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.03595001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ a (pow (/ (- 0 (+ (/ (/ a 0) b) (/ a -1))) -1) d)))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.006350278
    },
    "speedup": 5.661171054243609,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(* (+ 1 a) (/ (pow (/ (/ a (/ (* (pow a a) 1) 1)) (+ (pow 0 b) -1)) 1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 a) (/ (/ (/ a (pow a a)) (+ (pow 0 b) -1)) 0))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.024613504
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 a) (/ (/ (/ a (/ (pow a a) 1)) (+ (pow 0 b) -1)) 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.004346162
    },
    "speedup": 5.66327348129223,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (+ a (+ a (/ (- (+ (pow a (+ c 1)) 0) -1) 0))) d) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (+ (/ (+ 1 (pow a (+ c 1))) 0) (+ a a)) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.044046957
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (+ a (+ a (/ (+ 1 (pow a (+ c 1))) 0))) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.007759854
    },
    "speedup": 5.676261048210443,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (* (- (pow (/ 1 a) 0) a) (/ (* (pow (* a 0) a) (- a a)) -1)) a) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.046784335999999996
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.008221411
    },
    "speedup": 5.690548252605301,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (/ -1 (/ (- (pow 0 1) (pow (/ (- (pow a 1) a) (/ 1 a)) b)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ -1 (- 0 (pow 0 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.007944537
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ -1 (/ (- 0 (pow 0 b)) 1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.001395577
    },
    "speedup": 5.69265400619242,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* a (pow (pow a (* (- (/ (* (/ 0 b) 0) (* -1 0)) a) -1)) 1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (+ a (* -1 (/ 0 0)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.032866842
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (- a (/ 0 0))))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.005769724
    },
    "speedup": 5.696432273016872,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (/ (pow a (+ (pow (/ (* b -1) (* 0 (+ -1 a))) (- (- 1 a) 0)) c)) d) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ (pow a (+ (pow (/ (* b -1) 0) (- 1 a)) c)) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.034050153
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow a (+ (pow (/ (- 0 b) 0) (- 1 a)) c)) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.005976853000000001
    },
    "speedup": 5.697003590350975,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (- (pow (* 1 1) -1) (/ a (- -1 (* 0 (* 0 (/ (/ a 1) 0)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.008313782
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- 1 (/ a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.001457881
    },
    "speedup": 5.702647884155154,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (pow 0 (pow (- (/ 0 (/ (* (- (* a -1) b) (pow a 0)) b)) (+ d 0)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 (pow (- 0 d) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.039543152000000005
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 (pow (- 0 d) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.006913442
    },
    "speedup": 5.719748860263818,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (* (+ 0 (/ b a)) 1)) (pow a (* (/ (pow d e) (/ (/ 1 0) d)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ b a)) (pow a (* b (/ (pow d e) (/ (/ 1 0) d)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.026281080999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ b a)) (pow a (* b (/ (pow d e) (/ (/ 1 0) d)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.004587697
    },
    "speedup": 5.728599992545279,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ (pow a b) (pow (* b (/ (- (* (/ 1 d) a) (* -1 a)) (/ a a))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (pow a b) (* a (+ b (* b (/ 1 d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.11916411
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (pow a b) (* b (/ (+ a (* a (/ 1 d))) 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.020779992
    },
    "speedup": 5.734559955557249,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (* (/ (+ 1 a) (pow (/ 0 (/ (pow (* 0 b) a) (- b 1))) c)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (+ a 1) (pow 0 c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.022094390000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (+ a 1) (pow 0 c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.003844183
    },
    "speedup": 5.747486527046189,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (pow a 0) (pow (- a (pow b (* a (+ 1 (/ c c))))) a)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 (pow (- a (pow b (+ a a))) a)) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.007324321999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 (pow (- a (pow b (* a 2))) a)) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.0012732590000000001
    },
    "speedup": 5.75242114919274,
    "weight_simple_diff": -1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 0 a) (* a (/ 1 (- (* (pow (pow (+ 0 a) b) 1) a) -1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 (+ 1 (* a (pow a b)))) (* a -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.014766601
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (/ 1 (+ 1 (* a (pow a b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.002564646
    },
    "speedup": 5.757754091597827,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (/ 1 (+ (+ a (pow (* (pow (/ (+ -1 0) 1) a) (/ b -1)) b)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (+ (pow (* -1 (* (pow -1 a) b)) b) (+ a 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.021141115000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (+ a (+ 1 (pow (* (pow -1 a) (/ b -1)) b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.0036688219999999995
    },
    "speedup": 5.762371409678639,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow a (+ b (pow a (pow (- (pow b -1) (pow (* b b) 0)) (/ 1 (+ -1 0)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (+ b (pow a (/ 1 (+ -1 (/ 1 b)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.0067845579999999996
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (+ b (pow a (/ 1 (- (/ 1 b) 1))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.001176258
    },
    "speedup": 5.767916562522848,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (* 0 (- (/ (pow (pow a (/ (+ a b) c)) (* a 1)) d) -1)) -1) (pow c c))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow c c))",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.024608969999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow c c))",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.004263529
    },
    "speedup": 5.771971997844977,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a -1) (pow (/ (pow 1 b) (- (- (pow a a) (* 1 c)) 1)) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (pow (/ (pow 1 b) (+ -1 (- (pow a a) c))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.027814018
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a 1) (pow (/ (pow 1 b) (- (pow a a) (+ 1 c))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.004816387
    },
    "speedup": 5.774871911247995,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* a (+ (+ b (+ 0 0)) (/ -1 (pow 0 b)))) (* a (/ (+ 0 b) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (+ (/ -1 (pow 0 b)) b)) (* a (/ b c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.023770727
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (+ (/ -1 (pow 0 b)) b)) (* a (/ b c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.004114952
    },
    "speedup": 5.776671757046012,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (+ (* (+ -1 (/ (/ a a) (- (pow (pow b 0) a) (pow 0 1)))) b) (+ d d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (+ -1 (/ 1 (pow 1 a)))) (+ d (+ 1 d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.07863656399999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (* b (+ -1 (/ 1 (pow 1 a)))) (+ d d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.013583698
    },
    "speedup": 5.789039479529064,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* 0 (/ (- -1 (pow (/ (* (/ 0 (+ a (* b b))) (pow 0 1)) 1) b)) (+ 0 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007696021000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001326866
    },
    "speedup": 5.800149374541213,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (/ (+ a a) (/ (* (- (pow (+ 1 (/ a 1)) (- a 0)) b) 1) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ a a) (/ (- (pow (+ a 1) a) b) b)) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.04802013200000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (+ a a) (/ (- (pow (+ 1 (/ a 1)) a) b) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.008237378
    },
    "speedup": 5.829540904885026,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (/ (pow (pow (/ a (+ (/ (pow a (pow 1 -1)) a) 1)) 0) b) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* -1 (pow 1 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.009371374
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (pow 1 b) -1))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.001604926
    },
    "speedup": 5.839131523821036,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (/ a 1) (- (+ b (* 1 (* (+ (/ 0 b) c) (+ 0 a)))) d)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (- (+ b (* a c)) d)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.058910899
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (/ a 1) (- b (- d (* a c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.010075491
    },
    "speedup": 5.846950684586984,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (- (* a a) (+ (* (pow a (* (pow (- 1 a) a) (/ a b))) c) (- 0 -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow a (* (pow (- 1 a) a) (/ a b))) c) (+ 1 (* a (* a -1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.054228492
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (* a a) (* (pow a (* (pow (- 1 a) a) (/ a b))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.009273055999999998
    },
    "speedup": 5.847963389846887,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- a (- (/ (* a 1) (/ (/ (/ (pow b 0) 1) (* 1 b)) (/ a 0))) -1)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (+ 1 (/ a (/ (pow b -1) (/ a 0))))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.090104895
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ (/ a (/ (/ 1 b) (/ a 0))) (- d a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.015399797
    },
    "speedup": 5.851044335194809,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* 1 (/ a (- -1 (/ (* -1 (/ (/ (- (- -1 -1) -1) (+ 0 1)) a)) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ -1 (* (/ 1 a) (/ 1 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.023658114
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- -1 (/ (- 0 (/ 1 a)) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.004027752
    },
    "speedup": 5.873776240443801,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (- (/ a -1) (* b (* 0 (+ (pow (pow (* -1 a) a) (+ 0 -1)) (/ d -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (* a a))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.026023804
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a -1))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.004428456000000001
    },
    "speedup": 5.876496006734627,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a b) (* 0 (+ (pow (pow (pow b (/ (/ 0 1) c)) (- d 1)) c) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.017165813
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.0029191029999999997
    },
    "speedup": 5.880509526385332,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (- (/ 0 (pow a -1)) (* (- -1 (/ (* (+ -1 b) 1) -1)) 0)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024401185000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004132488
    },
    "speedup": 5.904720110500019,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (pow (pow (/ a a) -1) (pow b (+ a (/ (pow (+ b a) c) (pow b 0)))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow 1 (pow b (+ a (pow (+ a b) c))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.007246280999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow 1 (pow b (+ a (/ (pow (+ a b) c) 1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.00122644
    },
    "speedup": 5.908386060467694,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (* (+ 1 (- a (/ (* (* (pow b b) b) (- 0 0)) b))) (/ 0 d)) 0) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025387641000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004292138
    },
    "speedup": 5.914917227731261,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 0 (- (/ -1 (/ (- (* a a) (/ (* 0 a) 0)) 1)) 1)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007070108
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001194444
    },
    "speedup": 5.91916238852554,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (+ a (/ b (- (/ (/ (+ (+ -1 b) a) 1) 0) (+ (pow c -1) 1)))) 0) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ (+ a (/ b (- (/ (+ a (+ b -1)) 0) (+ 1 (/ 1 c))))) 0))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.025597904999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (/ b (- (/ (/ (+ a (+ b -1)) 1) 0) (+ 1 (/ 1 c))))) 0) -1)",
      "output_weight_simple": 17,
      "output_weight_complex": 44,
      "output_depth": 10,
      "simplification_time": 0.004311125
    },
    "speedup": 5.9376392472962385,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- a (pow (+ 0 (pow (- 1 (+ -1 (* 0 a))) (- b -1))) a)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (pow 2 (+ 1 b)) a) (* a -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.013067588
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (pow (pow 2 (+ 1 b)) a)) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.00219985
    },
    "speedup": 5.94021774211878,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (/ (pow a a) a) -1) (+ (* a a) (/ -1 (+ (+ c (* -1 0)) (- c a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (pow a (+ a -1)) -1) (+ (* a a) (/ -1 (+ c (- c a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.057560472
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (/ (pow a a) a)) (+ (* a a) (/ -1 (+ c (- c a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.009678624
    },
    "speedup": 5.947175135639116,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (- (- (/ a 0) 1) (/ (* (pow a 0) b) a)) 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* (/ a 0) -1) (+ (/ b a) 2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.115759306
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (/ a 0) (+ (/ b a) 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.019456435999999997
    },
    "speedup": 5.94966652679864,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- 1 (- (/ (pow (* (* (/ 0 -1) a) b) -1) (/ c c)) (pow 0 0))) 1) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 (- (/ 1 0) (pow 0 0))) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.02786194
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 (- (/ (/ 1 0) 1) (pow 0 0))) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.004678849
    },
    "speedup": 5.954870524780775,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (- (- a (* (pow a a) (/ (/ 1 0) (/ (* a a) -1)))) (* a -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (- a (* (pow a a) (/ (/ 1 0) (* a (* a -1)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.062138916999999995
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (- a (* (pow a a) (/ (/ 1 0) (/ (* a a) -1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.010410363
    },
    "speedup": 5.96894815291263,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ a a) (- (pow (- (/ (pow 0 (* a a)) c) (- 1 d)) 1) (/ b a))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (+ a a) (- (+ (/ (pow 0 (* a a)) c) (+ d -1)) (/ b a))) d)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.062805019
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (+ a a) (- (/ (pow 0 (* a a)) c) (+ 1 (- (/ b a) d)))) d)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.010517598
    },
    "speedup": 5.971422277215768,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- 1 0) (+ a (/ b (pow (/ (/ a a) (+ (- b -1) c)) c))))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ a (/ b (pow (/ 1 (+ 1 (+ b c))) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.028096535
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ a (/ b (pow (/ 1 (+ (+ 1 b) c)) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.004701426999999999
    },
    "speedup": 5.976171702761737,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* a a) (pow (pow (/ b (pow a 1)) (+ (* (- c a) c) c)) (* 1 a))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.042261425
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007066220000000001
    },
    "speedup": 5.9807683598868975,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (pow 0 (pow (pow 0 (/ (+ a a) 0)) (+ -1 (- (/ (/ -1 b) b) (/ 0 a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 0 (pow (pow 0 (/ (+ a a) 0)) (+ -1 (* -1 (pow b -2))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.020079775
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 0 (pow (pow 0 (/ (+ a a) 0)) (+ -1 (/ (/ -1 b) b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.003350783
    },
    "speedup": 5.992562036992548,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a 1) (pow (pow (+ a a) (+ (* (- -1 (/ 1 a)) (- 0 0)) (/ a a))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a -1) (pow (+ a a) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.014949497
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a 1) (pow (+ a a) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.002491917
    },
    "speedup": 5.999195398562633,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (- (/ a 1) (+ -1 (+ (* (- 1 (- a -1)) (pow a a)) -1))) (- d 1)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10184)",
      "output_term": "(+ d (pow (+ (* a (pow a a)) (+ a 2)) (+ -1 d)))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.559552462
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ d (pow (+ (/ a 1) (+ 2 (* a (pow a a)))) (- d 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.093153869
    },
    "speedup": 6.00675493145647,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow -1 -1) (- (* (/ (+ (pow (* (- a b) 1) (* -1 a)) (/ 1 d)) d) 0) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025867707
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004306392
    },
    "speedup": 6.006816611214214,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (* 0 (/ -1 a)) (pow (/ a (/ (* (+ (/ 1 -1) a) 1) -1)) b)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.037964639
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.00631953
    },
    "speedup": 6.007509893931985,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* a (* (/ -1 (pow (pow (pow (pow (pow 0 a) 0) 1) 1) (/ -1 (pow a c)))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.020519377999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003401932
    },
    "speedup": 6.031683760874703,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a b) (- 0 (+ 1 (* 0 (- (/ (+ (/ 0 b) 0) (+ b c)) (- -1 -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.012431850000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.002059892
    },
    "speedup": 6.0351950490608255,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (/ (- 0 (* b (pow (pow (* (+ b a) 1) 0) (/ 0 a)))) (/ 1 d))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (- 0 b) (/ 1 d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.026403478
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (- 0 b) (/ 1 d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.004366587
    },
    "speedup": 6.046708333075696,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- a 1) (/ (* a a) (+ -1 (- (/ (pow a b) b) (* a 1))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (+ a -1) (/ (* a a) (+ -1 (- (/ (pow a b) b) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.09348641399999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (- a 1) (/ (* a a) (- (/ (pow a b) b) (+ a 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.015414935999999999
    },
    "speedup": 6.064664426761162,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow 1 a) (pow (- a b) (* (+ (pow (pow (+ a -1) 0) (- 1 0)) (/ 1 0)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (pow (- a b) (+ -1 (* -1 (/ 1 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.012896888000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (pow (- a b) (- -1 (/ 1 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.002124117
    },
    "speedup": 6.071646712492768,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* a 1) (/ -1 (+ -1 (* a (pow (/ (+ (- a b) c) 1) 1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ -1 (+ -1 (* a (+ (- a b) c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.057938742
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ -1 (+ -1 (* a (/ (+ (- a b) c) 1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.009538469
    },
    "speedup": 6.07421820000673,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (/ a a) (/ (/ -1 (* (pow (* 0 (+ 0 1)) b) (- c 0))) -1)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (/ 1 (* (pow 0 b) c))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.007967243
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (/ (/ -1 (* (pow 0 b) c)) -1)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.0013102119999999998
    },
    "speedup": 6.080880804022557,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ -1 (pow (+ (+ (pow (- -1 (* a (/ a (+ a a)))) b) 0) c) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (+ (pow (- -1 (* a (/ a (+ a a)))) b) c) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.027819853999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (+ (pow (- -1 (* a (/ a (+ a a)))) b) c) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.004568933
    },
    "speedup": 6.088917040368068,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* (+ 1 (+ a 1)) (* (+ a (+ (* 1 (- b 0)) c)) c)) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(17412)",
      "output_term": "(+ (* (+ a 2) (* c (+ a (+ b c)))) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.934041562
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ b (+ a c)) (* (+ a 2) c)) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.15323785499999998
    },
    "speedup": 6.095370899051022,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow a b) (/ (- 0 (- 0 (/ c (* (pow (* -1 1) 1) c)))) (+ a (* b c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a b) (/ -1 (+ a (* c b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.035780743999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a b) (/ (/ c (- 0 c)) (+ a (* b c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.005867046
    },
    "speedup": 6.098596124864199,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* a (+ (+ a (pow (pow b (* (* 0 (+ a 1)) d)) (pow (- 0 b) d))) e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow 1 (pow (- 0 b) d)) (+ a (+ 1 e))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.130268943
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (+ (pow 1 (pow (- 0 b) d)) (+ a e))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.021332601
    },
    "speedup": 6.1065663300973005,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (pow -1 a) (/ (* (pow (- (+ (* 0 b) 0) b) (pow d c)) -1) 0)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (pow -1 a) (/ (* -1 (pow (- 0 b) (pow d c))) 0)))",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 7,
      "simplification_time": 0.011714483
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (pow -1 a) (/ (- 0 (pow (- 0 b) (pow d c))) 0)))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.0019160940000000001
    },
    "speedup": 6.1137308503653784,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* a 0) (* (* b -1) (- (pow 0 c) (- 1 b)))) (+ -1 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 6,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.13606854799999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.022225022
    },
    "speedup": 6.122313309746104,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (+ 1 1) a) (/ 1 (- b (/ (* (* (+ a 1) (* a c)) -1) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 2 a) (/ 1 (- b (/ (* a (* -1 (* (+ 1 a) c))) 0))))",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.09152363499999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 2 a) (/ 1 (- b (/ (* c (* a (- -1 a))) 0))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.014948544000000001
    },
    "speedup": 6.122578560159437,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- (* a (/ b (- (pow a (pow b 0)) -1))) -1) (pow b 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ (* a (/ b (+ a 1))) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.035389933
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ b (+ a 1))) (+ b 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.005776791999999999
    },
    "speedup": 6.126225939933445,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (pow (pow a (- -1 (* 0 (pow (- b (pow (/ c b) a)) (+ c 0))))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ 1 a) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.01139001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ 1 a) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.0018507049999999998
    },
    "speedup": 6.154416830343033,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 0 (+ (- (+ a -1) (* (pow (/ (+ a 0) b) a) (+ -1 b))) a)) (* b a))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.315199915
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.051106913000000004
    },
    "speedup": 6.167461435207405,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (/ (- -1 (pow a -1)) a) (+ (+ (/ (* 1 c) 1) b) (pow (- c d) b))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (- -1 (/ 1 a)) a) (+ c (+ b (pow (- c d) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.047792217
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (- -1 (/ 1 a)) a) (+ b (+ (/ c 1) (pow (- c d) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 6,
      "simplification_time": 0.007747301
    },
    "speedup": 6.168886041732469,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ (* (* 0 a) (- (pow (/ (pow 1 a) b) (pow b c)) (* 1 1))) c) -1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* c -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.036850687
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ c -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.005958404
    },
    "speedup": 6.184657334413712,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (pow a (pow (* (+ (- (/ (* a (* a a)) (* a b)) (/ -1 -1)) a) -1) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (pow (+ 1 (* -1 (+ a (/ (* a (* a a)) (* a b))))) b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.116613859
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (pow (- (- 1 a) (/ (* a (* a a)) (* a b))) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.018845677999999998
    },
    "speedup": 6.1878303874235785,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(+ 0 (+ (+ (pow (- a a) (pow (pow (/ a (- a 1)) (pow 1 a)) (/ a -1))) 0) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow (pow (/ a (- a 1)) (pow 1 a)) (* a -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.008581127
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow (pow (/ a (- a 1)) (pow 1 a)) (/ a -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.001383862
    },
    "speedup": 6.200854564978299,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a (* (- (- (pow (- -1 b) (* (/ 1 a) 1)) a) 0) -1)) (pow d 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (+ a (* -1 (pow (- -1 b) (/ 1 a))))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.046491955999999994
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (- a (pow (- -1 b) (/ 1 a)))) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.007487995
    },
    "speedup": 6.208865791176409,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ (- b (- (* 1 a) -1)) (/ (/ c 0) (/ (* (pow 0 a) 1) (* c c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (- b (+ a 1)) (/ (/ c 0) (/ (pow 0 a) (* c c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.159258078
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (- b (+ a 1)) (/ (/ c 0) (/ (pow 0 a) (* c c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.025642841
    },
    "speedup": 6.210625335936841,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 1) (+ a (pow a (/ (+ (* 0 b) (- 0 b)) (- a (pow a c))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow a (/ (- 0 b) (- a (pow a c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.017394378999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow a (/ (- 0 b) (- a (pow a c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.002800228
    },
    "speedup": 6.211772398533261,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ 1 1) (/ 0 a)) (/ (pow (* (/ (- 1 a) (/ a a)) (* 1 -1)) a) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (pow (+ a -1) a) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.010523873
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (pow (- 0 (/ (- 1 a) 1)) a) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.001690801
    },
    "speedup": 6.22419374012672,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ (* a (pow -1 (+ -1 (/ (pow a (+ (+ -1 a) b)) (* b c))))) (* b 0)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a (pow -1 (+ -1 (/ (pow a (+ -1 (+ a b))) (* b c))))) 0) b)",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 10,
      "simplification_time": 0.031080688000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a (pow -1 (+ -1 (/ (pow a (+ a (- b 1))) (* b c))))) 0) b)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.004984984
    },
    "speedup": 6.234862137972761,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (* (- a (pow (pow (pow 1 b) (/ (* 0 b) -1)) (/ 0 (* a d)))) 0) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.010370358
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.001661047
    },
    "speedup": 6.243265843772031,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 1 (/ (- a a) (- (pow (+ (- (/ (/ 1 a) a) (+ b 1)) (/ -1 c)) c) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.052162256
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008344829
    },
    "speedup": 6.2508478004761985,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow -1 (* (pow 0 (- (pow (/ -1 (/ (+ 0 b) b)) (/ 0 c)) c)) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (* c (pow 0 (- 1 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.012826479
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (* c (pow 0 (- 1 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.002050546
    },
    "speedup": 6.2551530177816055,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 1 a) (pow -1 (+ -1 (/ (+ (pow b -1) 0) (* (/ (- -1 0) a) 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (pow -1 (+ -1 (/ (/ 1 b) 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.01229158
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 a) (pow -1 (+ -1 (/ (/ 1 b) 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.001963887
    },
    "speedup": 6.25880205938529,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 1 (/ (/ 1 1) (pow (/ a (- (+ (pow 0 -1) -1) (* a a))) -1))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ 1 (/ 1 (/ a (- (+ -1 (pow 0 -1)) (* a a)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.023368749
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (/ 1 (/ 1 (/ a (- -1 (- (* a a) (pow 0 -1))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.003733569
    },
    "speedup": 6.259091234151559,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (/ -1 0) (/ 1 (- (/ (- a (* (/ 0 a) 0)) 1) b))))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (/ -1 0) (/ 1 (- a b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.01200156
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (/ -1 0) (/ 1 (- (/ a 1) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.0019082760000000002
    },
    "speedup": 6.289216025354822,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* a (* (+ (- 0 (/ 0 b)) a) (/ (* (- (- 0 1) 1) a) (* a 0)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (* a a) (* (pow 0 -1) 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.19746312100000002
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (* a (/ (* a -2) 0))) -1)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.031395248
    },
    "speedup": 6.28958627751563,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (/ (+ (* -1 (pow b (pow -1 1))) (+ (+ (pow c b) (/ b b)) (- 0 -1))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (+ (* -1 (/ 1 b)) (+ (pow c b) 2)) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.295653842
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (+ (pow c b) (+ (/ -1 b) 2)) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.046956555999999997
    },
    "speedup": 6.296327226383468,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ (pow a (+ (+ (/ (+ (/ 0 (pow a -1)) (/ a b)) (+ b 0)) c) d)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.027809656000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004412115
    },
    "speedup": 6.303021566754267,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (/ (- 0 a) (- a (+ (pow b (/ (/ a 1) c)) (+ 0 c)))) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (/ (- 0 a) (- a (+ c (pow b (/ a c))))) -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.027631585
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (/ (- 0 a) (- a (+ c (pow b (/ (/ a 1) c))))) -1))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.004376714
    },
    "speedup": 6.313317479734796,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (/ a (pow 1 (/ 0 (pow (* (pow (/ a 0) (* a -1)) (/ -1 1)) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.011077025
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ a 1))",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.0017544589999999999
    },
    "speedup": 6.313641413107973,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (- (/ (/ (+ 0 1) 1) (- (/ b (- b -1)) (* (+ (- 0 1) b) 1))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (- (/ b (+ 1 b)) (+ b -1))) (+ a -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.033489078
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (/ 1 (- (/ b (+ 1 b)) (+ b -1))) 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.005301435
    },
    "speedup": 6.316983609154879,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ 1 a) (+ a (- 1 (- (pow a (pow (* 1 (/ -1 0)) -1)) c))))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(54596)",
      "output_term": "(- (pow a (/ 1 (/ -1 0))) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 2.910267428
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "NodeLimit(10125)",
      "output_term": "(- (pow a (/ 1 (/ -1 0))) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.45920603
    },
    "speedup": 6.337607169487735,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (* a a) (+ (* (pow (- 1 b) a) 0) (- (* -1 (+ -1 a)) (pow c -1)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (* a (* -1 (+ a (/ 1 c))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.28092702999999997
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (* a (- 1 (+ a (/ 1 c)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.044321059999999995
    },
    "speedup": 6.338454675948634,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 0 (/ (+ -1 (pow (/ (* (+ a b) -1) 1) (+ (/ 0 (- c -1)) (+ 1 d)))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.030542011
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0048181790000000006
    },
    "speedup": 6.338911651061531,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (* (+ (+ (* a (- (- (- (- 1 -1) -1) 1) (- -1 1))) 0) a) (/ -1 a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 32,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "-5",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.05798682699999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (* a 5) (/ -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.009115826
    },
    "speedup": 6.36111604148653,
    "weight_simple_diff": -5,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(- 1 (/ (- (pow (/ 0 1) (/ a (pow (* 1 (* 0 b)) (/ a -1)))) b) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (pow 0 (/ a (pow 0 (* a -1)))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.025027696000000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (- (pow 0 (/ a (pow 0 (/ a -1)))) b) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.003917944
    },
    "speedup": 6.387966749907606,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- 0 (* (+ -1 a) (pow (+ 0 a) (/ a (+ (+ a 1) d))))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (pow a (/ a (+ a (+ 1 d)))) (+ 1 (* -1 a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.10742131299999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* (pow a (/ a (+ 1 (+ a d)))) (- 1 a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.0167684
    },
    "speedup": 6.406175484840533,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow -1 (+ a (/ (- 0 (pow a (* (+ 0 (- 1 1)) (/ 1 -1)))) a))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (+ a (/ -1 a))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.0052060019999999995
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (+ a (/ -1 a))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.000811768
    },
    "speedup": 6.413164845128164,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* (- (pow 0 (+ (pow (/ (* a (- a 0)) (- b b)) 1) c)) b) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.029045062000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004524288
    },
    "speedup": 6.419808376478245,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (/ 1 (* -1 (+ a b))) (pow b (pow (* 0 (* (/ 0 1) 1)) (/ a 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (/ 1 (* -1 (+ a b))) (pow b (pow 0 a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.008671122
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (/ 1 (- 0 (+ a b))) (pow b (pow 0 (/ a 1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.0013503970000000001
    },
    "speedup": 6.421165035171137,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (/ (- (* (pow a (* 1 0)) (/ -1 (+ a (+ (+ 0 a) b)))) b) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (- (/ -1 (+ b (+ a a))) b) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.066716617
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (- (/ -1 (+ a (+ a b))) b) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.010347614
    },
    "speedup": 6.447536311269439,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ -1 1) (* -1 (- 1 (* (/ b (* (/ 0 0) b)) (* 0 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.027062309
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.004195461
    },
    "speedup": 6.45037792032866,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 a) (* 1 (pow b (* (* (- (* b b) (pow b 0)) (- d 0)) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (* (+ (* b b) -1) (* d c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.047321001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (* (- (* b b) 1) (* d c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.007333292
    },
    "speedup": 6.452900143618992,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow a a) (- 1 (+ (pow (pow (+ (- a a) -1) b) (pow 1 c)) b))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a a) (- 1 (+ b (pow (pow -1 b) (pow 1 c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.019827759
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a a) (- 1 (+ b (pow (pow -1 b) (pow 1 c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.003068222
    },
    "speedup": 6.462296078966907,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 a) (* (+ (pow 1 -1) (- (- a (+ (/ a 1) b)) (+ c b))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12567)",
      "output_term": "(+ c (* -1 (* c (+ b (+ b c)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 12,
      "output_depth": 6,
      "simplification_time": 0.752358401
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* c (- (- (- a (+ b b)) (/ a 1)) (- c 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.11638094399999999
    },
    "speedup": 6.464618477402968,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* (+ 1 a) (* -1 a)) (* a (/ (/ -1 a) (- (+ -1 a) 0)))) (/ 0 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10922)",
      "output_term": "(pow (* (+ 1 a) (* a -1)) (* -1 (/ 1 (+ a -1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.362216855
    },
    "Extended": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (- -1 a)) (* a (/ (/ -1 a) (+ a -1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.210573579
    },
    "speedup": 6.469077751677479,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow (pow 1 0) (/ (pow 0 a) (/ a (/ (pow (* b b) -1) b)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (pow 0 a) (/ a (/ (/ 1 (* b b)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.012040292
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (pow 0 a) (/ a (/ (/ 1 (* b b)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.001861151
    },
    "speedup": 6.469271972021614,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow a (/ (/ -1 0) (pow (* (pow (- -1 (+ -1 1)) (/ a 1)) (/ 1 0)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (/ -1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.00607603
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (/ (/ -1 0) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.000938604
    },
    "speedup": 6.47347550191561,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (/ a (- a (- -1 (pow (/ (* (pow -1 1) 0) (+ -1 1)) (+ a 1))))) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (+ a (+ 1 (pow (/ 0 0) (+ a 1))))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.031745975999999995
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (/ a (+ a (+ 1 (pow (/ 0 0) (+ a 1))))) b) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.004902168
    },
    "speedup": 6.4759053545288525,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (pow (+ 0 0) (/ (pow (pow a b) a) (+ b (/ (* 1 (+ a -1)) (pow a c))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 (/ (pow (pow a b) a) (+ b (/ (+ a -1) (pow a c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.025885377
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 (/ (pow (pow a b) a) (+ b (/ (+ a -1) (pow a c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.0039910810000000005
    },
    "speedup": 6.485805975874706,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (/ a 1) (+ (pow a 0) (* (/ (pow (/ 0 a) 1) (* 1 b)) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.028018203
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ a 1) 1))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.004317347
    },
    "speedup": 6.489680583932679,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -3
  },
  {
    "base_term": "(/ (+ 1 1) (* (- -1 0) (pow 1 (/ (* (+ (* 0 0) a) a) (* b 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 2 (* -1 (pow 1 (/ (* a a) 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.013814944999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 2 (- 0 (pow 1 (/ (* a a) 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.002124845
    },
    "speedup": 6.501624824398955,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a (* a (* (/ c b) (* (+ (* (- e e) 0) c) -1)))) (- (pow 1 b) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (* c (* a (* (/ c b) -1)))) (+ 1 (pow 1 b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.43144783099999995
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (* a (* (/ c b) c))) (+ 1 (pow 1 b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.065836967
    },
    "speedup": 6.553276231573668,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow (- (* 1 0) a) (- (/ (/ a 1) (- 0 (pow (* a -1) a))) -1)) (* a a))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- 0 a) (+ 1 (/ a (- 0 (pow (- 0 a) a))))) (* a a))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.012654344
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- 0 a) (+ 1 (/ (/ a 1) (- 0 (pow (- 0 a) a))))) (* a a))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.001929899
    },
    "speedup": 6.556998060520265,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 (/ (/ (* (+ a (/ (/ (/ a 0) -1) -1)) (+ a (- 0 a))) b) -1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12082)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.659389097
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.10055526299999999
    },
    "speedup": 6.557479711429924,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (/ (+ (- 0 (* (pow (/ (- a a) -1) a) (pow 0 b))) (- 1 1)) 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (/ (- 0 (pow 0 (+ a b))) 0)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.017339731
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (/ (- 0 (* (pow 0 a) (pow 0 b))) 0)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.0026433259999999997
    },
    "speedup": 6.559815550560167,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a (+ (/ a 1) (/ (pow (pow (- (/ 1 b) -1) -1) (- a a)) d))) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (+ a (/ 1 d))) e)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.010275576000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (+ (/ a 1) (/ 1 d))) e)",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.001565344
    },
    "speedup": 6.5644203446654545,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (/ (+ (- 1 (+ (/ a (pow 1 a)) b)) (* b b)) (* 1 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (- 1 (+ (/ a (pow 1 a)) b)) (* b b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.063384404
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (- 1 (+ (/ a (pow 1 a)) (- b (* b b)))) 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.00965446
    },
    "speedup": 6.5652976966086145,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (* 1 1) (/ (pow (- (pow (pow (/ a -1) 0) (pow b 1)) 0) -1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 (/ (/ 1 (pow 1 b)) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.009730396999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 (/ (/ 1 (pow 1 b)) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.001479211
    },
    "speedup": 6.578099405696684,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (pow (* (+ 0 (/ 1 (* -1 (pow (- (- 1 a) a) (- a a))))) a) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (* -1 a) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.023310396
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (- 0 a) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.0035339090000000004
    },
    "speedup": 6.596207202845347,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ a a) b) (- (+ (- -1 (/ -1 -1)) c) (- (/ 0 0) d)))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a a) b) (- (+ -2 c) (- (/ 0 0) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.047214817000000006
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a a) b) (- -2 (- (/ 0 0) (+ c d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.007147196000000001
    },
    "speedup": 6.606061593945374,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (- 1 (+ (/ (/ (- (* (/ a 1) a) (+ b a)) (- 1 1)) -1) c))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (/ (- (* a a) (+ a b)) 0) (+ a (+ 1 (* -1 c)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.06645540800000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- a (+ (/ (/ (- (* a (/ a 1)) (+ a b)) 0) -1) (- c 1))))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.010048271000000001
    },
    "speedup": 6.613616213177371,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(/ -1 (- (+ (/ (+ -1 a) 0) -1) (* b (pow a (/ (pow (pow b a) 1) (/ 1 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- (+ -1 (/ (+ -1 a) 0)) (* b (pow a (pow b a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.023370045000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- (+ -1 (/ (+ -1 a) 0)) (* b (pow a (/ (pow b a) 1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.003517994
    },
    "speedup": 6.643003086417999,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ (- a b) (pow (+ (pow (pow a (+ (* a c) 0)) c) d) -1)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a b) (/ 1 (+ (pow (pow a (* a c)) c) d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.033332068
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a b) (/ 1 (+ (pow (pow a (* a c)) c) d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.0049875530000000005
    },
    "speedup": 6.683050385629986,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (/ -1 0) 0) (pow 0 (/ (/ 1 (pow 1 (- (* (/ a 1) a) (/ 0 -1)))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 0) (pow 0 (/ (/ 1 (pow 1 (* a a))) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.012488987
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 0) (pow 0 (/ (/ 1 (pow 1 (* a (/ a 1)))) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.0018676749999999998
    },
    "speedup": 6.686916620932443,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (- 0 (+ a (* (- (/ (+ (pow b a) c) (/ a 0)) (/ 0 c)) -1))) 0) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* c (+ (/ (+ (pow b a) c) (/ a 0)) (* a -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.296467881
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* c (- (/ (+ (pow b a) c) (/ a 0)) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.044318394000000004
    },
    "speedup": 6.689499646580153,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 a) (+ (* (* b a) (pow (pow a (+ (/ -1 0) -1)) (+ 1 0))) (- b c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 a) (+ (* a (* b (pow a (+ -1 (/ -1 0))))) (- b c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.045324985
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 a) (+ (* b (* a (pow a (+ -1 (/ -1 0))))) (- b c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.006741526000000001
    },
    "speedup": 6.723253014228528,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a a) (+ (* (pow a (+ -1 -1)) (- (- (pow (+ c a) 0) d) (* d 0))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ (* (pow a -2) (- 1 d)) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.026759993000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ (* (pow a -2) (- 1 d)) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.003978675
    },
    "speedup": 6.725855466958222,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow (/ a (- (+ (pow (/ -1 (/ a a)) a) (* b b)) (- 1 -1))) 0) d) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow d -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.01717638
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.002546695
    },
    "speedup": 6.744576794629904,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (- 1 -1) (- (* (- (* -1 a) (+ 1 (pow a a))) (/ (pow 1 a) 0)) -1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (* (/ (pow 1 a) 0) (+ (pow a a) (+ 1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.287539827
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (* (/ (pow 1 a) 0) (+ (pow a a) (+ 1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.042581729
    },
    "speedup": 6.752657389745729,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (pow a (* a (pow (- b -1) (+ (/ c (- 0 b)) (pow -1 b))))) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* c (pow a (* a (pow (+ b 1) (+ (/ c (- 0 b)) (pow -1 b))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.013865193000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ (pow a (* a (pow (+ b 1) (+ (/ c (- 0 b)) (pow -1 b))))) 1))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.002052374
    },
    "speedup": 6.755685367286859,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (* a (- (+ (+ (pow (- -1 a) (+ a a)) -1) b) 1)) 0) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (+ (pow (- -1 a) (+ a a)) (+ b -2))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.083742963
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (- (pow (- -1 a) (+ a a)) (- 2 b))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.012392649
    },
    "speedup": 6.757470739306826,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- a (pow (- 0 (/ (+ (/ b 0) (+ 0 (* 0 b))) (- a (- 1 0)))) b)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 0 (/ (/ b 0) (+ a -1))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.018842514
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 0 (/ (/ b 0) (- a 1))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.002778385
    },
    "speedup": 6.781822533594156,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- (/ a b) (pow a (/ (* a (+ (/ 0 (/ 1 -1)) 0)) (- (pow -1 c) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011130287
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001632231
    },
    "speedup": 6.819063600679071,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 0) (pow a (- (- a (pow b (+ (/ (/ 1 b) -1) c))) (+ (* -1 -1) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ -1 (- a (pow b (+ (* (/ 1 b) -1) c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.014492393
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- a (+ 1 (pow b (+ (/ (/ 1 b) -1) c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.002124798
    },
    "speedup": 6.820598005080954,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 0 (pow a (* a (- 0 (pow b (/ -1 (* (* b d) a))))))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.027199702
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.0039865429999999995
    },
    "speedup": 6.822879371927006,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (/ (pow (* 1 1) 0) a) (* (* a (- 0 (pow 0 (* a -1)))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (pow a -1) (* (pow 0 (* a -1)) (* a (* a -1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.032982427
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ 1 a) (- 0 (* a (* a (pow 0 (- 0 a)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.0048319
    },
    "speedup": 6.825974668349924,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (pow a (pow 1 (- 0 (- -1 (* (+ a (+ (/ 0 1) c)) c))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow a (pow 1 (+ 1 (* c (+ a c))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.071635671
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow a (pow 1 (+ 1 (* c (+ a c))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.010493558
    },
    "speedup": 6.826633159124865,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* (pow 0 a) (pow (+ (* a a) (+ (* 0 b) a)) (+ (/ 0 -1) 1))) c) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a (* (pow 0 a) (+ a 1))) c) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.072549595
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a (* (pow 0 a) (+ a 1))) c) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.010575148999999999
    },
    "speedup": 6.860385134999044,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (pow (* 1 (* (- (* (pow 0 a) (/ (+ b 0) -1)) a) b)) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ 1 (* -1 (* b (+ a (* (pow 0 a) b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.05829845
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ 1 (* b (- (* (pow 0 a) (/ b -1)) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.008496577
    },
    "speedup": 6.86140430434515,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ a (+ a (* b a))) (pow (+ (pow (* a b) 1) (- d a)) e))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a (* a (+ b 1))) (pow (+ (* a b) (- d a)) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.027952715
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a (+ a (* a b))) (pow (+ (* a b) (- d a)) e))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.004069925
    },
    "speedup": 6.868115505813988,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ -1 (+ (pow (/ (pow a (/ (+ (pow -1 0) a) 0)) a) 0) 0)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008756667
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001273434
    },
    "speedup": 6.876419979362888,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (* 0 (+ (pow a (/ (pow (pow (pow a (* 1 1)) 0) -1) (- (* -1 -1) a))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014393839
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002091031
    },
    "speedup": 6.883608612210914,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (- -1 -1) (/ (+ a 1) (- (pow a (/ (+ b b) 0)) (- b -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.030549556999999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.004437708
    },
    "speedup": 6.884084531925038,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a (* a a)) (pow (pow b (* (* (* b (/ b (pow 1 a))) 0) (- 0 1))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (* a a)) (pow 1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.013806649
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (* a a)) (pow 1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.002003747
    },
    "speedup": 6.89041530692248,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 1 (/ a (* 0 (/ 0 (pow (* 1 -1) (* (- a a) 1)))))) (+ c b))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 (/ a 0)) (+ c b))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.009869642999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 (/ a 0)) (+ c b))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.0014323699999999999
    },
    "speedup": 6.890428450749457,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (* (/ 0 (/ a (/ (* a (- a a)) (/ (pow a a) a)))) 0) -1) (/ a -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a -1))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.012529832
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ a -1))",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.001817866
    },
    "speedup": 6.892604845461657,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (/ (pow (* 0 a) (/ 0 (- (pow (pow (* 1 1) -1) (- a 1)) (- -1 b)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow 0 0) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.030943778
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow 0 0) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.004474617
    },
    "speedup": 6.915402591998377,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (- a (+ b (+ (* b (- (+ (/ (+ -1 a) a) (/ c 1)) (- -1 0))) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10342)",
      "output_term": "(pow -1 (- a (* b (+ (/ (+ -1 a) a) (+ c 3)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.635346685
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- a (* b (+ (/ (+ -1 a) a) (+ (/ c 1) 3)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.09167317800000001
    },
    "speedup": 6.93056244870228,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ (- 0 (/ (- (/ (- (/ a a) 0) (* a 1)) -1) a)) 0) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ (- 0 (+ (/ 1 a) (pow a -2))) 0) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.028105648
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ (- 0 (/ (+ 1 (/ 1 a)) a)) 0) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.004055291
    },
    "speedup": 6.930611884572525,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (- (+ a (/ (/ (/ a a) 0) (* a (* (/ 1 (pow c a)) 1)))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (+ a (/ (/ 1 0) (* a (/ 1 (pow c a))))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.06861028500000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ (/ 1 0) (* a (/ 1 (pow c a)))) (- b a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.009869426
    },
    "speedup": 6.951800945667965,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (+ (pow (* a 1) b) 1) (- (- a c) (pow (/ (- (- d 1) c) -1) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (pow a b)) (- (- a c) (/ 1 (+ 1 (+ c (* d -1))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.032138819
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (pow a b)) (- (- a c) (/ 1 (/ (- d (+ 1 c)) -1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.004622981
    },
    "speedup": 6.951968653991872,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ 0 (/ (- -1 a) (* (/ (pow (* -1 b) 0) (pow a -1)) 0))) 0) (* a 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (- -1 a) 0) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.046681034999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (- -1 a) 0) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.006714411
    },
    "speedup": 6.952364846298505,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (+ (- (/ (* a (* -1 a)) (/ (+ b (* a a)) 0)) 1) c) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (* -1 (* a a)) (/ (+ b (* a a)) 0)) (+ -1 (+ a c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.092120284
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (- 0 (* a a)) (/ (+ b (* a a)) 0)) (- 1 (+ a c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.01320773
    },
    "speedup": 6.974724952736011,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (pow (* (+ 1 -1) (/ (* 1 (+ 0 -1)) (pow a 0))) (- 0 (/ b -1))) c) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (pow 0 b) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.006332388999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (pow 0 (- 0 (/ b -1))) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.0009071629999999999
    },
    "speedup": 6.980431300659308,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (- a (* (+ (* (* -1 (/ (+ (/ a 0) 1) a)) 1) (+ -1 a)) b)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ b (* b (+ (/ (+ (/ a 0) 1) a) (* a -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 1.1773263900000002
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (+ 1 (- (/ (+ (/ a 0) 1) a) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.168621582
    },
    "speedup": 6.982062296153764,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (- a 1) 1) (pow (- a a) (* (* (* (+ (pow a -1) b) (/ -1 1)) b) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.038421932
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a 1) (pow 0 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.005501403
    },
    "speedup": 6.984024257084965,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 1 (/ -1 (/ (+ (* (* 0 -1) (pow (+ a (- a 1)) a)) (pow a 0)) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009426136
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001349353
    },
    "speedup": 6.985670910428924,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (- -1 (pow (pow 1 (* -1 (pow (pow a (- -1 1)) a))) (/ -1 1)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow 0 (- -1 (/ 1 (pow 1 (* -1 (pow (pow a -2) a)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.007059345
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (- -1 (/ 1 (pow 1 (- 0 (pow (pow a -2) a)))))) 1)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.001009098
    },
    "speedup": 6.995698138337406,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (- 1 (- (- a (- (pow b (pow (pow -1 1) a)) (+ a b))) c)) 1) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10359)",
      "output_term": "(/ (- 1 (- (- a (- (pow b (pow -1 a)) (+ a b))) c)) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 1.415222907
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (pow b (pow -1 a)) (+ (+ a a) (- (- b 1) c))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.20184090500000001
    },
    "speedup": 7.011576305605645,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(- (pow (+ 0 (pow (- a (+ (* (pow a a) (+ 1 1)) (/ 0 a))) b)) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow (+ a (* (pow a a) -2)) b) b) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.016623267
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow (- a (* (pow a a) 2)) b) b) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.0023584
    },
    "speedup": 7.048535871777476,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ a b) -1) (- (* b (+ b (+ (/ -1 (pow (- b 0) a)) (- b d)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ 1 (+ a b)) (* b (+ (/ 1 (pow b a)) (+ d (* b -2))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.8781824479999999
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (+ a b)) (- (* b (+ b (+ (/ -1 (pow b a)) (- b d)))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.12426916499999999
    },
    "speedup": 7.066776766384485,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (* a (- (pow (/ 1 (* (* (/ 0 0) a) (pow 1 c))) c) c)) -1) (* d -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 (* a (- (pow (/ 1 (* (/ 0 0) (* a (pow 1 c)))) c) c))) (* -1 d))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 10,
      "simplification_time": 0.046203113000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ d (* a (- (pow (/ 1 (* a (* (/ 0 0) (pow 1 c)))) c) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 10,
      "simplification_time": 0.006537776
    },
    "speedup": 7.067099423412488,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ (+ a (+ 1 (+ (* (+ (pow 0 1) 1) (pow b b)) (+ -1 -1)))) -1) a) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (* -1 (+ (pow b b) -1)) (* a -2)) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.14207773599999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ (+ (pow b b) (+ a -1)) -1) a) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.020057675
    },
    "speedup": 7.08345987259241,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ (pow (* (- (* a a) -1) a) b) (- -1 (pow a (/ (+ 1 b) a)))) a) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (+ a (* a (* a a))) b) (- -1 (pow a (/ (+ b 1) a)))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.036650207
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (+ a (* a (* a a))) b) (- -1 (pow a (/ (+ b 1) a)))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.005158618
    },
    "speedup": 7.104656130769907,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- -1 1) (- -1 (pow (/ (pow a (/ (pow (pow b 0) a) (- b b))) -1) (pow d 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (- -1 (pow (* -1 (pow a (/ (pow 1 a) 0))) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.017949746
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -2 (- -1 (pow (/ (pow a (/ (pow 1 a) 0)) -1) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.002526365
    },
    "speedup": 7.104969392783703,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- -1 (* a (* a (* 1 (/ (+ (pow (+ -1 a) 0) a) b))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.15733854
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.022012608
    },
    "speedup": 7.147655561758062,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a b) (* (/ a (- 1 (+ (+ a (* (+ c c) 1)) (/ 0 d)))) e))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a b) (* (/ a (- 1 (+ c (+ a c)))) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.114691082
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a b) (* (/ a (- 1 (+ a (+ c c)))) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.016034831
    },
    "speedup": 7.152621814349025,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 (/ (pow 0 (/ a (pow a -1))) (* (pow (- (+ -1 -1) b) b) (- b 1)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- 0 (/ (pow 0 (/ a (/ 1 a))) (* (pow (- -2 b) b) (+ -1 b)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.027890482
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow 0 (/ a (/ 1 a))) (* (pow (- -2 b) b) (- b 1))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.003895896
    },
    "speedup": 7.1589390476542505,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (/ 1 (- (- (+ -1 -1) (pow (pow (* (- -1 a) 1) (/ b a)) (/ -1 c))) c)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (- (- -2 (pow (pow (- -1 a) (/ b a)) (/ -1 c))) c)) 0)",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.0273647
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (- -2 (+ c (pow (pow (- -1 a) (/ b a)) (/ -1 c))))) 0)",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.003821821
    },
    "speedup": 7.160120790586476,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 1 (pow (* (* 0 (pow 0 (- -1 (pow (/ 1 0) 0)))) a) 0)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012055261000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0016832880000000002
    },
    "speedup": 7.1617340585805875,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (/ b 0) (+ (pow (* (* (/ a (pow 0 1)) (* -1 b)) (+ 0 a)) c) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (+ (/ b 0) (pow (* (* b (/ a 0)) (* a -1)) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.127975736
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow (- 0 (* a (* b (/ a 0)))) c) (+ (/ b 0) 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.017865215
    },
    "speedup": 7.163403071275661,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (* -1 (pow 0 (+ a (pow (- (/ (/ a -1) a) (/ -1 1)) 0)))) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (* -1 (pow 0 (+ a 1))) a) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.021047898
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 (+ a (pow 0 (+ a 1)))) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 6,
      "simplification_time": 0.00293756
    },
    "speedup": 7.165095521453178,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a 1) (- (+ a (/ a (/ (* (+ (+ a a) b) 1) (* 0 a)))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- (+ a (/ a (/ (+ (+ a a) b) 0))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.042525431
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- a (- b (/ a (/ (+ a (+ a b)) 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.005917459
    },
    "speedup": 7.186434413825259,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (/ (/ (* -1 (pow (- a (+ (pow (+ 1 a) 1) (- 1 1))) a)) c) (+ 0 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (* -1 (pow -1 a)) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.026272523000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (/ (- 0 (pow -1 a)) c) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.003655743
    },
    "speedup": 7.186643864188484,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ 0 (* (/ 1 -1) (pow a (pow 1 (pow (- (* 0 -1) a) (/ -1 b)))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006948374
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0009646660000000001
    },
    "speedup": 7.20288058250213,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- a (- 1 (- a (pow (/ (* (* (* 0 a) 1) (- 0 -1)) (+ a a)) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.07574637299999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010511194
    },
    "speedup": 7.2062577286652685,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (- 1 (- -1 (pow (/ (/ 0 a) a) (+ (pow (pow (* a 0) a) 0) (/ 0 a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0.5",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.015110908999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0.5",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002091918
    },
    "speedup": 7.223470996473093,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (/ (/ a (+ (+ (pow (/ (/ a b) 1) a) (/ a d)) d)) 0) c) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ (/ a (+ (pow (/ a b) a) (+ d (/ a d)))) 0) c) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.021355464999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ (/ a (+ (pow (/ (/ a b) 1) a) (+ d (/ a d)))) 0) c) b)",
      "output_weight_simple": 16,
      "output_weight_complex": 47,
      "output_depth": 9,
      "simplification_time": 0.0029544059999999997
    },
    "speedup": 7.228344716332149,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* (/ (+ -1 a) 1) (pow (pow (* a (* (/ 1 a) (- 1 0))) (/ b b)) d)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 a) (* d (pow 1 d)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.051618096999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ -1 a) 1) (* d (pow 1 d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.0071403939999999996
    },
    "speedup": 7.2290264374766995,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ a (* 0 (- (* b (* (/ -1 c) (pow 0 1))) (/ (* 1 b) a)))) d) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (/ a 0) d))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.055460576
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (/ a 0) d))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.007661535999999999
    },
    "speedup": 7.238832526532539,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (/ 1 a) (- (/ -1 (/ (pow (/ -1 (* 1 b)) (- c a)) (* -1 c))) 0)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ 1 a) (/ -1 (/ (pow (/ -1 b) (- c a)) (* -1 c)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.028171988000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ 1 a) (/ -1 (/ (pow (/ -1 b) (- c a)) (* -1 c)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.003887174
    },
    "speedup": 7.2474213914787455,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (- a -1) (- (/ (/ a (pow a a)) (- (- (- -1 a) a) (+ 1 1))) -1)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (+ a 1) (+ 1 (/ (/ a (pow a a)) (+ (* a -2) -3)))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.042876215999999995
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (+ a 1) (+ 1 (/ (/ a (pow a a)) (- -1 (+ a (+ a 2)))))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.00589093
    },
    "speedup": 7.278344166371014,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (pow (/ (* (/ (pow (+ (/ (- 0 a) -1) (pow 1 -1)) a) a) 1) 0) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (/ (/ (pow (+ a 1) a) a) 0)))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.031946297
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (/ (pow (+ (/ (- 0 a) -1) 1) a) a) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.004386137
    },
    "speedup": 7.283469941773364,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (/ a (+ a a)) 0) (- a (+ (pow (- (* (pow a b) 1) (- a -1)) c) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ a (+ a a)) 0) (- a (+ b (pow (- (pow a b) (+ a 1)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.03629118
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ a (+ a a)) 0) (- a (+ b (pow (- (pow a b) (+ a 1)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.004982285
    },
    "speedup": 7.284043365644478,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (+ (* (- 0 (- -1 (+ a a))) (* b (/ (+ 1 1) a))) c) b) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10536)",
      "output_term": "(/ (+ (* (+ a (+ a 1)) (* b (/ 2 a))) (+ b c)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.644075612
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ b (- c (* (/ 2 a) (* (- (- -1 a) a) b)))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.08830294200000001
    },
    "speedup": 7.293931520424312,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (pow a (pow a (+ (/ (- (* 0 (* (+ -1 0) -1)) 0) (/ (pow 1 b) 1)) b))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (pow a b)) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.013374836000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (pow a b)) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.001826204
    },
    "speedup": 7.323845528758015,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow -1 a) (pow 1 (pow (* 0 1) (- a (pow (+ -1 (pow a a)) -1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 a) (pow 1 (pow 0 (- a (/ 1 (+ -1 (pow a a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.007025924
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 a) (pow 1 (pow 0 (- a (/ 1 (+ -1 (pow a a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.000958448
    },
    "speedup": 7.33052184364723,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ (+ -1 (* 1 1)) (+ (* -1 a) (/ (/ (+ (/ -1 0) a) (- a c)) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ 1 (/ (+ a (/ -1 0)) (- a c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.156330894
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (/ (/ (+ a (/ -1 0)) (- a c)) -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.021317617999999997
    },
    "speedup": 7.333412860667642,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (- (- (/ (pow 1 a) (/ (pow -1 (* 0 (+ a b))) (- -1 a))) a) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (- (/ (pow 1 a) (/ 1 (- -1 a))) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.021511685000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (- (/ (pow 1 a) (/ 1 (- -1 a))) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.002924986
    },
    "speedup": 7.354457423044077,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow (/ -1 a) (+ (* a a) (/ (* -1 (+ (+ 1 1) -1)) (- 1 a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (/ -1 a) (+ (* a a) (/ -1 (- 1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.007645493999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (/ -1 a) (+ (* a a) (/ -1 (- 1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.001038132
    },
    "speedup": 7.36466460912485,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ a (/ a (* 0 (pow a (* (+ (* 1 0) b) (* c -1)))))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ a (/ a 0)) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.035146639
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ a (/ a 0)) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.0047614219999999995
    },
    "speedup": 7.381542530781771,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (* a a) (- 0 (+ (* a (pow -1 (pow (+ 1 a) a))) a))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (* a a) (- 0 (* a (+ 1 (pow -1 (pow (+ a 1) a)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.036234195999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a a) (* a (- -1 (pow -1 (pow (+ a 1) a))))) 1)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.0048983130000000005
    },
    "speedup": 7.3972806556053055,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 0 (pow (/ 1 (/ 0 (- (* (- a a) (- (pow -1 a) -1)) (* b (+ a a))))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.037002773
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004994704
    },
    "speedup": 7.408401578952427,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ a (/ b (+ (+ (+ 1 b) (/ (+ (- -1 b) c) (/ d a))) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (/ b (+ 1 (+ b (/ (+ c (- -1 b)) (/ d a)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.269536801
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (/ b (+ 1 (+ b (/ (+ -1 (- c b)) (/ d a)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.036340545999999994
    },
    "speedup": 7.416971693270653,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a (pow b (* (pow (/ (+ b 1) (pow 1 (- c c))) -1) a))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (pow b (* a (/ 1 (+ b 1))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.015947708999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (pow b (/ a (/ (+ b 1) 1)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.002148067
    },
    "speedup": 7.424213956082374,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (- (pow a (/ -1 (pow b (/ (* (- (- b -1) -1) (/ b 1)) (pow c 0))))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (pow a (/ -1 (pow b (* b (+ b 2))))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.031253765
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (pow a (/ -1 (pow b (/ (* (+ b 2) (/ b 1)) 1)))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.0042089879999999994
    },
    "speedup": 7.425482087380626,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow (/ a a) (pow 0 (+ a (* -1 (/ (- b c) (- b -1)))))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (pow 0 (+ a (* -1 (/ (- b c) (+ b 1)))))) 0)",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.08106578199999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (pow 0 (- a (/ (- b c) (+ 1 b))))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.010912589
    },
    "speedup": 7.428647958793278,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (* 0 (pow (pow a 0) (pow a (- (* (- (pow b 0) c) 0) b)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008332329000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00111787
    },
    "speedup": 7.453754908889228,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 1 0) (/ (+ -1 (- a (pow 0 1))) (/ (+ (pow a -1) (pow a b)) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 6,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ -1 a) (/ (+ (/ 1 a) (pow a b)) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.022831029
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ -1 a) (/ (+ (/ 1 a) (pow a b)) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.003049197
    },
    "speedup": 7.487554592241826,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (- 0 (/ 1 (* -1 (+ 0 1)))) (pow (* -1 0) 1)) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 31,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 0) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.004220918
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 0) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.000563048
    },
    "speedup": 7.496550915730097,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (* (/ (* 0 (/ a (/ (pow (- a a) -1) (pow -1 -1)))) 0) a) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (* a (/ 0 0))))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.016108491000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (/ 0 0) (* a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.0021484269999999996
    },
    "speedup": 7.4978070001913055,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (/ 1 0) (/ a (* a (- -1 (+ 0 (pow a (* 1 a))))))) (+ 0 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.046891226
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006247292
    },
    "speedup": 7.5058482939488025,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ 0 a) (/ (- (+ (pow 1 1) (/ (* b 0) c)) (/ c (- c 1))) -1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023577435999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003136274
    },
    "speedup": 7.517658214811587,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ (- (/ (/ (/ a (- a (+ (pow a a) 0))) 0) b) 0) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012462698000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0016576999999999998
    },
    "speedup": 7.518065995053389,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (/ (/ (* a (+ 1 0)) (* -1 -1)) (pow 0 (/ (- (+ 1 a) d) 1)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a (pow 0 (- (+ a 1) d)))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.040225434
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (/ a 1) (pow 0 (/ (- 1 (- d a)) 1)))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.005343850999999999
    },
    "speedup": 7.527424323769507,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- a (pow (+ 1 (pow a (* a (/ (- 1 (pow c d)) 0)))) (* -1 1))) (/ 0 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012950166
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0017171880000000001
    },
    "speedup": 7.5414957476991455,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ 1 (+ 0 (* a (/ (* 1 1) (- (pow a (/ a 1)) (+ 1 a)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ 1 (* a (/ 1 (- (pow a a) (+ 1 a))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.015838691
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ 1 (* a (/ 1 (- (pow a (/ a 1)) (+ 1 a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.0020986010000000003
    },
    "speedup": 7.547261723405257,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* (/ a 1) b) (/ (- 1 a) (* -1 (* b (* c (+ (pow c c) a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a b) (/ (- 1 a) (* b (* c (* -1 (+ a (pow c c)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.106959287
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (/ a 1) b) (/ (- 1 a) (* (+ a (pow c c)) (- 0 (* b c)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.014149394
    },
    "speedup": 7.559283952372802,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (* (pow (- -1 a) (/ b (- (pow (- a (/ 0 b)) (pow b b)) (- d b)))) e) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (- -1 a) (/ b (- (pow a (pow b b)) (- d b)))) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.048241915999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (- -1 a) (/ b (- b (- d (pow a (pow b b)))))) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.0063804660000000004
    },
    "speedup": 7.560876588010968,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (/ (- 0 -1) (- (pow (pow (* (pow a (* a -1)) (+ 0 0)) (/ a -1)) 0) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (- 1 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.007951751
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (- 1 c)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.001046868
    },
    "speedup": 7.595753237275377,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ (+ a (+ (+ a 1) 1)) (- -1 (+ (pow (* a 1) 1) (* a 1)))) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (+ (+ a a) 2) (- -1 (+ a a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.17488487499999997
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (+ a (+ a 2)) (- -1 (+ a a))) 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.023015261
    },
    "speedup": 7.598648349023718,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (* (pow (* (pow 1 (* a (- (/ (- a a) a) (* b b)))) a) b) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (* a (pow 1 (* b (* a (* b -1))))) b) (* c -1))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.042017755999999996
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* (pow (* a (pow 1 (- 0 (* a (* b b))))) b) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.005528865
    },
    "speedup": 7.599707354041018,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ (/ a (* 0 (* 0 (/ (+ (+ (/ 0 a) a) (/ 0 a)) -1)))) 0) (/ b -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a 0) (* -1 b))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 3,
      "simplification_time": 0.019084796
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a 0) (/ b -1))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 3,
      "simplification_time": 0.002505729
    },
    "speedup": 7.616464509929047,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow (* 0 (/ (- (pow -1 (/ (/ a (* 0 0)) (/ b -1))) 0) b)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.012191092
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.0015987270000000003
    },
    "speedup": 7.625499538069976,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 (pow (- a (/ a (+ 0 0))) (/ (/ (pow (pow a 1) a) (- 1 1)) -1))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* -1 (pow (- a (/ a 0)) (* -1 (/ (pow a a) 0)))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.007049901
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 (pow (- a (/ a 0)) (/ (/ (pow a a) 0) -1))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.0009243249999999999
    },
    "speedup": 7.627080301841885,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (pow (- (* (+ 0 a) a) b) (* (- -1 (/ 0 (/ 0 0))) a)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.018559759
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.002431159
    },
    "speedup": 7.634119775794178,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (* (/ -1 1) (pow a (+ (/ (/ (- a 0) -1) (/ -1 1)) a))) a) (pow d -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (* -1 a) (pow a (+ a a))) (/ 1 d))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.10031634400000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (* a (pow a (+ a (/ (/ a -1) -1))))) (/ 1 d))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.013120633999999999
    },
    "speedup": 7.645693340733384,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -3
  },
  {
    "base_term": "(* (+ a (/ (+ 0 (* a (- (/ 0 (- (- b 0) b)) (+ 1 1)))) -1)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a -3)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.051283443
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a (/ (* a -2) -1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.0066830859999999995
    },
    "speedup": 7.673617098448232,
    "weight_simple_diff": -5,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(- 0 (pow (* (+ 0 (- (pow (pow a 1) (pow 0 1)) (/ a (pow a -1)))) b) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (* (- 1 (/ a (/ 1 a))) b) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.042991051
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (* (- 1 (/ a (pow a -1))) b) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.005602271
    },
    "speedup": 7.67386136800594,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ -1 (pow (* (pow a 1) (+ (pow (+ c (+ 1 0)) (* a a)) b)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 (* a (+ (pow (+ 1 c) (* a a)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.01663875
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ -1 (* a (+ (pow (+ 1 c) (* a a)) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.002167166
    },
    "speedup": 7.677653673045812,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ (/ (/ a 1) (+ 0 (* (/ (+ a b) 0) (- a b)))) -1) b) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.03248344
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004208452
    },
    "speedup": 7.718619577935071,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (* (+ 0 (/ (pow (+ (- (- 0 1) 1) (pow a b)) (* -1 a)) c)) a) 1) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (/ (pow (+ -2 (pow a b)) (* -1 a)) c)) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.019652936
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (/ (pow (+ -2 (pow a b)) (- 0 a)) c)) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.00254292
    },
    "speedup": 7.728491655262453,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (pow b (pow b (+ 1 (/ (/ 1 a) (- -1 0)))))) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (pow b (pow b (+ 1 (* (/ 1 a) -1))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.006782176
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (pow b (pow b (+ 1 (/ (/ 1 a) -1))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.000877367
    },
    "speedup": 7.730147133411674,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (/ (- (/ -1 (pow (- (* (- (* 1 a) a) (pow 0 1)) b) a)) a) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ -1 (pow (- 0 b) a)) a) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.042004833
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ -1 (pow (- 0 b) a)) a) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.00542646
    },
    "speedup": 7.740743136409371,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (* a (/ (pow 1 b) (+ (- (* 0 (/ a a)) (pow -1 0)) (* a a)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (* a (/ (pow 1 b) (+ -1 (* a a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.020671141
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (* a (/ (pow 1 b) (+ -1 (* a a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.002665939
    },
    "speedup": 7.753793691453556,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (* b b) (/ 0 (- (* (pow (* b (- -1 d)) (+ 1 d)) (* a -1)) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.06745002400000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.008680301
    },
    "speedup": 7.7704706322972,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a (pow (- (* -1 (- (pow 1 (/ (/ a 0) 1)) b)) (- 1 -1)) 1)) (+ 1 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (* a (+ (* -1 (pow 1 (/ a 0))) (+ b -2))))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.23050454199999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- 2 (* a (+ (pow 1 (/ (/ a 0) 1)) (- 2 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.029607194
    },
    "speedup": 7.785423434588228,
    "weight_simple_diff": 2,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (/ (- a (- 1 (* 0 (+ (+ (/ (+ 1 -1) a) (pow -1 a)) (* a 0))))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (+ a -1) b))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.018741533999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (- a 1) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.002404494
    },
    "speedup": 7.794377528078671,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (- a (pow 1 (+ (- a b) (- 1 (pow (pow (- 1 c) a) (/ -1 c)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- a (pow 1 (+ (- a b) (- 1 (pow (pow (- 1 c) a) (/ -1 c)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.069894369
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- a (pow 1 (+ (- a b) (- 1 (pow (pow (- 1 c) a) (/ -1 c)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.00892344
    },
    "speedup": 7.8326709206315055,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 (pow (pow 1 -1) (/ (* (/ (+ (* 0 a) b) (* 0 -1)) (* a a)) b))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.027438168
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003500673
    },
    "speedup": 7.83796944187589,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (pow 1 (* a (- (/ a (* (pow b (- c 0)) (+ d 0))) -1)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow 1 (+ a (* a (/ a (* (pow b c) d)))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.021272816
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow 1 (* a (+ 1 (/ a (* (pow b c) d)))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.002711793
    },
    "speedup": 7.844557457003539,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (pow 1 (/ (/ a a) (pow (pow 0 (+ -1 (* -1 0))) (- a 0)))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow 1 (/ 1 (pow (pow 0 -1) a))) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.013144287
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow 1 (/ 1 (pow (pow 0 -1) a))) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.001674652
    },
    "speedup": 7.848966232984524,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (pow 1 (/ 1 (+ (* a a) (pow (+ -1 (* -1 1)) (* a a))))) 0) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.007879373
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.001003601
    },
    "speedup": 7.851101184634133,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (- a a) 1) (/ -1 (- a (pow (- (/ (- 1 b) -1) c) (pow (- c 1) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ -1 (- a (pow (- (+ -1 b) c) (/ 1 (+ -1 c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.029636899
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ -1 (- a (pow (- (/ (- 1 b) -1) c) (/ 1 (- c 1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.003770152
    },
    "speedup": 7.860929479766333,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (- 1 (pow 0 (pow a (pow -1 (pow (pow (* (* a 0) a) 1) (pow 0 b)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- 1 (pow 0 (pow a (pow -1 (pow 0 (pow 0 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.014569349
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- 1 (pow 0 (pow a (pow -1 (pow 0 (pow 0 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.001852449
    },
    "speedup": 7.864912340366726,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow (+ (/ 0 (* 0 0)) a) (+ 1 (pow a (- (* b (- 1 b)) (* b a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (/ 0 0) a) (+ 1 (pow a (+ b (* b (* -1 (+ a b)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.051066088
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (/ 0 0) a) (+ 1 (pow a (- b (* b (+ a b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.006465124
    },
    "speedup": 7.898702020255142,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (+ (/ (/ (pow (- (pow 1 a) (* 0 (- -1 b))) c) 1) 1) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (pow (pow 1 a) c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.019321495
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (/ (/ (pow (pow 1 a) c) 1) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.002441998
    },
    "speedup": 7.912166594731037,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (* (+ 1 (/ (- 0 b) (* (/ (* (* c a) c) (/ 0 1)) (- d c)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (/ 1 (* (/ (* a (* c c)) 0) (- d c)))) (+ a -1))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.044760801
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (/ (- 0 b) (* (/ (* c (* a c)) 0) (- d c)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.005649816
    },
    "speedup": 7.922523671567357,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (+ a 1)) (/ (pow (- (pow b (* (+ (pow c a) 1) a)) 0) a) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (+ a 1)) (pow (pow b (+ a (* a (pow c a)))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.016208876999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (+ a 1)) (/ (pow (pow b (* a (+ 1 (pow c a)))) a) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.002045524
    },
    "speedup": 7.924070800440375,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (/ (+ a a) (+ -1 1)) (- (pow a (/ 0 (* (/ 1 a) b))) b)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a a) 0) (- 1 b))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.021741488000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a a) 0) (- 1 b))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.002733327
    },
    "speedup": 7.954221357342171,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 0 0) (pow a (- (pow -1 -1) (- (pow (/ (+ 0 b) a) (* 1 -1)) (/ b a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (- (/ 1 (/ b a)) (/ b a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.027362751
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (- (/ 1 (/ b a)) (/ b a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.003428533
    },
    "speedup": 7.9808918274959,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (/ (- a -1) (+ (pow (pow (pow (/ -1 0) -1) (pow a a)) b) -1))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (+ a 1) (+ -1 (pow (pow (/ 1 (/ -1 0)) (pow a a)) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.037851146
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (- a -1) (+ -1 (pow (pow (/ 1 (/ -1 0)) (pow a a)) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.004742654000000001
    },
    "speedup": 7.981005150280834,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- (- 1 (/ (- a (+ (pow (+ (- 1 a) a) (- c b)) (pow a c))) 1)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (- 1 a) (+ (pow a c) (pow 1 (- c b)))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.17248011199999996
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ c (/ (- a (+ (pow 1 (- c b)) (pow a c))) 1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.021603549
    },
    "speedup": 7.9838785747656535,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (/ 1 0) (pow (+ 1 a) (- (* (* (/ (- 1 a) a) 0) (/ -1 b)) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 0) (+ 1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.02861921
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 0) (+ 1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 3,
      "simplification_time": 0.0035760709999999997
    },
    "speedup": 8.0029758916979,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (+ (* a a) (* a a)) (/ 0 (- (/ a (* (- -1 b) 1)) (- 0 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (+ a a)))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.089428819
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (+ a a)))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.011167218999999999
    },
    "speedup": 8.008154850370536,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 (/ (+ 0 (pow (/ (/ (- (- 0 a) 1) 1) b) (- (pow b b) 1))) 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (pow (/ (+ (- 0 a) -1) b) (+ (pow b b) -1)) 0) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.039934581000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (pow (/ (/ (- -1 a) 1) b) (- (pow b b) 1)) 0) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.0049858030000000005
    },
    "speedup": 8.009658825268467,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ -1 (* 1 (+ -1 1))) (/ a (- -1 (+ (* (- (pow b b) c) 0) (+ a 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ a (- -1 a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.018245879
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (- -1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.002273372
    },
    "speedup": 8.02590996985975,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow (+ (pow (pow (* (+ (/ a a) b) 0) a) c) 1) c) a) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (pow (+ (pow (pow 0 a) c) 1) c) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.009594984
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (pow (+ 1 (pow (pow 0 a) c)) c) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.001193495
    },
    "speedup": 8.03940024884897,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a b) (+ b (- 1 (* (+ 1 (- b a)) (/ (pow (+ 1 b) 1) (* b 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(30537)",
      "output_term": "(- (* a b) (* (/ (+ b 1) b) (+ a -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.4303552979999998
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- (* (- b (- a 1)) (/ (+ b 1) b)) (+ b (- 1 (* a b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.17790395600000003
    },
    "speedup": 8.040042111261425,
    "weight_simple_diff": -2,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (* 0 (* (* a (/ (- (+ (+ (- 1 1) 1) (- 1 -1)) 1) b)) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.034627267
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004298565
    },
    "speedup": 8.05554109336488,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ (/ a (/ (+ a (* (+ (* -1 a) a) a)) (pow (+ b -1) 0))) 0) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(20342)",
      "output_term": "(/ a (- (/ 1 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.782871863
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (/ a (/ a 1)) 0) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.09718248600000001
    },
    "speedup": 8.05568878943887,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ (/ (+ a (* (+ a a) 0)) (- (/ a (- (+ 0 a) 1)) a)) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (- (/ a (+ a -1)) a)) -1)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.025383662999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (- (/ a (- a 1)) a)) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.003148743
    },
    "speedup": 8.06152264570338,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 1 1) (pow a (/ 1 (* (* a (+ (pow 1 (* -1 -1)) -1)) (pow 0 a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.019610859
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.002427059
    },
    "speedup": 8.080091584094165,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (pow -1 (/ (* 1 -1) (pow (- (/ -1 a) 1) 1))) 0))",
    "input_weight_simple": 17,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005272766999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.000652386
    },
    "speedup": 8.082281042205073,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (pow -1 0) (/ (- (/ a (+ a -1)) (pow (- (* 0 1) a) (- b 0))) b)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- (/ a (+ -1 a)) (pow (* -1 a) b)) b) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.040455068000000004
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- (/ a (+ -1 a)) (pow (- 0 a) b)) b) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.004992402
    },
    "speedup": 8.103327416341873,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (/ (/ (- 1 a) (/ 1 (/ a (/ (pow (/ 1 b) 1) (* 1 a))))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (/ (- 1 a) (/ 1 (/ a (/ (/ 1 b) a)))) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.030551504
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (/ (- 1 a) (/ 1 (/ a (/ (/ 1 b) a)))) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.00377021
    },
    "speedup": 8.103395832062406,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- a (* (- (/ (- (- 1 a) (* (- a 0) -1)) a) (/ -1 a)) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(20442)",
      "output_term": "(+ (* a a) (* b -2))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.819223336
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (* b (- (/ -1 a) (/ 1 a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.10039720699999999
    },
    "speedup": 8.159821975924093,
    "weight_simple_diff": -4,
    "weight_complex_diff": -12,
    "depth_diff": -3
  },
  {
    "base_term": "(/ (+ (/ a b) (pow 0 (+ (/ a 0) a))) (pow (+ c (- a b)) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a b) (pow 0 (+ a (/ a 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.015640315000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ a b) (pow 0 (+ a (/ a 0)))) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.001916498
    },
    "speedup": 8.16088250548657,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (- (* (* -1 (- a (pow (* -1 a) (* 1 (pow a a))))) a) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (+ (* a -1) (pow (* a -1) (pow a a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.09324698000000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (- (pow (- 0 a) (pow a a)) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.01142375
    },
    "speedup": 8.16255432760696,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* 0 (/ (+ 1 (pow -1 (/ (+ a (+ (+ b 1) 1)) (+ c c)))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.070738923
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.008661807
    },
    "speedup": 8.166762778251696,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (* 0 a) (+ (* (- (* a (+ a d)) (- (pow e b) a)) 0) a)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.155172592
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.018995003
    },
    "speedup": 8.169127006718556,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (- (/ (pow (+ a a) (pow 0 (- 0 (pow (+ 1 -1) 0)))) (+ b b)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow (+ a a) (pow 0 (- 0 (pow 0 0)))) (+ b b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.020618836999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow (+ a a) (pow 0 (- 0 (pow 0 0)))) (+ b b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.002521749
    },
    "speedup": 8.176403361317877,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 0 (- a (pow (- (* (- (/ 1 (/ a c)) (/ c c)) (/ d 0)) d) a))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (- (* (+ (/ 1 (/ a c)) -1) (/ d 0)) d) a) (* a -1))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.040864325
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (pow (- (* (- (/ 1 (/ a c)) 1) (/ d 0)) d) a)) -1)",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.004993852
    },
    "speedup": 8.182926726703155,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (+ -1 -1) (* (- (/ (- -1 a) (/ (pow a -1) -1)) (* (/ c c) b)) 1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- -2 (- (/ (- -1 a) (* -1 (/ 1 a))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.108008479
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -2 (- (/ (- -1 a) (/ (/ 1 a) -1)) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.013194487000000001
    },
    "speedup": 8.185879375226941,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (/ 1 (- (pow a (/ a (* (+ (+ a 0) b) (+ -1 b)))) 1)) b) (pow b d))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ b (/ 1 (+ -1 (pow a (/ a (* (+ a b) (+ b -1))))))) (pow b d))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.092696631
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ b (/ 1 (- (pow a (/ a (* (+ a b) (+ b -1)))) 1))) (pow b d))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.011320776000000001
    },
    "speedup": 8.188187011208418,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (/ 1 (+ (pow b (+ (- (pow (pow b c) 1) (+ 1 1)) (pow 0 b))) 1)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ 1 (+ 1 (pow b (+ (+ (pow b c) -2) (pow 0 b))))) d))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.017197732
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ 1 (+ 1 (pow b (+ (- (pow b c) 2) (pow 0 b))))) d))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.002096558
    },
    "speedup": 8.20284103754821,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a (* a (* b (- (- (+ c (+ (/ c 0) b)) (pow 1 a)) -1)))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (* b (+ a (* a (- (+ (/ c 0) (+ b c)) (pow 1 a)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 1.150950987
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (* (+ (/ c 0) (- b (+ (pow 1 a) (- -1 c)))) (* a b))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.1399835
    },
    "speedup": 8.222047505598875,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ (- (/ (pow a 0) (+ (* (/ (- a a) a) (- a -1)) (pow 1 -1))) 1) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.021728090999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.002639329
    },
    "speedup": 8.232429909268605,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (pow a (- a (* a (pow 0 (/ (- (+ a a) b) (+ 0 1))))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (- a (* a (pow 0 (- (+ a a) b))))) (+ a c))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.041568342999999994
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (- a (* a (pow 0 (/ (- a (- b a)) 1))))) (+ a c))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.005049163
    },
    "speedup": 8.232719561638236,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ a a) (+ (pow (+ (/ 1 -1) a) a) (/ b (+ (* 1 c) (- 1 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 6,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (+ (pow (+ a -1) a) (/ b (+ 1 c))) 2))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.14525522800000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (+ (pow (+ a -1) a) (/ b (+ 1 c))) 2))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.017614572999999998
    },
    "speedup": 8.246309916226753,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (* (+ (pow a a) (* (* (- -1 (+ 0 1)) 0) (* a 0))) a) 1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (* a (pow a a))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.022971381
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (* a (pow a a)) 1) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.002778439
    },
    "speedup": 8.267729109762712,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a (pow (/ (* 0 (+ (/ (* (+ 1 -1) a) 1) 1)) (* b (/ b 0))) b)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (pow 0 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.015081046
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ a (pow 0 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.0018201950000000001
    },
    "speedup": 8.285401289422287,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (/ -1 a) (/ (pow (pow (- (- (/ a a) 0) a) 0) b) -1)) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (pow 1 b) (pow a -1)) 0)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.020020507
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (/ -1 a) (/ (pow 1 b) -1)) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.0024150730000000002
    },
    "speedup": 8.289814427969672,
    "weight_simple_diff": -1,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (/ (pow (/ b 0) -1) (+ (/ -1 b) (* (pow (- (- -1 0) c) (- d c)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (/ 1 (/ b 0)) (/ -1 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.022565769
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (/ 1 (/ b 0)) (/ -1 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.002721907
    },
    "speedup": 8.29042616077625,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (* a (pow 1 (/ a (- (pow (* (+ 0 a) 0) (* 0 a)) (pow a b)))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (* a (pow 1 (/ a (- (pow 0 0) (pow a b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.06544545800000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (* a (pow 1 (/ a (- (pow 0 0) (pow a b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.007886501
    },
    "speedup": 8.298414975158186,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (pow 1 (* -1 (/ 0 (* a (- (* (pow -1 1) a) (* b b)))))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.04522848
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.005448513
    },
    "speedup": 8.301068566781431,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow a a) c) (* 1 (pow (- (- b b) (/ (- (pow 0 a) -1) (* 0 c))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow a a) c) (/ 1 (- 0 (/ (+ 1 (pow 0 a)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.03903858600000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow a a) c) (/ 1 (- 0 (/ (+ 1 (pow 0 a)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.004700929
    },
    "speedup": 8.30444067544947,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (pow (pow (+ (- (* a (pow (/ -1 b) b)) c) 1) a) 0) 0) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.015307345
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001840444
    },
    "speedup": 8.31720226206285,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (/ (pow 0 (/ a (- (* (* (pow a a) b) (- -1 -1)) (* b b)))) -1) a) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (* -1 (pow 0 (/ a (- 0 (* b b))))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.014786354
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (/ (pow 0 (/ a (- 0 (* b b)))) -1) a) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.001774869
    },
    "speedup": 8.330955129646187,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (- 1 0) (* a (* a (* 1 (+ (/ (* 1 a) b) (- 1 b)))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ (/ a b) (- 1 b)) (* a a)) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.145963923
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ (/ a b) (- 1 b)) (* a a)) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.017470096
    },
    "speedup": 8.355072748312315,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (pow a (/ (+ 0 (pow (/ a (* (pow b a) -1)) (- c d))) c)) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow a (/ (pow (/ a (* (pow b a) -1)) (- c d)) c)) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.017291342
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow a (/ (pow (/ a (- 0 (pow b a))) (- c d)) c)) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.002060914
    },
    "speedup": 8.390132727517985,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (- (/ (* (- a -1) (- (/ (- a a) 1) (- a b))) 1) a) -1) (* 0 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* -1 (+ a (* (+ a 1) (- a b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.72651496
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (* (- a b) (- -1 a)) 1) (- 1 a))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.086383774
    },
    "speedup": 8.410317428363342,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ (* a b) 0) (pow (+ 0 (* c (/ b (- (/ (* 0 0) b) (* a a))))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (* a b) 0) (* c (/ b (- 0 (* a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.021101288000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (* a b) 0) (* c (/ b (- 0 (* a a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.00250295
    },
    "speedup": 8.430567130785674,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 (- (- (- (pow a (- a (+ a (* 0 a)))) (- a (* 1 -1))) a) b)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10609)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.077339603
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.127369778
    },
    "speedup": 8.458361315507672,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 1 -1) (- a (pow a (pow (- 0 1) (pow (- a b) (- -1 0))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (- a (pow a (pow -1 (/ 1 (- a b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.014295304
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 2 (- a (pow a (pow -1 (/ 1 (- a b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.001687625
    },
    "speedup": 8.470663802681281,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow 1 (pow 1 (* b (+ (* (- (/ a -1) b) 1) (+ 1 (* c b)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 1 (pow 1 (+ b (* b (+ (* a -1) (* b (+ -1 c))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.147013744
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 1 (pow 1 (* b (+ 1 (+ (- (/ a -1) b) (* b c)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.01734968
    },
    "speedup": 8.47357092465106,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 0 (* (- -1 (pow (* 0 0) (- (pow (* a -1) -1) 0))) a)) (* c (* 0 a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (- -1 (pow 0 (/ 1 (* -1 a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.040633072
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (- -1 (pow 0 (/ 1 (- 0 a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.004790389
    },
    "speedup": 8.482207186096996,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a (+ a (* (- a (- (* (pow (+ c 1) 1) (pow 1 0)) 0)) c))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (+ a (* a c)) (+ a (* c -1))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.25858837
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (+ a (* c (- -1 (- c a))))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.030399565000000003
    },
    "speedup": 8.506318100275447,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (/ (/ (- a a) (/ (- (pow (* -1 (* b c)) 0) (+ a c)) 0)) (+ a -1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.038882328
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004564229
    },
    "speedup": 8.5189257594218,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* a (/ a (- (+ (* (/ (pow a 0) a) 1) b) a))) b) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a (/ a (- (+ (/ 1 a) b) a))) b) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.041514665
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a (/ a (- (/ 1 a) (- a b)))) b) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.004861908
    },
    "speedup": 8.53875988603651,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (pow (/ (pow (pow (* (- (pow (* 0 b) 1) (pow 0 0)) a) a) 1) -1) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (* (pow (* a (- 0 (pow 0 0))) a) -1) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.020718421
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ (pow (- 0 (* a (pow 0 0))) a) -1) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.002421719
    },
    "speedup": 8.555253933259804,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 1 (/ (/ (pow a (+ (/ -1 (+ a (+ a b))) (* 1 1))) 1) (* b a))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023866365
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002782996
    },
    "speedup": 8.575781280318047,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ 0 (pow 1 (- (pow 0 (- (/ (pow a (* a b)) (pow b e)) (* e b))) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 1 (+ (pow 0 (- (/ (pow a (* a b)) (pow b e)) (* b e))) -1)))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.019186431
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 1 (- (pow 0 (- (/ (pow a (* a b)) (pow b e)) (* b e))) 1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.002235073
    },
    "speedup": 8.584252505399151,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ -1 (/ 0 (/ (pow -1 0) (pow a (- (* (/ 0 -1) a) 1))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012033023999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0013984919999999999
    },
    "speedup": 8.604285187187342,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- (/ (+ (/ 0 (/ (pow (/ 1 -1) a) a)) -1) -1) a) -1) (/ a 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (/ a 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.014912529
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a 1) (/ a 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.0017323190000000002
    },
    "speedup": 8.60841969637232,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (- (pow a (+ 1 (/ -1 (+ (pow (pow a a) -1) (pow 0 b))))) 1)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ -1 (pow a (+ 1 (/ -1 (+ (/ 1 (pow a a)) (pow 0 b))))))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 10,
      "simplification_time": 0.017665405999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (- (pow a (+ 1 (/ -1 (+ (/ 1 (pow a a)) (pow 0 b))))) 1)) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 10,
      "simplification_time": 0.00205111
    },
    "speedup": 8.61260780747985,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (- (* a 1) b) c) (pow (/ (/ 0 -1) (+ (+ (- 1 1) 0) 0)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- a b) c) (/ 0 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.030649257
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- a b) c) (/ 0 0))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.00355263
    },
    "speedup": 8.62720210097871,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow (+ 0 (/ a (+ b -1))) (pow (/ (* 0 a) b) (/ (+ (+ c a) d) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (/ a (+ b -1)) (pow 0 (/ (+ a (+ c d)) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.036786416
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (/ a (+ b -1)) (pow 0 (/ (+ a (+ c d)) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.004261938
    },
    "speedup": 8.63138224910827,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow (pow (- a 1) (+ (pow a (- (- (pow a a) b) (pow a b))) 1)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ a -1) (+ 1 (pow a (- (- (pow a a) b) (pow a b))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.019470369
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (- a 1) (+ 1 (pow a (- (pow a a) (+ b (pow a b)))))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.002253669
    },
    "speedup": 8.639409336508601,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a (+ b (- (* (pow a c) a) (* (+ c 0) d)))) -1)",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ a (+ b (- (* a (pow a c)) (* c d)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.023569286
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ a (+ b (- (* a (pow a c)) (* c d)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.0027270659999999998
    },
    "speedup": 8.642726652013556,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (- (pow (pow (+ -1 a) a) b) (* -1 (pow 0 (+ (pow b b) a)))) 0) (- 1 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ (pow (pow (+ -1 a) a) b) (pow 0 (+ a (pow b b)))) 0) (- 1 a))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.030666807
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ (pow (pow (+ -1 a) a) b) (pow 0 (+ a (pow b b)))) 0) (- 1 a))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.003547959
    },
    "speedup": 8.643506590690592,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ (/ (pow 0 -1) (/ (- (* 1 a) 0) (+ (/ 0 a) b))) b) a) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ (/ (pow 0 -1) (/ a b)) b) a) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.051945959
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ (/ (pow 0 -1) (/ a b)) b) a) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.0060087510000000005
    },
    "speedup": 8.645051026411311,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ (pow a (/ (pow a (- a b)) (- (/ 0 (+ (* 0 1) 0)) (pow 0 1)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow a (/ (pow a (- a b)) (/ 0 0))) -1) 2)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.014286683000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ (pow a (/ (pow a (- a b)) (/ 0 0))) -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.001649645
    },
    "speedup": 8.660459068466247,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (pow b (* (/ (/ -1 b) (+ (- (- -1 1) a) (+ b c))) c)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (pow b (* c (/ (/ -1 b) (+ b (+ (- -2 a) c))))) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.092681175
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (pow b (* c (/ (/ -1 b) (+ b (+ (- -2 a) c))))) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.010699150000000001
    },
    "speedup": 8.662480197024998,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (pow (- a 1) (+ b (/ (+ (* (- a 0) a) b) (pow 0 1)))) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow (+ a -1) (+ b (/ (+ b (* a a)) 0))) a) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.047847638000000005
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow (- a 1) (+ b (/ (+ b (* a a)) 0))) a) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.005521342
    },
    "speedup": 8.665943533293175,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (+ a 1)) (pow (+ (+ b (* 0 (* (+ (/ 0 b) b) (- e c)))) -1) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (+ a 1)) (pow (+ b -1) d))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.05363214200000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (+ a 1)) (pow (+ b -1) d))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.006185238
    },
    "speedup": 8.67099083333576,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (pow -1 (- a (/ (- (pow -1 (- -1 (- b -1))) -1) 0))) 1) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* b (pow -1 (- a (/ (+ (pow -1 (- -1 (+ b 1))) 1) 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.016665374
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ (pow -1 (- a (/ (+ (pow -1 (- -1 (+ b 1))) 1) 0))) 1))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.00191775
    },
    "speedup": 8.690065962716725,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (/ a 0) (pow a (/ (* -1 (pow a (/ (- a b) b))) (/ (pow c b) c)))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (pow a (/ (* (pow a (/ (- a b) b)) -1) (/ (pow c b) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.043201091999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (pow a (/ (- 0 (pow a (/ (- a b) b))) (/ (pow c b) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.004960616
    },
    "speedup": 8.708816001883637,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a (- (pow (* a 1) (- (- a (+ (+ -1 -1) b)) b)) d)) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (- (pow a (+ a (+ 2 (* -2 b)))) d)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.044809651000000006
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (- (pow a (- a (+ b (+ -2 b)))) d)) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.0051446849999999995
    },
    "speedup": 8.709892053643713,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ 0 (* (+ 0 (pow (+ (+ 0 -1) (- 0 1)) a)) (* a (/ (pow -1 b) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.037747988
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0043186890000000006
    },
    "speedup": 8.740612718350407,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (/ a -1) (* 0 (- 0 (+ a (pow (/ (* a a) 1) (+ a b)))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a -1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.025180572
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a -1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.002876835
    },
    "speedup": 8.75287320962099,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- a (pow (* 0 a) (/ (pow -1 (- (- (* -1 b) b) a)) (* 0 b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (pow 0 (/ (pow -1 (- (* b -2) a)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.039072872
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (pow 0 (/ (pow -1 (- (* b -2) a)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.0044624750000000005
    },
    "speedup": 8.755874710782694,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ 0 (pow (+ 1 (* (/ (+ (pow (- 1 b) b) (+ b 0)) (- c a)) d)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (+ 1 (* (/ (+ b (pow (- 1 b) b)) (- c a)) d)) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.059934245000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (+ 1 (* (/ (+ b (pow (- 1 b) b)) (- c a)) d)) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.006842644
    },
    "speedup": 8.75893075834429,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a a) (pow (pow (- a 1) (pow (/ (* a (* a b)) (+ 1 b)) (- 0 0))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a a) (pow (+ a -1) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.028257714999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a a) (pow (- a 1) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.0032195649999999998
    },
    "speedup": 8.77687358385372,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (- -1 (pow (- a (- a 1)) (- (- 0 0) (+ (pow b a) c))))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (- -1 (pow 1 (- 0 (+ (pow b a) c))))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.027764437999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (- -1 (pow 1 (- 0 (+ (pow b a) c))))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.003159332
    },
    "speedup": 8.788072288699002,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (+ a (/ (pow 0 0) (pow (* (+ b (+ (+ 1 c) 0)) (/ b a)) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ a (/ (pow 0 0) (* (+ b (+ 1 c)) (/ b a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.08383826999999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ a (/ (pow 0 0) (* (+ b (+ 1 c)) (/ b a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.00952371
    },
    "speedup": 8.803110342503079,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a 1) (pow a (- (pow (pow b (* 0 (- (pow a 1) a))) c) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow 1 c) 2))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.015462812
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a 1) (pow a (+ 1 (pow 1 c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.0017563880000000002
    },
    "speedup": 8.803756345408871,
    "weight_simple_diff": -1,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ a (+ 0 (pow (/ -1 (* b (- (pow (* 0 a) b) b))) 1))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018113306000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00205565
    },
    "speedup": 8.811473743098292,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (/ (- 0 (/ (* (+ a -1) 0) (* (* (- 1 -1) a) (pow 1 a)))) -1) a) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.034213196
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0038775570000000002
    },
    "speedup": 8.82338957235187,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow 1 (pow (/ (/ a (pow (+ -1 -1) (/ (/ 0 -1) a))) 0) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 1 (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.007985
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 1 (/ (/ a 1) 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.0009049640000000001
    },
    "speedup": 8.823555412148991,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow -1 (* (* (/ (pow (- (+ (+ 0 1) a) (+ 1 a)) (+ -1 -1)) c) b) -1)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 (* (/ (pow 0 -2) c) (* -1 b))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.041542723000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 (* (/ (pow 0 -2) c) (- 0 b))) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.004702675
    },
    "speedup": 8.833849458021234,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow (/ a a) (/ a (/ 0 (/ (* (* c 1) (/ a -1)) (/ 0 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 59,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow 1 (/ a 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.043582710999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow 1 (/ a 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.004929236
    },
    "speedup": 8.841676681741347,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow (* (- 1 -1) 0) -1) (/ (/ a 1) (pow (+ a (pow 1 b)) (/ 0 c)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow 0 -1) a) 0)",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.010523629999999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow 0 -1) (/ (/ a 1) 1)) 0)",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.001187503
    },
    "speedup": 8.861981822361711,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow 1 a) (pow (pow (/ (pow (- 0 (+ a a)) b) (pow (+ -1 -1) 1)) b) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 a) (pow (* (pow (* a -2) b) -0.5) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.013008991999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 a) (pow (/ (pow (* a -2) b) -2) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.001467403
    },
    "speedup": 8.865316480884937,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (- (pow a (pow (- (+ -1 a) (/ a (- 0 0))) (- (- a (+ b c)) 1))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (pow a (pow (- (+ a -1) (/ a 0)) (+ -1 (- a (+ b c))))) a))",
      "output_weight_simple": 16,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.043359633
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (pow a (pow (- a (+ 1 (/ a 0))) (- a (+ 1 (+ b c))))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.004881925
    },
    "speedup": 8.88166717022486,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 0) (- a (/ (/ 0 (/ (pow 0 (* (pow a a) 0)) a)) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 0 0) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.016560306
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 0 0) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.001860469
    },
    "speedup": 8.901145893857947,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (- (/ 0 (- (/ a a) a)) (pow (pow (+ (/ (pow 1 -1) a) a) b) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow (+ a (/ 1 a)) b) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.016015287
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow (+ a (/ 1 a)) b) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.001796989
    },
    "speedup": 8.912289947239522,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (/ 0 0) 0) (* (* 1 (- (- a b) (* 1 (pow (+ a -1) c)))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 0 0) (* b (- (- a b) (pow (+ a -1) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.173026083
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 0 0) (* b (- (- a b) (pow (+ a -1) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.019412313000000004
    },
    "speedup": 8.91321312406203,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* a b) (/ 0 a)) (pow (- (- (/ (* 1 (- c -1)) (* b 1)) 1) 1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a b) 0) (/ 1 (+ (/ (+ 1 c) b) -2)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.066468907
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a b) 0) (/ 1 (- (/ (+ 1 c) b) 2)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.007447868999999999
    },
    "speedup": 8.92455372133962,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ (- 0 a) (* (+ (/ 0 (pow (pow -1 (* -1 -1)) a)) (pow (- -1 a) b)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.024261308
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002712943
    },
    "speedup": 8.942800493781107,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (* a b) -1) (+ (pow (+ -1 b) a) (+ (pow 0 a) d)))",
    "input_weight_simple": 17,
    "input_weight_complex": 35,
    "input_depth": 5,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (* a -1)) (+ (pow (+ b -1) a) (+ (pow 0 a) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.050129218
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (* b -1)) (+ (pow (+ b -1) a) (+ (pow 0 a) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.00560497
    },
    "speedup": 8.9437085301081,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a (+ (/ a (+ (* b (+ (* a a) (+ 0 0))) (* (+ 0 a) 0))) b)) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (+ b (/ a (* b (* a a)))) e))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.064740457
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ b (/ a (* a (* a b)))) (* a e))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.007231427
    },
    "speedup": 8.95265305174207,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* a a) (- (* (- (* (pow (* 0 (* a 0)) (+ c b)) b) d) 1) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (- (- (* b (pow 0 (+ c b))) d) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.105093673
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (* a a) d) (- (* b (pow 0 (+ c b))) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.011709999
    },
    "speedup": 8.974695300998745,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* a (/ (pow (pow (+ (/ -1 0) 0) (+ (- (/ a b) 1) (pow 0 a))) 1) b)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* (/ a b) (pow (/ -1 0) (+ -1 (+ (/ a b) (pow 0 a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.024135079
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* a (/ (pow (/ -1 0) (- (/ a b) (- 1 (pow 0 a)))) b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.002686715
    },
    "speedup": 8.98311841784484,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow a 0) (pow (pow a b) (* (/ (+ (- (- 0 0) a) (+ 0 a)) (- b b)) e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.049410903
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (pow a b) (* (/ 0 0) e)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.005493297
    },
    "speedup": 8.994762708078591,
    "weight_simple_diff": -9,
    "weight_complex_diff": -23,
    "depth_diff": -4
  },
  {
    "base_term": "(+ (/ 0 0) (pow (pow (pow (/ (+ (+ (pow a a) a) (pow -1 1)) (- 1 c)) d) -1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 0 0) (/ 1 (pow (/ (+ (pow a a) (+ a -1)) (- 1 c)) d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.037806374000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 0 0) (/ 1 (pow (/ (+ a (+ (pow a a) -1)) (- 1 c)) d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.004201661000000001
    },
    "speedup": 8.997959140444696,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (* (pow -1 (- -1 (- 1 (/ a (* (pow b (* 0 1)) (- 0 1)))))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.034183312
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0037860660000000003
    },
    "speedup": 9.028715294450757,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ 1 (pow (/ 0 a) (pow 0 (pow b a)))) (pow 1 1)) 0)",
    "input_weight_simple": 17,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ 1 (pow 0 (pow 0 (pow b a)))) -1) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.0060582330000000005
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ 1 (pow 0 (pow 0 (pow b a)))) 1) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.000670407
    },
    "speedup": 9.036649378661023,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (/ 1 (/ (pow (* (pow a (- 1 (* 1 -1))) a) (pow -1 (* a 0))) -1)) a) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (/ 1 (* a (* -1 (* a a)))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.016962761
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (/ 1 (/ (* a (pow a 2)) -1)) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.001873369
    },
    "speedup": 9.054682232918342,
    "weight_simple_diff": -1,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ (- (* (* 0 0) (- (+ (/ (+ a a) 1) b) (/ a -1))) b) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "b",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.045329175
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 b) -1)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.005003442
    },
    "speedup": 9.059598372480384,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (+ (- (* (- a a) (/ (/ (- 1 a) (+ b 0)) (* a a))) -1) (* c 0)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.072110661
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.0079558
    },
    "speedup": 9.063910731793158,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (/ (* a a) (/ (/ a -1) (/ (- (* (pow b c) 0) (+ 1 1)) (/ -1 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a a) (* a -0.5))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.017653677
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a a) (/ (/ a -1) 2))",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 4,
      "simplification_time": 0.001946044
    },
    "speedup": 9.071571351932432,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- a (pow (pow (+ a 1) a) (+ a (pow 1 (pow (+ (* -1 -1) -1) (- 1 a)))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (pow (pow (+ a 1) a) (+ a (pow 1 (pow 0 (- 1 a)))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.01902001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (pow (pow (+ a 1) a) (+ a (pow 1 (pow 0 (- 1 a)))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.002094014
    },
    "speedup": 9.083038604326427,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (* (- (- 0 1) (/ (+ a (- c (* -1 d))) (* 1 a))) -1)) (* b -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (+ (* (+ c d) (/ 1 a)) 2)) (* -1 b))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.472937227
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (+ 1 (/ (+ a (+ c d)) a))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.052018707
    },
    "speedup": 9.091675942656552,
    "weight_simple_diff": 3,
    "weight_complex_diff": 5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- (- a (+ (pow (+ -1 1) a) (* (- (/ (/ a -1) a) a) a))) 1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10695)",
      "output_term": "(+ (pow 0 a) (+ 1 (* -1 (* a (+ a 2)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 1.293100008
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 a) (+ (- a 1) (* a (- a (/ (/ a -1) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.14222650400000003
    },
    "speedup": 9.091835710171148,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ (+ (+ a (+ (+ a (* 1 (* 1 b))) b)) 1) -1) (* (* 1 -1) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* (+ a b) (+ b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.6628370889999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* b (- 0 (/ (+ 1 (* (+ a b) 2)) -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.07274718000000001
    },
    "speedup": 9.111515924053686,
    "weight_simple_diff": -6,
    "weight_complex_diff": -11,
    "depth_diff": -3
  },
  {
    "base_term": "(pow (- (- (- a b) (pow b (+ (pow (- (/ -1 -1) 1) (pow 1 -1)) 0))) (pow a c)) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (+ (- a b) -1) (pow a c)) e)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.046174049999999994
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (+ (pow a c) (+ b 1))) e)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.005046449
    },
    "speedup": 9.149810094187021,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (/ a (- (* (* -1 0) (/ (- (pow c b) 1) (/ e b))) b))) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ e (/ a (- 0 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.031096356999999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ e (/ a (- 0 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.003388494
    },
    "speedup": 9.177043547959654,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* -1 -1) (pow a (pow (- a (pow (/ (* a -1) a) (+ (/ -1 a) d))) (- c c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.020925435
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.00227949
    },
    "speedup": 9.179875761683535,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 1 a) (* (pow (* (+ 1 b) (+ a -1)) (/ (* -1 (* b b)) (pow 1 1))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (* (+ 1 b) (+ a -1)) (* b (* b -1))) (* (pow 1 a) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.056824837
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (* (+ 1 b) (+ a -1)) (/ (- 0 (* b b)) 1)) (* (pow 1 a) c))",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.006188367
    },
    "speedup": 9.182525373818327,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow (/ -1 a) (pow a (+ (/ -1 (* (/ (pow b a) 0) a)) (pow (/ 0 1) -1)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 61,
    "input_depth": 9,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (/ -1 a) (pow a (+ (/ -1 (* a (/ (pow b a) 0))) (pow 0 -1)))) 0)",
      "output_weight_simple": 14,
      "output_weight_complex": 45,
      "output_depth": 9,
      "simplification_time": 0.008355263
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (/ -1 a) (pow a (+ (/ -1 (* a (/ (pow b a) 0))) (pow 0 -1)))) 0)",
      "output_weight_simple": 14,
      "output_weight_complex": 45,
      "output_depth": 9,
      "simplification_time": 0.000909614
    },
    "speedup": 9.185503961020828,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow -1 (pow (pow a (- -1 (* (pow (- b (- -1 0)) c) c))) (- 0 a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow -1 (pow (pow a (- -1 (* c (pow (+ b 1) c)))) (- 0 a))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.015137923000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow -1 (pow (pow a (- -1 (* c (pow (+ b 1) c)))) (- 0 a))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.001646803
    },
    "speedup": 9.192309584085043,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a a) (/ b (+ (/ c 0) (/ (/ (+ 0 0) (/ a c)) (+ c e)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) (/ b (/ c 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.031632001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) (/ b (/ c 0)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.0034352569999999997
    },
    "speedup": 9.20804498760937,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (pow (* a (pow (/ (- (/ 0 a) (pow a -1)) a) (pow (- 0 1) b))) 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.017336616
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001880011
    },
    "speedup": 9.221550299439738,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* a (* (* (pow b (/ c (* (+ (- 1 1) 0) (+ 1 -1)))) d) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* b (* (pow b (/ c 0)) (* a d))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.14462791
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (* (pow b (/ c 0)) (* b d))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.015644535
    },
    "speedup": 9.24462823599423,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (pow 0 a)) (/ a (* c (+ (+ (pow (* a 1) 1) (/ (+ c a) d)) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (pow 0 a)) (/ a (* c (+ a (/ (+ a c) d)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.102814169
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (pow 0 a)) (/ a (* c (+ a (/ (+ a c) d)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.011120781
    },
    "speedup": 9.245229179497375,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (* 1 (+ -1 -1))) (/ (pow -1 a) (pow (pow (- b 1) (* a -1)) (- -1 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -2) (/ (pow -1 a) (/ 1 (pow (- b 1) (* a -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.010116547
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -2) (/ (pow -1 a) (/ 1 (pow (- b 1) (- 0 a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.0010940260000000001
    },
    "speedup": 9.247080965169017,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- a (/ (* b 1) (/ (/ (- a b) (* -1 -1)) (- 0 a)))) b) (pow c b))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* b (- a (/ b (/ (- a b) (* a -1))))) (pow c b))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.051322347000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* b (- a (/ b (/ (/ (- a b) 1) (- 0 a))))) (pow c b))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.005539863000000001
    },
    "speedup": 9.26419064875792,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (/ a 1) b) (/ (* c (/ (* (pow c b) (* (pow c 0) 0)) a)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a b) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.038551300999999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ a 1) b) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.004155237
    },
    "speedup": 9.277762255197477,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow a (- (+ 1 (/ (pow (* a (/ (+ -1 1) -1)) (/ b -1)) 1)) (* a d))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (- (+ 1 (pow 0 (* -1 b))) (* a d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.021016184
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (- 1 (- (* a d) (/ (pow 0 (/ b -1)) 1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.002264785
    },
    "speedup": 9.279549272889039,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow (- (- (/ (+ 0 1) a) (/ (pow (/ -1 a) 1) (* (+ a a) 1))) b) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- (- (/ 1 a) (/ (/ -1 a) (+ a a))) b) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.074742686
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- (/ 1 a) (+ (/ (/ -1 a) (+ a a)) b)) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.008047111
    },
    "speedup": 9.2881390600925,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- (- 1 (* (pow -1 a) (/ (* a (* (- 1 a) a)) (- 0 a)))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10776)",
      "output_term": "(* (+ -1 a) (+ 1 (* a (pow -1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.542162468
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (+ a (* (pow -1 a) (/ (* a (- a (* a a))) (- 0 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.16584939999999998
    },
    "speedup": 9.298571282139097,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(* (/ a (- (* 1 (+ (pow a a) (- (/ (- a 1) b) (pow a d)))) (/ d a))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (- (+ (pow a a) (- (/ (+ a -1) b) (pow a d))) (/ d a))) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.167803813
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (- (pow a a) (- (/ d a) (- (/ (- a 1) b) (pow a d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.018043148000000002
    },
    "speedup": 9.300140585223819,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- (pow (- 1 a) (pow (* (pow (+ 1 0) 0) 0) a)) -1) -1) (+ a c))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (+ 1 (pow (- 1 a) (pow 0 a)))) (+ a c))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.016904892999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (+ 1 (pow (- 1 a) (pow 0 a)))) (+ a c))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.001813673
    },
    "speedup": 9.320805349145076,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ -1 (pow (+ (/ a a) (- (/ (+ (/ 0 -1) b) (- 0 1)) (pow a b))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 (pow (+ 1 (- (* -1 b) (pow a b))) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.020239846
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ -1 (pow (+ 1 (- (/ b -1) (pow a b))) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.002170249
    },
    "speedup": 9.326047840593406,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 1 (pow (pow (* 0 (/ (- (+ (+ a a) -1) b) (* 1 c))) -1) 1)) (* -1 c))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 (/ 1 0)) (* -1 c))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.13170127999999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 (pow 0 -1)) (- 0 c))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.014110937
    },
    "speedup": 9.33327673420978,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (pow a 0) (+ a 0)) (/ -1 (/ (/ -1 (pow (+ (pow -1 b) -1) (/ -1 b))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 a) (/ -1 (/ (/ -1 (pow (+ -1 (pow -1 b)) (/ -1 b))) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 43,
      "output_depth": 8,
      "simplification_time": 0.01956275
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 a) (/ -1 (/ (/ -1 (pow (+ -1 (pow -1 b)) (/ -1 b))) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 43,
      "output_depth": 8,
      "simplification_time": 0.0020954420000000003
    },
    "speedup": 9.335858496679936,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 0 a) (pow (* 0 (- (/ -1 (+ a (/ (/ 1 a) 1))) (- (/ -1 a) -1))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.029327321000000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.003130594
    },
    "speedup": 9.367973298358077,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (+ (pow (+ (- (/ (+ -1 (- (+ a a) 1)) b) (/ d 0)) 1) (/ c -1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* -1 (pow (+ 1 (- (/ (* 2 (+ -1 a)) b) (/ d 0))) (* -1 c))))",
      "output_weight_simple": 18,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.209116149
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow (- 1 (- (/ d 0) (/ (- (+ a a) 2) b))) (/ c -1)))",
      "output_weight_simple": 17,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.02227519
    },
    "speedup": 9.38785029443071,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (* 0 (* 0 (- (- (pow a (* a (- 0 (pow b a)))) b) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023320833
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002479124
    },
    "speedup": 9.40688444789369,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow b (+ (- (- b (/ (+ a (/ c a)) (+ e (* b b)))) -1) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow b (+ (- b (/ (+ a (/ c a)) (+ e (* b b)))) (+ b 1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.140089071
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow b (+ (- b (/ (+ a (/ c a)) (+ e (* b b)))) (+ b 1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.014872044000000001
    },
    "speedup": 9.419624565392626,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* a a) (+ (+ -1 0) (/ 1 (/ (+ a -1) (+ (/ a a) -1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (* a (+ -1 (/ 1 (/ (+ a -1) 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.027200988000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (* a a) (+ -1 (/ 1 (/ (+ a -1) 0))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.002883908
    },
    "speedup": 9.431988815177183,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ 0 (/ (pow a (/ (/ 1 (- 1 (* -1 (/ 0 1)))) (+ 1 -1))) -1)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.005048703999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.000533314
    },
    "speedup": 9.466663166539785,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 0 0) (/ 0 (pow (pow (pow (- (- (pow a 0) 1) 1) a) (* (+ 0 1) 0)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00859562
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000907239
    },
    "speedup": 9.474482468236044,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 1 (- (pow (pow a b) (/ (pow a (- (- a b) 1)) (pow -1 1))) 0)) (pow b b))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (pow (pow a b) (* (pow a (+ (- a b) -1)) -1))) (pow b b))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.015790917
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (pow (pow a b) (/ (pow a (- a (+ 1 b))) -1))) (pow b b))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.001663844
    },
    "speedup": 9.490623519993461,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow 1 (- (+ (/ 1 (- (* b c) (pow (/ c 1) a))) c) (pow 0 d))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (- (+ c (/ 1 (- (* b c) (pow c a)))) (pow 0 d))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.020353202
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (- c (- (pow 0 d) (/ 1 (- (* b c) (pow (/ c 1) a)))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.0021402829999999998
    },
    "speedup": 9.50958448018323,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- 1 (/ (pow (pow (- (/ 1 1) (+ (* (pow a 1) a) b)) (* -1 b)) 1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- 1 (+ (* a a) b)) (* b -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.020089822
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (pow (- 1 (+ (* a a) b)) (- 0 b)) -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.002106038
    },
    "speedup": 9.53915456416266,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* 0 (+ (* 0 (pow (/ (+ a (+ (- (- 0 0) 1) -1)) (* a (- -1 -1))) 1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.01194028
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001247944
    },
    "speedup": 9.567961382882565,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 1 0) (pow (* (/ a (- 0 1)) 0) (* 0 (/ (pow (+ b b) a) (/ b -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.010586043
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.001106031
    },
    "speedup": 9.571199179769826,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (- -1 (pow (pow (+ (- (* (- a (+ -1 b)) 0) 1) 1) -1) (/ -1 (- a b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- -1 (pow (/ 1 0) (/ -1 (- a b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.020310265
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- -1 (pow (/ 1 0) (/ -1 (- a b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.002121357
    },
    "speedup": 9.574185297429901,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- (pow (+ (* (+ a (+ a (pow (- b 0) a))) (- 0 (* b a))) a) a) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.357235268
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.037294821
    },
    "speedup": 9.578683002661416,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (/ (/ (pow a 0) a) (pow a (- (pow b a) 0))) -1) b)",
    "input_weight_simple": 17,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (/ (/ 1 a) (pow a (pow b a))) -1) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.01435304
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 (/ (/ 1 a) (pow a (pow b a)))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.001497442
    },
    "speedup": 9.585039019875227,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (pow (/ 1 (* a -1)) (pow 0 (- (* 1 -1) (- (* (pow a b) a) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (/ 1 (* -1 a)) (pow 0 (+ (* a (* -1 (pow a b))) -2))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.019276467000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (/ 1 (- 0 a)) (pow 0 (- -1 (+ 1 (* a (pow a b)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.002007318
    },
    "speedup": 9.603095772568173,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (+ (* a (+ 0 (* a c))) (+ 0 (* b (- (/ a -1) c))))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ (* c (* a a)) (* -1 (* b (+ a c))))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.06391129499999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ (* c (* a a)) (* b (- (/ a -1) c)))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.006641322
    },
    "speedup": 9.623279070040573,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* a (* 1 0)) b) (+ c (pow (* (pow c 0) a) (/ b (/ (- 1 e) d)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 b) (+ c (pow a (/ b (/ (- 1 e) d)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.042468214
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 b) (+ c (pow a (/ b (/ (- 1 e) d)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.004411217
    },
    "speedup": 9.627323706813787,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (/ (+ a (* a (* 1 (/ a -1)))) (pow (- -1 0) (* (+ a -1) -1))) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a (* -1 (* a a))) (pow -1 (+ 1 (* a -1)))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.435689546
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a (* a (/ a -1))) (pow -1 (- 1 a))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.045214769
    },
    "speedup": 9.636000705875551,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ (- (/ 0 (/ (/ (* (* a a) a) 0) (pow a -1))) -1) 0) b) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.013755475
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ 1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.001424476
    },
    "speedup": 9.656515799493988,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- 1 1) (/ (pow (+ a 1) (/ 1 -1)) (pow -1 (/ 1 (/ -1 0))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009053681000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0009374629999999999
    },
    "speedup": 9.657640888227057,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- 0 (* (+ a c) (* (+ (pow 0 (- (* a -1) 1)) c) (/ (* e 0) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14454)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.10463777
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.11432853400000001
    },
    "speedup": 9.661960416635798,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 1 (pow (/ 1 -1) (/ (* a b) (pow (* (- b 0) 0) (* c -1))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (pow -1 (/ (* a b) (pow 0 (* -1 c))))) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.017041912
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (pow -1 (/ (* a b) (pow 0 (- 0 c))))) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.001763052
    },
    "speedup": 9.666142575488415,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow a (/ (* (/ 0 (* (+ (/ (+ b -1) a) -1) (* 1 b))) 0) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.089546438
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009236963
    },
    "speedup": 9.69435928237452,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 1 1) (/ (pow a -1) (- (pow (* (pow 1 (* a c)) 0) (* -1 d)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (/ 1 a) (+ -1 (pow 0 (* -1 d)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.011536727000000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (/ 1 a) (- (pow 0 (- 0 d)) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.0011887080000000001
    },
    "speedup": 9.705265717064242,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 0 a) (* (pow a 1) (+ (/ (pow (- b (- a 1)) 1) (/ -1 -1)) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* a (* -1 (+ a (+ -2 (* b -2)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.57988445
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ b (+ 1 (/ (+ b (- 1 a)) 1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 7,
      "simplification_time": 0.059576544999999995
    },
    "speedup": 9.733435364538176,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (- a (pow (pow (pow (* a 0) 1) (/ (pow (- (* b 0) 1) -1) (+ 0 1))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- a (pow (pow 0 -1) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.010109438
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- a (pow (pow 0 -1) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.001038061
    },
    "speedup": 9.738770650279704,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (* (/ a (- (+ b (/ (/ (+ c 1) 0) 0)) (- (* d c) d))) e) b) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (* (/ a (- (+ b (/ (/ (+ c 1) 0) 0)) (- (* c d) d))) e) b) b)",
      "output_weight_simple": 18,
      "output_weight_complex": 44,
      "output_depth": 10,
      "simplification_time": 0.082506466
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (* (/ a (- b (- (* d (- c 1)) (/ (/ (+ c 1) 0) 0)))) e) b) b)",
      "output_weight_simple": 18,
      "output_weight_complex": 44,
      "output_depth": 10,
      "simplification_time": 0.008411693
    },
    "speedup": 9.808544605705416,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (- 0 -1) (pow (pow (+ (+ 1 (pow a 0)) (+ 0 (+ 1 1))) a) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 1 (pow (pow 4 a) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.009834181
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 1 (pow (pow 4 a) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.00100248
    },
    "speedup": 9.80985256563722,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (/ a (- (pow b c) (/ (* (* (pow -1 0) 1) -1) (- a a)))) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (pow b c) (pow 0 -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.010992216
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow b c) (/ -1 0)))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 4,
      "simplification_time": 0.001119556
    },
    "speedup": 9.818370854160042,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow (+ a a) (pow (+ (* (* (/ a -1) -1) 0) c) a)) (+ (/ a a) b)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (+ a a) (pow c a)) (+ b 1)) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.035506974999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow (+ a a) (pow c a)) (+ 1 b)) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.003615848
    },
    "speedup": 9.819819583124069,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a (/ a (pow a (* (/ 0 (* (/ -1 1) (pow 1 b))) (pow b (- 0 b)))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.021889805
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (/ a 1)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.002222299
    },
    "speedup": 9.850071930014817,
    "weight_simple_diff": -3,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (/ (* (+ (- 1 a) (+ (- (* 1 0) (/ b a)) (pow a b))) (pow c 1)) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10033)",
      "output_term": "(/ (/ (* (+ (- 0 (/ b a)) (+ (- 1 a) (pow a b))) c) a) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 1.008096238
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* (+ (pow a b) (- (- 1 (/ b a)) a)) c) a) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.102140671
    },
    "speedup": 9.869684897605579,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(* 0 (+ (/ (pow (* a (+ (/ (* (/ -1 1) -1) (+ a 1)) (+ a 1))) -1) b) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.04082024
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004127444
    },
    "speedup": 9.889956108429333,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow (- 0 b) (/ (/ (pow b c) (* (+ (* 1 0) b) -1)) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 0 b) (/ (/ (pow b c) (- 0 b)) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.019787092
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 0 b) (/ (/ (pow b c) (- 0 b)) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.0019981359999999997
    },
    "speedup": 9.902775386660368,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (/ (- (* a b) 1) (- 1 (- (- 0 (/ b (* (+ 1 b) -1))) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (+ (* a b) -1) (+ 1 (/ b (+ -1 (* b -1))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.183843235
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (- (* a b) 1) (+ 1 (/ b (- -1 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.018564314000000002
    },
    "speedup": 9.903044895706891,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (pow (/ 0 0) (+ (/ (pow (/ a (- a (+ -1 b))) (+ c d)) -1) d)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ d (pow (/ 0 0) (+ d (* -1 (pow (/ a (- a (+ -1 b))) (+ c d))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.020613067
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ d (pow (/ 0 0) (+ d (/ (pow (/ a (- a (+ -1 b))) (+ c d)) -1))))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.002080671
    },
    "speedup": 9.906932427087222,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (* (* (+ (pow a -1) (/ (/ (* (- 1 b) b) -1) (+ a a))) a) (* b -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10938)",
      "output_term": "(* b (+ -1 (* (- 1 b) (* a (* b (/ 1 (+ a a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.881222473
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (* b (+ (/ 1 a) (/ (/ (- b (pow b 2)) -1) (+ a a))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.08877907699999998
    },
    "speedup": 9.926015259203474,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (/ a b) a) (* (+ c (* -1 (* (/ (- (- c d) -1) c) (pow 1 0)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (/ a b)) (+ -1 (+ c (* (/ 1 c) (+ -1 d)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.455275592
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (/ a b)) (- c (/ (+ c (- 1 d)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.045808133
    },
    "speedup": 9.93875022149451,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ 1 (/ (/ -1 0) (- 1 (/ (* (pow (pow a 1) a) (- a a)) (/ a a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (/ -1 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.017756155000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (/ (/ -1 0) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.0017854820000000001
    },
    "speedup": 9.944740411832772,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* 1 (/ (/ 0 (pow (- -1 (+ 1 a)) (/ -1 (pow a (* 1 (/ -1 1)))))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.027926066
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0027989559999999996
    },
    "speedup": 9.977315113206497,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* 1 (pow a (- b (/ (+ (pow (/ b 1) a) c) (* (- 1 -1) -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (+ b (* (+ (pow b a) c) 0.5))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.037223545000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (- b (/ (+ (pow (/ b 1) a) c) -2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.003714569
    },
    "speedup": 10.02095936298397,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(* 0 (pow (+ (+ a a) (* (/ 0 (* -1 (/ (+ a a) a))) (- (- b c) -1))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.06971474
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006933208000000001
    },
    "speedup": 10.055192343861599,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (* (* a a) (/ 1 (/ (- (pow (- (+ a a) b) c) e) (- (* a -1) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (* a a) (/ 1 (/ (- (pow (- (+ a a) b) c) e) (* -1 (+ a b))))))",
      "output_weight_simple": 17,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.051848926000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (* a a) (/ 1 (/ (- (pow (- a (- b a)) c) e) (- (- 0 a) b)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.0051513
    },
    "speedup": 10.065211888261215,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (+ (pow (pow (pow -1 a) a) 0) -1) (- (- (/ -1 1) (pow (- a 0) c)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 (- (- -1 (pow a c)) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.017288494
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 0 (- -1 (+ c (pow a c)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.0017157869999999999
    },
    "speedup": 10.07613066190617,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ a 1) (/ (pow b 0) (/ 1 (/ b (- (/ -1 -1) 1))))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (+ a 1) (/ 1 (/ 1 (/ b 0)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.007795728
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (+ a 1) (/ 1 (/ 1 (/ b 0)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.0007730910000000001
    },
    "speedup": 10.083842652417372,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- -1 1) (- 0 (- a (/ (- (/ 0 b) (+ (+ b a) 1)) (- (* a e) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ -2 (+ (/ (- 0 (+ 1 (+ a b))) (+ 1 (* a e))) (* -1 a)))",
      "output_weight_simple": 16,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.320462844
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -2 (- (/ (- -1 (+ a b)) (+ 1 (* a e))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.031710925
    },
    "speedup": 10.10575516166747,
    "weight_simple_diff": 3,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow (+ (pow (- a 0) (pow b 1)) (pow 0 1)) a) (/ (- -1 a) (/ b -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow a b) a) (/ (- -1 a) (* b -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.056092249
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow a b) a) (/ (- -1 a) (/ b -1)))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 4,
      "simplification_time": 0.005549247
    },
    "speedup": 10.108082952515899,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a 0) (+ b (/ (pow (pow (pow (* (pow b c) 0) (pow -1 a)) (/ 0 a)) -1) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 62,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a 0) (+ b (/ 1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.014501497
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a 0) (+ b (/ 1 b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 4,
      "simplification_time": 0.00143301
    },
    "speedup": 10.119606283277855,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (+ (/ (- (+ 1 0) a) (- (/ a (+ -1 1)) (* (pow a c) 1))) -1) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ -1 (/ (- 1 a) (- (/ a 0) (pow a c)))) a) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.039326138999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (+ -1 (/ (- 1 a) (- (/ a 0) (pow a c)))) a) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.003885923
    },
    "speedup": 10.120153950554347,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 (pow a (- a -1))) (/ a (/ (/ (/ a a) (+ (* 0 0) -1)) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow a (+ 1 a))) (/ a (/ -1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.011491966
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (pow a (+ 1 a))) (/ a (/ -1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.001133665
    },
    "speedup": 10.13700343575924,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (pow (+ (* (+ (/ -1 (+ (+ 0 b) b)) c) (/ (+ a -1) 0)) d) c) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (pow (+ (* (+ (/ -1 (+ b b)) c) (/ (+ a -1) 0)) d) c) e))",
      "output_weight_simple": 17,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.040276678999999996
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (pow (+ (* (+ (/ -1 (+ b b)) c) (/ (+ a -1) 0)) d) c) e))",
      "output_weight_simple": 17,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.003970846
    },
    "speedup": 10.143097717715568,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (- -1 1) (- (* 1 (pow (- b (/ a b)) (+ (- d d) -1))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -2 (- (/ 1 (- b (/ a b))) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.056424106999999994
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ 1 (- b (/ a b))) (- a -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.005560015000000001
    },
    "speedup": 10.148193305233887,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ a (- (/ -1 1) (/ a (/ a (pow (* b c) (- (- b d) 0))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- -1 (/ a (/ a (pow (* b c) (- b d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.025302267
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- -1 (/ a (/ a (pow (* b c) (- b d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.002490909
    },
    "speedup": 10.157844786782658,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (/ a (+ (- -1 (pow b (/ (+ (+ (+ 1 c) b) (* c a)) (pow d 1)))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (+ c (- -1 (pow b (/ (+ b (+ (+ 1 c) (* a c))) d))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 10,
      "simplification_time": 0.153873098
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (+ c (- -1 (pow b (/ (+ b (+ 1 (+ c (* a c)))) d))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 11,
      "simplification_time": 0.015140714
    },
    "speedup": 10.162869333639089,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- -1 (+ (pow (/ -1 (* (pow (pow (pow (/ 0 0) a) a) a) (* (* 0 1) a))) 1) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (/ -1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.019822906
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (/ -1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.001950387
    },
    "speedup": 10.163575741634865,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (+ (pow (/ -1 (+ -1 (+ (/ (+ (/ 1 a) b) (- a 1)) (/ -1 0)))) c) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ c (pow (/ -1 (+ (/ (+ (/ 1 a) b) (+ -1 a)) (+ -1 (/ -1 0)))) c)))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.045570004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ c (pow (/ -1 (+ -1 (+ (/ (+ (/ 1 a) b) (- a 1)) (/ -1 0)))) c)))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 10,
      "simplification_time": 0.004483515
    },
    "speedup": 10.163901314035973,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ a -1) (pow 1 (+ (/ b (* -1 (/ (+ b (/ c 1)) (+ b d)))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (pow 1 (+ a (/ b (* -1 (/ (+ b c) (+ b d))))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.054452714
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (pow 1 (+ a (/ b (- 0 (/ (+ b (/ c 1)) (+ b d))))))))",
      "output_weight_simple": 17,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.005344787
    },
    "speedup": 10.188004498588999,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* a (/ a 1)) (- (- (- 0 (pow a (+ (+ b (pow 0 0)) (* b d)))) 1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (* (* a a) -1) (+ (pow a (+ (pow 0 0) (* b (+ 1 d)))) 2))",
      "output_weight_simple": 16,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.18862137099999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (* (/ a 1) (+ (pow a (+ b (+ (pow 0 0) (* b d)))) 2))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.018466617
    },
    "speedup": 10.214181135613522,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -2
  },
  {
    "base_term": "(+ a (pow b (/ (/ (/ a (* (/ 1 (pow (* a 0) 1)) -1)) 0) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow b (/ (/ (/ a (* (/ 1 0) -1)) 0) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.01146579
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow b (/ (/ (/ a (- 0 (/ 1 0))) 0) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.001118209
    },
    "speedup": 10.253709279750028,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (pow (pow (- a (pow (- (pow (* 0 a) c) (* 1 1)) (/ b -1))) c) 1)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (pow (- a (pow (+ (pow 0 c) -1) (* b -1))) c)) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.009332561
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (pow (- a (pow (- (pow 0 c) 1) (/ b -1))) c)) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0009082820000000001
    },
    "speedup": 10.27495975919373,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (* 0 (pow a (/ a (+ (+ (/ (- a b) -1) (pow 1 a)) c)))) 1) (/ -1 a))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.039181992
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.0038123819999999996
    },
    "speedup": 10.277561902243795,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (+ (* (pow (* (pow 0 (- (/ (pow a 1) b) (* 0 -1))) -1) b) b) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (* b (pow (* -1 (pow 0 (/ a b))) b)) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.022450191
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (* b (pow (- 0 (pow 0 (/ a b))) b)) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.00218042
    },
    "speedup": 10.296269067427376,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (pow (+ -1 0) (- -1 (pow (/ 1 (pow a -1)) 0))) c))",
    "input_weight_simple": 17,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow -1 -2) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.011190983
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow -1 -2) c))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.001083326
    },
    "speedup": 10.330208081408552,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 0 a) (- -1 (- (* (pow a a) (pow (+ a (/ 0 a)) (+ 0 a))) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 a) (+ (* -1 (pow a (+ a a))) -2))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.039848366999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 a) (- -1 (+ (pow a (+ a a)) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.003855687
    },
    "speedup": 10.334958983963167,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (/ (- a (+ 0 (+ (+ (/ (/ 1 -1) a) (- 0 b)) (/ a 0)))) b)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (/ (+ a (+ (+ (/ 1 a) b) (* -1 (/ a 0)))) b)) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.545756428
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (/ (+ a (- b (+ (/ -1 a) (/ a 0)))) b)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.052794693000000004
    },
    "speedup": 10.337335004486151,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (- 1 -1) (pow (+ (- (- a (- (* b a) c)) 1) (/ (+ d b) d)) 1)) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10395)",
      "output_term": "(pow (* 2 (+ (- a (- (* a b) c)) (* b (/ 1 d)))) e)",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.911087838
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow (* 2 (+ (- (- c 1) (* a (- b 1))) (/ (+ b d) d))) e)",
      "output_weight_simple": 16,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.08787113799999999
    },
    "speedup": 10.368453837481884,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow a (/ 0 (/ -1 (/ a (- (- -1 1) (pow (- 0 a) a)))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.014805844
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001427374
    },
    "speedup": 10.372785268612152,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (* a (/ -1 (pow (/ 0 b) (/ (+ (pow (pow 0 b) b) 0) (pow a 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (/ -1 (pow 0 (/ (pow (pow 0 b) b) a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.018788751
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (/ -1 (pow 0 (/ (pow (pow 0 b) b) a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.001808506
    },
    "speedup": 10.389100727340688,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (/ (* (pow (pow (- (- 0 (/ 1 a)) (- -1 1)) (* -1 b)) -1) b) a) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ (* b (/ 1 (pow (+ (- 0 (/ 1 a)) 2) (* -1 b)))) a) e))",
      "output_weight_simple": 17,
      "output_weight_complex": 40,
      "output_depth": 10,
      "simplification_time": 0.024348377999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (/ (/ b (pow (- 0 (+ (/ 1 a) -2)) (- 0 b))) a) e))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.0023421930000000002
    },
    "speedup": 10.395547249949084,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(/ -1 (* (- a (- (- -1 -1) 0)) (- a (+ (- (pow (/ a 0) -1) a) (* b 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* a (- a (+ (- (/ 1 (/ a 0)) a) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.31823935000000003
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* a (+ a (- (- a b) (/ 1 (/ a 0))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.030599615
    },
    "speedup": 10.40010960922221,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- -1 (- a (pow a (- (pow (pow (+ -1 (* 1 -1)) 0) (/ (pow a 1) -1)) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- a (pow a (- (pow 1 (* -1 a)) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.020961387
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (- (pow 1 (/ a -1)) a)) (+ a 1))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.002013681
    },
    "speedup": 10.409487401430516,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (/ (+ 0 (+ -1 a)) (- a (* 1 (* (* (* (- -1 b) a) (pow -1 0)) 1)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ -1 a) (* a (+ b 2))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.3556253979999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ -1 a) (* a (+ b 2))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.034106274
    },
    "speedup": 10.4269788602531,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ (+ 1 a) a) (/ (pow (/ -1 (pow (+ (- -1 b) a) (/ b c))) -1) 0)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (+ 1 (+ a a)) (/ (/ 1 (/ -1 (pow (+ a (- -1 b)) (/ b c)))) 0)) c)",
      "output_weight_simple": 17,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.114679341
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (+ 1 (+ a a)) (/ (/ 1 (/ -1 (pow (+ a (- -1 b)) (/ b c)))) 0)) c)",
      "output_weight_simple": 17,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.010996299
    },
    "speedup": 10.428903488346398,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ 0 (/ 1 (- (/ 0 0) (- (/ (* (+ 0 1) 0) (pow 0 0)) (pow b a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.015656865
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001500814
    },
    "speedup": 10.432248766336134,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (* (/ (pow -1 1) (- a (pow (+ (* -1 -1) 0) (/ a 0)))) (* 0 0)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.011452569
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.001092592
    },
    "speedup": 10.482017990247044,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (/ a (pow (pow -1 (+ -1 a)) (- (pow a (+ (pow (pow -1 a) 0) (/ -1 a))) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (pow (pow -1 (+ a -1)) (+ -1 (pow a (+ 1 (/ -1 a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.012894564
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (pow (pow -1 (+ a -1)) (- (pow a (+ 1 (/ -1 a))) 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.001229852
    },
    "speedup": 10.484646933126912,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow a -1) 0) (pow 1 (pow 0 (- (- 1 a) (pow a (+ a (/ 0 0)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a -1) (pow 1 (pow 0 (- (- 1 a) (pow a (+ a (/ 0 0)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.018726281
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a -1) (pow 1 (pow 0 (- 1 (+ a (pow a (+ a (/ 0 0))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.001776946
    },
    "speedup": 10.538463746225267,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (pow (+ (/ (pow a (pow 0 (- (* (+ b 1) 0) (- 1 b)))) d) 1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (+ 1 (/ (pow a (pow 0 (+ b -1))) d))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.013357920999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ 1 (+ 1 (/ (pow a (pow 0 (- b 1))) d))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.001267239
    },
    "speedup": 10.540964253783223,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* a (+ 0 (+ a (* 1 (/ (+ b (* (/ -1 1) b)) b))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11897)",
      "output_term": "(- a (* a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.629366473
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a a))",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 3,
      "simplification_time": 0.059553919999999996
    },
    "speedup": 10.568010854701086,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (* (pow (/ (- (- 1 -1) (pow a (+ (+ a a) 0))) b) a) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a (pow (/ (- 2 (pow a (+ a a))) b) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.029837944999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a (pow (/ (- 2 (pow a (+ a a))) b) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.002817846
    },
    "speedup": 10.588919692559493,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (* 1 (* (* (- (* (+ 0 1) a) (- 1 a)) (/ (pow a b) 1)) a)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* (+ -1 (+ a a)) (* a (pow a b))) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.344913133
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* (/ (pow a b) 1) (* a (- (+ a a) 1))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.032524774
    },
    "speedup": 10.604628121320689,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ a -1) (- (* -1 0) (* (pow (- -1 -1) a) (- -1 (pow (* a 1) b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a -1) (* (pow 0 a) (+ 1 (pow a b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.059476125
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a -1) (* (pow 0 a) (+ 1 (pow a b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.005605929
    },
    "speedup": 10.6095037949999,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (/ a (- (pow (pow (* (- a a) (/ b b)) 0) -1) c))) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (/ a (- 1 c))) d)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.011894419000000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (/ a (- 1 c))) d)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.001120896
    },
    "speedup": 10.611527742092044,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (- (/ -1 (* (* (/ (+ (pow -1 1) 0) 0) (- a b)) -1)) b) 0) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ 1 (* (/ -1 0) (+ b (* -1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.073504658
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ -1 (* (/ -1 0) (- b a))) b) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.006890327
    },
    "speedup": 10.66780400988226,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* a a) (+ (/ a a) (+ 1 (+ (/ 1 (pow -1 b)) (/ 0 b))))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (* (* a a) (+ (/ 1 (pow -1 b)) 2)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.085496886
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* (* a a) (+ (/ 1 (pow -1 b)) 2)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.008000951999999999
    },
    "speedup": 10.685839135142919,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow a (+ 0 -1)) (+ 1 (* -1 (+ (/ (* (/ 0 0) 0) a) -1)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (/ 1 a) 2) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.027474393
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 2 a) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.0025705679999999996
    },
    "speedup": 10.68806310511918,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow 1 -1) (* (* (- (+ (+ 0 (/ (- a a) b)) 1) (/ -1 -1)) a) (- c -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0572376
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0053509479999999995
    },
    "speedup": 10.696721403384972,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- a (pow (* 0 (/ -1 (- 0 (+ (/ (pow a 0) 0) a)))) -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- a (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.011030505999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- a (pow 0 -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 0.00103082
    },
    "speedup": 10.700710114277953,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ (* 1 (/ (+ a (/ (pow 0 (* (/ -1 0) 1)) -1)) (/ -1 1))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (pow 0 (/ -1 0)) (/ 1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.084166505
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (/ (pow 0 (/ -1 0)) -1)) -1) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.007852053
    },
    "speedup": 10.71904443334756,
    "weight_simple_diff": 0,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- (* (/ (/ -1 1) 0) a) (- (* a (/ b (- (+ (pow 1 a) b) 0))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ c (* a (+ (/ -1 0) (* -1 (/ b (+ b (pow 1 a)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.08395718299999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- c (* a (- (/ b (+ b (pow 1 a))) (/ -1 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.007829895
    },
    "speedup": 10.722644811967465,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (+ (pow -1 (* (/ (- (+ (/ b (- b b)) 0) (* -1 1)) a) b)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (pow -1 (* b (/ (+ (/ b 0) 1) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.064685269
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (pow -1 (* b (/ (+ (/ b 0) 1) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.00602579
    },
    "speedup": 10.734736690126939,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 0 1) (+ (pow a 0) (/ (pow a b) (pow (/ (pow c b) 1) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* -1 (/ (pow a b) (pow (pow c b) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.018728831
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (pow a b) (pow (/ (pow c b) 1) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.0017426560000000002
    },
    "speedup": 10.747290916853354,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (* a (/ (pow 0 (* (+ b 0) (+ (* -1 a) a))) 1)) -1) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(25983)",
      "output_term": "(+ 1 (* a (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.698249147
    },
    "Extended": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (* a (/ (pow 0 0) 1))) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.15793450199999998
    },
    "speedup": 10.752869863736299,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (- 0 (* (- 0 (+ (+ (/ b 1) (/ (* b a) b)) (pow (* b e) e))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12032)",
      "output_term": "(- a (* b (+ (+ b a) (pow (* b e) e))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.898491508
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- a (* b (+ (/ b 1) (+ (/ (* a b) b) (pow (* b e) e)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.08348193
    },
    "speedup": 10.762706468333926,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow (/ a 1) (- b (pow a (pow (pow c b) (* -1 -1))))) -1)",
    "input_weight_simple": 17,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (- b (pow a (pow c b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.007433612
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (/ a 1) (- b (pow a (pow c b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.0006893579999999999
    },
    "speedup": 10.783383960148429,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ 0 (/ a (/ (/ (- (pow (- 0 0) -1) 1) (- a -1)) (pow a -1)))) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.056954494
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005279496
    },
    "speedup": 10.787865735668708,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- (pow -1 (+ a a)) -1) (+ b (* c 0))) (- 1 (/ d d)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 6,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ b (* (pow -1 (+ a a)) b)) 0)",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.038057640000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (+ (pow -1 (+ a a)) 1) b) 0)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.003525029
    },
    "speedup": 10.796404795535016,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a (pow a b)) (/ a (* (/ (/ (- (- (/ 1 e) 0) e) (/ d d)) 0) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 60,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (pow a b)) (/ a (* a (/ (- (/ 1 e) e) 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.030821734999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (pow a b)) (/ a (* a (/ (/ (- (/ 1 e) e) 1) 0))))",
      "output_weight_simple": 14,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.0028454609999999997
    },
    "speedup": 10.831895077809888,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (pow -1 1) (pow 0 (+ 1 (- (pow (- (- a a) -1) c) c)))) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* -1 (pow 0 (+ 1 (- (pow 1 c) c)))) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.025958648
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (pow 0 (+ 1 (- (pow 1 c) c)))) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.002395287
    },
    "speedup": 10.837385248615302,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (pow a -1) (pow (/ (+ (/ 1 (pow (* 0 a) 0)) 1) a) a)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ 1 a) (pow (/ 2 a) a)) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.010146124
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ 1 a) (pow (/ (+ 1 (/ 1 (pow 0 0))) a) a)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.0009357149999999999
    },
    "speedup": 10.843177676963606,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -3
  },
  {
    "base_term": "(+ (/ a (/ 1 (+ b 1))) (* b (pow (pow (* (- 1 (* -1 a)) (pow 1 c)) a) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ a (/ 1 (+ 1 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.08151526399999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ a (/ 1 (+ 1 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.007503501
    },
    "speedup": 10.863630723844775,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (pow (+ 1 (* (pow (pow (pow a (pow b c)) b) (pow -1 -1)) (pow 0 c))) c)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (pow (+ 1 (* (/ 1 (pow (pow a (pow b c)) b)) (pow 0 c))) c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 10,
      "simplification_time": 0.020830914
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (pow (+ 1 (/ (pow 0 c) (pow (pow a (pow b c)) b))) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.0019169920000000002
    },
    "speedup": 10.866458493306178,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 0 (* a (+ a (pow a (* (- (/ (- (/ a 0) 0) (* b b)) (pow 0 1)) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025506409
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0023468359999999997
    },
    "speedup": 10.86842412507734,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a (- (- a 1) (* (* (pow (pow (/ 1 a) 0) b) (/ 1 d)) b))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (- (+ a -1) (* (pow 1 b) (* b (/ 1 d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.04569779400000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (- a (+ 1 (* b (* (pow 1 b) (/ 1 d)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.004193438
    },
    "speedup": 10.897453116035102,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* -1 (/ (- a a) (pow (/ (/ b (pow (/ c a) b)) (* a 0)) c))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.022144993
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0020289889999999997
    },
    "speedup": 10.914299190384968,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (pow (+ a (/ (pow (- 1 (- 0 (- 1 1))) 1) (* (- b 1) 0))) -1) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (+ a (/ 1 0))) (* a -2))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.022177466
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (+ a (/ 1 0))) (+ a a))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.002024825
    },
    "speedup": 10.95278159840974,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (* (+ a (/ 0 1)) (+ b (* c (pow (- d 1) (- (+ 1 d) e))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ b (* c (pow (+ d -1) (- (+ 1 d) e))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.032314079
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ b (* c (pow (- d 1) (- 1 (- e d)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.0029426520000000005
    },
    "speedup": 10.981277772567058,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (/ (pow 0 1) (- (- (/ 1 (pow (+ a a) a)) (pow c c)) b)) 0) (* -1 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021004577000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001912067
    },
    "speedup": 10.985272482606522,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow -1 a) (* (pow (* (/ (+ (* b (pow a -1)) 0) a) (pow (+ c 1) d)) 1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.032477321999999996
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.002956311
    },
    "speedup": 10.985759617306838,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a a) (/ (/ b -1) (pow (* (/ (+ (/ b b) 0) (pow c 1)) -1) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018864904000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001716472
    },
    "speedup": 10.99051076859978,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 0 -1) (/ (* -1 a) (+ (- (pow (pow a (pow 0 1)) 1) a) (pow (/ 0 a) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023017933
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0020929160000000002
    },
    "speedup": 10.998020465226507,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ (+ (* a 1) (pow (+ b (/ -1 (+ b (/ a c)))) c)) (- (+ -1 a) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (+ a (pow (+ b (/ -1 (+ b (/ a c)))) c)) (- (+ a -1) b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.06772246500000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (+ a (pow (+ b (/ -1 (+ b (/ a c)))) c)) (- a (+ 1 b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.0061515219999999995
    },
    "speedup": 11.009058408634484,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* a (+ (/ b (* (- (- (- -1 1) 1) (/ -1 a)) (/ a a))) b)) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (+ b (/ b (+ -3 (/ 1 a)))) (* a b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.078867242
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (* b (+ b (/ b (- -3 (/ -1 a)))))) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.007162695
    },
    "speedup": 11.010833492142273,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (* (+ (+ a (+ 1 b)) b) -1) (- b a)) (* 0 (+ 1 c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (+ (* a -1) (* b -2))) (- b a))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.20786054999999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -1 (+ a (+ b b))) (- b a))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.018861112
    },
    "speedup": 11.020588287689506,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (- a (* (+ (* b (- (pow (- 0 -1) a) (pow 0 b))) 1) 0)) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.027089530999999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.002449405
    },
    "speedup": 11.059637340496977,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- (pow a (/ b (- (/ (+ (pow (* a -1) -1) (pow -1 -1)) (* a c)) 0))) 1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ -1 (pow a (/ b (/ (+ -1 (/ 1 (* a -1))) (* a c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.026247015000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (pow a (/ b (/ (+ -1 (/ 1 (- 0 a))) (* a c)))) 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.002372865
    },
    "speedup": 11.061318279801,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ (/ -1 a) (/ (pow (- (pow (pow a a) c) (* 1 1)) (/ c -1)) 0)) 1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (* -1 (/ (pow (+ -1 (pow (pow a a) c)) (* -1 c)) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.012764033000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (/ -1 a) (/ (pow (- (pow (pow a a) c) 1) (/ c -1)) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.0011529869999999998
    },
    "speedup": 11.070404956864216,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow (* a b) (+ (+ 1 a) (pow 0 (* (/ (* a -1) c) (/ d 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow (* a b) (+ 1 (+ a (pow 0 (* (/ (* -1 a) c) d))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.05215365699999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (* a b) (+ (+ a 1) (pow 0 (* (/ (- 0 a) c) (/ d 1))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.004695417
    },
    "speedup": 11.10735361736774,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow (- 1 a) (pow (/ -1 -1) (pow (/ a (pow 0 1)) 1))) 1)",
    "input_weight_simple": 17,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 a) (pow 1 (/ a 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.0071665259999999995
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- 1 a) (pow 1 (/ a 0))) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.000643794
    },
    "speedup": 11.131706726064547,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (* (pow (- (pow (* a (- -1 (+ 0 a))) 0) 1) -1) (- -1 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* -1 (/ 1 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.026767429000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 0 (/ 1 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.002401619
    },
    "speedup": 11.145576796319485,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (* (+ (pow (- (pow (pow (pow a a) a) a) (/ 0 0)) (+ c 0)) d) e) e) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.035389897000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003174695
    },
    "speedup": 11.147495113703837,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (+ 1 (- a (- (/ 1 a) (/ (pow (- 1 (- -1 a)) (* b -1)) 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ 1 (- a (- (/ 1 a) (/ (pow (+ a 2) (* -1 b)) 0)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.108320629
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- (/ (pow (+ a 2) (- 0 b)) 0) (- (/ 1 a) (+ 1 a))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.009665932
    },
    "speedup": 11.206433999328777,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (+ a (pow (pow (/ (/ (* (pow (+ a b) -1) 0) (+ c 1)) (- c 1)) b) c)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (pow 0 b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.029043015000000005
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (pow 0 b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.0025896260000000003
    },
    "speedup": 11.215138788381026,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (pow (+ 0 -1) -1) a) (pow -1 (/ a (+ (pow b (* (/ -1 c) 0)) (/ 0 c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (pow -1 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.01776624
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (pow -1 (/ a 1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.001582891
    },
    "speedup": 11.223918766358517,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ -1 a) (- 0 (- -1 (- (- a (* (/ -1 (pow a a)) (- 1 b))) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (+ (- a (* (/ 1 (pow a a)) (+ -1 b))) 2))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.051643546
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (+ (+ a 2) (* (/ -1 (pow a a)) (- b 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.093685545
    },
    "speedup": 11.225248740347297,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- (- (+ (* a 0) (+ (+ (* a 1) 0) (* (- b 0) c))) 1) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10807)",
      "output_term": "(+ (* (/ 1 b) (+ a -1)) (+ -1 c))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.8863316529999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (- (+ 1 b) (* b c))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.078746445
    },
    "speedup": 11.255513223485835,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (/ 0 a) (- a (pow b (- (/ (/ a (- -1 0)) (* c a)) (* 1 -1))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.039374312
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "c",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.003497074
    },
    "speedup": 11.259216133258834,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (- (pow 0 (- a (pow (* (/ (- (- 0 a) b) c) -1) (/ (+ d -1) 1)))) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ e (* -1 (pow 0 (- a (pow (* (+ a b) (/ 1 c)) (+ -1 d))))))",
      "output_weight_simple": 17,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.071539912
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- e (pow 0 (- a (pow (- 0 (/ (- 0 (+ a b)) c)) (/ (+ -1 d) 1)))))",
      "output_weight_simple": 18,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.006344295
    },
    "speedup": 11.276258749002055,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (- (pow (- 1 (- b c)) (/ -1 (- c (+ (/ (/ 1 a) c) (pow 0 1))))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (pow (- 1 (- b c)) (/ -1 (- c (/ (/ 1 a) c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.032889813
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (pow (- 1 (- b c)) (/ -1 (- c (/ (/ 1 a) c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0029161869999999998
    },
    "speedup": 11.278362121496324,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (* a (pow 0 (* b a))) (/ a (/ a (/ (* (pow b 0) -1) (/ b 0))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (* a (pow 0 (* a b))) (/ a (/ a (/ -1 (/ b 0))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.014123008000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (* a (pow 0 (* a b))) (/ a (/ a (/ -1 (/ b 0))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.0012508649999999999
    },
    "speedup": 11.290593309429877,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 0 (/ a (+ 0 (* (/ a (/ b (- a (pow -1 a)))) (+ (- 0 1) 1))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0197262
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001746502
    },
    "speedup": 11.294690759014303,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (/ (/ -1 (- (- (- -1 (- a 1)) (* (+ a 0) 1)) a)) 0) a) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14111)",
      "output_term": "(pow (/ (/ -1 (* a -3)) 0) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.343474439
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ -1 (* a -3)) 0) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.11881863000000001
    },
    "speedup": 11.306934266116349,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (+ (+ (- a (/ a (- (+ b (pow c c)) d))) 0) 1) (/ -1 d)) (* 1 -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (+ (- a (/ a (- (+ b (pow c c)) d))) 1) (/ -1 d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.298912533
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (+ (- a (/ a (- (pow c c) (- d b)))) 1) (/ -1 d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.026411793000000003
    },
    "speedup": 11.317388902752644,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow (- 1 (- a (pow (- (/ (/ (+ a 1) a) (+ 0 1)) (pow -1 -1)) a))) 0) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.026829705
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002370632
    },
    "speedup": 11.317532624211601,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- 1 (- (- a b) 0)) (pow (pow (+ a 1) (* -1 (/ b a))) (/ 1 1))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow (+ 1 a) (* -1 (/ b a))) (- 1 (- a b))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.28699233199999996
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- d (* (pow (+ 1 a) (- 0 (/ b a))) (- (- a 1) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.025346100000000003
    },
    "speedup": 11.322938519141008,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- (pow 1 a) (/ a (- (+ (/ 0 (* (pow -1 1) 0)) c) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.019415017
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001713965
    },
    "speedup": 11.327545778356034,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ 1 (/ 1 (/ (/ (* 0 a) (* (* 1 1) b)) (/ (- a 1) 0)))) b) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (- (/ 1 (/ 1 0)) b) d)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.041953739
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- (/ 1 (/ 1 0)) b) d)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.0037020329999999995
    },
    "speedup": 11.33262156226052,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (/ (* a a) (- (- a (* (- (/ b b) -1) b)) b)) 1) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a a) (+ a (* b -3))) 0)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.034613521
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a a) (- a (* b 3))) 0)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.0030519329999999997
    },
    "speedup": 11.34150749705187,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (+ (/ a (/ 1 (/ 1 (+ (/ (/ (pow -1 a) -1) a) (* 1 0))))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (/ 1 (/ 1 (/ (* -1 (pow -1 a)) a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.021799913999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (/ 1 (/ 1 (/ (/ (pow -1 a) -1) a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.001918085
    },
    "speedup": 11.365457735189002,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow a (+ b b)) 1) (* 0 (* c (/ (+ d 1) (/ c (pow -1 -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ b b))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.041132345
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (+ b b)) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.0036121120000000002
    },
    "speedup": 11.387339318382153,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (- (* (* (/ (* (* (+ a 1) -1) -1) 0) (- (/ b a) a)) a) c) -1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(19224)",
      "output_term": "(* a (/ 1 (- (* (/ (+ a 1) 0) (+ b (* a (* a -1)))) c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.470084413
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (* (- (/ b a) a) (* a (/ (- a -1) 0))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.12874776300000002
    },
    "speedup": 11.418329753814827,
    "weight_simple_diff": 2,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ -1 (* (* b (* (pow 0 (/ 1 -1)) (/ (+ (+ 1 -1) c) (- b c)))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ a (* b (* (/ c (- b c)) (* a (pow 0 -1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.48438848900000003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (- -1 (* b (* (pow 0 -1) (/ c (- b c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.042240879999999995
    },
    "speedup": 11.467291614189858,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (* (pow 0 (pow 0 (/ (* (/ (pow a 0) -1) a) (pow 1 1)))) a) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (* a (pow 0 (pow 0 (* a -1)))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.01812985
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (* a (pow 0 (pow 0 (/ (- 0 a) 1)))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.0015805419999999999
    },
    "speedup": 11.470653737768437,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (pow 0 (+ (* (* 0 (- (* (pow 0 0) a) -1)) (/ (* 0 a) b)) 0)) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 0) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.042038485
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow 0 0) b) 1)",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.0036608739999999997
    },
    "speedup": 11.483182704458008,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (/ (/ a (+ 1 a)) (/ -1 (/ a (* (+ b (- 0 -1)) (* -1 a))))) a) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (/ (/ a (+ a 1)) (/ -1 (/ a (* a (+ -1 (* -1 b)))))) a) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.081323521
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ a (+ a 1)) (/ -1 (/ a (* a (- -1 b))))) (- a d))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.0070503200000000005
    },
    "speedup": 11.53472764356795,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(/ 0 (+ (/ (* a -1) (- 1 (pow (/ (pow a (/ a -1)) (* b -1)) (* b -1)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.027843971000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0024075
    },
    "speedup": 11.565512357217031,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 1 (pow (+ a a) a)) (/ (/ a a) (pow a (- (- a (/ 1 0)) (pow 1 a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 (pow (+ a a) a)) (/ 1 (pow a (- (- a (/ 1 0)) (pow 1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.028379151999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 (pow (+ a a) a)) (/ 1 (pow a (- (- a (/ 1 0)) (pow 1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.00244166
    },
    "speedup": 11.622892622232415,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (* (/ (* 1 0) a) (/ (/ 1 a) (pow (/ -1 (- a a)) 0))) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 0 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.016781852
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 0 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.001443032
    },
    "speedup": 11.62957716807389,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- (- (- (pow (pow a -1) 1) b) (pow -1 (pow (- (/ a 1) c) (+ a e)))) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (- (- (/ 1 a) b) (pow -1 (pow (- a c) (+ a e)))) e))",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.056543292999999994
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (- (- (/ 1 a) b) (pow -1 (pow (- (/ a 1) c) (+ a e)))) e))",
      "output_weight_simple": 17,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.004856878
    },
    "speedup": 11.641901031897444,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (pow a (- b (* 1 (* (- (- 0 (/ b a)) (+ (/ 0 -1) a)) e)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (+ b (* e (+ a (/ b a))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.182067914
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (+ b (* e (+ a (/ b a))))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.015610822000000002
    },
    "speedup": 11.66292934478402,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow 1 (- a (pow b (- (* b (+ (- (- 1 b) a) (pow e 1))) 0)))) (* b c))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 (- a (pow b (* b (+ (- (- 1 b) a) e))))) (* b c))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.130193043
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 (- a (pow b (* b (+ (- 1 (+ a b)) e))))) (* b c))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.011159793
    },
    "speedup": 11.666259669870222,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- 1 (pow 1 (/ -1 0))) (pow (/ (* (pow (pow a a) a) (/ (- a 0) 1)) b) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 1 (pow 1 (/ -1 0))) (pow (/ (* a (pow (pow a a) a)) b) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.023834316999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 1 (pow 1 (/ -1 0))) (pow (/ (* (pow (pow a a) a) (/ a 1)) b) c))",
      "output_weight_simple": 16,
      "output_weight_complex": 44,
      "output_depth": 7,
      "simplification_time": 0.0020408460000000002
    },
    "speedup": 11.6786455224941,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- b (pow (* b -1) (* (* (+ 1 (/ (+ a 1) 1)) d) (* (/ 0 0) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- b (pow (* b -1) (* (+ a 2) (* (/ 0 0) (* a d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.20018911699999997
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- b (pow (- 0 b) (* (+ 1 (/ (+ a 1) 1)) (* a (* d (/ 0 0)))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.017104462
    },
    "speedup": 11.703911938300074,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (pow (/ (/ (- 0 (* 0 (- a 1))) (/ 0 -1)) -1) 0) (- (- a b) c)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 (- (- a b) c)) d)",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.024762123000000004
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 (- a (+ b c))) d)",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.002112737
    },
    "speedup": 11.720400125524382,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 1 (/ a (- (pow 0 a) (/ (pow (+ (- 1 0) a) (+ -1 -1)) (* 0 0))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010538258
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0008988309999999999
    },
    "speedup": 11.72440425396988,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (/ (pow a a) (- c (* (/ (/ (* b -1) d) (* a c)) (pow -1 0))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (pow a a) (- c (/ (/ (* b -1) d) (* a c)))) (+ a -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.073425978
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow a a) (- c (/ (/ (- 0 b) d) (* a c)))) (- 1 a))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.006249352
    },
    "speedup": 11.749374655164248,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (pow (/ 0 0) (pow (+ a (* (- (- -1 a) a) a)) (- (pow d 0) 1))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12911)",
      "output_term": "(- a (/ (/ 0 0) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.598382246
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ 0 0) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.05076338
    },
    "speedup": 11.787675406956748,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (/ (pow a 0) (pow (/ (pow a a) (+ (/ -1 0) -1)) 0)) (pow b (pow d 0))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (- 1 b) d)",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.021405013
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ d b))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.001815821
    },
    "speedup": 11.788063360870924,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ a 0) (+ (- a 0) (/ (- (- (* -1 -1) a) (- -1 a)) (* 1 b)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10587)",
      "output_term": "(+ a (/ 2 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.962227366
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (+ a (/ 2 b))) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.081598004
    },
    "speedup": 11.792290482987795,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- (pow (pow (* (- a (- 0 a)) 0) a) (/ (* 0 (* a (* (pow -1 a) a))) 1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.052541703999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004452127
    },
    "speedup": 11.80148365039901,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (+ 1 (* (/ (/ a 0) (/ (pow (* -1 (pow 1 0)) (pow 1 0)) (pow 1 b))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021501532
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0018211619999999999
    },
    "speedup": 11.806490581288212,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- (+ -1 (pow 1 (pow (* 1 (pow a (+ 0 b))) 1))) (/ (* b 1) 0)) b) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (- (+ -1 (pow 1 (pow a b))) (/ b 0))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.115831248
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (- (pow 1 (pow a b)) (+ 1 (/ b 0)))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.009784247
    },
    "speedup": 11.838544959055103,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (/ a (- a (pow (+ b (- (/ d 1) a)) (+ (/ (* 0 0) e) (* 0 1))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a (- a 1)) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.021158178999999996
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (- a 1)) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.001786668
    },
    "speedup": 11.842255528167515,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 1) (* (- a (* 0 (- (/ a (pow (* 0 a) b)) a))) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.054121943
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.00456125
    },
    "speedup": 11.865594519046313,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* a a) (- (/ 1 (pow 1 (+ b b))) (- (+ (pow 1 a) 0) (- c 0)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ (* a a) (- (/ 1 (pow 1 (+ b b))) (- (pow 1 a) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.18481428
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ (* a a) (+ (/ 1 (pow 1 (+ b b))) (- c (pow 1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.015565181
    },
    "speedup": 11.873570888767691,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (* (- (+ 1 -1) a) (+ -1 (* 0 (- (/ b (pow 1 a)) (+ 0 c))))) e) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* a e)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.7603742990000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a e)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.064000023
    },
    "speedup": 11.880844152196634,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 1 1) (/ a (pow (pow (* (pow (pow 1 (* -1 b)) a) (+ c 1)) (+ -1 -1)) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (pow (pow (* (pow (pow 1 (* -1 b)) a) (+ 1 c)) -2) d)))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.015025628
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (pow (pow (* (pow (pow 1 (- 0 b)) a) (+ 1 c)) -2) d)))",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.001258842
    },
    "speedup": 11.936071405307416,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 a) (- (pow a (/ (/ 0 a) (- (+ a 0) (pow a 0)))) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 a) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.022357993000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 a) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.001869829
    },
    "speedup": 11.957239405314606,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (* a (- (+ (* (pow 0 0) a) a) (* (pow c 0) (pow (+ -1 -1) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ (* a (pow 0 0)) (+ a 0.5))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.047370554999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (- (* a (pow 0 0)) (- -0.5 a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.003951249
    },
    "speedup": 11.988754695034403,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (/ a (+ b 1)) (/ 0 (+ (pow (* (/ b 0) b) 1) (+ 1 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ a (+ b 1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.036836516
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ a (+ b 1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.003052079
    },
    "speedup": 12.069319306610346,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (pow (pow a (/ 1 b)) (- a (+ -1 (pow b (pow 1 (+ c (pow c -1))))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow (pow a (/ 1 b)) (- a (+ -1 (pow b (pow 1 (+ c (/ 1 c))))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.020623297999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow (pow a (/ 1 b)) (- a (+ -1 (pow b (pow 1 (+ c (/ 1 c))))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.001706771
    },
    "speedup": 12.083224990347269,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ 0 (- (+ 0 0) (- 0 (* a (/ (+ (/ a -1) a) (pow a b)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.070467226
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (/ (+ a (/ a -1)) (pow a b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.00582744
    },
    "speedup": 12.092312576362863,
    "weight_simple_diff": -8,
    "weight_complex_diff": -25,
    "depth_diff": -5
  },
  {
    "base_term": "(- (pow (* (/ a (+ a a)) c) (+ (/ (- (pow (+ d 1) 0) (* d 0)) 0) 1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (* (/ a (+ a a)) c) (+ 1 (/ 1 0))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.019202077
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (* (/ a (+ a a)) c) (+ 1 (/ 1 0))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.001584535
    },
    "speedup": 12.118430328140434,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (pow 1 1) 0) (pow (/ a (pow (pow -1 b) (+ (pow 0 a) (/ a b)))) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (pow (pow -1 b) (+ (pow 0 a) (/ a b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.010441961000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (pow (pow -1 b) (+ (pow 0 a) (/ a b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.000861445
    },
    "speedup": 12.121448264253669,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- 0 1) (pow (pow 1 a) (pow 1 (- (pow (pow b 0) b) c)))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (pow (pow 1 a) (pow 1 (- (pow 1 b) c)))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.007874065
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (pow (pow 1 a) (pow 1 (- (pow 1 b) c)))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.000647928
    },
    "speedup": 12.152685174895975,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (+ (pow b (/ (* (pow b (pow (/ 1 1) b)) (- a 0)) c)) d)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ (pow b (/ (* a (pow b (pow 1 b))) c)) d)) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.020199204000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ (pow b (/ (* (pow b (pow 1 b)) a) c)) d)) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.001660511
    },
    "speedup": 12.164450581778743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (pow -1 a) (pow a (+ b (/ (pow -1 (pow (pow 0 b) d)) (+ 1 1))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (pow -1 a) (pow a (+ b (* (pow -1 (pow (pow 0 b) d)) 0.5)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.012296834999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (pow -1 a) (pow a (+ b (/ (pow -1 (pow (pow 0 b) d)) 2)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.001007103
    },
    "speedup": 12.210106612729778,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (/ 1 0) (pow a a)) (* -1 (/ (- (- (/ (pow -1 0) a) a) (+ 0 a)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ 1 0) (pow a a)) (+ (/ 1 a) (* a -2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 4,
      "simplification_time": 0.037551031
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (/ 1 0) (pow a a)) (- 0 (/ (- (/ 1 a) (+ a a)) -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.003047093
    },
    "speedup": 12.323559208727794,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (* (pow a (+ a 1)) (pow (pow b -1) (/ (+ a (* a (/ a 0))) b))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (pow a (+ a 1)) (pow (/ 1 b) (/ (* a (+ 1 (/ a 0))) b))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.029755973
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (pow a (+ a 1)) (pow (/ 1 b) (/ (+ a (* a (/ a 0))) b))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.002409675
    },
    "speedup": 12.348542023301897,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 (* -1 0)) (/ a (- a (/ c (/ (+ d c) (+ (+ 1 a) b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ a (- a (/ c (/ (+ c d) (+ 1 (+ a b)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.038156892000000005
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ a (- a (/ c (/ (+ c d) (+ a (+ 1 b)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.003089509
    },
    "speedup": 12.350471223744616,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (- a a) (* (/ (pow a (- (pow 1 -1) c)) (pow (+ d 1) 1)) d)) (pow b a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow b a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.022792983
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow b a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.001844657
    },
    "speedup": 12.356217443134414,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- -1 (pow (pow 1 1) (/ (+ a (* -1 0)) (/ (* (pow 1 b) c) (/ c b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (pow 1 (/ a (/ (* (pow 1 b) c) (/ c b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.022933157000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (pow 1 (/ a (/ (* (pow 1 b) c) (/ c b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.00185553
    },
    "speedup": 12.3593566258697,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (pow 0 (pow (/ (* (/ (pow (+ a 0) 0) (- -1 a)) b) -1) (- 0 -1))) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (pow 0 (* (/ 1 (- -1 a)) (* -1 b)))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.027569679
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (pow 0 (/ (* (/ 1 (- -1 a)) b) -1))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.0022175320000000004
    },
    "speedup": 12.432595786667338,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (/ (pow (* (* 1 (/ (- (* a -1) 1) (* a 0))) b) b) 1) 1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (* (/ (+ -1 (* a -1)) 0) b) b) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.100176042
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ (pow (* (/ (- -1 a) 0) b) b) 1) 1) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.008055694
    },
    "speedup": 12.435432875181208,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow (+ a (/ (/ (* (- 0 (* (/ a 1) 1)) a) (pow a a)) b)) b) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.129769355
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010408091999999999
    },
    "speedup": 12.468121438588362,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow (pow a (- (- -1 a) b)) b) (pow a (pow -1 -1))) b)",
    "input_weight_simple": 17,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow (pow a (- (- -1 a) b)) b) (/ 1 a)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.018049638
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (pow (pow a (- -1 (+ a b))) b) (/ 1 a)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.001445576
    },
    "speedup": 12.48612179504917,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 0) (pow a (+ b (- (/ a (- -1 (* b (pow 0 -1)))) c))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow a (+ b (- (/ a (- -1 (* b (pow 0 -1)))) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.023453078999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow a (- (/ a (- -1 (* b (pow 0 -1)))) (- c b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.0018738359999999998
    },
    "speedup": 12.516078781707684,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow a a) (+ a (/ a (* (+ 0 (pow b (+ (* 1 -1) 1))) 0))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a a) (+ a (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.012537489999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a a) (+ a (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.001001612
    },
    "speedup": 12.517312092906232,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ 0 (pow a (pow (pow (* 0 (- 1 (* (pow a a) b))) b) 1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013483927000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001076863
    },
    "speedup": 12.521487877288013,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (pow -1 (- (- 1 a) (+ (/ (pow (+ a (+ 1 a)) (pow a c)) (- b 0)) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow -1 (+ 2 (* -1 (+ a (/ (pow (+ 1 (+ a a)) (pow a c)) b))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 10,
      "simplification_time": 0.133576195
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow -1 (- 1 (+ (/ (pow (+ 1 (+ a a)) (pow a c)) b) (+ -1 a)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.010667606
    },
    "speedup": 12.521665592073798,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (+ (pow (/ a (* (+ (- (/ (+ a -1) b) (* 1 1)) (pow 1 b)) 0)) 1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (+ a c))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.058880223
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (+ a c))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.004702014
    },
    "speedup": 12.522341064913887,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (pow (* 1 1) a) (pow -1 (/ 0 (* a (- (/ (pow 0 c) 0) (/ -1 1)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow 1 a) -1))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.023540402999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow 1 a) 1))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.0018768599999999997
    },
    "speedup": 12.542439500015984,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (/ (/ (/ (pow (* 0 (/ a 1)) (- (/ -1 1) a)) a) b) c)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (/ (pow 0 (- -1 a)) a) b) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.049898867
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (/ (pow 0 (- -1 a)) a) b) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.003976256
    },
    "speedup": 12.549208853755895,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (/ 0 (pow -1 (pow 1 (- (/ 0 1) (/ b (pow a a)))))) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- 0 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.028661633
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a c))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.0022779009999999997
    },
    "speedup": 12.58247526999637,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ a (pow (/ -1 (pow 0 (pow a c))) (/ -1 (pow (+ (* 0 a) 1) (- c 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (pow (/ -1 (pow 0 (pow a c))) (/ -1 (pow 1 c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.020525378
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (pow (/ -1 (pow 0 (pow a c))) (/ -1 (pow 1 c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.001628765
    },
    "speedup": 12.601804434648338,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 a) (pow 1 (/ -1 (pow a (pow (/ (/ (+ -1 a) 1) a) (+ a c))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021587097
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0017117820000000002
    },
    "speedup": 12.610891456972906,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (+ (* a a) (/ (pow 0 (+ b a)) (- a 0)))) b)",
    "input_weight_simple": 17,
    "input_weight_complex": 33,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* b (- a (+ (* a a) (/ (pow 0 (+ a b)) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.15536967
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* b (- a (+ (* a a) (/ (pow 0 (+ a b)) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.012284738
    },
    "speedup": 12.647373513378957,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ 0 (/ (pow -1 a) (- (* (- (/ 1 a) -1) 0) (pow a 1)))) (- b b)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.030079988
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002377945
    },
    "speedup": 12.649572635195517,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow a (/ a (+ (/ (* (- (- (* -1 1) b) (pow -1 c)) 1) -1) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow a (/ a (+ (+ 1 b) (+ c (pow -1 c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.05263622799999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow a (/ a (+ c (/ (- (- -1 b) (pow -1 c)) -1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004157774
    },
    "speedup": 12.659713587126186,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow (+ (/ (- 1 -1) (/ (/ (- (* a 0) 1) 1) (pow b b))) b) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (+ b (/ 2 (/ -1 (pow b b)))) a) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.011882410999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (+ b (/ 2 (/ -1 (pow b b)))) a) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.00093602
    },
    "speedup": 12.694612294609088,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (+ a (pow -1 (/ (/ 1 (/ (- (* (* 1 -1) -1) a) 0)) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ a (pow -1 (/ (/ 1 (/ (- 1 a) 0)) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.009616719
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ a (pow -1 (/ (/ 1 (/ (- 1 a) 0)) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.0007559509999999999
    },
    "speedup": 12.721352309871936,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (* (pow 0 (- (* (pow 1 (+ (* (/ a 0) a) (- 1 0))) a) a)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a (pow 0 (- (* a (pow 1 (+ 1 (* a (/ a 0))))) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.020089987
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a (pow 0 (- (* a (pow 1 (+ 1 (* a (/ a 0))))) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.0015744980000000001
    },
    "speedup": 12.759614175438774,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow -1 (pow (pow 0 0) (- a (/ (+ (pow (- 1 a) -1) (- 0 a)) (pow b -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow -1 (pow (pow 0 0) (- a (/ (+ (- 0 a) (/ 1 (- 1 a))) (/ 1 b))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.128587124
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow -1 (pow (pow 0 0) (- a (/ (- (/ 1 (- 1 a)) a) (/ 1 b))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.010054
    },
    "speedup": 12.789648299184403,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (pow (+ (/ a (pow (pow (pow a -1) (/ a c)) (- 1 -1))) 0) b) a) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow (/ a (pow (/ 1 a) (* (/ a c) 2))) b) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.024407522
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow (/ a (pow (pow (/ 1 a) (/ a c)) 2)) b) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.001898874
    },
    "speedup": 12.85368170821234,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (- a (/ -1 (/ 1 (pow (/ 0 b) (pow 1 (pow -1 (+ 1 b))))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012412181999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000965348
    },
    "speedup": 12.857727990320589,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* 0 (* (* a b) (* (- a (/ (pow a 0) (- d 1))) d))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.208272448
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.016084531
    },
    "speedup": 12.948618023117989,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 a) (- (pow a 0) (pow (+ (- (/ a (- b -1)) a) 1) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (- 1 (pow (+ 1 (- (/ a (+ 1 b)) a)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.024205260000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (- 1 (pow (+ 1 (- (/ a (+ 1 b)) a)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.0018486709999999999
    },
    "speedup": 13.093330289705419,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 0 -1) (- a (pow (- 0 (pow (- (/ (/ a -1) a) a) (+ a b))) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (- -1 a) (+ a b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.033517374999999995
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ a (pow (- (/ (/ a -1) a) a) (+ a b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.002555706
    },
    "speedup": 13.114722507205443,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (* (* (+ -1 a) -1) b) (+ 0 (pow (/ (- b a) 0) a)))",
    "input_weight_simple": 17,
    "input_weight_complex": 35,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ b (* -1 (* a b))) (pow (/ (- b a) 0) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 5,
      "simplification_time": 0.241497533
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (- 1 a) b) (pow (/ (- b a) 0) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.018320646
    },
    "speedup": 13.181714935161128,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 0 a) (/ (- a (- (* (+ (/ (+ 1 1) 0) (pow -1 a)) -1) (pow 0 b))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (+ (pow -1 a) (+ (/ 2 0) (+ a (pow 0 b)))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.580896145
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (+ (/ 2 0) (+ a (+ (pow -1 a) (pow 0 b)))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.044019166
    },
    "speedup": 13.19643686570527,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (+ 0 1) (- (pow (pow (* a (pow a 1)) -1) -1) (* -1 (/ -1 (+ -1 -1))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (/ 1 (/ 1 (* a a))) 1.5) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.032215074
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (- (/ 1 (/ 1 (* a a))) -1.5) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.002426793
    },
    "speedup": 13.274751493019801,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (- (/ 0 (pow (* 0 (/ 0 a)) (+ (/ a (pow (* 0 -1) -1)) (/ 1 b)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.013443247
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001006824
    },
    "speedup": 13.352132050884764,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (* (pow a a) (+ b (+ (pow 0 -1) (/ (pow b 1) 0)))) -1) (* a a))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (* (pow a a) (+ (pow 0 -1) (+ b (/ b 0))))) (* a a))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.057906125
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (* (pow a a) (+ b (+ (pow 0 -1) (/ b 0))))) (* a a))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.00432619
    },
    "speedup": 13.385016608147124,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (* a (+ (pow (/ a 1) b) (- (- a (- 1 -1)) (pow (pow 1 b) 1)))) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* a (+ (pow a b) (- (+ a -2) (pow 1 b)))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.140839463
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (* a (+ (pow (/ a 1) b) (- a (+ 2 (pow 1 b))))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.010520621999999999
    },
    "speedup": 13.386990141837623,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 1 (pow a (* (/ a 0) (pow (+ b -1) (/ (* (pow a 1) -1) (+ a -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (* (/ a 0) (pow (+ b -1) (/ (* a -1) (+ a -1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.021179989
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (* (/ a 0) (pow (+ b -1) (/ (- 0 a) (+ a -1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.001578938
    },
    "speedup": 13.414072623497566,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* (+ a 1) (/ (pow a (/ 0 (pow 0 -1))) (pow a (- -1 (pow b 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* (+ 1 a) (/ 1 (pow a -2))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.021223064
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* (+ 1 a) (/ 1 (pow a -2))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.00158178
    },
    "speedup": 13.41720340376032,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* a (pow (+ c c) (pow (pow (/ -1 (/ (pow 0 0) -1)) 0) (* (- 0 0) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (* c -2)))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.086098853
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (+ c c)))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.006398834
    },
    "speedup": 13.455397186424902,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (- a (* a a))) (- (/ -1 1) (pow (pow (pow (- a 1) -1) (- 1 -1)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (- a (* a a))) -2)",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.019993663
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (- a (* a a))) -2)",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.001484192
    },
    "speedup": 13.471075844634655,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 0 (/ (+ -1 a) (/ (* a 1) (+ (* a (/ -1 b)) -1)))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.12153937299999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009016821
    },
    "speedup": 13.479182186271636,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ (/ (pow (+ 0 a) b) (pow (pow b (* (+ (/ a 0) 1) (+ c a))) 0)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.05470825499999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004046278
    },
    "speedup": 13.52063674319955,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 0 a) (pow (- b 0) (/ (+ a -1) (- (* c (+ c 0)) (- -1 a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 a) (pow b (/ (+ a -1) (+ a (+ (* c c) 1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.08520119300000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 a) (pow b (/ (+ a -1) (+ a (+ (* c c) 1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.006298799000000001
    },
    "speedup": 13.526577526922196,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a a) (- (* 0 b) (/ (/ (/ (pow (+ c c) -1) b) (- 1 0)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a a) (- 0 (/ (/ 1 (+ c c)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.017078602000000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a a) (- 0 (/ (/ (/ (/ 1 (+ c c)) b) 1) 1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.001261167
    },
    "speedup": 13.541903649556325,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(pow -1 (- (/ (+ 1 (pow (pow (- 1 a) (+ b a)) (pow (- c 0) a))) e) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ 1 (/ (+ 1 (pow (pow (- 1 a) (+ a b)) (pow c a))) e)))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.026631214
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ 1 (/ (+ 1 (pow (pow (- 1 a) (+ a b)) (pow c a))) e)))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0019545780000000002
    },
    "speedup": 13.625045406220677,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ (- (pow (/ (- (* (+ a b) 1) 0) a) a) 1) -1) c) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (+ (pow (/ (+ a b) a) a) -2) c) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.13300208
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (- (pow (/ (+ a b) a) a) 2) c) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.0097416
    },
    "speedup": 13.653001560318634,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (pow -1 (+ (/ a (* a a)) (- a (/ (pow (pow 1 0) c) -1)))) c) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow (pow -1 (+ a (+ (/ a (* a a)) (pow 1 c)))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.025290713
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (pow -1 (+ (/ a (* a a)) (- a (/ (pow 1 c) -1)))) c) -1)",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.0018516879999999998
    },
    "speedup": 13.658193496960612,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (+ (* a a) -1) b) (/ (/ -1 c) (/ (* e (+ (/ d c) 0)) (- -1 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (+ (* a a) -1) b) (/ (/ -1 c) (* e (* (/ d c) -0.5))))",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 6,
      "simplification_time": 0.055027045000000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (* a a) (+ b 1)) (/ (/ -1 c) (/ (* e (/ d c)) -2)))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 6,
      "simplification_time": 0.00402393
    },
    "speedup": 13.674950856500983,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 1 (/ (+ 1 (+ a (/ b (pow (pow (- a 1) b) (- 0 1))))) (+ a 1))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ 1 (+ 1 (* (/ b (/ 1 (pow (+ a -1) b))) (/ 1 (+ 1 a))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.052391003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 1 (/ (+ 1 (+ a (/ b (/ 1 (pow (- a 1) b))))) (+ 1 a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.0038308129999999998
    },
    "speedup": 13.67620998466905,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow (pow (* a (* (+ 0 a) (/ (* (+ a a) a) (pow a b)))) 1) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (* (/ (* a (+ a a)) (pow a b)) (* a a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.091891904
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (* a (* a (/ (* a (+ a a)) (pow a b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.006699553
    },
    "speedup": 13.716124642942596,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- (* (+ (pow a (/ (/ (/ (pow 0 a) a) (+ b 1)) 0)) 0) b) (+ 0 1)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (* b (pow a (/ (/ (/ (pow 0 a) a) (+ b 1)) 0))) -1) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.033251279
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (- (* b (pow a (/ (/ (/ (pow 0 a) a) (+ b 1)) 0))) 1) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.0024238
    },
    "speedup": 13.718656242264215,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ (+ a 1) (pow (/ a (pow (/ (- b a) -1) 0)) (* (+ 0 b) b))) 0) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.09494011899999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.006911376
    },
    "speedup": 13.736789750695083,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a (- (+ (pow a (/ 1 a)) 1) (/ a (* (+ (pow a a) 1) (* 0 1))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a (- (+ 1 (pow a (/ 1 a))) (/ a 0))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.025177961
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a (- 1 (- (/ a 0) (pow a (/ 1 a))))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.0018274940000000003
    },
    "speedup": 13.777315274359312,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 1 0) (/ (- (- -1 1) (* a (/ (pow 0 (+ a a)) (/ 0 1)))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -2 (* a (/ (pow 0 (+ a a)) 0))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.061055103
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -2 (* a (/ (pow 0 (+ a a)) 0))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.004422108
    },
    "speedup": 13.80678694414519,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (* (/ -1 a) (+ (/ (* 0 a) (+ (/ (* 1 -1) 0) (- 1 b))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.05112304
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003694009
    },
    "speedup": 13.83944652002743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ (+ (+ a (pow (- (/ (pow 1 a) a) (+ 1 0)) (- 0 -1))) -1) a) 1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ 1 a) (+ (/ (pow 1 a) a) -2)) 2)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.28311491899999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ (+ (/ (pow 1 a) a) (+ a -2)) a) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.020441841
    },
    "speedup": 13.849776005986936,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (pow a (+ (* a b) (- (/ 1 (pow a -1)) (pow (* (* c b) a) (pow c 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (+ (/ 1 (/ 1 a)) (* (* a b) (+ 1 (* -1 c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.097063857
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (- (/ 1 (/ 1 a)) (* (* a b) (- c 1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.007005482
    },
    "speedup": 13.855414516802698,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* (+ (/ 1 (- 1 (pow (/ 1 (/ (pow 0 0) a)) a))) (* -1 -1)) c) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (/ 1 (- 1 (pow (/ 1 (/ (pow 0 0) a)) a)))) (* c c))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.032672193
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (/ 1 (- 1 (pow (/ 1 (/ (pow 0 0) a)) a)))) (* c c))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.0023515380000000002
    },
    "speedup": 13.8939676926335,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a a) (+ (pow (- 1 0) (- (+ (pow a a) (pow a b)) (pow c b))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a a) (+ a (pow 1 (- (+ (pow a a) (pow a b)) (pow c b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.030523137000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a a) (+ a (pow 1 (- (pow a a) (- (pow c b) (pow a b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.002196589
    },
    "speedup": 13.895697829680474,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* -1 (* a (/ a (/ a (/ (* -1 (pow (/ b 0) -1)) 0))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (/ a (/ a (/ (* -1 (/ 1 (/ b 0))) 0)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.068392789
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (/ a (/ a (/ (/ -1 (/ b 0)) 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.004916909
    },
    "speedup": 13.909712178931926,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (/ (- (/ (pow 0 (pow (/ (/ (/ -1 0) 1) (+ 0 a)) (- a c))) b) 1) c) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (/ (pow 0 (pow (/ (/ -1 0) a) (- a c))) b)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.035836002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- (/ (pow 0 (pow (/ (/ (/ -1 0) 1) a) (- a c))) b) 1) c) 1)",
      "output_weight_simple": 16,
      "output_weight_complex": 49,
      "output_depth": 10,
      "simplification_time": 0.002569358
    },
    "speedup": 13.947453799742972,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(* (* a a) (/ (pow 0 b) (- (- (pow (* -1 1) (/ 1 -1)) (pow a 0)) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (* a a) (/ (pow 0 b) (- -2 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.034154725999999996
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (* a a) (/ (pow 0 b) (- -2 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.0024483269999999997
    },
    "speedup": 13.950230504340311,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (- (- (/ 0 -1) (* (+ (+ (/ (- a a) 0) (+ a 1)) (/ 1 b)) a)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (+ -1 (* -1 (+ (/ 1 b) (+ a (/ 0 0)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.298376633
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (- -1 (+ (/ 0 0) (+ a (/ 1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.021385735000000003
    },
    "speedup": 13.952133653577956,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow 0 (/ (pow a (+ (- (pow b (pow -1 0)) a) (/ -1 (pow b b)))) 0)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (/ (pow a (+ (- b a) (/ -1 (pow b b)))) 0)) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.023065748
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (/ (pow a (+ (/ -1 (pow b b)) (- b a))) 0)) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0016529549999999998
    },
    "speedup": 13.954250418190455,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a (pow (pow (- -1 (+ (/ 1 (* (* b 0) 0)) (pow a a))) a) a)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (pow (- -1 (+ (pow 0 -1) (pow a a))) a) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.017490279
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (pow (pow (- -1 (+ (/ 1 0) (pow a a))) a) a)) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.001251893
    },
    "speedup": 13.971065418530179,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (/ (/ (* 0 -1) (- (- a (pow (* 0 0) (+ a b))) b)) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.021025574
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.001501411
    },
    "speedup": 14.00387635364334,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (* (- (pow -1 a) (- (/ (/ (+ 0 -1) 1) (+ 1 a)) 1)) a) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (pow -1 a) (+ (/ 1 (+ a 1)) 2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.271807574
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow -1 a) (- (/ -1 (+ a 1)) 2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.019380396
    },
    "speedup": 14.02487204079834,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ -1 (pow (pow (* (- a (* (pow 0 (pow 0 a)) b)) 0) 1) (* b a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 (pow 0 (* a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.016270667000000003
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ -1 (pow 0 (* a b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.001157585
    },
    "speedup": 14.055699581456222,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (- (+ 0 a) (/ (* (* (* b (+ 0 -1)) (+ 0 a)) c) -1))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (- a (* a (* b c)))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.310809731
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (- a (/ (* (- 0 b) (* a c)) -1))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.02202689
    },
    "speedup": 14.110468204998526,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* 1 (* (* (/ (* a (/ (+ (pow -1 b) a) 1)) b) b) a)) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11638)",
      "output_term": "(* a (* (+ a (pow -1 b)) (* a c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.92698532
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (* a (/ (+ a (pow -1 b)) 1)) b) (* a (* b c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.065488024
    },
    "speedup": 14.155035735999608,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (+ (pow (+ a b) (+ -1 1)) (- 0 (* (* c (- (- a -1) d)) d))) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (* (* d (- (+ a 1) d)) (* -1 c)) e))",
      "output_weight_simple": 13,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.49648637399999995
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (* c d) (- d (- a -1))) (+ 1 e))",
      "output_weight_simple": 12,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.03502102
    },
    "speedup": 14.176810783923482,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 2
  },
  {
    "base_term": "(pow 1 (pow 1 (/ (/ (pow a a) (* a (* (- (pow b 0) c) c))) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow 1 (/ (/ (pow a a) (* c (* a (- 1 c)))) 0)))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.047646205
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow 1 (/ (/ (pow a a) (* a (- c (pow c 2)))) 0)))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.00335983
    },
    "speedup": 14.181135652696714,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow 0 a) (/ a (* 0 (+ (- b (* (pow (+ a c) -1) a)) (pow (pow b -1) d)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 a) (/ a 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 17,
      "output_depth": 3,
      "simplification_time": 0.033663095000000004
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 a) (/ a 0))",
      "output_weight_simple": 5,
      "output_weight_complex": 17,
      "output_depth": 3,
      "simplification_time": 0.0023676670000000004
    },
    "speedup": 14.217833419986848,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (pow -1 (/ a (/ -1 (+ 0 (+ (/ (- (- 1 0) b) (pow 1 b)) (/ b 1)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow -1 (/ a (/ -1 (+ b (/ (- 1 b) (pow 1 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.056920807999999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow -1 (/ a (/ -1 (+ (/ (- 1 b) (pow 1 b)) (/ b 1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.003992112
    },
    "speedup": 14.258319405868372,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- a (* (+ (+ (pow (* (* (pow a 1) a) 1) (+ 0 a)) c) -1) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (* d (+ (pow (* a a) a) (+ c -1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.158990118
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (+ (pow (* a a) a) (+ c -1)) d))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.011097961
    },
    "speedup": 14.326065661971601,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a b) (/ (- 1 (- (- (pow b -1) (/ (- 0 a) c)) (- (pow 1 d) c))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10327)",
      "output_term": "(* a (* (- 1 (- (- (/ 1 b) (/ (- 0 a) c)) (- (pow 1 d) c))) (pow b -2)))",
      "output_weight_simple": 18,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.922205529
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a b) (/ (- 1 (+ (- (/ 1 b) (pow 1 d)) (- c (/ (- 0 a) c)))) b))",
      "output_weight_simple": 17,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.064328849
    },
    "speedup": 14.3358002410396,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (+ (+ (/ (- -1 (pow (* (pow -1 0) 1) a)) 1) (+ 1 b)) 0) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12113)",
      "output_term": "(+ (* -1 (pow 1 a)) (* b 3))",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.8709725580000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- -1 (pow 1 a)) 1) (+ 1 (* b 3)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.060675011
    },
    "speedup": 14.35471611204158,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (- 0 1) (- -1 a)) (pow (- (* 0 (- (+ (+ 0 b) 0) 0)) b) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (* (pow (- 0 b) a) (+ a 2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.09386012699999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (- -1 a)) (pow (- 0 b) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.006503709999999999
    },
    "speedup": 14.431782321167455,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (/ (* (- 0 a) (- a (pow (/ (+ (pow a 0) 0) (+ 0 b)) (+ 0 b)))) 1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (pow (/ 1 b) b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.049517377
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a (- (pow (/ 1 b) b) a)) 1) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.0034288620000000004
    },
    "speedup": 14.441344387729805,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (/ (pow (- a (+ (pow -1 (/ (- (pow 1 b) -1) (- b b))) -1)) d) -1) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ d (* -1 (pow (- a (+ -1 (pow -1 (/ (+ 1 (pow 1 b)) 0)))) d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 10,
      "simplification_time": 0.029181623
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ d (/ (pow (- a (+ -1 (pow -1 (/ (+ 1 (pow 1 b)) 0)))) d) -1))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.0020127290000000004
    },
    "speedup": 14.498535570362426,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 1 a) (* 1 (* b (+ (* (pow (pow (/ c -1) 1) b) (- a 1)) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* b (* (pow 1 a) (+ -1 (* (pow (* c -1) b) (+ a -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.317751734
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (* (pow (/ c -1) b) (- a 1))) (* (pow 1 a) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.021869541
    },
    "speedup": 14.529419433174205,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- a 1) (* (+ b c) (/ (+ (+ -1 (+ a 0)) (* (* c 1) 1)) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(12453)",
      "output_term": "(+ (* -1 (* c (/ (+ a (+ -1 c)) b))) (* -1 c))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.6998259360000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a -1) (* (+ b c) (/ (+ a (+ -1 c)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.048022024999999996
    },
    "speedup": 14.573020109002071,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ a b) (/ (* b 1) (/ (+ (/ (+ (+ 0 -1) c) (+ d 0)) (* 1 1)) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a b) (/ b (/ (+ 1 (/ (+ -1 c) d)) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.064801677
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a b) (/ b (/ (+ 1 (/ (+ -1 c) d)) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.004433291
    },
    "speedup": 14.617059200490111,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow (pow a a) (/ (- (+ a (/ a (pow (- 1 -1) b))) (pow (/ d a) 0)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (pow a a) (/ (+ (/ a (pow 2 b)) (+ -1 a)) 0)))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.022509051000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (pow a a) (/ (- a (- 1 (/ a (pow 2 b)))) 0)))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.001538855
    },
    "speedup": 14.627142258367424,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (+ 0 (* a (- a (/ (/ (pow (* (* 0 1) -1) (pow -1 a)) (- a c)) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a (- a (/ (/ (pow 0 (pow -1 a)) (- a c)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.030168113
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* a (- a (/ (/ (pow 0 (pow -1 a)) (- a c)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.002060831
    },
    "speedup": 14.638809781102866,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (* (- (+ (+ (- a b) c) a) (/ c (* c (- e 0)))) 1) e) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ (- (+ (- a b) (+ a c)) (/ c (* c e))) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.751755102
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ (- a (+ b (- (/ c (* c e)) (+ a c)))) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.051329866
    },
    "speedup": 14.64556915071627,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (- (- a 0) (/ 0 (* a (/ (- (- (* a 0) b) 0) (- c -1))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.05043958500000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.003443911
    },
    "speedup": 14.646018726964781,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- b (pow (* b c) (- (- -1 (pow (* (/ a 0) -1) (pow 1 a))) d))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- b (pow (* b c) (- (- -1 (pow (* -1 (/ a 0)) (pow 1 a))) d))))",
      "output_weight_simple": 17,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.029752915999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- b (pow (* b c) (- -1 (+ (pow (- 0 (/ a 0)) (pow 1 a)) d)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.002028103
    },
    "speedup": 14.67031802625409,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* 0 (/ (/ a a) -1)) (/ (* b b) (pow b (+ (pow -1 e) 1)))) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 56,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.030658372
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002079206
    },
    "speedup": 14.745230631308296,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (- (/ 0 (- b (/ c -1))) -1) (/ -1 (pow (- (/ (+ -1 -1) b) 1) 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.013637014
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.000924338
    },
    "speedup": 14.753276398893044,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow a (* b (/ (+ a c) (* (* (/ (- d d) 0) (/ 0 1)) (- 1 d))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (* b (/ (+ a c) 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.05895785
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (* b (/ (+ a c) 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.003984647
    },
    "speedup": 14.796254222770548,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (pow a b) (pow (pow b -1) c)) (* d (/ d (* (+ (* (pow b 1) c) 0) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (- (pow a b) (pow (/ 1 b) c)) (* d (/ d (* b c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 5,
      "simplification_time": 0.15255193
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* d (* (- (pow a b) (pow (/ 1 b) c)) (/ d (* b c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.01029985
    },
    "speedup": 14.811082685670181,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ a (* (/ a (pow 0 b)) (- (- (+ (/ (pow 0 a) b) 1) -1) b))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (* (/ a (pow 0 b)) (- (+ (/ (pow 0 a) b) 2) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.32428518
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (* (/ a (pow 0 b)) (- (/ (pow 0 a) b) (+ b -2)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.021878609
    },
    "speedup": 14.822019992221627,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (pow 0 a) (/ (/ 1 a) (+ (pow (pow (pow (/ a -1) a) a) (- b 1)) (pow -1 b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 60,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 a) (/ (/ 1 a) (+ (pow (pow (pow (* a -1) a) a) (- b 1)) (pow -1 b))))",
      "output_weight_simple": 16,
      "output_weight_complex": 45,
      "output_depth": 8,
      "simplification_time": 0.012257582
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 a) (/ (/ 1 a) (+ (pow (pow (pow (/ a -1) a) a) (- b 1)) (pow -1 b))))",
      "output_weight_simple": 16,
      "output_weight_complex": 48,
      "output_depth": 8,
      "simplification_time": 0.000826872
    },
    "speedup": 14.824038061513752,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a 1) (pow (- 0 (* (pow a a) (- (+ (- a 0) -1) a))) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12687)",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.544881406
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.036600212
    },
    "speedup": 14.88738387635569,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ a (pow -1 (+ (pow (pow (pow (+ (/ 1 a) a) a) (+ 0 -1)) -1) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (pow -1 (+ -1 (/ 1 (/ 1 (pow (+ a (/ 1 a)) a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.018653665
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (pow -1 (+ -1 (/ 1 (/ 1 (pow (+ a (/ 1 a)) a)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.00125168
    },
    "speedup": 14.902902499041287,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ a (pow (+ -1 (/ (+ 1 (- (* a a) -1)) (/ 1 a))) (* 0 a))) a) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.057642331000000005
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ a 1) a) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.0038549429999999996
    },
    "speedup": 14.952836137914364,
    "weight_simple_diff": -5,
    "weight_complex_diff": -15,
    "depth_diff": -3
  },
  {
    "base_term": "(pow 0 (- (pow (* (* 1 (/ 0 (- -1 a))) (/ (/ b (+ -1 b)) a)) a) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (pow 0 a) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.05615639
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (pow 0 a) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.003751894
    },
    "speedup": 14.96747775923307,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 1 a) (+ (/ (pow -1 a) (- (/ -1 (+ (* 0 -1) 1)) a)) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 a) (+ -1 (/ (pow -1 a) (- -1 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.022167468
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (/ (pow -1 a) (- -1 a)) (pow 1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.001480511
    },
    "speedup": 14.97284923921538,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (/ 1 a) (- a (/ -1 (+ (pow (* (- b a) c) (- d 1)) 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (pow a -1) (+ a (/ 1 (pow (* (- b a) c) (+ -1 d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.033234494
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ 1 a) (- a (/ -1 (pow (* (- b a) c) (- d 1))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.002217201
    },
    "speedup": 14.989391579744014,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (+ (* -1 1) a) (+ 0 (- -1 (* (+ (* b a) -1) (pow (/ c -1) c))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* c (+ (* (+ -1 (* a b)) (* -1 (pow (* -1 c) c))) (+ a -2)))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.626614764
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* c (+ (+ a -2) (* (pow (/ c -1) c) (- 1 (* a b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.10828083000000001
    },
    "speedup": 15.022185958493298,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- a 1) (pow (* (- (- (/ (/ (- -1 a) -1) b) (/ 1 -1)) a) -1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a -1) (/ 1 (+ a (+ -1 (* (- -1 a) (/ 1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.321574119
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a -1) (- (+ a -1) (/ (/ (- -1 a) -1) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.021331656999999997
    },
    "speedup": 15.074971391111344,
    "weight_simple_diff": 3,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* (+ -1 a) b) (/ (+ 0 (* (+ (* 1 (+ (* c -1) -1)) (/ b c)) a)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (+ -1 a) b) (+ a (* a (+ c (* -1 (/ b c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.8777656869999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ -1 a) b) (/ (* a (+ -1 (- (/ b c) c))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.058018177000000004
    },
    "speedup": 15.129149731815941,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ -1 (/ (pow (- a a) (* (* (pow (pow c -1) 1) (- b -1)) (/ 0 c))) -1)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 (* -1 (pow 0 0))) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.035582724
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ -1 (/ (pow 0 0) -1)) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.002345243
    },
    "speedup": 15.172297284332585,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (- 1 a) (/ (pow (+ -1 (/ (/ 1 (* 0 -1)) (- a a))) a) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ -1 (/ (/ 1 0) 0)) a) (+ -1 (+ a a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.075429362
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (/ (pow (+ -1 (/ (/ 1 0) 0)) a) -1)) (- 1 a))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.0049639079999999995
    },
    "speedup": 15.195560030524339,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (- (- (pow 0 (- (- (- (pow (* a b) a) 1) (/ 1 1)) a)) b) -1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (- (pow 0 (- (+ (pow (* a b) a) -2) a)) b)) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.064363136
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (pow 0 (- (pow (* a b) a) (+ a 2))) (+ b -1)) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.00423372
    },
    "speedup": 15.202501818731518,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(/ (pow (- (pow (/ (+ (pow (+ (/ a a) b) (/ a -1)) (* c c)) 1) 1) 1) b) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (+ -1 (+ (pow (+ b 1) (* a -1)) (* c c))) b) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.018617996999999997
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (- (/ (+ (pow (+ b 1) (/ a -1)) (* c c)) 1) 1) b) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.001221027
    },
    "speedup": 15.247817615826674,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- a (- (* (pow 1 (* 0 (pow 1 (* (+ a 0) a)))) b) a)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (- b a)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.149861095
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (- b a)) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.009788679
    },
    "speedup": 15.309634221328537,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 (/ (- a (* (* b a) -1)) (/ 1 (pow (/ -1 (/ d b)) (* -1 -1))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (/ (* a (+ b 1)) (/ 1 (/ -1 (/ d b))))) 0)",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.205064308
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (/ (+ a (* a b)) (/ 1 (/ -1 (/ d b))))) 0)",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.013332623999999998
    },
    "speedup": 15.380641350119829,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* 1 1) (- (* a b) (- (/ a (pow (+ a 0) (/ a 0))) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (* a b) (- (/ a (pow a (/ a 0))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.175605125
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- (+ b (* a b)) (/ a (pow a (/ a 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.011359294
    },
    "speedup": 15.45915837727239,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (/ 0 a) (pow (/ (+ b b) (pow (+ -1 (/ (- b 1) a)) (+ c e))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.035561074000000005
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002298408
    },
    "speedup": 15.47204586827056,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (* (pow (/ a 0) (pow 0 a)) (+ (+ (+ (pow -1 1) a) (pow 0 b)) b)) b) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (/ a 0) (pow 0 a)) (* b (+ -1 (+ b (+ a (pow 0 b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.39493211500000003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (/ a 0) (pow 0 a)) (* b (+ (pow 0 b) (+ a (- b 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.025511476999999998
    },
    "speedup": 15.480566452502929,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* 0 1) (/ (- (pow (+ 1 (/ a 1)) a) (- (/ (pow b a) a) (* 1 0))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.056640612
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.003650793
    },
    "speedup": 15.514605183038316,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ (/ (* 0 -1) (- a (+ (* (* 1 -1) 0) 0))) (pow a c)) (/ 1 b)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.040801675999999995
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0026249209999999997
    },
    "speedup": 15.543963418327637,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (/ (* 1 -1) 1) a) (- (/ (pow (pow 0 (/ 0 a)) a) (pow a (- a 1))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* -1 a) (/ (pow (pow 0 0) a) (pow a (- a 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 5,
      "simplification_time": 0.024229668000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 a) (/ (pow (pow 0 0) a) (pow a (- a 1))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.0015526110000000002
    },
    "speedup": 15.605755723745355,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (/ (/ 1 (* 0 (- (pow (+ a b) (/ -1 -1)) (pow a a)))) b)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (/ 1 0) b)) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.025484106000000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ (/ 1 0) b)) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.0016320850000000001
    },
    "speedup": 15.614447776923384,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* (/ 1 0) (/ (+ (- 0 1) 0) (pow (* a (* a a)) (- (pow b 0) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (/ 1 0) (/ 1 (pow (* a (* a a)) (- 1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.020800564
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (/ 1 0) (/ -1 (pow (* a (* a a)) (- 1 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.0013287989999999999
    },
    "speedup": 15.653657174636647,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow -1 (* a (* (+ (+ a b) (pow (pow (/ -1 0) -1) (pow 1 0))) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow -1 (* -1 (* a (+ a (+ b (/ 1 (/ -1 0))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.10133163399999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow -1 (- 0 (* a (+ (+ a b) (/ 1 (/ -1 0)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.006458902000000001
    },
    "speedup": 15.688678044658362,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (/ 0 a) (pow 0 (pow (+ b (pow (- (/ 1 a) (pow -1 0)) 1)) 1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025114118999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0015855180000000002
    },
    "speedup": 15.839693399885713,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (+ a (* -1 (pow (+ (+ (/ (- a -1) a) (+ 0 -1)) 0) b))) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12128)",
      "output_term": "(/ (+ a (+ -1 (* -1 (pow (/ 1 a) b)))) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.750676527
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (+ a -1) (pow (+ -1 (/ (+ a 1) a)) b)) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.04737601999999999
    },
    "speedup": 15.845073668070896,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (pow (* (/ 1 a) (/ b 1)) (/ (+ (/ -1 (- 0 -1)) b) (pow b a))) c) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow (* (/ 1 a) b) (/ (+ b -1) (pow b a))) c) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.01784074
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow (* (/ 1 a) (/ b 1)) (/ (+ b -1) (pow b a))) c) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 6,
      "simplification_time": 0.001125582
    },
    "speedup": 15.850235700286609,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ -1 (* (/ -1 a) (+ (- (- (+ 1 1) -1) b) (+ 0 a)))) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (* (/ 1 a) (+ b -3)) -2) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.342165069
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ -1 (* (/ -1 a) (+ a (- 3 b)))) 1) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.021554512000000005
    },
    "speedup": 15.874405739271662,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(/ 0 (- (/ (- (* a a) (pow (/ (+ (/ 0 b) -1) (/ -1 b)) (/ -1 a))) -1) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.026629583000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0016758279999999999
    },
    "speedup": 15.89040343042365,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (- (pow a (- 1 (pow (- (/ a (- (pow a 0) b)) (* 1 1)) -1))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- (pow a (- 1 (/ 1 (+ -1 (/ a (- 1 b)))))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.013690663999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- (pow a (- 1 (/ 1 (- (/ a (- 1 b)) 1)))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.000861491
    },
    "speedup": 15.891824754988733,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (+ (- (- a 0) (pow 0 a)) -1) (- a a)) (* a 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 28,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10083)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.445312473
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.028016067999999998
    },
    "speedup": 15.894895493543206,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a a) (* (+ a (/ (* (pow (- (* b b) a) (pow 0 -1)) (+ a b)) 0)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ a (/ (* (pow (- (* b b) a) (pow 0 -1)) (+ a b)) 0))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.024365518
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ a (/ (* (pow (- (* b b) a) (pow 0 -1)) (+ a b)) 0))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.0015324409999999998
    },
    "speedup": 15.89980821447612,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (pow a (pow -1 (/ (* (/ a b) (+ (/ -1 (/ b b)) 0)) d))))",
    "input_weight_simple": 19,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow -1 (/ (* -1 (/ a b)) d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.034993876
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow -1 (/ (- 0 (/ a b)) d)))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.0021996
    },
    "speedup": 15.909199854519004,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ (/ (* (* (- (* (/ -1 0) a) a) (/ a -1)) 0) b) b) 0) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.079982975
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005026566
    },
    "speedup": 15.912051090147827,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (- a (+ (/ 1 (/ (pow a 1) a)) a)) (/ (- 1 b) b)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 (+ -1 (/ 1 b))) -1)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.030501187
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow -1 (/ (- 1 b) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.001913311
    },
    "speedup": 15.941573011392293,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 1 (* (/ (- (/ a -1) 1) (/ (+ (- 0 (/ -1 1)) a) a)) -1)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ -1 (* a -1)) (+ 1 (/ 1 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.07841202
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (- (/ a -1) 1) (/ (+ 1 a) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.004908121
    },
    "speedup": 15.975975327421635,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (- (/ 1 (* -1 0)) (pow a (* a (+ (- a 1) -1)))) -1) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (* a (+ a -2))) (* -1 (/ 1 0)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.03511175
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ 1 0) (pow a (* a (- a 2)))) -1)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.0021899379999999998
    },
    "speedup": 16.033216465488977,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (/ (/ a (pow (* (- -1 (* (* 0 1) a)) (* 1 1)) c)) (- c a)) -1) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.020957236
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001306186
    },
    "speedup": 16.04460314227836,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (+ (* (* a a) (+ (/ (+ (/ b b) 1) (* 1 1)) a)) (pow a 1)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (* a c) (+ 1 (* a (+ a 2)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.18600135300000004
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (+ 1 (* a (+ a 2))) (* a c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.011590615
    },
    "speedup": 16.047582721020415,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- (+ a 0) (- -1 (pow (* a (pow (- 1 a) 0)) (pow a a)))) a) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (* a (+ a (pow a (pow a a))))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.49239951600000004
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (+ 1 (+ a (pow a (pow a a))))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.030591777
    },
    "speedup": 16.095812806166833,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (/ (- 0 1) -1) (* 1 (* a (- (pow (/ (/ -1 a) a) (- 1 a)) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (+ (- 1 a) (pow (* -1 (pow a -2)) (- 1 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.329055487
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (- (pow (/ (/ -1 a) a) (- 1 a)) a)) (- 1 a))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.020430274999999998
    },
    "speedup": 16.106268124144194,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ (- 1 (pow (+ 1 0) (/ 0 (- (* 0 (- a a)) (* 0 a))))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.033440758
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002070365
    },
    "speedup": 16.152107478632995,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow 1 (pow (/ (/ a (- (* (+ 1 (pow a 1)) (pow 0 0)) (/ a a))) 1) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018891572
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001167981
    },
    "speedup": 16.174554209357858,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (* b (+ c d)) (+ d (/ 1 (/ (pow 0 (pow (/ e b) -1)) (+ 1 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (/ 1 (* (pow 0 (/ 1 (/ e b))) 0.5)) (+ d (* b (+ c d)))))",
      "output_weight_simple": 18,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.065926759
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (* b (+ c d)) (+ d (/ 1 (/ (pow 0 (/ 1 (/ e b))) 2)))))",
      "output_weight_simple": 18,
      "output_weight_complex": 47,
      "output_depth": 9,
      "simplification_time": 0.004074848000000001
    },
    "speedup": 16.178949251603985,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ 1 a) (* a (* a (- 0 (* b (+ (pow (pow b e) b) 1))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a (* b (* (+ 1 (pow (pow b e) b)) (* a a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.587825986
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (* (- -1 (pow (pow b e) b)) (* a (* a b))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.03623934
    },
    "speedup": 16.22065926145454,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (- a (pow -1 (/ (/ (pow -1 (+ (/ (* 0 1) 1) (- a a))) 1) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (pow -1 (/ 1 a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.024715461
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (pow -1 (/ 1 a))))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.001521939
    },
    "speedup": 16.239455720630065,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (- -1 a) (+ (pow (+ 0 (/ (+ -1 (pow 1 a)) a)) 0) b)) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 b) (- -1 a))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.14833246
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- -1 a) (+ 1 b))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.009081969
    },
    "speedup": 16.33263227390448,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- -1 (/ (pow (/ a (pow (* a (- 0 (pow b -1))) b)) b) c)) (+ 1 c))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 (/ (pow (/ a (pow (* -1 (* a (pow b -1))) b)) b) c)) (+ c 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 10,
      "simplification_time": 0.032698130000000006
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 (/ (pow (/ a (pow (- 0 (/ a b)) b)) b) c)) (+ c 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.001999184
    },
    "speedup": 16.355738141161595,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ a (pow (* -1 (+ (/ a a) (/ (/ (+ 1 (* b 1)) (- b 1)) (pow -1 c)))) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.133967452
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.008189297
    },
    "speedup": 16.358846430896325,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ -1 1) (* -1 0)) (/ 0 (* -1 (- 1 (/ (+ (/ a b) 1) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.02729045
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.001666445
    },
    "speedup": 16.376448067592992,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a 1) (/ (+ a (/ a (pow (+ (pow (pow b a) b) 0) b))) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (+ a (/ a (pow (pow (pow b a) b) b))) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.075691274
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (+ a (/ a (pow (pow (pow b a) b) b))) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.0046171680000000005
    },
    "speedup": 16.393441607496197,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow 0 (/ a (+ a (pow (pow (pow a -1) (/ (+ b -1) -1)) b)))) (/ (pow 1 0) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (/ a (+ a (pow (pow (/ 1 a) (* -1 (+ -1 b))) b)))) (/ 1 c))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.018356461
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 (/ a (+ a (pow (pow (/ 1 a) (/ (+ -1 b) -1)) b)))) (/ 1 c))",
      "output_weight_simple": 16,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.0011114789999999999
    },
    "speedup": 16.515346668717992,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ -1 (/ 1 (* a 0))) (- (/ (- (pow 1 a) -1) 1) (+ a (* (pow 1 -1) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 (/ 1 0)) (+ 1 (+ (pow 1 a) (* a -2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.176216703
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 (/ 1 0)) (- (/ (+ 1 (pow 1 a)) 1) (+ a a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.010551416999999999
    },
    "speedup": 16.700761897667395,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (pow (* (/ 0 (/ (- a (* (* a a) a)) (pow 1 a))) 0) -1) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 0 -1))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.077855038
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 0 -1))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.00466019
    },
    "speedup": 16.70640853699098,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ a (- (pow (* (/ (/ (+ 1 1) 1) (pow a 0)) (/ a -1)) -1) a)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ -1 (/ a (- (/ 1 (* a -2)) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.016264562
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ a (- (/ 1 (* 2 (/ a -1))) a)) 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.00097269
    },
    "speedup": 16.721218476595833,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* a (* (pow 1 b) (+ (/ (- (- b c) (* a e)) (pow c 0)) b))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 b) (* a (+ b (- (- b c) (* a e)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.466691552
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 b) (* a (+ b (/ (- b (+ c (* a e))) 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.027904367
    },
    "speedup": 16.724677968864157,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(* (- (/ a (/ (+ 1 (pow -1 -1)) b)) (pow (+ c 1) -1)) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ a 0) (/ 1 (+ 1 c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.029314596999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ a 0) (/ 1 (+ 1 c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.001745617
    },
    "speedup": 16.793258200395616,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a -1) (* (/ b (/ (- c c) -1)) (+ a (+ -1 -1))))",
    "input_weight_simple": 17,
    "input_weight_complex": 31,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* (/ b 0) (+ a -2)) 1))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.096684908
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a 1) (* (/ b 0) (+ a -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.0057534000000000005
    },
    "speedup": 16.80482983974693,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (pow -1 (pow (/ -1 1) (pow (/ (/ 0 (pow (* a 0) a)) a) (+ (- a 1) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (pow -1 (pow 0 (+ (+ a -1) c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.029364552999999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow -1 (pow -1 (pow 0 (+ (- a 1) c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.0017469830000000001
    },
    "speedup": 16.808722809552236,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (/ (/ (pow -1 1) (* (/ (* (- 0 0) -1) (- 0 a)) (pow a -1))) a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ -1 0) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.022776259
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ (/ -1 0) a) 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.0013544960000000002
    },
    "speedup": 16.81530178014553,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow (pow -1 (- (* -1 -1) (/ a (* (- (* a a) 1) (+ -1 1))))) -1) (pow a a))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (pow -1 (- 1 (/ a 0)))) (pow a a))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.020761098999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (pow -1 (- 1 (/ a 0)))) (pow a a))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.001233769
    },
    "speedup": 16.827379355454706,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (- (pow (/ a 1) (- a (+ 1 a))) (pow (+ -1 (/ c (/ (+ e b) d))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- (/ 1 a) (pow (+ -1 (/ c (/ (+ e b) d))) a)))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.032263359
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- (/ 1 (/ a 1)) (pow (+ -1 (/ c (/ (+ e b) d))) a)))",
      "output_weight_simple": 16,
      "output_weight_complex": 43,
      "output_depth": 8,
      "simplification_time": 0.001915269
    },
    "speedup": 16.845340785028107,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (- (pow a 0) 1) (/ 1 (/ -1 (/ (* (pow (pow -1 b) 1) (+ c b)) -1)))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.040398647
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002394017
    },
    "speedup": 16.874837146102138,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (pow b -1) (pow (* 0 (+ a b)) (/ b (* (+ 0 (- -1 b)) (- b d))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ 1 b) (pow 0 (/ b (* (- -1 b) (- b d))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.24834467
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ 1 b) (pow 0 (/ b (* (+ b 1) (- d b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.014709464
    },
    "speedup": 16.883325592285345,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* (- a (- (* a (- b c)) (- (/ (pow 0 (pow b -1)) b) (pow -1 -1)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- a (- (* a (- b c)) (+ 1 (/ (pow 0 (/ 1 b)) b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.479057793
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 (+ a (- (/ (pow 0 (/ 1 b)) b) (* a (- b c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.028332565
    },
    "speedup": 16.90838062138038,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 0 (/ (pow (- a (pow (/ a b) (* (pow b b) b))) b) a)) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.013827230999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 0.000815154
    },
    "speedup": 16.962722381292366,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a a) (/ a (- (- (pow (* a a) (+ b c)) b) (/ d (/ -1 a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.034725881
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002045761
    },
    "speedup": 16.97455421234445,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (/ -1 (/ a (/ (* (+ (pow (pow c -1) b) (* -1 -1)) (/ 0 e)) e))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ -1 (/ a 0)) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.029125719999999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ -1 (/ a 0)) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.001712698
    },
    "speedup": 17.00575349536229,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (* (+ (/ 1 (/ (/ (/ a (pow (+ a a) a)) -1) b)) a) (pow -1 (pow b 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* -1 (+ a (/ 1 (/ (* -1 (/ a (pow (+ a a) a))) b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.047003337
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- 0 (+ a (/ 1 (/ (/ (/ a (pow (+ a a) a)) -1) b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 10,
      "simplification_time": 0.002760817
    },
    "speedup": 17.025154872633717,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (/ (- (pow a (/ (+ a (/ (+ -1 -1) 1)) (+ a a))) 1) -1) 1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.020046420000000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001172724
    },
    "speedup": 17.093894215518745,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* (pow a 1) (pow b (* a (* (/ (* c (* b 1)) -1) (pow b a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (pow b (* c (* a (* (pow b a) (* b -1)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.132514313
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (pow b (* (/ (* b c) -1) (* a (pow b a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.007750605
    },
    "speedup": 17.097286340872746,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (* (pow a (+ (/ (/ a (* 0 (/ -1 c))) (+ d -1)) a)) a) a) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (* e (+ -1 (pow a (+ a (/ (/ a 0) (+ -1 d)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.083210171
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- (pow a (+ a (/ (/ a 0) (+ -1 d)))) 1) (* a e))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.004866241
    },
    "speedup": 17.099475961013848,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* 0 (* a (+ a (+ (/ (/ (pow (+ a 1) b) (/ c d)) d) b)))) (* -1 d))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* d -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.078740722
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- 0 d))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.004604513
    },
    "speedup": 17.100770917575865,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a 0) (pow (- 1 (pow 0 (/ (/ (* b a) (- b 1)) (- b -1)))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 1 (pow 0 (/ (/ (* a b) (+ b -1)) (+ 1 b)))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.046902403
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (- 1 (pow 0 (/ (/ (* a b) (- b 1)) (+ 1 b)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.002737468
    },
    "speedup": 17.133498181531255,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 0 (* 1 0)) (* a (* (+ b c) (/ (- (/ (* 1 c) e) 0) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (* (+ b c) (/ c e))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.09757997499999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (* (+ b c) (/ (/ c e) 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.0056883079999999996
    },
    "speedup": 17.15448161386479,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (+ (+ (- 0 (- 1 (pow (pow (/ -1 (* 0 a)) (- a c)) (/ -1 a)))) 0) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -1 (pow (pow (/ -1 0) (- a c)) (/ -1 a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.082980774
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow (pow (/ -1 0) (- a c)) (/ -1 a)) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.0048001039999999995
    },
    "speedup": 17.287286692121672,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* 0 (pow 1 (* a (/ (pow (pow -1 a) (+ (pow b 1) 1)) (- (pow a -1) b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.021570538
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001247461
    },
    "speedup": 17.291553002458592,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (- a a) -1) (pow (pow (pow 0 (+ (/ (/ (/ b -1) c) -1) (- d b))) 1) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 (+ (* b (/ 1 c)) (- d b))) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.052906416
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 (+ (/ (/ (/ b -1) c) -1) (- d b))) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.003058346
    },
    "speedup": 17.29902895225066,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- a 0) (/ (/ (- -1 -1) (* (pow (pow (/ b 1) c) c) c)) d))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.036388273
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002101619
    },
    "speedup": 17.31440046935244,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a (+ (* (/ b 1) (+ c (+ (pow (- a 1) c) (+ -1 b)))) 1)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.415441948
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.023970940000000003
    },
    "speedup": 17.33106619932301,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow a (* (+ (- 1 b) 0) (+ (* -1 b) (pow (pow (- c a) a) (pow c 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (* (- 1 b) (+ (* b -1) (pow (- c a) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.29639118500000006
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (* (- 1 b) (- (pow (- c a) a) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.017043296
    },
    "speedup": 17.390485091616085,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- (* (* a a) (/ (+ (- a (- (* 0 a) a)) a) (/ (* c 0) d))) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (* a (* a (/ (* a 3) 0))) e))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.9126268999999999
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (* a (/ (* a 3) 0))) (- a e))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.05244398799999999
    },
    "speedup": 17.401935565998528,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ (pow a -1) (+ (/ (- a c) (+ (pow (pow c -1) a) -1)) (pow 0 -1))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 a) (+ (/ (- a c) (+ -1 (pow (/ 1 c) a))) (+ c (pow 0 -1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.226904965
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- a c) (+ -1 (pow (/ 1 c) a))) (+ (pow 0 -1) (+ (/ 1 a) c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.012926853
    },
    "speedup": 17.552993369693304,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(- (+ (* (+ -1 a) (* (pow -1 a) (pow (/ (* 0 b) a) (+ a 1)))) c) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (* (pow -1 a) (* (+ -1 a) (pow 0 (+ a 1)))) c) e)",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.092386525
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ -1 a) (* (pow -1 a) (pow 0 (+ a 1)))) (- e c))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.005257391
    },
    "speedup": 17.572694326900926,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (pow a (/ a (* a (pow (/ (* (- (pow a b) a) (/ 1 1)) b) 1)))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* b (pow a (/ a (* a (/ (- (pow a b) a) b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.07019731900000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* b (pow a (/ a (* a (/ (- (pow a b) a) b)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.003993272
    },
    "speedup": 17.57889745552019,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (* (* a (/ (+ (* (+ (/ 1 0) a) a) (+ a a)) b)) (* 1 0)) c) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b c)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.34987499099999997
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ b c)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.019823386999999998
    },
    "speedup": 17.64960705251832,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (+ a (+ b (/ (pow (* (* 0 1) a) b) (+ (pow (/ b d) c) (+ -1 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ b (+ a (/ (pow 0 b) (+ -1 (pow (/ b d) c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.066430789
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ a (+ b (/ (pow 0 b) (+ -1 (pow (/ b d) c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.003758323
    },
    "speedup": 17.675646558318697,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (- a -1) (+ (+ (pow (/ (+ (* b 0) 0) -1) -1) b) b)) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ (+ a 1) (+ (/ 1 0) (+ b b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.051108083000000006
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ (+ a 1) (+ b (+ b (/ 1 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.002881631
    },
    "speedup": 17.735818014173226,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (+ (+ -1 a) (* (/ (/ (* 0 (- (pow 1 b) b)) b) a) (pow a 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14539)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.0696006439999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.060167109999999996
    },
    "speedup": 17.777165032523584,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (+ (pow a a) (- (* (pow -1 a) (+ (pow 1 1) 1)) (* (pow 1 -1) a))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (+ (pow a a) (- (* (pow -1 a) 2) a)) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.11048438000000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (+ (pow a a) (- (* (pow -1 a) 2) a)) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.006196369
    },
    "speedup": 17.83050363850184,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 0 a) (pow 1 (- 1 (+ b (/ -1 (pow (- (/ c c) -1) (+ c d)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 a) (pow 1 (- 1 (+ b (/ -1 (pow 2 (+ c d)))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.020340585
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 a) (pow 1 (- 1 (+ b (/ -1 (pow 2 (+ c d)))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.00114042
    },
    "speedup": 17.836047245751566,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (pow -1 a) (+ (* (* (+ a b) (pow (/ b a) a)) b) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* b (* (pow -1 a) (+ (* (+ a b) (pow (/ b a) a)) 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.21739263699999997
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow -1 a) (+ b (* (pow (/ b a) a) (* b (+ a b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.012160726
    },
    "speedup": 17.876616659235637,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- (pow a b) (- -1 (/ (* (* 0 (* (* (* 1 a) d) (pow 1 d))) e) e)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(15015)",
      "output_term": "(+ (pow a b) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.845042901
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a b) 1)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.047251495
    },
    "speedup": 17.88393998962361,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (pow a (- (pow 1 (+ a (* (+ (pow (+ c a) 1) (pow a c)) b))) (/ -1 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow a (+ 1 (pow 1 (+ a (* (+ a (+ c (pow a c))) b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.07458904800000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow a (+ 1 (pow 1 (+ a (* (+ c (+ a (pow a c))) b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.004160144
    },
    "speedup": 17.929438980958356,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (pow -1 a)) (pow 1 (pow a (* (* a b) (+ (+ (* -1 c) -1) (/ c b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10653)",
      "output_term": "(+ (+ a (pow -1 a)) (pow 1 (pow a (* a (+ c (* -1 (+ b (* b c))))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.862654127
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (pow -1 a) (pow 1 (pow a (* b (* a (+ -1 (- (/ c b) c))))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 10,
      "simplification_time": 0.048102485
    },
    "speedup": 17.933670724080056,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow (- a (/ a (* (pow b (+ 0 (pow (pow a a) 1))) (+ (- 0 -1) -1)))) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a 0)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.031498903
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a 0)) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.0017548290000000003
    },
    "speedup": 17.949841836441042,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (- (pow a (pow (* a (- a (- (- -1 0) 1))) 0)) c) 1) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (- a c) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.028498891
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (- a c) 1) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.0015838649999999998
    },
    "speedup": 17.99325763243711,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow (- a (/ -1 (* (+ (* (* a 1) (+ a d)) (+ 1 d)) e))) 1) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ 1 (+ e (* e (+ d (* a (+ a d))))))) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 9,
      "simplification_time": 0.170795273
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ -1 (* (+ 1 (+ d (* a (+ a d)))) e))) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 9,
      "simplification_time": 0.009491915
    },
    "speedup": 17.993763429192107,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- 0 (/ a (* 0 (/ 1 (+ (pow (pow (- 0 0) 1) (+ a -1)) (- -1 0)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 0 (/ a 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.021644602
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 0 (/ a 0)))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.001202308
    },
    "speedup": 18.002543441447614,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a -1) (+ (/ (- (* -1 a) (/ (+ (- 1 a) a) (+ c 0))) 1) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10329)",
      "output_term": "(+ a (+ 1 (* -1 (/ 1 c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.43140175599999997
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (+ a 1) (/ (- (- 0 a) (/ 1 c)) 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.023822539000000004
    },
    "speedup": 18.108974698288872,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 0 (/ a (pow (pow a b) (/ (/ (pow (pow 0 (/ a 1)) 0) a) (- 0 (+ -1 -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 9,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a (pow (pow a b) (* (/ 1 a) 0.5))))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.011060166
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a (pow (pow a b) (/ (/ 1 a) 2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.0006107420000000001
    },
    "speedup": 18.10939152702778,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* (- (/ 0 a) (/ 1 (- (* a (+ (/ b b) 1)) (- 1 a)))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* b (/ 1 (+ -1 (* a 3)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.093818993
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* b (/ 1 (- (* a 3) 1))))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.005171902
    },
    "speedup": 18.140133552414568,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ -1 (/ (/ (+ (* -1 0) a) (/ (/ (+ a 1) (- -1 b)) (- -1 a))) d)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (/ a (/ (/ (+ a 1) (- -1 b)) (- -1 a))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.06310089699999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ -1 (/ (/ a (/ (/ (+ a 1) (- -1 b)) (- -1 a))) d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.003472281
    },
    "speedup": 18.17275070767602,
    "weight_simple_diff": -2,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (/ (+ (* 0 (* -1 (+ (* (/ (/ -1 b) a) (pow 0 0)) (pow -1 0)))) 1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.049840402000000006
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ 1 c))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.002737394
    },
    "speedup": 18.207244554492338,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 (- (/ (/ (pow 0 a) a) (+ 0 (- (* (- b c) a) (- b c)))) 0)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.236536635
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012936478
    },
    "speedup": 18.284469312281132,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a (- 0 (+ (pow 1 a) (/ a (/ (pow (/ a a) a) (+ -1 c)))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (- 0 (+ (pow 1 a) (/ a (/ (pow 1 a) (+ -1 c)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.023805642999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (- 0 (+ (pow 1 a) (/ a (/ (pow 1 a) (+ -1 c)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.001301031
    },
    "speedup": 18.297521734685798,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (- a (/ b (+ (* (* (/ c 0) (/ (/ -1 a) -1)) (/ (/ b b) 0)) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (/ b (+ c (* (/ c 0) (* (/ 1 a) (/ 1 0)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.080847029
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (/ b (+ c (* (* (/ c 0) (/ (/ -1 a) -1)) (/ 1 0))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.004402547
    },
    "speedup": 18.363694697637527,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- a (+ (pow (+ -1 -1) (pow (/ 1 a) 1)) b)) (pow (- 1 0) b))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (+ (pow -2 (/ 1 a)) b)) (pow 1 b))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.014828834999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (+ (pow -2 (/ 1 a)) b)) (pow 1 b))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.0008063300000000001
    },
    "speedup": 18.390528691726708,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (+ (/ (/ 0 a) a) (+ (/ c (- (* -1 (pow b d)) 0)) b)) a) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ b (/ c (* -1 (pow b d)))) a) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.085476885
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ b (/ c (- 0 (pow b d)))) a) e)",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.004634525
    },
    "speedup": 18.443504997815314,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ (pow (/ b (* (pow (* (- b a) 0) 1) 0)) (/ 1 d)) d) e))",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (pow (/ b 0) (/ 1 d)) d) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.017138201999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (/ (pow (/ b 0) (/ 1 d)) d) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.000928194
    },
    "speedup": 18.46403014886974,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 (* a a)) (* (* b 1) (- (- (/ (- 1 -1) (+ c -1)) (+ -1 -1)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (* a a)) (* b (- (+ 2 (/ 2 (+ -1 c))) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.128774095
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (* a a)) (* b (- (/ 2 (+ -1 c)) (+ c -2))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.006961948
    },
    "speedup": 18.496848152270026,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* a (- -1 b)) (+ (pow 0 (+ 1 b)) (pow a (+ (- 1 c) d))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (- -1 b)) (+ (pow 0 (+ b 1)) (pow a (+ (- 1 c) d))))",
      "output_weight_simple": 16,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.04201096
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (- -1 b)) (+ (pow 0 (+ b 1)) (pow a (- 1 (- c d)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.002265287
    },
    "speedup": 18.545535289788887,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (pow (- a 1) 1) (/ (- (* 1 a) (* (/ (/ a 1) 0) (- 0 a))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (+ a -1) (/ (* a (+ 1 (/ a 0))) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.9544514580000001
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (- a 1) (/ (+ a (* a (/ (/ a 1) 0))) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.051262322
    },
    "speedup": 18.61896653842563,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- (pow a a) 0) (+ (/ a (pow (/ 1 -1) (- (+ 1 d) (pow a -1)))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a a) (+ a (/ a (pow -1 (- (+ 1 d) (/ 1 a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.042831906
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a a) (+ a (/ a (pow -1 (- 1 (- (/ 1 a) d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.002287283
    },
    "speedup": 18.726106913748758,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (/ a (pow -1 (/ (- (- (* (+ 1 -1) 1) -1) 0) (pow (* b a) b)))) -1) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* -1 (/ a (pow -1 (/ 1 (pow (* a b) b))))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.018286463
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (/ a (pow -1 (/ 1 (pow (* a b) b))))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.000975823
    },
    "speedup": 18.73952858254007,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* -1 (/ (pow (- 0 -1) a) (- (/ (+ (pow (- -1 -1) 1) -1) (/ a -1)) b))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* -1 (/ (pow 1 a) (- (/ -1 (* -1 a)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.022036425999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- 0 (/ (pow 1 a) (- (/ -1 (/ a -1)) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.001174203
    },
    "speedup": 18.767134813997238,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (/ (- 0 (- (pow (pow b (+ (pow b -1) -1)) 1) (pow 1 (+ -1 a)))) b) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ (+ (pow 1 (+ a -1)) (* -1 (pow b (+ -1 (/ 1 b))))) b) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.09872008800000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ (- (pow 1 (+ a -1)) (pow b (+ -1 (/ 1 b)))) b) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.005220466
    },
    "speedup": 18.91020610037495,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ -1 (- -1 (* (/ (+ (+ 1 -1) a) 1) (- (/ a 0) (- (+ 1 b) a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- -1 (* a (- (/ a 0) (- (+ 1 b) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.9350413999999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ -1 (* (/ a 1) (+ (- 1 (/ a 0)) (- b a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.04935599500000001
    },
    "speedup": 18.944839426294614,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (pow (+ (/ a (+ (- (/ (- a 1) 1) (pow a -1)) a)) a) -1) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ 1 (+ a (/ a (+ a (- (+ a -1) (/ 1 a)))))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.036358657999999995
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ 1 (+ a (/ a (+ a (- (/ (- a 1) 1) (/ 1 a)))))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 10,
      "simplification_time": 0.0019096669999999999
    },
    "speedup": 19.03926600815744,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 0 (+ 1 (pow (pow a a) (* (/ (+ (+ (/ 1 -1) -1) 0) (/ a c)) d))))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.017666162
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000926886
    },
    "speedup": 19.05969234620007,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (/ (* (/ (pow (+ a b) 1) (/ (+ b b) a)) a) 0) (* 1 (+ 0 0))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.047862890000000005
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00251088
    },
    "speedup": 19.06219731727522,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ 1 a) (+ (/ (+ (+ -1 (- (/ 0 a) a)) a) 1) a)) (+ 0 (* 1 b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10220)",
      "output_term": "(* (/ (+ 1 a) (+ a -1)) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.569884888
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ 1 a) (+ a -1)) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.029887415000000004
    },
    "speedup": 19.067720911962443,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (- 1 (* -1 0)) a) (* 0 (- 0 (pow (* (/ (pow b -1) 0) (pow c -1)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 a) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.034203416
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 a) 0)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.001789874
    },
    "speedup": 19.109398762147503,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* (* a b) (pow (pow (+ (- b (* (- c b) a)) (+ 0 b)) c) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (* b (/ 1 (pow (+ b (- b (* a (- c b)))) c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 10,
      "simplification_time": 0.253992844
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (* a b) (pow (- (+ b b) (* a (- c b))) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.013260930999999998
    },
    "speedup": 19.15346999392426,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 3
  },
  {
    "base_term": "(- (* a b) (- (pow (+ b b) (- b (pow (- (- 1 0) a) a))) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* a b) (- (pow (+ b b) (- b (pow (- 1 a) a))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.02691325
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (* a b) (- (pow (+ b b) (- b (pow (- 1 a) a))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.001403718
    },
    "speedup": 19.17283243500475,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (/ (- (* 1 a) (pow (pow -1 -1) (/ 1 (+ a (pow b -1))))) (/ 0 a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ (- a (pow -1 (/ 1 (+ a (/ 1 b))))) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.084692047
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (- a (pow -1 (/ 1 (+ a (/ 1 b))))) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004387940000000001
    },
    "speedup": 19.301095046878487,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (/ (- (pow 0 a) (/ (* (* a a) (+ a -1)) (+ a 1))) (+ c 1))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (- (pow 0 a) (/ (* (* a a) (+ a -1)) (+ a 1))) (+ 1 c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 2.0517444929999997
    },
    "Extended": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (- (pow 0 a) (/ (* a (- (* a a) a)) (+ a 1))) (+ 1 c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.10602831900000001
    },
    "speedup": 19.350910326136542,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (/ (pow (pow (- -1 a) (pow (- (pow (* a c) 1) (+ d d)) 1)) -1) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ 1 (pow (- -1 a) (+ (* a c) (* d -2)))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.027205622
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ 1 (pow (- -1 a) (- (* a c) (+ d d)))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.001405562
    },
    "speedup": 19.355689752568722,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (/ a (pow (* (+ (* (/ (pow (* -1 a) a) (- 0 1)) c) b) 0) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ a (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.025528694
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ a (pow 0 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.001318662
    },
    "speedup": 19.359543233975046,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 0 a) (/ (pow 0 a) (pow 0 (/ (pow -1 0) (/ 0 a)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 42,
    "input_depth": 6,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow 0 a) (pow 0 (/ 1 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.014810345999999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (pow 0 a) (pow 0 (/ 1 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.000763873
    },
    "speedup": 19.388492589736774,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (- (- (- (pow 0 a) a) a) (/ (+ (/ (/ 0 a) b) a) 0)) 1) (+ -1 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ b (+ (- (+ (pow 0 a) (* a -2)) (/ a 0)) -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.26310421900000003
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- (- (pow 0 a) (+ a a)) (/ a 0)) 1) (+ b -1))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.013564933
    },
    "speedup": 19.395909953996828,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (/ 1 a) (pow a -1)) (- a (* 1 (/ (/ a c) (+ b 1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 6,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- a (/ (/ a c) (+ 1 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.11417480699999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- a (/ (/ a c) (+ 1 b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.0058862459999999995
    },
    "speedup": 19.396879946913533,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (/ (pow 1 (+ (pow (/ (- b (* 0 -1)) (- b -1)) (pow a -1)) -1)) c)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (- a (/ (pow 1 (+ -1 (pow (/ b (+ 1 b)) (pow a -1)))) c)) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.062243138
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- a (/ (pow 1 (+ -1 (pow (/ b (+ 1 b)) (/ 1 a)))) c)) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.003208547
    },
    "speedup": 19.39916666329027,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* b (/ (- (- (* 1 (- (pow (- a -1) d) (pow c d))) -1) b) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (+ -1 (+ (* -1 (pow (+ a 1) d)) (+ b (pow c d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.40567687999999996
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (/ (- 1 (+ b (- (pow c d) (pow (+ a 1) d)))) -1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.020890209
    },
    "speedup": 19.419474453319253,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (pow a (* (pow (pow (/ (+ a a) (+ (- a 1) b)) (* a (- -1 b))) 0) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.05009995700000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002577766
    },
    "speedup": 19.43541694630157,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a 1) (* a (/ -1 (* (- (- -1 (/ (* 0 a) a)) b) (+ (* c -1) 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ 1 (* (+ 1 b) (+ -1 c)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.27777565200000004
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 1) (* a (/ -1 (* (- -1 b) (- 1 c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.014263355999999998
    },
    "speedup": 19.474775221203206,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (/ (- a (* -1 (pow (/ a (- 0 (/ 1 a))) 1))) 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a (/ a (- 0 (/ 1 a)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.05331925900000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ a (/ a (- 0 (/ 1 a)))) 1))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.002736577
    },
    "speedup": 19.48392426012497,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow (* 1 0) (* (pow (pow (- 1 (/ (* a a) -1)) 1) (- (* 0 0) b)) a)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (pow (+ 1 (* a a)) (- 0 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.036447698
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* a (pow (- 1 (/ (* a a) -1)) (- 0 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.001863414
    },
    "speedup": 19.559635164273747,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ (/ a 1) (/ 1 (/ a (+ (* (pow 0 (pow b -1)) (- -1 a)) (- a b))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (/ a (+ (* (pow 0 (/ 1 b)) (- -1 a)) (- a b)))) (+ a a))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.090744186
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ a 1) (/ 1 (/ a (+ (* (pow 0 (/ 1 b)) (- -1 a)) (- a b))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.004633151
    },
    "speedup": 19.58584686749903,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- (- (/ -1 (/ (* (/ (- (* a 1) -1) a) (* a -1)) 0)) 1) 1) (- 0 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11203)",
      "output_term": "(+ (/ -1 (/ (* -1 (- a -1)) 0)) (+ b -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.167744539
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ -1 (/ (- 0 (* a (/ (+ a 1) a))) 0)) (- b 2))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.059529799
    },
    "speedup": 19.616134416983336,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- (+ -1 (+ 0 0)) (/ (pow a b) (pow (/ (+ 1 (- (pow 1 0) b)) (* 0 0)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (pow a b) (pow (/ (+ (* -1 b) 2) 0) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.019637467000000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (pow a b) (pow (/ (+ 1 (- 1 b)) 0) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.00099893
    },
    "speedup": 19.65850159670848,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 1 (+ (- a (- b (* a 1))) a)) (/ -1 (- (/ c (+ 1 b)) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (* b -1) (* a 3)) (/ -1 (+ 1 (/ c (+ 1 b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.31577028700000004
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (* a 3) b) (/ -1 (+ 1 (/ c (+ 1 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.016004980000000002
    },
    "speedup": 19.72950212996205,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a (pow a (+ a (- -1 (/ (+ (+ (* b -1) -1) (/ b a)) (+ 0 -1)))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 16,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow a (+ a (+ (* b (+ -1 (/ 1 a))) -3))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.653895475
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (pow a (+ a (- -1 (/ (+ (- -1 b) (/ b a)) -1))))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.033088386
    },
    "speedup": 19.762084345848724,
    "weight_simple_diff": 0,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 1 (/ a (- (- (/ a a) a) (+ (/ -1 0) (* c (pow (- -1 b) d))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (- (- 1 a) (+ (/ -1 0) (* c (pow (- -1 b) d))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.077249565
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (- (- 1 a) (+ (/ -1 0) (* c (pow (- -1 b) d))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.00390757
    },
    "speedup": 19.769208229155204,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (- -1 a) (- (/ a (pow (/ (pow (* a b) -1) (+ b 1)) -1)) (* 1 1))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -1 (+ (- -1 a) (/ a (/ 1 (/ (/ 1 (* a b)) (+ b 1)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.173492233
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ a (/ 1 (/ (/ 1 (* a b)) (+ b 1)))) (+ a 2)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.008773283
    },
    "speedup": 19.77506402107398,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* a 0) (- (- -1 a) (+ (* b 1) (+ (/ (/ c 1) -1) (* a a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (* -1 (+ a (+ b (* a a)))) (+ -1 c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.4277977499999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- -1 (+ a (+ (/ (/ c 1) -1) (+ b (* a a))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.021631561
    },
    "speedup": 19.776554729452947,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 a) (* (pow (- (/ (+ -1 a) 0) b) (pow a (/ (- 1 a) -1))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.035855174999999996
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0018090239999999998
    },
    "speedup": 19.82017651507111,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (* (* 1 (/ a a)) (/ b (+ -1 (* (+ (+ b (pow -1 1)) c) (- 0 c))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ b (+ -1 (* -1 (* (+ b (+ -1 c)) c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.28873745
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ b (+ -1 (* c (- (- 1 b) c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.014534285000000001
    },
    "speedup": 19.86595487841335,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 0 (* (- -1 (- (+ a b) (* (* (pow (/ 1 0) 1) (+ a 1)) 1))) (pow a 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ (* -1 b) (* (+ a 1) (+ -1 (/ 1 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.356763764
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (* (/ 1 0) (+ a 1)) (+ a (+ b 1))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.017956012
    },
    "speedup": 19.868763954936096,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- (pow (pow (- a (+ (pow 0 (pow b (pow 0 -1))) (pow a a))) 1) d) 1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (pow (- a (+ (pow 0 (pow b (pow 0 -1))) (pow a a))) d)) 0)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.018193362
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (pow (- a (+ (pow 0 (pow b (pow 0 -1))) (pow a a))) d) 1) 0)",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.0009108149999999999
    },
    "speedup": 19.974815961528964,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ a a) (+ (* -1 1) (/ (/ -1 (/ (- 1 (pow -1 a)) -1)) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ -1 (/ (/ -1 (+ -1 (pow -1 a))) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.023642063
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a a) (+ -1 (/ (/ -1 (/ (- 1 (pow -1 a)) -1)) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.001180011
    },
    "speedup": 20.035459838933708,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (pow a (- a (pow a (* -1 (/ (- (+ (* 1 a) -1) 1) (* -1 b)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (- a (pow a (* -1 (/ (+ a -2) (* -1 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.136929809
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (- a (pow a (- 0 (/ (- a 2) (- 0 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.006825319
    },
    "speedup": 20.062037979470265,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (* 0 a) (- 1 (/ (/ (/ (* (* 1 a) a) 1) b) c))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (/ (* a a) b) c) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.113698682
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ (/ (/ (* a a) 1) b) c) 1) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.005648453
    },
    "speedup": 20.12917200514902,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(* (* (/ a 0) (- (- (* a b) b) b)) (/ (pow (pow 1 (+ c 1)) a) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 6,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a 0) (* (* b (+ a -2)) (/ (pow (pow 1 (+ 1 c)) a) 0)))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.35277308399999996
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a 0) (* (* b (- a 2)) (/ (pow (pow 1 (+ 1 c)) a) 0)))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.017513696000000002
    },
    "speedup": 20.142697692137624,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ -1 a) (/ a (- 1 (+ (/ (pow (- (- -1 -1) -1) 1) (* 0 1)) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (/ a (- 1 (+ (/ 1 0) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.019958259
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -1 a) (/ a (- 1 (+ (/ 1 0) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.000990368
    },
    "speedup": 20.15236659504346,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ 0 (* (+ (+ (* (+ 1 (* -1 (/ b 1))) (- -1 b)) b) -1) (pow a -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(17511)",
      "output_term": "(pow a (* (+ (+ b (* b b)) -2) (pow a -1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.007490847
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (+ -1 (+ b (* (- 1 (/ b 1)) (- -1 b)))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.049949454000000004
    },
    "speedup": 20.170207406070944,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(* -1 (/ a (+ (pow (pow (/ (- (* (pow a -1) a) (* b -1)) (+ 1 a)) 1) -1) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (/ a (/ 1 (/ (+ b 1) (+ a 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.089625568
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ a (/ 1 (/ (+ b 1) (+ a 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.004422869
    },
    "speedup": 20.26412448571278,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 0 (pow (* -1 a) (* a (+ (/ (/ a a) (/ 0 -1)) a)))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (pow (* -1 a) (* a (+ a (/ 1 0))))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.025936118
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (pow (- 0 a) (* a (+ a (/ 1 0))))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.001277621
    },
    "speedup": 20.30032223953739,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ (- a -1) (/ a (+ 1 (* (+ (/ (pow b -1) -1) 1) (* -1 a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (+ 1 a) (/ a (+ 1 (* a (+ -1 (/ 1 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.190299663
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (+ 1 a) (/ a (+ 1 (* a (- -1 (/ (/ 1 b) -1)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.009342751
    },
    "speedup": 20.368696864553065,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow -1 (* (- (/ (+ (pow 1 (+ -1 a)) a) (* (* a -1) a)) a) a)) (/ 0 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 (* a (- (/ (+ a (pow 1 (+ -1 a))) (* -1 (* a a))) a))) (/ 0 0))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.092429839
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow -1 (* a (- (/ (+ a (pow 1 (+ -1 a))) (- 0 (* a a))) a))) (/ 0 0))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.004516333
    },
    "speedup": 20.465682889193513,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ (* -1 (- -1 (+ (* a (- -1 (* (+ a a) 1))) 0))) (* b c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (* a (+ -1 (* a -2)))) (* b c))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.645360852
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (* a (- -1 (+ a a))) 1) (* b c))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.031423836000000004
    },
    "speedup": 20.53730333877761,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 0 (- (* a (- (- (/ -1 (- (pow 1 1) 1)) (/ a -1)) a)) a)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(13463)",
      "output_term": "(pow (+ a (* a (pow 0 -1))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.646669704
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (- a (- (/ -1 0) (+ 1 (/ a -1))))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.031386991
    },
    "speedup": 20.603112416860856,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (* a (/ b (- (- b a) (/ e (pow (+ (* 0 d) 0) (* 0 d)))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ b (- (- b a) (/ e (pow 0 0))))) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.042050624999999994
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a (/ b (- (- b a) (/ e (pow 0 0))))) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.002040944
    },
    "speedup": 20.603517293958088,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (pow (* a (* (/ a (/ -1 -1)) (+ (+ 1 (+ (/ a c) b)) (/ 1 d)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ 1 (* (+ 1 (+ (/ a c) (+ b (/ 1 d)))) (* a a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.295553704
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ 1 (* (+ 1 (+ (+ (/ a c) b) (/ 1 d))) (* a (/ a 1)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.014333661000000001
    },
    "speedup": 20.61955448785903,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (+ 1 (/ a (/ (pow (+ b b) 1) b))) (/ -1 (/ b c))) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ 1 (* a 0.5)) (/ -1 (/ b c))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 5,
      "simplification_time": 0.024957161
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ 1 (/ a (/ (+ b b) b))) (/ -1 (/ b c))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.001208572
    },
    "speedup": 20.650123451478272,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(- (+ (pow 0 -1) a) (- (pow (/ a 1) (pow (* (+ (pow 0 -1) b) a) -1)) (* a b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- (+ (pow 0 -1) a) (- (pow a (/ 1 (* a (+ (pow 0 -1) b)))) (* a b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.187414873
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 -1) (- (pow (/ a 1) (/ 1 (* a (+ (pow 0 -1) b)))) (+ a (* a b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.009053756
    },
    "speedup": 20.70023457667735,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (* a 0) (* (+ c -1) (pow (pow (* (+ 1 1) 0) (/ b b)) (- b a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow 0 (- b a)) (+ 1 (* -1 c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.059806091000000006
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (pow 0 (- b a)) (- 1 c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.002885947
    },
    "speedup": 20.72321182613541,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (pow 0 (- 1 (* a (pow a (+ (- (/ a a) a) (* (- b -1) c)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 0 (- 1 (* a (pow a (+ (- 1 a) (+ c (* b c))))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.05394516
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 0 (- 1 (* a (pow a (+ (- 1 a) (* (+ 1 b) c)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.0026031080000000002
    },
    "speedup": 20.723366068561116,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* a (+ (* (+ c (- -1 -1)) c) (* (/ (+ (* a -1) a) (* b 0)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(26045)",
      "output_term": "(+ a (* c (* a c)))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 1.043980605
    },
    "Extended": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (* a (/ 0 0)) (+ (* c c) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.050322682
    },
    "speedup": 20.74572664867107,
    "weight_simple_diff": -5,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- a (pow -1 b)) (pow (/ (pow (- c (pow (* a (* 1 0)) (+ e d))) 1) d) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (pow -1 b)) (pow (/ (- c (pow 0 (+ e d))) d) e))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.042551779
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (pow -1 b)) (pow (/ (- c (pow 0 (+ e d))) d) e))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.002049744
    },
    "speedup": 20.759557778922634,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (/ a (/ (* b c) (- (+ (pow (pow 0 b) -1) (pow -1 c)) (/ 1 d)))) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 60,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (/ (* b c) (- (+ (/ 1 (pow 0 b)) (pow -1 c)) (/ 1 d)))) b)",
      "output_weight_simple": 17,
      "output_weight_complex": 48,
      "output_depth": 8,
      "simplification_time": 0.037484751
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ a (/ (* b c) (- (/ 1 (pow 0 b)) (- (/ 1 d) (pow -1 c))))) b) 1)",
      "output_weight_simple": 18,
      "output_weight_complex": 53,
      "output_depth": 8,
      "simplification_time": 0.001805451
    },
    "speedup": 20.761987448011602,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 a) (- -1 (- (pow -1 0) (+ (/ (/ (* b a) a) (pow a 0)) (pow a 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10750)",
      "output_term": "(+ a (+ b -2))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.828659265
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ (* a b) a) 1) (- 2 a))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.039854933
    },
    "speedup": 20.79188704193782,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (pow (/ 0 (/ a (* -1 (+ (pow (* (pow b 0) -1) (/ c 1)) (/ b a))))) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 61,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 a) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.025683275
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 a) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.001233782
    },
    "speedup": 20.81670424758993,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (+ a (/ (pow (pow (- (/ (/ -1 a) -1) (pow a b)) b) c) 1))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 56,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow a (+ a (pow (pow (- (/ 1 a) (pow a b)) b) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.016470568999999997
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (+ a (/ (pow (pow (- (/ (/ -1 a) -1) (pow a b)) b) c) 1))) -1)",
      "output_weight_simple": 15,
      "output_weight_complex": 46,
      "output_depth": 10,
      "simplification_time": 0.0007910300000000001
    },
    "speedup": 20.821674272783582,
    "weight_simple_diff": -2,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(- (* (+ (/ a (* (/ 0 0) -1)) (* (pow (+ (+ a a) b) a) (* a a))) b) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (* a b) (+ (* a (pow (+ a (+ a b)) a)) (/ 1 (* (/ 0 0) -1)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.08597259000000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (* b (+ (/ a (- 0 (/ 0 0))) (* a (* a (pow (+ (+ a a) b) a))))) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.00412284
    },
    "speedup": 20.852759263032283,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ -1 (/ a (pow (* (/ b c) (+ (/ -1 0) (+ -1 a))) c))) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 (/ a (pow (* (/ b c) (+ -1 (+ a (/ -1 0)))) c))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.114042169
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- c (/ a (pow (* (/ b c) (+ -1 (+ a (/ -1 0)))) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.005461717
    },
    "speedup": 20.88027794189996,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ 0 (/ a (* a (- a (* (+ (/ (/ -1 a) 1) (- b b)) a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16204)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.874114472
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.08962011
    },
    "speedup": 20.911762683620896,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (/ a a) (* a (/ (* a (+ -1 (pow (pow 0 a) -1))) 1))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (* a (* a (+ -1 (/ 1 (pow 0 a)))))) 0)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.025432753
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (* a (/ (* a (+ -1 (/ 1 (pow 0 a)))) 1))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.001214822
    },
    "speedup": 20.935374071263116,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (* (/ -1 -1) (+ (/ (* a (- 1 (/ -1 (/ 1 a)))) (* 1 (+ c c))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (* a (+ 1 (/ 1 (/ 1 a)))) (+ c c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.286187923
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (* a (- 1 (/ -1 (/ 1 a)))) (+ c c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.013612601
    },
    "speedup": 21.023750200273998,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* a b) (/ (* b (pow b -1)) (* 0 a))) (- (pow 0 1) (- (- b 1) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 6,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10683)",
      "output_term": "(/ (* a b) (/ 1 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 3,
      "simplification_time": 1.105176762
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a b) (/ 1 0))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 3,
      "simplification_time": 0.052350612000000005
    },
    "speedup": 21.111057154403465,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow 1 (/ -1 (* a (- (+ (/ (pow (/ 1 1) 0) (+ a a)) (pow c 0)) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (/ -1 (* a (- (+ 1 (/ 1 (+ a a))) c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.052090766
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (/ -1 (* a (- (+ 1 (/ 1 (+ a a))) c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.0024614339999999998
    },
    "speedup": 21.162771782627527,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (* (* a a) (+ (+ (/ 1 (/ (* -1 a) b)) (pow c -1)) 1)) (/ b 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (* a (+ a (* a (+ (/ 1 (/ (* a -1) b)) (/ 1 c))))) (/ b 0)))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 10,
      "simplification_time": 0.116763853
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (- (* (* a a) (+ 1 (+ (/ 1 (/ (* a -1) b)) (/ 1 c)))) (/ b 0)))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.005482290999999999
    },
    "speedup": 21.298368328131435,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* (- 1 a) (/ -1 a)) (- -1 (pow (+ b 1) (- (- (+ a 0) a) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14878)",
      "output_term": "(* (+ -1 (/ 1 a)) (+ 1 (/ 1 (+ 1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.2515335840000001
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (- 1 a) (* (/ -1 a) (- -1 (/ 1 (+ 1 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.058735512000000004
    },
    "speedup": 21.30795393423999,
    "weight_simple_diff": -1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow (/ (/ (/ (- a 0) (* a (- (pow 0 a) c))) b) 1) c) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ a (* a (- (pow 0 a) c))) b) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.032909042
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ (/ a (* a (- (pow 0 a) c))) b) 1) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.001533268
    },
    "speedup": 21.463333220285037,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ (+ 1 (pow a (/ (- b (pow 1 (+ 0 (/ a 1)))) (pow (+ -1 -1) d)))) b) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (pow a (/ (- b (pow 1 a)) (pow -2 d)))) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.041697484
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (pow a (/ (- b (pow 1 (/ a 1))) (pow -2 d)))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.0019422620000000002
    },
    "speedup": 21.468516605895598,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow (pow (- (- 1 (pow (* (* a b) (+ 1 b)) (pow c 0))) c) 0) 0) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.102642981
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "2",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004780683
    },
    "speedup": 21.47035915161076,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a (* (pow -1 a) a)) (- (pow (* c 1) (/ (* 0 (* a 0)) (- c b))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (* a (pow -1 a))) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.09864494000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (* a (pow -1 a))) 0)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.00458805
    },
    "speedup": 21.500406490774953,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- (pow a (/ (pow a a) (- (/ (* a -1) a) (+ 1 c)))) b) b) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- (pow a (/ (pow a a) (+ (* -1 c) -2))) b) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.042961033
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- (pow a (/ (pow a a) (- (/ (- 0 a) a) (+ 1 c)))) b) b))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.001996602
    },
    "speedup": 21.517074008740853,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (/ a (- (/ (+ a (+ 0 (- (* a -1) -1))) b) c)) b) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(29274)",
      "output_term": "(* (pow (/ a (- (/ 1 b) c)) b) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.268675141
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (/ a (- (/ 1 b) c)) b) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.058780891999999994
    },
    "speedup": 21.583121620542947,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (pow a b) (* (pow (+ (* -1 1) (/ (/ d b) -1)) (+ (pow a c) -1)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow a b) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.025472261
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow a b) 0))",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.001177553
    },
    "speedup": 21.631519770235393,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (* 0 -1) (/ (pow (/ (- (pow (+ 0 -1) -1) (/ 0 a)) (/ a b)) b) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.017850084
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.0008237019999999999
    },
    "speedup": 21.670560469684425,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (pow (+ (* (* (+ (+ (pow a a) -1) (- -1 1)) b) (/ 1 a)) a) a) c) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow (+ a (* (+ (pow a a) -3) (* b (/ 1 a)))) a) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.139049044
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (pow (+ a (* (+ (pow a a) -3) (* b (/ 1 a)))) a) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.006391219
    },
    "speedup": 21.756263398265652,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a a) (pow -1 (/ (/ 0 -1) (/ (* (- b (+ -1 0)) (- c -1)) (* 0 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) -1)",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.046792267
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) 1)",
      "output_weight_simple": 4,
      "output_weight_complex": 6,
      "output_depth": 3,
      "simplification_time": 0.002147977
    },
    "speedup": 21.784342662886985,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- -1 a) (pow (/ (/ 1 0) (* (- (* 1 (pow a a)) (pow a -1)) (+ a b))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (/ 1 (/ (/ 1 0) (* (- (pow a a) (/ 1 a)) (+ a b)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.09293212899999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (/ 1 (/ (/ 1 0) (* (- (pow a a) (/ 1 a)) (+ a b)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.0042527599999999995
    },
    "speedup": 21.852192223403154,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a 0) (pow (/ (pow (/ (- 1 b) (/ -1 (* 0 b))) (- (- -1 a) c)) 1) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 0) (pow (pow (/ (- 1 b) (/ -1 0)) (- (- -1 a) c)) b))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.033893994
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 0) (pow (/ (pow (/ (- 1 b) (/ -1 0)) (- -1 (+ a c))) 1) b))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 7,
      "simplification_time": 0.001548828
    },
    "speedup": 21.883639758578745,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (- (* (- a 1) (+ (/ a (pow (* (* a b) 1) (/ b a))) 0)) (/ c 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ c 0) (* (+ a -1) (* (/ a (pow (* a b) (/ b a))) -1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.380238892
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ c 0) (* (- a 1) (/ a (pow (* a b) (/ b a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.017330135
    },
    "speedup": 21.9409076732524,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (/ 0 (+ a (/ a (/ (/ (- (pow (pow c b) a) 1) (pow d e)) 0)))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0339907
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001528851
    },
    "speedup": 22.232840217915285,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (pow 1 (/ (+ 0 -1) (/ (pow (+ (/ -1 a) b) (- b a)) 0))) d) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 (/ -1 (/ (pow (+ (/ -1 a) b) (- b a)) 0))) (* -1 d))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.02137922
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (pow 1 (/ -1 (/ (pow (+ (/ -1 a) b) (- b a)) 0))) d) -1)",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.000961543
    },
    "speedup": 22.23428385418021,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* 1 0) (+ 0 (+ (* (+ 1 (/ (* a b) 0)) (/ (/ b -1) -1)) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ b (+ a (* b (/ (* a b) 0)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.106255787
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (* (+ 1 (/ (* a b) 0)) (/ (/ b -1) -1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.004759223
    },
    "speedup": 22.326288766044375,
    "weight_simple_diff": -4,
    "weight_complex_diff": -12,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ 1 -1) (/ (pow -1 (pow (/ 1 -1) a)) (/ (pow (/ b 0) (/ 1 0)) (pow -1 a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 62,
    "input_depth": 6,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012365745000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000552467
    },
    "speedup": 22.38277580380367,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow (* (+ a (pow b (* a (- c (/ (pow 1 0) 0))))) c) d))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.028573915999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00127494
    },
    "speedup": 22.411969190707012,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ a a) (* b (+ (* b (/ (+ (+ a b) b) 0)) 1))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ (+ a (+ b b)) 0) (* b b)) (+ b -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.101368868
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 (+ b (* (/ (+ a (+ b b)) 0) (pow b 2)))) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.004506214
    },
    "speedup": 22.495351530131504,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (+ a -1) (pow (* b (pow (- (* -1 1) 1) 1)) (/ (+ (- (pow -1 b) c) d) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -1) (pow (* b -2) (/ (+ (- (pow -1 b) c) d) a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.047950445
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -1) (pow (* b -2) (/ (- (pow -1 b) (- c d)) a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.002130801
    },
    "speedup": 22.503483431817425,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow 1 (+ a (pow (- (/ (/ (+ (- -1 -1) -1) (* b a)) (+ b e)) 1) 0))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 1 (+ 1 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.026009629
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (+ a 1)) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.001155007
    },
    "speedup": 22.519022828433073,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 0 (- a (- (/ (+ (- a 1) (* (/ b c) -1)) (* (+ -1 0) d)) c))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 (- a (- (/ (+ a (+ -1 (* (/ b c) -1))) (* -1 d)) c))) a)",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.867123577
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 (- (+ a c) (/ (- (+ a -1) (/ b c)) (- 0 d)))) a)",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.038297481
    },
    "speedup": 22.64179142748318,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 3
  },
  {
    "base_term": "(- (+ (- a (- (* (/ a (/ (/ (- 0 a) a) (* a -1))) a) -1)) -1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11607)",
      "output_term": "(+ a (+ (* (- 0 a) (/ a (/ 1 a))) -3))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.238251112
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -3 (* a (- (/ a (/ (/ (- 0 a) a) (- 0 a))) 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.054592158
    },
    "speedup": 22.681849506663575,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(- (* a (+ (- (pow (- (pow 1 a) 0) (+ (/ (+ a -1) a) (/ -1 -1))) b) a)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (- (pow (pow 1 a) (+ (* -1 (/ 1 a)) 2)) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.06325945799999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow (pow 1 a) (+ 1 (/ (+ a -1) a))) (- b a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.00277746
    },
    "speedup": 22.77601045559612,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ a 1) (pow (* (+ (+ 1 (pow (- (+ 0 b) 1) b)) a) b) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (* b (+ a (pow (+ b -1) b))) (+ 1 b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 17,
      "output_depth": 7,
      "simplification_time": 0.14769210400000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a 1) (* b (+ a (+ 1 (pow (- b 1) b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 16,
      "output_depth": 7,
      "simplification_time": 0.006484447000000001
    },
    "speedup": 22.776360728987374,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow a (/ (- a (+ (- 0 1) (* (pow (- b 0) 0) (pow c b)))) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow a (/ (- a (+ -1 (pow c b))) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.18070390000000003
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow a (/ (- a (+ -1 (pow c b))) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.007905841
    },
    "speedup": 22.857011670232176,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (+ a (* a (* a a))) (* (* (* (/ (- a a) c) c) (- b 0)) 1)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10202)",
      "output_term": "(/ (+ a (* a (* a a))) c)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.121755723
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (* a (* a a))) c)",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.04906847500000001
    },
    "speedup": 22.861026820173233,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (* a (/ (* b b) (* (* -1 b) (pow c (* (- 0 1) b))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (* b b) (* b (* -1 (pow c (* b -1))))) (* a -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.10181499799999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (/ (* b b) (- 0 (* b (pow c (- 0 b)))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.004443762
    },
    "speedup": 22.911892671119645,
    "weight_simple_diff": 0,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- a (/ a b)) (- (* (/ (pow (+ -1 (- a c)) d) (- a (/ a d))) 0) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a b)) (- 0 a))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.067086411
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a b)) (- 0 a))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.002926039
    },
    "speedup": 22.92738100893392,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 a) (pow a (/ (pow (pow a (pow (+ (pow b 1) a) -1)) (- (/ b b) c)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 a) (pow a (pow (pow a (/ 1 (+ a b))) (- 1 c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.025329286
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 a) (pow a (/ (pow (pow a (/ 1 (+ a b))) (- 1 c)) 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.001102958
    },
    "speedup": 22.96486901586461,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow (/ a (/ (- (+ a a) (- (* a (+ a a)) a)) b)) b) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a (/ (* a (+ (* a -2) 3)) b)) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.914252097
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a (/ (* a (- 3 (+ a a))) b)) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.039784863000000004
    },
    "speedup": 22.979898083348935,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ (+ a (/ 0 (* a (* (- c (- (pow b a) a)) (pow 0 e))))) e))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a e))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.505507243
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a e))",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.021884674
    },
    "speedup": 23.098687373638743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (/ a -1) (+ a (/ 0 (- (/ a (/ (* a -1) b)) (pow -1 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a 1)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.092626539
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ a -1) a))",
      "output_weight_simple": 5,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.003998642
    },
    "speedup": 23.164499097443578,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(* (+ -1 (- (/ (pow a (- 1 1)) (/ a (/ -1 (- (- a -1) a)))) b)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -1 (- (/ 1 (* -1 a)) b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.091311368
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ 1 (/ a -1)) (+ 1 b)))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.003932247
    },
    "speedup": 23.22116794799513,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (pow a a) 1) (+ a (/ a (* 1 (* 1 (pow (* 0 (/ a a)) (- 1 1)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -2 (* (pow a a) 2)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.068321142
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (- (pow a a) 1) (+ a (/ a (pow 0 0))))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.002930701
    },
    "speedup": 23.312218476057435,
    "weight_simple_diff": -2,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ a (pow c (- (/ 1 d) (* (/ (+ (+ -1 0) 1) c) (/ c 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ a (pow c (/ 1 d))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.047600859999999995
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ a (pow c (/ 1 d))))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.002032405
    },
    "speedup": 23.420952024817883,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* (+ (/ a (+ a (* 1 (/ (* (pow a c) c) (- 0 b))))) -1) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* b (+ -1 (/ a (+ a (/ (* c (pow a c)) (- 0 b)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.119940148
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* b (+ -1 (/ a (+ a (/ (* c (pow a c)) (- 0 b)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.005117897999999999
    },
    "speedup": 23.435431499416364,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow a (/ (+ (pow (* (pow (* 1 (+ -1 1)) (- a b)) a) d) c) d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (/ (+ (pow (* a (pow 0 (- a b))) d) c) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.027340241999999997
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (/ (+ (pow (* a (pow 0 (- a b))) d) c) d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.001159249
    },
    "speedup": 23.584443031652388,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (/ (/ a (pow (* (/ b (* (pow 0 1) -1)) b) a)) 0) (pow 1 b)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ (/ (/ a (pow (* b (/ b 0)) a)) 0) (pow 1 b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.025153580000000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ (/ (/ a (pow (* b (/ b 0)) a)) 0) (pow 1 b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 0.001065958
    },
    "speedup": 23.597158612253015,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ 0 (/ (- 0 (/ (pow (- (* a a) 1) (/ (* a a) -1)) (pow -1 0))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025162101000000003
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001063567
    },
    "speedup": 23.658218993255716,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 (/ -1 0)) (- (- 1 1) (/ (- (pow (- (/ a a) b) -1) (* -1 -1)) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (/ -1 0)) (+ -1 (/ 1 (- 1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.018692476
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (/ -1 0)) (- 0 (/ (- (/ 1 (- 1 b)) 1) -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.000789222
    },
    "speedup": 23.684686944864687,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(+ 1 (pow (/ a (/ (pow -1 (* a (/ (- (pow b a) -1) (- -1 1)))) (+ b a))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (/ a (/ (pow -1 (* -0.5 (+ a (* a (pow b a))))) (+ a b))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.044799436
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (/ a (/ (pow -1 (* a (/ (+ 1 (pow b a)) -2))) (+ a b))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 10,
      "simplification_time": 0.0018913089999999999
    },
    "speedup": 23.686999850368185,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* -1 (- a (- (+ 1 (* (pow (/ (/ a b) a) -1) (pow 0 b))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10660)",
      "output_term": "(/ a (+ 1 (+ (* (/ 1 (/ 1 b)) (pow 0 b)) (* a -2))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 1.001127553
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 1 (- (+ a a) (/ (pow 0 b) (/ (/ a b) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.04222753
    },
    "speedup": 23.707935391911388,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 0 a) (/ a (/ a (pow a (- (+ (pow b (+ b d)) (/ 0 -1)) (/ -1 b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- 0 a) (/ a (/ a (pow a (+ (pow b (+ b d)) (/ 1 b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.060901547
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a (/ a (/ a (pow a (- (pow b (+ b d)) (/ -1 b)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.002567601
    },
    "speedup": 23.719241034724632,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (- a (* (- (pow a (- 1 b)) 1) (- 0 (- (+ c a) 1)))) a) (+ 1 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11025)",
      "output_term": "(+ (* a (+ a (* (+ (pow a (- 1 b)) -1) (+ a (+ c -1))))) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.60324367
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (+ a (* (- (pow a (- 1 b)) 1) (+ a (- c 1))))) 1)",
      "output_weight_simple": 13,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.025331179
    },
    "speedup": 23.81427528501536,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* -1 (/ a (- a a))) (pow (- a (- -1 (pow (* (* -1 -1) 0) (+ a 1)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(18306)",
      "output_term": "(* -1 (* (/ a 0) (+ (+ a 1) (pow 0 (+ a 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.08490698
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a 0) (- -1 (+ a (pow 0 (+ a 1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.045532344
    },
    "speedup": 23.82717173532731,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow b (pow (pow b a) (- (- (pow (pow (/ b a) 1) 0) a) (+ (/ -1 1) d)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (pow (pow b a) (+ 2 (* -1 (+ a d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.09243885099999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (pow (pow b a) (- 1 (+ -1 (+ a d))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.00387631
    },
    "speedup": 23.84712548789957,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (+ a (pow b (* (pow a (+ a b)) (+ (pow 1 c) (/ (/ 1 1) a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a (pow b (* (pow a (+ a b)) (+ (pow 1 c) (pow a -1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.028516558
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a (pow b (* (pow a (+ a b)) (+ (pow 1 c) (/ 1 a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.001193075
    },
    "speedup": 23.901731240701547,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (pow (pow b (- (pow (pow (* a a) (- -1 -1)) 1) (/ (* c a) 1))) -1) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ 1 (pow b (- 1 (* a c)))) e))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.027655565
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ 1 (pow b (- 1 (/ (* a c) 1)))) e))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.001156482
    },
    "speedup": 23.91352826935482,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow a (+ a -1)) (* (- (- (+ b (+ (/ (- c b) b) (/ d 0))) d) e) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10034)",
      "output_term": "(pow (pow a (+ a -1)) (* e (- (- (+ (/ (- c b) b) (+ b (/ d 0))) d) e)))",
      "output_weight_simple": 18,
      "output_weight_complex": 38,
      "output_depth": 8,
      "simplification_time": 1.398169635
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (- a 1)) (* e (- (/ (- c b) b) (- e (+ (/ d 0) (- b d))))))",
      "output_weight_simple": 18,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.05837827
    },
    "speedup": 23.95017246999611,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 1 (+ 1 (/ (+ 1 (* (+ -1 (* -1 (pow (pow -1 0) a))) (pow (- b -1) -1))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12338)",
      "output_term": "(+ 1 (* (/ 1 (+ 1 b)) (+ 1 (pow 1 a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.085516025
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ 1 (/ (- -1 (pow 1 a)) (+ 1 b))) -1) 2)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.045271992999999996
    },
    "speedup": 23.97765048691362,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(* a (* (pow -1 (/ (/ (+ a (/ (pow (- 0 a) b) (- c 1))) b) d)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* b (* a (pow -1 (/ (/ (+ a (/ (pow (- 0 a) b) (+ -1 c))) b) d))))",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 10,
      "simplification_time": 0.091559736
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (* b (pow -1 (/ (/ (+ a (/ (pow (- 0 a) b) (- c 1))) b) d))))",
      "output_weight_simple": 17,
      "output_weight_complex": 41,
      "output_depth": 10,
      "simplification_time": 0.0038108890000000005
    },
    "speedup": 24.025820746812617,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a a) (pow b (- 1 (- (/ -1 (* (pow (/ c b) c) -1)) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow b (+ a (+ 1 (/ 1 (* -1 (pow (/ c b) c)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.026134583000000003
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (pow b (- 1 (- (/ -1 (- 0 (pow (/ c b) c))) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.001087572
    },
    "speedup": 24.03020949417602,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a -1) (/ (/ 1 1) (/ (- a (* a -1)) (- (pow (pow 0 0) a) (pow a -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a -1) (/ 1 (/ (+ a a) (- (pow (pow 0 0) a) (/ 1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.06703725099999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ a -1) (/ 1 (/ (+ a a) (- (pow (pow 0 0) a) (/ 1 a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.002765074
    },
    "speedup": 24.244288217964506,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ -1 (pow a (pow 0 (/ (pow a (* (/ (- b a) c) (/ 1 -1))) (+ c 1))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (+ -1 (pow a (pow 0 (/ (pow a (* -1 (/ (- b a) c))) (+ c 1))))) d)",
      "output_weight_simple": 17,
      "output_weight_complex": 39,
      "output_depth": 10,
      "simplification_time": 0.085918776
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (pow 0 (/ (pow a (- 0 (/ (- b a) c))) (+ c 1)))) (+ 1 d))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.003534323
    },
    "speedup": 24.309825672413076,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (pow (pow (- 1 a) (+ (pow (* (- (/ -1 0) b) c) 0) (pow (+ 1 0) a))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (pow (- 1 a) (+ 1 (pow 1 a))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.027848142
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (pow (- 1 a) (+ 1 (pow 1 a))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.001137868
    },
    "speedup": 24.473965345716724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 1) (pow (/ a (/ (/ a (pow 0 (+ (+ 1 0) c))) -1)) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ 1 (/ a (* (/ a (pow 0 (+ 1 c))) -1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.019750731
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ 1 (/ a (/ (/ a (pow 0 (+ 1 c))) -1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.000805391
    },
    "speedup": 24.523158316892044,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (/ (- (pow a (/ (+ b (/ (+ (* -1 -1) a) 1)) b)) 0) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* -1 (pow a (/ (+ a (+ b 1)) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.037130262
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (pow a (/ (+ b (/ (+ a 1) 1)) b)) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.00151257
    },
    "speedup": 24.54779745730776,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- -1 0) (pow a (- (* a (- (/ (/ (/ -1 -1) 1) (pow 0 0)) (* -1 b))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a (* a (+ (/ 1 (pow 0 0)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.073695644
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a (* a (+ (/ 1 (pow 0 0)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.002999417
    },
    "speedup": 24.56998943461346,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ 1 (* a (- (pow (/ (pow a (/ (/ 1 a) a)) (/ a a)) a) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (* a (- (pow (pow a (pow a -2)) a) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.021361062
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ 1 (* a (- (pow (/ (pow a (/ (/ 1 a) a)) 1) a) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.0008647559999999999
    },
    "speedup": 24.70183728126778,
    "weight_simple_diff": -1,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(/ a (pow a (/ (* b (+ (/ b (- a (* (* b 0) 1))) (pow (/ c 0) c))) e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (/ (* b (+ (/ b a) (pow (/ c 0) c))) e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.060273383
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow a (/ (* b (+ (/ b a) (pow (/ c 0) c))) e)))",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.002438559
    },
    "speedup": 24.716803243226842,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- 1 (* -1 (/ a (- a (/ a (- (- a -1) c)))))) b) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (+ 1 (/ a (- a (/ a (- (+ 1 a) c))))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.08903165599999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (+ 1 (/ a (- a (/ a (- a (+ -1 c)))))) b) 1)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.003583049
    },
    "speedup": 24.848015195996478,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (pow 0 (* a (* (pow (* 0 (pow (/ a -1) 1)) 1) (- (/ 0 c) d)))) c) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow 0 0) c) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.081118666
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow 0 0) c) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.003263268
    },
    "speedup": 24.858107271606254,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (pow (+ (- (* a a) a) (/ b a)) (- (* (/ 1 0) (+ (- a d) -1)) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (+ (- (* a a) a) (/ b a)) (- (* (/ 1 0) (+ -1 (- a d))) d)))",
      "output_weight_simple": 17,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.13780951500000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow (+ (- (* a a) a) (/ b a)) (- (* (/ 1 0) (+ -1 (- a d))) d)))",
      "output_weight_simple": 17,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.005540429
    },
    "speedup": 24.87343759842424,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- 1 (- (* a a) a)) (pow 0 (+ (pow (* (+ a 1) 0) b) (* c a)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (- 1 (* a (+ a -1))) (pow 0 (+ (pow 0 b) (* a c)))) b)",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.044686436999999996
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (- 1 (- (* a a) a)) (pow 0 (+ (pow 0 b) (* a c)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.00179263
    },
    "speedup": 24.927864087960145,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (- (pow -1 0) (/ (/ a (/ a (+ (pow 1 a) a))) (/ a (+ -1 1)))) -1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ (* -1 (/ (/ a (/ a (+ a (pow 1 a)))) (/ a 0))) 2))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.051901235000000004
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (- 1 (/ (/ a (/ a (+ a (pow 1 a)))) (/ a 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.002080605
    },
    "speedup": 24.945261113954835,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (+ (/ 1 b) (pow b (* (/ (* (- b b) e) (- b d)) -1)))) (/ 0 d))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.083585783
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0033428670000000002
    },
    "speedup": 25.00422032943578,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (* (+ 0 1) (* (/ (* (+ (* (+ 0 a) a) b) (+ a a)) a) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14714)",
      "output_term": "(+ -1 (* a (* (+ (* a a) b) 2)))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 1.428629091
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (/ (* (+ (* a a) b) (+ a a)) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.057121424
    },
    "speedup": 25.01038998957729,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ 1 -1) (pow (pow (- 0 a) (/ (* (/ a (- -1 0)) (pow c c)) (- b 0))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 1 (pow (- 0 a) (/ (* -1 (* a (pow c c))) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.040715983
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 1 (pow (- 0 a) (/ (* (/ a -1) (pow c c)) b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.0016279100000000002
    },
    "speedup": 25.0112002506281,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(- -1 (pow (pow (pow a b) (/ (* c (pow (pow (pow 1 b) b) (/ d b))) (+ d e))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 60,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (pow (pow a b) (/ (* c (pow (pow (pow 1 b) b) (/ d b))) (+ d e))) d))",
      "output_weight_simple": 18,
      "output_weight_complex": 50,
      "output_depth": 9,
      "simplification_time": 0.025128371
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (pow (pow a b) (/ (* c (pow (pow (pow 1 b) b) (/ d b))) (+ d e))) d))",
      "output_weight_simple": 18,
      "output_weight_complex": 50,
      "output_depth": 9,
      "simplification_time": 0.000999303
    },
    "speedup": 25.14589769069041,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- (pow 1 (/ (+ (- (/ -1 0) a) (* a (- a c))) b)) (- 0 b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ b (pow 1 (/ (+ (/ -1 0) (* a (+ -1 (- a c)))) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.302838805
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (- 0 b) (pow 1 (/ (+ (- (/ -1 0) a) (* a (- a c))) b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.011994793
    },
    "speedup": 25.24752240409651,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (+ (pow (pow -1 a) (+ b (- (* (+ (+ b a) -1) (pow c 1)) d))) e) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (pow -1 a) (+ b (- (* (+ -1 (+ a b)) c) d))) (+ a e))",
      "output_weight_simple": 15,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.171672214
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (pow -1 a) (- (* (+ -1 (+ a b)) c) (- d b))) (+ a e))",
      "output_weight_simple": 15,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.006796131
    },
    "speedup": 25.26028618341818,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (- a (/ a (pow -1 (+ 1 -1)))) (/ (/ (pow b (pow a (+ (+ 1 0) c))) c) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (/ (pow b (pow a (+ 1 c))) c) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.020631525999999997
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a 1)) (/ (/ (pow b (pow a (+ 1 c))) c) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.000814511
    },
    "speedup": 25.32995380050116,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (pow (+ (pow (/ a (pow (+ (* (- 0 1) 1) (pow -1 a)) (pow a a))) 1) a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ a (/ a (pow (+ -1 (pow -1 a)) (pow a a)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.034828276
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a (/ a (pow (+ -1 (pow -1 a)) (pow a a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.001371835
    },
    "speedup": 25.388094049211457,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (+ -1 1) (- (* (/ (- (pow (pow a a) 0) (/ c 1)) (- a 1)) 0) 0)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.028183372000000005
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 0) -1)",
      "output_weight_simple": 4,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.00108656
    },
    "speedup": 25.938164482403185,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- 1 (* (/ a b) (/ a (pow (+ (/ (/ -1 c) 1) (- c -1)) (/ b 0))))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.129541157
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0049932250000000004
    },
    "speedup": 25.943384686249864,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- 1 (+ (/ a 0) (* (/ (* 0 (* (pow b -1) -1)) -1) (/ (+ a -1) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ -1 (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 0.285886184
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a 0) (- 1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.010981054999999998
    },
    "speedup": 26.03449158573562,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- a (/ a (pow 0 (+ 1 (- (* (pow (/ a a) -1) 0) 1))))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- a (/ a (pow 0 0))))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.039147119
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (/ a (pow 0 0)) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.0014972039999999998
    },
    "speedup": 26.146817000221752,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (* 0 (- (/ 0 -1) (* (/ (/ -1 1) (* a (- b c))) (- (* c b) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.21994602700000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008384415
    },
    "speedup": 26.23272190128948,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (/ 0 a) -1) (+ (pow (+ -1 (* (* (- (* 1 a) a) (- b 0)) 1)) 1) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(61698)",
      "output_term": "(/ -1 (+ -1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 2.421655863
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ -1 b))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.09210955900000001
    },
    "speedup": 26.29103742641955,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a (* (pow 1 a) (- a (* 1 (/ (+ (* 0 d) d) (- c 1)))))) (/ 1 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (pow 1 a) (* a (- a (/ d (+ c -1))))) (/ 1 0))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.161600657
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (* (pow 1 a) (- a (/ d (- c 1))))) (/ 1 0))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.006122534
    },
    "speedup": 26.394407446328596,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ 0 (pow a (* (- (/ (* (- (* 0 a) b) (/ -1 0)) (+ b a)) b) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (* (- (/ (* b (* -1 (/ -1 0))) (+ a b)) b) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.259371256
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow a (* (- (/ (- 0 (* b (/ -1 0))) (+ a b)) b) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.009823765
    },
    "speedup": 26.40242880402778,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (* -1 (* (* -1 -1) 1)) (+ (pow 0 0) (/ (+ (- a 0) -1) b))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.06327139799999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002383549
    },
    "speedup": 26.54503767281478,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- a (* (* (* a (- b c)) (- (/ (* 1 (/ -1 -1)) b) (- 1 0))) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14564)",
      "output_term": "(pow 0 (+ a (* (* a (- b c)) (+ -1 (/ 1 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.286128948
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (* a (* (- b c) (- (/ 1 b) 1)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.048393250000000006
    },
    "speedup": 26.5766185986682,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (/ a (* (/ 0 1) (pow (/ (+ a (/ (- a 1) 0)) a) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.023459985000000003
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ a 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.0008814210000000001
    },
    "speedup": 26.61609491945393,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow -1 (pow a (- (* 1 -1) (+ (/ (/ (- 0 a) 0) (/ a -1)) (pow a -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow -1 (pow a (- -1 (+ (/ (/ (- 0 a) 0) (- 0 a)) (/ 1 a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.025448878
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow -1 (pow a (- -1 (+ (/ (/ (- 0 a) 0) (/ a -1)) (/ 1 a))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.000953964
    },
    "speedup": 26.6769794248001,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (* a (pow (* a (/ (- (+ a 0) (/ a 0)) (- -1 0))) 1)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (* a (- a (/ a 0)))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.110662083
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (* a (* a (/ (- a (/ a 0)) -1))) -1))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.004131102
    },
    "speedup": 26.78754555079976,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(pow 0 (* (pow (/ (/ a -1) a) b) (pow (pow (pow c (- a 1)) c) (- (/ c a) e))))",
    "input_weight_simple": 23,
    "input_weight_complex": 60,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* (pow -1 b) (pow (pow (pow c (+ a -1)) c) (- (/ c a) e))))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.024703696999999997
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* (pow (/ (/ a -1) a) b) (pow (pow (pow c (- a 1)) c) (- (/ c a) e))))",
      "output_weight_simple": 18,
      "output_weight_complex": 50,
      "output_depth": 7,
      "simplification_time": 0.000921169
    },
    "speedup": 26.81776850936147,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 0 (- (pow a 0) (/ -1 (* (/ (+ (pow 0 b) 0) (+ c b)) b)))) (* b b))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* (* b b) (- 1 (/ -1 (* b (/ (pow 0 b) (+ b c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.25867002800000005
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* b (* b (- 1 (/ -1 (* b (/ (pow 0 b) (+ b c)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.009622437000000001
    },
    "speedup": 26.88196638751701,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (- a 0) a) (/ b (- (+ 0 b) (/ (- (/ (- 0 c) -1) (+ -1 -1)) d))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a a) (/ b (- b (/ (+ c 2) d))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.094861848
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a a) (/ b (- b (/ (- (/ (- 0 c) -1) -2) d))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0035178449999999995
    },
    "speedup": 26.96589758786985,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(* (/ (* (- (/ (* a 1) (pow a c)) (- (+ (/ 1 c) -1) 1)) -1) b) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ (/ 1 c) (+ (* (/ a (pow a c)) -1) -2)) b) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 1.4163999929999997
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (- (+ (/ 1 c) -2) (/ a (pow a c))) b) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.052387513
    },
    "speedup": 27.036977170494804,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 2
  },
  {
    "base_term": "(+ (+ (pow a a) (pow (* (/ 1 (- 0 (pow (+ a a) a))) (/ (- 1 b) c)) 1)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ 1 (- 0 (pow (+ a a) a))) (/ (- 1 b) c)) (+ (pow a a) d))",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.125130548
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ 1 (- 0 (pow (+ a a) a))) (/ (- 1 b) c)) (+ (pow a a) d))",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.004599536
    },
    "speedup": 27.205037203752724,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (pow (* a (* (* (/ 0 a) (/ (pow (+ a 1) 0) (* 0 1))) (/ b a))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10002)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.138020418
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.041714680000000004
    },
    "speedup": 27.281053528398154,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* 0 (pow a (- (/ 0 (pow (- 0 (* a (- b c))) (+ c c))) e))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.066825945
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0024484579999999997
    },
    "speedup": 27.29307384484439,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (pow 1 (- a 1)) a) (* (- (* b (* -1 (/ (- 0 a) c))) a) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow 1 (+ a -1))) (* (* a b) (+ -1 (* b (/ 1 c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.229515577
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (pow 1 (- a 1))) (* b (- 0 (+ a (* b (/ (- 0 a) c))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.008357748
    },
    "speedup": 27.461413888047353,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (/ (/ a 1) (* a (+ b (/ (pow (pow b (+ a -1)) (* a d)) (+ 0 -1))))) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (* a (+ b (* -1 (pow (pow b (+ a -1)) (* a d)))))) e)",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.035650573
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ a 1) (* a (+ b (/ (pow (pow b (+ a -1)) (* a d)) -1)))) e)",
      "output_weight_simple": 16,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.001285282
    },
    "speedup": 27.737549424951098,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (- a (pow (/ (pow -1 (- (pow 1 a) -1)) (* (/ 0 a) a)) 1)) 1) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (/ (pow -1 (+ 1 (pow 1 a))) 0)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.052460706
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (/ (pow -1 (+ 1 (pow 1 a))) 0)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.001890517
    },
    "speedup": 27.74939659363021,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a -1) (- (- 1 (+ (/ (+ (pow a (* 1 -1)) (/ b 0)) (* c c)) 0)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 a) (+ (* -1 (/ (+ (/ 1 a) (/ b 0)) (* c c))) 2))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.24360707599999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (- 1 (/ (+ (/ 1 a) (/ b 0)) (* c c)))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.008775699
    },
    "speedup": 27.75927889049066,
    "weight_simple_diff": 2,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- (/ (/ (+ a (+ (pow a (* -1 -1)) -1)) (- b (- b b))) b) c) c) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (- (* (+ -1 (+ a a)) (pow b -2)) c) c) b)",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.10293936399999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (- (/ (/ (+ a (+ a -1)) b) b) c) c) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.003690525
    },
    "speedup": 27.89287811354753,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (+ 0 (* (/ a (+ (- 0 b) 0)) (- (pow b (/ c a)) (pow (pow -1 d) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (/ a (- 0 b)) (- (pow b (/ c a)) (pow (pow -1 d) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 6,
      "simplification_time": 0.076733634
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (/ a (- 0 b)) (- (pow b (/ c a)) (pow (pow -1 d) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 6,
      "simplification_time": 0.002740659
    },
    "speedup": 27.998242028650772,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 1 a) (* (+ a (- a (/ -1 (+ a (pow 1 (* 1 b)))))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (- 1 a) (* a (+ (/ -1 (+ a (pow 1 b))) (* a -2))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.407008886
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ a (* a (- a (- (/ -1 (+ a (pow 1 b))) a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 9,
      "simplification_time": 0.014526981000000001
    },
    "speedup": 28.017444643178095,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -2
  },
  {
    "base_term": "(- (* a (+ a (* (- (/ c b) -1) (/ (+ (/ 0 (- -1 b)) c) (- c d))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (+ a (* (+ (/ c b) 1) (/ c (- c d))))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.27919223
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (+ a (* (+ (/ c b) 1) (/ c (- c d))))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.009887100999999999
    },
    "speedup": 28.23802750674844,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow (/ (- (- 1 (pow (/ -1 (pow -1 1)) a)) (/ a (pow b 1))) b) a) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (pow (/ (- (- 1 (pow 1 a)) (/ a b)) b) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.09927181299999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (pow (/ (- (- 1 (pow 1 a)) (/ a b)) b) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.003504074
    },
    "speedup": 28.33039855893454,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (pow -1 (pow (pow (- (pow (/ (- (/ 1 -1) 0) a) 0) (/ (- a b) -1)) a) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow -1 (pow (+ 1 (- a b)) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.021005335
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow -1 (pow (- 1 (/ (- a b) -1)) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.0007397840000000001
    },
    "speedup": 28.39387577995739,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (/ (+ (- 0 (/ (+ a (* (pow (pow a 1) b) 0)) (+ (/ 1 -1) -1))) 1) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 b) (+ -1 (* a -0.5)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.118655885
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (- 1 (/ a -2)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.0041131729999999995
    },
    "speedup": 28.847773969147426,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (* (* (- 0 (/ (+ (- (* a a) 0) (pow -1 -1)) (- 1 a))) a) 0) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.167937858
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005805311
    },
    "speedup": 28.928313745809657,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (pow a (+ (* (/ a (/ b (pow a b))) (/ b -1)) (pow -1 -1))) 1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (pow a (+ -1 (* (/ a (/ b (pow a b))) (* b -1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.048665756
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (pow a (+ -1 (* (/ a (/ b (pow a b))) (/ b -1)))) 1) 1)",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.0016785130000000002
    },
    "speedup": 28.993374492780212,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow a a) (- (/ (/ (- c (pow (pow (/ 1 -1) 1) (pow a c))) b) 1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a a) (/ (- c (pow -1 (pow a c))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.033838357
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a a) (/ (/ (- c (pow -1 (pow a c))) b) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.0011550710000000001
    },
    "speedup": 29.295477940317085,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow (pow a a) b) (/ (/ 0 (* (* (/ (- 1 (+ b a)) (+ -1 d)) c) 1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a a) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.23475421800000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a a) b)",
      "output_weight_simple": 4,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.008012299
    },
    "speedup": 29.299233341142163,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (- a 1) (+ (pow -1 a) (* (pow (- (/ a b) c) 0) d))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* (+ a -1) (+ (pow -1 a) d)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.156709555
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* (- a 1) (+ (pow -1 a) d)) 1)",
      "output_weight_simple": 9,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.005338293
    },
    "speedup": 29.35574255665622,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ (/ (+ (* a 0) a) (pow a a)) b) (pow (/ b 0) c)) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ (/ a (pow a a)) b) (pow (/ b 0) c)) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.07957718899999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ (/ a (pow a a)) b) (pow (/ b 0) c)) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.00268145
    },
    "speedup": 29.676924425217695,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- a (pow 1 1)) a) (/ (/ a -1) (- a (* a (* (pow b -1) c)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (+ a -1) a) (* a (/ 1 (- a (* (/ 1 b) (* a c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.12181511099999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- a 1) a) (/ (/ a -1) (- a (* a (/ c b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.004077936
    },
    "speedup": 29.871756447379262,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(- 1 (* a (* (- (pow 1 (* a a)) (- b (/ (/ (- a a) d) (- e c)))) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* c (* a (- (pow 1 (* a a)) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.462081808
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (* c (- b (pow 1 (* a a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.015428038
    },
    "speedup": 29.950782335381852,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (/ (/ b (pow (pow (/ (- (pow -1 b) c) (+ b a)) b) -1)) (+ a b))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ b (/ 1 (pow (/ (- (pow -1 b) c) (+ a b)) b))) (+ a b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.046570596000000006
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (/ b (/ 1 (pow (/ (- (pow -1 b) c) (+ a b)) b))) (+ a b)))",
      "output_weight_simple": 14,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.0015489840000000002
    },
    "speedup": 30.065253094931904,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- 1 1) (pow 1 (- (+ (/ (/ a (/ (pow 1 a) c)) (- 1 -1)) (- 0 -1)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (- (+ 1 (* (/ a (/ (pow 1 a) c)) 0.5)) a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.047538748
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (- (/ (/ a (/ (pow 1 a) c)) 2) (- a 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.001579482
    },
    "speedup": 30.097682657985338,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 1 (/ a (+ (/ a -1) (* (- 0 (pow b a)) (/ (/ 0 b) c)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ a (* a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.21235580199999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ a (/ a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 0.0070471629999999995
    },
    "speedup": 30.13351642355938,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (+ (* 1 a) a) -1) (+ a (/ (pow (+ (pow (pow 1 a) -1) b) (* b b)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (+ a (/ (pow (+ (/ 1 (pow 1 a)) b) (* b b)) 0)) -2))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.228888745
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a a) -1) (+ a (/ (pow (+ (/ 1 (pow 1 a)) b) (* b b)) 0)))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.007567064
    },
    "speedup": 30.248025522184033,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (/ (+ a 1) (pow (pow a (pow (/ (/ (pow -1 1) a) (+ b 1)) -1)) a)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a 1) (pow (pow a (/ 1 (/ (/ -1 a) (+ 1 b)))) a)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.028365754
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a 1) (pow (pow a (/ 1 (/ (/ -1 a) (+ 1 b)))) a)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.000937743
    },
    "speedup": 30.248963735266486,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (+ (- (/ a b) (* a (- (+ b (- (* a b) a)) (/ c 1)))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11214)",
      "output_term": "(+ (* a (+ (+ b (* a b)) (* -1 (+ (/ 1 b) (+ a c))))) 2)",
      "output_weight_simple": 15,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.958265561
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (* a (- b (+ a (- (/ c 1) (* a b))))) (/ a b)) 2)",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.031649169
    },
    "speedup": 30.27774792443998,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (pow -1 (+ (pow a (/ (pow (/ b 0) (pow -1 b)) 1)) b)) b) (pow c a))",
    "input_weight_simple": 21,
    "input_weight_complex": 59,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow -1 (+ b (pow a (pow (/ b 0) (pow -1 b))))) b) (pow c a))",
      "output_weight_simple": 14,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.022292977
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow -1 (+ b (pow a (/ (pow (/ b 0) (pow -1 b)) 1)))) b) (pow c a))",
      "output_weight_simple": 16,
      "output_weight_complex": 50,
      "output_depth": 9,
      "simplification_time": 0.0007334069999999999
    },
    "speedup": 30.39646062827325,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ a (/ a (/ (/ a (pow c (- 1 (pow (pow (- 1 0) b) 1)))) (+ 1 c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (/ (/ a (pow c (- 1 (pow 1 b)))) (+ c 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.028933568
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ a (/ (/ a (pow c (- 1 (pow 1 b)))) (+ c 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.0009467060000000001
    },
    "speedup": 30.562358324548484,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (- -1 1) (/ -1 (* a (* (pow (+ 0 a) a) (- (/ b -1) c))))) (+ d e))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ -2 (/ 1 (* -1 (* (pow a a) (* a (+ b c)))))) (+ d e))",
      "output_weight_simple": 17,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.138801245
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -2 (/ -1 (* a (* (pow a a) (- (/ b -1) c))))) (+ d e))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.004531175
    },
    "speedup": 30.63250591733932,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (- (- -1 (/ (- (pow a (+ a 1)) a) (/ (- a a) 0))) 0) 0) (pow 1 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.084370177
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002751251
    },
    "speedup": 30.666114069563264,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow (+ a a) (pow (- (* (- (* (/ a 1) a) b) b) (pow (/ c 0) -1)) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (+ a a) (pow (- (* b (- (* a a) b)) (/ 1 (/ c 0))) b)))",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.043583224
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow (+ a a) (pow (- (* b (- (* a (/ a 1)) b)) (/ 1 (/ c 0))) b)))",
      "output_weight_simple": 17,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.001417018
    },
    "speedup": 30.757000969641883,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* a (- b (pow -1 (pow -1 (pow (+ (/ a 0) -1) (pow b (- a b))))))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (- b (pow -1 (pow -1 (pow (+ -1 (/ a 0)) (pow b (- a b))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.036064721
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (* a (- b (pow -1 (pow -1 (pow (+ -1 (/ a 0)) (pow b (- a b))))))) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.001169142
    },
    "speedup": 30.847169120602974,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (- 0 (+ -1 (* (- (pow (- (* a 1) a) (+ -1 a)) 1) 1)))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(12410)",
      "output_term": "(/ 1 (- 0 (+ (pow 0 (+ a -1)) -2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 1.455829875
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (- 2 (pow 0 (- a 1)))) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.047163432
    },
    "speedup": 30.867767956326844,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a a) (/ b (/ (- (/ (+ 1 (- a (+ 0 b))) (- 0 c)) 1) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (/ b (+ 1 (* (/ (+ 1 (- a b)) (- 0 c)) -1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.47757434499999996
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (/ b (/ (- (/ (+ 1 (- a b)) (- 0 c)) 1) -1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.015470501
    },
    "speedup": 30.869998650980985,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* a (- (- (pow -1 (/ (* (* (- 1 1) a) a) (* a a))) -1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (+ a -2)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.105817406
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (- 2 a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.0034245689999999997
    },
    "speedup": 30.899481365392262,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (* (- 1 1) (/ 0 (* (- 1 (- (/ -1 a) 1)) (pow a a)))) a) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.114542096
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0037069139999999995
    },
    "speedup": 30.89958277963827,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (/ 1 a) (/ (+ (* (+ 1 1) (+ (pow -1 a) b)) 1) b)) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10545)",
      "output_term": "(- (* (/ 1 a) (/ (+ 1 (* 2 (+ (pow -1 a) b))) b)) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.8952088370000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (* (/ 1 a) (/ (+ 1 (* 2 (+ (pow -1 a) b))) b)) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.028822964
    },
    "speedup": 31.058875034503743,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a (/ (* (+ -1 a) -1) (/ (+ (* (* (- -1 a) 1) (/ a -1)) b) a))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10963)",
      "output_term": "(- (+ a (/ (+ 1 (* a -1)) (+ a (* (/ 1 a) (+ a b))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.457391518
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- 1 a) (/ (+ (* (- -1 a) (/ a -1)) b) a)) (- a b))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.046828275
    },
    "speedup": 31.122041501635497,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (/ (+ (+ (- a b) (* (* b (/ (- 1 a) 1)) (/ b -1))) (- a 0)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (+ a (+ (- a b) (* b (* b (+ -1 a))))) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 2.034960487
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (+ (* b (* (/ (- 1 a) 1) (/ b -1))) (+ a (- a b))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.06526642599999999
    },
    "speedup": 31.17928484394106,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow 0 (/ a 1)) a) (/ (pow (- a 1) (pow (pow -1 (- a 1)) (+ b 1))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 7,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow 0 a) a) (/ (pow (+ a -1) (pow (pow -1 (+ a -1)) (+ 1 b))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 7,
      "simplification_time": 0.024817367
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow 0 (/ a 1)) a) (/ (pow (- a 1) (pow (pow -1 (- a 1)) (+ 1 b))) d))",
      "output_weight_simple": 16,
      "output_weight_complex": 47,
      "output_depth": 7,
      "simplification_time": 0.000791361
    },
    "speedup": 31.36036145324321,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 0 (+ 1 (- a (+ (/ (* (/ (+ a 1) a) 1) (+ -1 -1)) c)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.36849838099999993
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.011715129999999999
    },
    "speedup": 31.454911810624377,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (+ a (* (/ -1 (pow 0 (pow 1 0))) (+ (/ (* -1 b) a) d))) -1) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ -1 (* (/ -1 0) (+ (/ (* -1 b) a) d)))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.166989934
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (+ -1 (* (/ -1 0) (+ (/ (- 0 b) a) d)))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.005289825
    },
    "speedup": 31.56813958873876,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow 1 (pow (- a a) (- (pow (/ (- -1 a) a) (* (+ 1 a) b)) a))) (/ -1 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 (pow 0 (- (pow (/ (- -1 a) a) (* (+ 1 a) b)) a))) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.044911287
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (pow 0 (- (pow (/ (- -1 a) a) (* (+ 1 a) b)) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.001420125
    },
    "speedup": 31.624883020860842,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (/ 1 a) (/ (+ (- a b) (/ -1 (+ 0 0))) (* b (pow (+ a c) c)))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ 1 a) (/ (+ (- a b) (/ -1 0)) (* b (pow (+ a c) c)))) a)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.065472735
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ 1 a) (/ (+ (- a b) (/ -1 0)) (* b (pow (+ a c) c)))) a)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.002045949
    },
    "speedup": 32.00115692033379,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ 1 (+ 1 a)) (* (+ (/ b -1) (/ (* (/ -1 -1) c) (pow 0 0))) 1)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* b (+ b (+ (/ 1 (+ 1 a)) (* -1 (/ c (pow 0 0))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.21071679100000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* b (- (/ 1 (+ a 1)) (+ (/ b -1) (/ c (pow 0 0)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.006583164
    },
    "speedup": 32.00843712840817,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (+ -1 (pow (+ 0 (* (/ (- (* (+ a a) b) (+ c b)) (pow -1 1)) 1)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (pow (+ b (+ c (* a (* b -2)))) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.264416934
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ -1 (pow (/ (- (* a (+ b b)) (+ b c)) -1) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.008260736000000001
    },
    "speedup": 32.00888322783829,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (pow (/ (* a (+ 1 (/ 1 0))) (/ (* -1 a) (pow a (* -1 -1)))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (* a (+ -1 (* (/ 1 0) -1))) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.041234192
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (/ (* a (+ 1 (/ 1 0))) (/ (- 0 a) a)) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.001283186
    },
    "speedup": 32.13422839713027,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (/ (/ a a) a) b) (+ (/ (* -1 a) (- (* a (/ a d)) e)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ 1 a) b) (+ a (/ (* a -1) (- (* a (/ a d)) e))))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.040242432
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (/ 1 a) b) (+ a (/ (- 0 a) (- (* a (/ a d)) e))))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.0012498779999999998
    },
    "speedup": 32.1970880357923,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ a (pow (* a a) (+ (pow (- a -1) (pow (/ b a) a)) (/ (- b c) a)))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 60,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (pow (* a a) (+ (pow (+ a 1) (pow (/ b a) a)) (/ (- b c) a)))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.056943929000000004
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (pow (* a a) (+ (pow (+ a 1) (pow (/ b a) a)) (/ (- b c) a)))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.001765917
    },
    "speedup": 32.246095937691294,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (/ 1 (/ 1 (* (pow (* 0 (/ (* a a) -1)) 1) a))) a) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ 1 (/ 1 0)) a) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.054221871
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ 1 (/ 1 0)) a) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.001678271
    },
    "speedup": 32.30817370972864,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- -1 (pow (/ a (/ (+ (/ 1 -1) (pow 1 -1)) (pow -1 a))) a)) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* c (- -1 (pow (/ a 0) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.048558218
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (- -1 (pow (/ a 0) a)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.0014993620000000002
    },
    "speedup": 32.385920144701544,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (* b 1) (/ (+ (+ (* a (* (pow c d) -1)) (pow 1 e)) 0) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (- b (/ (+ (* (pow c d) (* a -1)) (pow 1 e)) c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.482772147
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (- b (/ (- (pow 1 e) (* a (pow c d))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.014889197000000002
    },
    "speedup": 32.424323957833316,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (- -1 (* 1 (* (* (/ (* a (/ 0 a)) (+ 0 (pow b -1))) c) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.8597094129999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.026394190999999997
    },
    "speedup": 32.57191754806957,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- b (* (/ b (+ (* d b) (* (+ (pow 0 0) 0) (pow -1 e)))) e)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- b (* e (/ b (+ (* b d) (* (pow 0 0) (pow -1 e)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.086614944
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- b (* e (/ b (+ (* b d) (* (pow 0 0) (pow -1 e)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.002657688
    },
    "speedup": 32.59033566016778,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (/ (* a (pow (/ -1 (pow (/ a b) (* b (pow b b)))) (/ c (/ c a)))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 67,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (* a (pow (/ -1 (pow (/ a b) (* b (pow b b)))) (/ c (/ c a)))) d))",
      "output_weight_simple": 16,
      "output_weight_complex": 54,
      "output_depth": 9,
      "simplification_time": 0.029234477999999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (* a (pow (/ -1 (pow (/ a b) (* b (pow b b)))) (/ c (/ c a)))) d))",
      "output_weight_simple": 16,
      "output_weight_complex": 54,
      "output_depth": 9,
      "simplification_time": 0.0008966340000000001
    },
    "speedup": 32.60469489223027,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ (+ (- a (/ (+ 1 -1) a)) (/ (- (- 0 b) b) (* c 1))) d) d) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11237)",
      "output_term": "(/ (* d (+ (/ (* b -2) c) (+ a d))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.4139220989999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (* d (+ a (+ (/ (* b -2) c) d))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.043307553
    },
    "speedup": 32.64839505016596,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- (pow (* a (+ a (- (/ (pow (/ b -1) -1) (- a b)) (pow c b)))) 0) b) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 b) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.07023978
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 b) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.002149701
    },
    "speedup": 32.674209110941476,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (pow (pow -1 0) (/ 1 (/ (- a (/ 0 0)) (/ b 1)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (/ 1 (/ (- a (/ 0 0)) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.028003786
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow 1 (/ 1 (/ (- a (/ 0 0)) (/ b 1)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.000856593
    },
    "speedup": 32.69205562034712,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (/ a (/ (pow (/ a b) (/ (- (pow b 1) 1) (- -1 1))) a))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow a (/ a (/ (pow (/ a b) (+ (* b -0.5) 0.5)) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.02006236
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (/ a (/ (pow (/ a b) (/ (- b 1) -2)) a))) -1)",
      "output_weight_simple": 13,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.0006130350000000001
    },
    "speedup": 32.72628805859372,
    "weight_simple_diff": 0,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ (/ (+ 1 a) (pow (- (pow b (+ (/ b c) 0)) (+ -1 c)) -1)) c) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ c (/ (+ 1 a) (/ 1 (- (pow b (/ b c)) (+ c -1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.091635033
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ c (/ (+ 1 a) (/ 1 (- (pow b (/ b c)) (+ c -1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.002795853
    },
    "speedup": 32.775340119813166,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 0 (- 0 (pow 1 (pow a (* (- (- (- (pow a 1) 1) a) 1) (pow b (- a 0)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(21158)",
      "output_term": "(- 0 (pow 1 (pow a (* (pow b a) -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.153769969
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow 1 (pow a (* -2 (pow b a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.035176807
    },
    "speedup": 32.79916704776531,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (+ (+ (* 0 -1) (pow (/ (* (- a b) a) (+ 0 a)) -1)) a) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10138)",
      "output_term": "(/ a (+ a (/ 1 (- a b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.323729981
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ a (/ 1 (/ (* a (- a b)) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.040320736999999995
    },
    "speedup": 32.830004595402116,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ (/ (* 0 (/ a (* (/ (+ (/ a b) 1) (+ a d)) -1))) a) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.067296965
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 c)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.002046847
    },
    "speedup": 32.87835632072158,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (/ (- 1 (+ (- (/ a (pow a a)) (pow (+ b c) c)) -1)) (- b c)) b) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (+ (* (/ a (pow a a)) -1) (+ 2 (pow (+ b c) c))) (- b c)) (+ b b))",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.701991703
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- (pow (+ b c) c) (- (/ a (pow a a)) 2)) (- b c)) (+ b b))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.021341537
    },
    "speedup": 32.89321209620469,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* a a) (* (/ (pow 0 b) (/ (- (- (* 0 0) 1) 1) (pow a c))) (+ -1 b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) (* (/ (pow 0 b) (/ -2 (pow a c))) (+ b -1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.047423865999999995
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ (* a a) (* (/ (pow 0 b) (/ -2 (pow a c))) (- b 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 6,
      "simplification_time": 0.001437257
    },
    "speedup": 32.996093252633315,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (/ a (* a (- (pow a (pow c (- (pow b -1) 0))) (* (/ -1 d) 1))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a (* a (+ (pow a (pow c (/ 1 b))) (/ 1 d))))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.132387484
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (/ a (* a (- (pow a (pow c (/ 1 b))) (/ -1 d))))) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.0040110449999999995
    },
    "speedup": 33.00573391722108,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* b (* (* a (+ (+ (pow (* c (- c 0)) (pow -1 1)) (pow 0 e)) -1)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- a (* a (* b (+ (/ 1 (* c c)) (+ -1 (pow 0 e))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.008153436
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (+ (pow 0 e) (+ -1 (/ 1 (* c c)))) (* a b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.030539698
    },
    "speedup": 33.01124444649059,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ 1 (/ (+ (* (* (pow (- (pow a a) -1) 1) (/ 0 b)) c) (/ a -1)) b)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (/ 1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.189440487
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (/ a -1) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.0057345899999999995
    },
    "speedup": 33.034704660664495,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 1 (- a (/ 1 (pow a 0)))) (* (+ 0 (* (/ a 1) (- (- 1 a) a))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (+ a -1)) (* a (* (+ 1 (* a -2)) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.17757224700000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ 1 (- a 1)) (* (/ a 1) (* (- (- 1 a) a) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.0053733900000000005
    },
    "speedup": 33.04659572448678,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (* (+ -1 (pow (+ a (- a (+ (- -1 1) b))) a)) (+ -1 a)) 1) e)",
    "input_weight_simple": 21,
    "input_weight_complex": 34,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ -1 (pow (+ a (- a (+ -2 b))) a)) (+ -1 a)) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.247414046
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (* (+ -1 (pow (+ a (- a (+ -2 b))) a)) (+ -1 a)) e)",
      "output_weight_simple": 13,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.007354593
    },
    "speedup": 33.640752928136195,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (- a a) (- (* a a) (+ 1 (+ (* -1 (- 0 1)) (/ a 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.073331583
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.0021713089999999997
    },
    "speedup": 33.772983485998544,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* -1 (/ (+ (* (- (* (/ a (* -1 (- b 1))) b) 0) (* d 1)) (* b c)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10202)",
      "output_term": "(* -1 (+ (* (/ a (+ 1 (* -1 b))) d) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.9491372809999999
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (* b (+ c (* (/ a (- 1 b)) d))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.028059718
    },
    "speedup": 33.82561724248262,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ -1 (+ -1 (/ (- (+ -1 a) (pow (+ (- -1 1) 0) (* a 0))) (- a a)))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (+ -1 (/ (+ a -2) 0))) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.07662481700000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (+ -1 (/ (- a 2) 0))) d)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.0022644089999999998
    },
    "speedup": 33.83877073443888,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (/ b (pow -1 b)) (- (/ -1 1) (pow (pow (- 1 (pow b a)) (/ 1 d)) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 60,
    "input_depth": 8,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ b (pow -1 b)) (- -1 (pow (pow (- 1 (pow b a)) (/ 1 d)) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.012588023
    },
    "Extended": {
      "iterations": 1,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow (/ b (pow -1 b)) (- -1 (pow (pow (- 1 (pow b a)) (/ 1 d)) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.000371155
    },
    "speedup": 33.91581145343589,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (/ (- (/ -1 a) a) (* (pow -1 a) (* (/ (- 1 a) 1) (* (+ 0 a) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (- (/ -1 a) a) (* a (* (pow -1 a) (* (- 1 a) c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.452578791
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (- (/ -1 a) a) (* a (* (/ (- 1 a) 1) (* (pow -1 a) c)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.013335652
    },
    "speedup": 33.937507592429675,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (- (* b a) (pow (* (+ (* (+ a 1) b) c) d) b))) (- -1 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (- (* a b) (pow (* (+ (* a b) (+ b c)) d) b))) -2)",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.05462750300000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (- (* a b) (pow (* (+ (* b (+ a 1)) c) d) b))) -2)",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.001608521
    },
    "speedup": 33.96132409834874,
    "weight_simple_diff": -2,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* a (/ (+ a (pow (/ -1 b) b)) (* (* b (/ (/ c 0) 1)) (+ d -1)))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (+ a (pow (/ -1 b) b)) (* b (* (/ c 0) (+ -1 d)))) (* a d))",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 6,
      "simplification_time": 0.20338702700000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (* d (/ (+ a (pow (/ -1 b) b)) (* (/ (/ c 0) 1) (* b (+ -1 d))))))",
      "output_weight_simple": 18,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.005981006
    },
    "speedup": 34.00548787277592,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- a (- (- 1 (/ (+ (* b (+ (* a c) d)) (/ 0 d)) -1)) c)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ c (- a (- (+ 1 (* b (+ (* a c) d))) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 18,
      "output_depth": 8,
      "simplification_time": 0.8792559010000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ c (- (/ (* b (+ (* a c) d)) -1) (- 1 (+ a c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.025772071
    },
    "speedup": 34.116617985415296,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (pow (/ 1 a) a) a) (pow a (/ (* (+ 0 (/ (* 1 1) -1)) (/ 1 b)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (- (pow (/ 1 a) a) a) (pow a (/ (* -1 (/ 1 b)) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 6,
      "simplification_time": 0.035964484
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* (- (pow (/ 1 a) a) a) (pow a (/ (- 0 (/ 1 b)) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 6,
      "simplification_time": 0.001048173
    },
    "speedup": 34.311591693355965,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (pow a (+ 1 1)) b) (- (/ (pow -1 (* b (pow (+ a -1) -1))) b) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (* a b)) (- (/ (pow -1 (* b (/ 1 (+ a -1)))) b) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.044827439
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (pow a 2) b) (- (/ (pow -1 (/ b (+ a -1))) b) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.0013064539999999999
    },
    "speedup": 34.31229802197399,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (- (pow a 0) (+ (/ (pow b (- 1 (* 1 (/ b c)))) -1) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (+ (pow b (- 1 (/ b c))) (* a -1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.18655697300000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- 1 (+ a (/ (pow b (- 1 (/ b c))) -1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.005426107
    },
    "speedup": 34.381366419792315,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(* 1 (+ (pow a 0) (* (pow a b) (- (/ (- c (/ 0 -1)) -1) (+ d -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (pow a b) (+ 1 (* -1 (+ c d)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.182350265
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (pow a b) (- (/ c -1) (- d 1))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.005260803
    },
    "speedup": 34.66205919514569,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ 1 (pow 1 (+ (- 1 -1) (* (+ (* (/ a (* 1 a)) b) (/ 1 -1)) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12715)",
      "output_term": "(/ 1 (pow 1 (+ (* -1 b) 3)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 1.185241747
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow 1 (- 3 b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.034058065
    },
    "speedup": 34.80061908978094,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- (/ (/ (- (- (pow a 0) -1) (+ (pow (- -1 1) -1) 1)) b) a) 0) (/ -1 c))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ 1.5 b) a) (/ -1 c))",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 4,
      "simplification_time": 0.05702346700000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (/ 1.5 b) a) (/ -1 c))",
      "output_weight_simple": 9,
      "output_weight_complex": 28,
      "output_depth": 4,
      "simplification_time": 0.001630977
    },
    "speedup": 34.96276587591365,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- -1 a) (- b (pow a (* (* (- (* b a) -1) (/ c e)) (* b a))))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- -1 a) (- b (pow a (* b (* (/ c e) (+ a (* b (* a a)))))))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 10,
      "simplification_time": 0.6248803470000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- -1 a) (- b (pow a (* (/ c e) (+ (* a b) (pow (* a b) 2)))))) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.017825176
    },
    "speedup": 35.056054818196465,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 0 (* (pow 0 (* (+ -1 (/ (* (+ a (* -1 a)) a) (- a 0))) -1)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(23079)",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.393667346
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.039626695
    },
    "speedup": 35.16991124291339,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (* (+ a b) (- (* b (pow (* b -1) (* c a))) (/ d (/ (pow -1 c) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a b) (- (* b (pow (* b -1) (* a c))) (/ d (/ (pow -1 c) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 6,
      "simplification_time": 0.367625032
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a b) (- (* b (pow (- 0 b) (* a c))) (/ d (/ (pow -1 c) b))))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 6,
      "simplification_time": 0.010438972
    },
    "speedup": 35.216593358043305,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (- a b)) (/ b (/ (+ (+ a (- a (+ b -1))) a) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 18,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (- a b)) (/ b (+ -1 (* (/ 1 b) (+ 1 (* a 3))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.196922833
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (- a b)) (/ b (/ (+ 1 (- (* a 3) b)) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.033678483
    },
    "speedup": 35.53968962913204,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow -1 (* 1 0)) (/ (+ (pow 1 1) (/ (+ (+ a (+ a b)) (pow 0 -1)) -1)) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (* -1 (+ b (pow 0 -1))) (+ 1 (* a -2))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.407868711
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (/ (+ b (+ (pow 0 -1) (+ a a))) -1)) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.011425389
    },
    "speedup": 35.698452892938704,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ a b) (/ (+ b (/ a (- b (/ (- (/ 1 -1) b) (/ a 1))))) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ a (- b (/ (- -1 b) a))) (+ b b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.124816544
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a b) (/ (+ b (/ a (- b (/ (- -1 b) (/ a 1))))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.003465945
    },
    "speedup": 36.01226909255629,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- (/ (+ a (+ -1 (/ (- 1 0) (- (* b a) 1)))) b) a) (/ -1 c))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (/ (+ -1 (+ a (/ 1 (+ -1 (* a b))))) b) a) (/ -1 c))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.18757522000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (- (/ (+ a (+ -1 (/ 1 (- (* a b) 1)))) b) a) (/ -1 c))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.005182871
    },
    "speedup": 36.1913734684888,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a 1) (/ 1 (- (- a (/ (/ (+ (* 1 a) a) (/ b 0)) (pow 1 a))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ 1 (- a (/ (/ (+ a a) (/ b 0)) (pow 1 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.250539735
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ 1 (- a (/ (/ (+ a a) (/ b 0)) (pow 1 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.006912964000000001
    },
    "speedup": 36.242013555979746,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow (/ (+ a (* b (- (/ (pow c (+ 0 0)) 0) (/ b d)))) 0) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (+ a (* b (- (/ 1 0) (/ b d)))) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.039485187000000005
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (+ a (* b (- (/ 1 0) (/ b d)))) 0))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.001087569
    },
    "speedup": 36.305914383363266,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (/ 1 (pow a (pow a (pow a a)))) a) (/ (/ 1 (- a b)) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 55,
    "input_depth": 7,
    "Baseline": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ 1 (pow a (pow a (pow a a)))) a) (/ (/ 1 (- a b)) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 42,
      "output_depth": 7,
      "simplification_time": 0.011256268
    },
    "Extended": {
      "iterations": 1,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ 1 (pow a (pow a (pow a a)))) a) (/ (/ 1 (- a b)) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 42,
      "output_depth": 7,
      "simplification_time": 0.000308665
    },
    "speedup": 36.467587837947285,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (+ (/ -1 1) (/ 1 (* (- -1 (pow a (+ (pow 1 b) 1))) (/ (pow b 0) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ -1 (/ 1 (* (/ 1 0) (- -1 (pow a (+ 1 (pow 1 b))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.045258730999999996
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ -1 (/ 1 (* (- -1 (pow a (+ 1 (pow 1 b)))) (/ 1 0)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.001241002
    },
    "speedup": 36.46950689845786,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* 1 -1) (/ (pow 1 (* (- (- 1 a) (pow (* 0 0) -1)) (pow a (* a a)))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* -1 (pow 1 (* (- (- 1 a) (pow 0 -1)) (pow a (* a a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.06966758499999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ (pow 1 (* (- 1 (+ a (pow 0 -1))) (pow a (* a a)))) -1))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.0019066779999999998
    },
    "speedup": 36.53872599358675,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ (/ (pow 1 -1) 1) 1) (/ -1 (* (- -1 (pow a (pow -1 a))) (* (/ a -1) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 2 (/ -1 (* a (+ b (* b (pow a (pow -1 a)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.129479606
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 2 (/ -1 (* (- -1 (pow a (pow -1 a))) (* (/ a -1) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.00354281
    },
    "speedup": 36.54714929674467,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (/ -1 (* (pow (* a (* b (* (- 1 b) (+ 1 a)))) (+ b c)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ -1 (pow (* b (* (- 1 b) (+ a (* a a)))) (+ b c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.5752780279999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ -1 (pow (* b (* a (* (- 1 b) (+ a 1)))) (+ b c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.015729816
    },
    "speedup": 36.57245755449396,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* (* (+ (+ 0 -1) -1) a) (- a (* (* -1 (/ (* 1 -1) -1)) (pow 0 b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (* (+ a (pow 0 b)) 2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.162151418
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* (* -2 a) (+ a (pow 0 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.00441421
    },
    "speedup": 36.73396100321462,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow -1 (+ (pow a (pow (+ (/ (+ (- (pow 1 a) a) -1) a) b) b)) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ 1 (pow a (pow (+ (/ (+ (- (pow 1 a) a) -1) a) b) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.11059326
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ 1 (pow a (pow (+ (/ (+ -1 (- (pow 1 a) a)) a) b) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.0030096180000000004
    },
    "speedup": 36.74661036716287,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a (- (/ 0 b) (pow -1 -1))) (* (/ a (/ a (/ (- (+ c -1) c) b))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10154)",
      "output_term": "(+ a (* -1 (/ a (/ a (/ -1 b)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.47949076
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ a (/ a (/ -1 b))))",
      "output_weight_simple": 7,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.012978182
    },
    "speedup": 36.94591122238847,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (+ -1 1) (* (- (/ a (+ a 0)) (pow b (/ c (pow 1 b)))) (+ -1 -1))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -2 (* (pow b (/ c (pow 1 b))) 2)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.090957554
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (- 1 (pow b (/ c (pow 1 b)))) -2) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.002455994
    },
    "speedup": 37.03492516675529,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- -1 (- a a)) (- (/ 1 (* (+ (/ (- -1 (/ 1 a)) (pow -1 b)) 0) b)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (+ -1 (/ 1 (* b (/ (- -1 (/ 1 a)) (pow -1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.11546715899999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- (/ 1 (* b (/ (- -1 (/ 1 a)) (pow -1 b)))) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.003103178
    },
    "speedup": 37.20932508544466,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ 0 (pow (+ 1 a) (+ (/ (* (/ (pow a a) a) b) (+ 1 1)) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.07054769400000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001893039
    },
    "speedup": 37.26689941411667,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow a (- (pow a (pow (/ a (/ (/ (pow a a) b) c)) -1)) e)) (/ 1 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 61,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (- (pow a (/ 1 (/ a (/ (/ (pow a a) b) c)))) e)) (/ 1 0))",
      "output_weight_simple": 16,
      "output_weight_complex": 53,
      "output_depth": 10,
      "simplification_time": 0.025779808999999997
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (- (pow a (/ 1 (/ a (/ (/ (pow a a) b) c)))) e)) (/ 1 0))",
      "output_weight_simple": 16,
      "output_weight_complex": 53,
      "output_depth": 10,
      "simplification_time": 0.000691126
    },
    "speedup": 37.30117084294325,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (* (/ (pow a (/ b (- b (+ (* c b) d)))) 0) b) b) e)",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (* b (/ (pow a (/ b (- b (+ (* b c) d)))) 0)) b) e)",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.046842516
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (* b (/ (pow a (/ b (- b (+ (* b c) d)))) 0)) b) e)",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.001252258
    },
    "speedup": 37.40644180352611,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ a -1) (+ (pow (/ (- 1 -1) a) 0) (pow -1 (+ (+ 1 b) 0)))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* (* a -1) (+ 1 (+ a (pow -1 (+ 1 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 0.10376294900000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ a -1) (+ 1 (pow -1 (+ 1 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.0027521010000000003
    },
    "speedup": 37.703176227907335,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (- 1 a) (- 1 (- c (pow (- c (pow 0 (- c a))) 0)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (- 1 a) (+ (* c -1) 2)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.034366904
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (- 1 a) (- 1 (- c 1))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.000911231
    },
    "speedup": 37.71480996585937,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (+ (* 0 (- 1 (* (/ 1 (/ (pow a a) b)) (/ c a)))) 1)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a -1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.041343293
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a 1) c)",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.001090977
    },
    "speedup": 37.89565957852457,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ -1 a) (pow -1 (- a (/ a (/ (- (pow 0 -1) a) b))))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (pow (+ -1 a) (pow -1 (- a (/ a (/ (- (pow 0 -1) a) b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.04599511
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow (+ -1 a) (pow -1 (- a (/ a (/ (- (pow 0 -1) a) b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.001213038
    },
    "speedup": 37.91728700997,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ -1 a) (* (pow (+ a a) a) (* (* -1 -1) (- b (+ b (pow 1 1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(13155)",
      "output_term": "(+ (/ -1 a) (* -1 (pow (+ a a) a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.01289901
    },
    "Extended": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 a) (pow (+ a a) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.026670976000000002
    },
    "speedup": 37.977575698767076,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- (+ 1 1) 1) (* a (- a (* (- 0 c) (- 1 -1)))))",
    "input_weight_simple": 17,
    "input_weight_complex": 26,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ a (* 2 c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.11858315000000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ a (* 2 c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.003094535
    },
    "speedup": 38.320183807906524,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ -1 -1) a) (/ 1 (pow a (/ (* -1 (/ (- (* a a) 0) (+ c -1))) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 a) (/ 1 (pow a (/ (* -1 (/ (* a a) (+ -1 c))) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.090694315
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow 1 a) (/ 1 (pow a (/ (- 0 (/ (* a a) (+ -1 c))) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.002351359
    },
    "speedup": 38.571019993118874,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- (+ a a) (pow 0 (/ (pow (pow (* 0 -1) 1) 1) 0))) b) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (- (+ a a) (pow 0 (/ 0 0))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.056759728999999995
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (- (+ a a) (pow 0 (/ 0 0))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.001463532
    },
    "speedup": 38.78270444377027,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (pow (+ 1 (pow (- (pow (- a c) 0) (/ (- 1 b) b)) b)) 1) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (- 1 b) (pow (+ (* -1 (/ 1 b)) 2) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.069103722
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (pow (- 1 (/ (- 1 b) b)) b) (- b 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.001778761
    },
    "speedup": 38.849357502216435,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- -1 (/ (+ a -1) (- 0 (/ (pow (/ (* a a) 0) (+ a -1)) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (+ a -1) (pow (/ (* a a) 0) (+ a -1))) 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.209991683
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ (/ (+ a -1) (- 0 (/ (pow (/ (* a a) 0) (+ a -1)) -1))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.005395581
    },
    "speedup": 38.919197580390325,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (* (* 1 a) (- -1 (* (- (- b -1) c) (pow (- a d) 1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 7,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(14995)",
      "output_term": "(* a (+ (* (- (+ 1 b) c) (- a d)) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.738432915
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (* (- 1 (- c b)) (- a d)) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.018925919
    },
    "speedup": 39.017017614838146,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a 1) (+ (/ (+ (* (- -1 (/ (/ -1 0) a)) (+ 0 1)) a) c) (- -1 a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (/ (+ a (- -1 (/ (/ -1 0) a))) c) (- -1 a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 1.108280972
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ 1 (- (/ a 1) (/ (+ a (- -1 (/ (/ -1 0) a))) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.028104730999999997
    },
    "speedup": 39.433964765576306,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (/ 1 (* (- a -1) (* (- (/ (/ (+ -1 b) b) (pow b 1)) (+ a 0)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11576)",
      "output_term": "(pow -1 (/ 1 (* a (* (+ 1 a) (- (* (+ -1 b) (pow b -2)) a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.830199868
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ 1 (* a (* (+ 1 a) (- (/ (/ (+ -1 b) b) b) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.021049417
    },
    "speedup": 39.44051600098948,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (* -1 -1) (/ -1 (* (- (* a (- (* a a) a)) b) a))) (* -1 c))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (/ -1 (* a (- (* a (* a (+ -1 a))) b)))) (* -1 c))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.12109256300000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (/ -1 (* a (- (* a (- (* a a) a)) b)))) (- 0 c))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.0030605520000000002
    },
    "speedup": 39.56559568339306,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (/ (* (* a (/ -1 (/ -1 (pow a 1)))) (+ (+ (+ -1 -1) 0) -1)) b)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ b (/ (* (/ -1 (/ -1 a)) (* a -3)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.203513587
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (+ b (/ (* (/ -1 (/ -1 a)) (* a -3)) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.0051060409999999995
    },
    "speedup": 39.85741340502358,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (+ 0 (/ 1 1)) (- (pow -1 (/ (pow (+ (pow -1 a) -1) 0) 1)) b)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11259)",
      "output_term": "(* b -2)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.392758518
    },
    "Extended": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* b -2)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.034709538
    },
    "speedup": 40.126103608754455,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (pow a (+ b (- (/ (- (/ c (pow c 1)) (+ -1 c)) (pow -1 c)) -1))) e) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* e (+ -1 (pow a (+ 1 (+ b (/ (+ (* c -1) 2) (pow -1 c)))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.273405981
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* e (- (pow a (+ b (+ 1 (/ (- 1 (+ c -1)) (pow -1 c))))) 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.006782906
    },
    "speedup": 40.30808933516107,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (/ (+ (- -1 (* a a)) b) (+ (/ (+ (pow (+ -1 1) b) b) (pow -1 a)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (+ b (- -1 (* a a))) (+ a (/ (+ b (pow 0 b)) (pow -1 a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.167628888
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (+ (- -1 (* a a)) b) (+ a (/ (+ b (pow 0 b)) (pow -1 a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.004115593
    },
    "speedup": 40.73019076473305,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (+ b b) (pow (/ (- -1 (* (- (+ 0 0) c) (pow c c))) b) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ b (+ b -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.156360597
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- (+ b b) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.0038035810000000003
    },
    "speedup": 41.10878590465143,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- (* 1 a) a) (pow (/ a (/ (/ (- a (+ c 0)) c) (* 0 b))) -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10253)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.038742431
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.025212264999999998
    },
    "speedup": 41.199885492239595,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (/ 1 a) (/ (* (+ (+ (/ (- -1 a) b) (+ -1 a)) (* 0 a)) c) -1)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10878)",
      "output_term": "(/ 1 (+ c (* c (* -1 (+ a (/ (- -1 a) b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.80712783
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (/ 1 a) (/ (* (+ a (+ -1 (/ (- -1 a) b))) c) -1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.019537853
    },
    "speedup": 41.31097874469626,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- a (* 1 (/ (/ (pow 1 (pow b (+ (+ 0 0) -1))) (* a 0)) c))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (/ (/ (pow 1 (/ 1 b)) 0) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.160080292
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- a (/ (/ (pow 1 (/ 1 b)) 0) c)))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.003873327
    },
    "speedup": 41.32888651022751,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ 0 (* a (/ (+ a (+ b (* (pow -1 (pow -1 c)) (/ 1 -1)))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10386)",
      "output_term": "(+ (* -1 (pow -1 (pow -1 c))) (+ b (+ a a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 1.2159240480000002
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (/ (+ a (- b (pow -1 (pow -1 c)))) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.029396234
    },
    "speedup": 41.36325925286893,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -3
  },
  {
    "base_term": "(+ (/ (pow (/ (pow -1 (- -1 1)) a) (+ 1 (/ a (/ a (+ 1 0))))) 1) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (pow -1 -4) (pow a -2)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.034662502
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (pow (/ (pow -1 -2) a) (+ 1 (/ a (/ a 1)))) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.000836888
    },
    "speedup": 41.4183283784688,
    "weight_simple_diff": -4,
    "weight_complex_diff": -19,
    "depth_diff": -3
  },
  {
    "base_term": "(pow a (pow (- -1 (pow 0 (+ (* (pow (+ (pow 0 -1) a) 1) a) (/ (/ a -1) b)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (pow 0 (+ (* a (+ a (pow 0 -1))) (/ (* a -1) b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.053402954999999995
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- -1 (pow 0 (+ (* a (+ a (pow 0 -1))) (/ (/ a -1) b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.001282367
    },
    "speedup": 41.644049636336554,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (/ (+ a (- (/ a -1) (/ (- -1 (+ 0 a)) (pow 0 0)))) -1) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10797)",
      "output_term": "(+ (/ (- -1 a) (pow 0 0)) (+ a 1))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.9133279320000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a 1) (/ (- (+ a (/ a -1)) (/ (- -1 a) (pow 0 0))) -1))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.02184902
    },
    "speedup": 41.80178021714475,
    "weight_simple_diff": -4,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ (pow a (pow (* b -1) b)) (/ (/ (* a (pow (/ -1 1) a)) (* b b)) 1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ (pow a (pow (* b -1) b)) (/ (* a (pow -1 a)) (* b b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.056674630000000004
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow a (pow (- 0 b) b)) (/ (/ (* a (pow -1 a)) (* b b)) 1)) -1)",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.001347601
    },
    "speedup": 42.05594237463463,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (pow 1 (/ (- a (* (/ b c) (/ b 0))) 1)) 0) c)",
    "input_weight_simple": 17,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow 1 (- a (* (/ b c) (/ b 0)))) 0) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.032916527
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow 1 (/ (- a (* (/ b c) (/ b 0))) 1)) 0) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.000780981
    },
    "speedup": 42.14766684464795,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* a 1) (* a (+ a (+ a (/ (/ (/ (- -1 d) c) (+ 0 -1)) (* 1 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (+ (* (/ 1 c) (+ 1 d)) (+ a a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.439665561
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (+ a (+ a (/ (/ (/ (- -1 d) c) -1) 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.010387921
    },
    "speedup": 42.32469239995183,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(* (+ (/ (+ (+ a 1) (pow (- a (+ b (+ 0 b))) (+ a c))) 1) (+ a c)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* b (+ (pow (+ a (* b -2)) (+ a c)) (+ a (+ a c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.320255083
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* b (+ (+ a c) (/ (+ (+ a 1) (pow (- a (+ b b)) (+ a c))) 1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.00753834
    },
    "speedup": 42.48350207074767,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (- 1 (* (+ (/ (* a (- a (* a (- 0 a)))) (/ (* 1 -1) -1)) b) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(25636)",
      "output_term": "(* -1 (+ (* (* a a) (+ 1 a)) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.716599704
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (/ (* a (+ a (* a a))) 1) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 7,
      "simplification_time": 0.040233766000000004
    },
    "speedup": 42.665648152350435,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (- (/ 0 (pow (- 1 (- a (* (* (/ 0 a) b) (* a a)))) 0)) (pow c e)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(21508)",
      "output_term": "(+ b (- 0 (pow c e)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 2.053889155
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- b (pow c e))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.047999543000000006
    },
    "speedup": 42.78976479005226,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- (- a (* (* (+ 1 a) (pow a b)) (+ (/ (+ (/ 0 -1) 1) b) 0))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (- a (* (+ a 1) (* (pow a b) (/ 1 b)))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.221775012
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ b (* (+ a 1) (* (pow a b) (/ 1 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.00518169
    },
    "speedup": 42.799745256856355,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- 0 a) a) (- a (pow a (/ b (* b (- (- (pow a c) 1) (/ b b)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- 0 a) a) (- a (pow a (/ b (* b (+ (pow a c) -2))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.057089966000000006
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (- 0 a) a) (- a (pow a (/ b (* b (- (pow a c) 2))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.001325681
    },
    "speedup": 43.06463319607055,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ (/ a (- 1 (* a b))) (/ -1 (+ (pow (/ a a) -1) (pow 0 b)))) c) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ (/ a (- 1 (* a b))) (/ -1 (+ 1 (pow 0 b)))) c) d)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.054297274000000006
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ (/ a (- 1 (* a b))) (/ -1 (+ 1 (pow 0 b)))) c) d)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.001260443
    },
    "speedup": 43.07792895037698,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a (pow (pow a 0) (* -1 (/ (* (/ (- a b) a) -1) -1)))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.053091983
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001231568
    },
    "speedup": 43.109258278877014,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a a) (- 0 (* (/ b (- -1 (pow (+ 1 1) (/ 1 a)))) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (* (/ b (- -1 (pow 2 (/ 1 a)))) (* (pow a a) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.15629314
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* (/ b (- -1 (pow 2 (/ 1 a)))) (* (pow a a) c)))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.003623374
    },
    "speedup": 43.134697108275326,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (pow (* (/ (* (- 1 0) (* (* (* a b) c) (+ 0 c))) b) 1) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(18901)",
      "output_term": "(pow -1 (pow (* a (* c c)) d))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.581365
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (pow (/ (* (* b c) (* a c)) b) d))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.036546497
    },
    "speedup": 43.26994732217427,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(- -1 (pow 0 (pow (pow -1 (- (* a a) (/ (- -1 (+ a 0)) b))) c)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 0 (pow (pow -1 (- (* a a) (/ (- -1 a) b))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.08606317799999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow 0 (pow (pow -1 (- (* a a) (/ (- -1 a) b))) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.001986416
    },
    "speedup": 43.32585822909199,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (- (* a c) (- (* (pow (+ 1 (/ b c)) (/ d c)) (* a d)) -1)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* d (+ -1 (* a (+ c (* d (* (pow (+ 1 (/ b c)) (/ d c)) -1)))))))",
      "output_weight_simple": 17,
      "output_weight_complex": 39,
      "output_depth": 11,
      "simplification_time": 0.23596096400000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* d (- -1 (* a (- (* d (pow (+ 1 (/ b c)) (/ d c))) c)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 10,
      "simplification_time": 0.005439397
    },
    "speedup": 43.37998568591335,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (- (* (pow a -1) (/ (/ -1 (/ 1 -1)) 0)) (/ (- 0 1) (* a a))) 0) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ (/ 1 (* a a)) (* (/ 1 a) (/ 1 0))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.14734297100000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- (/ (/ 1 0) a) (/ -1 (* a a))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.003388149
    },
    "speedup": 43.48774832511794,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow -1 (/ 0 (pow (pow a a) (* a (/ (* (+ c b) b) e))))) -1)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.09318675600000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0021367369999999997
    },
    "speedup": 43.61171075335899,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ 1 0) (- (pow (pow a 0) (- (/ (+ b a) (* a 0)) (* b -1))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 0) (+ 1 (pow 1 (+ b (/ (+ a b) 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.13432771
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 0) (+ 1 (pow 1 (+ b (/ (+ a b) 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.003066494
    },
    "speedup": 43.80498054129569,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a (+ (/ (* -1 (/ (pow (pow (- b 1) b) (pow 0 a)) b)) a) c)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.050311985000000004
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001146813
    },
    "speedup": 43.87113243397137,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- 1 a) (pow -1 (* (+ (/ b (* (/ -1 (- 1 0)) (/ b c))) c) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 a) (pow -1 (* -1 (+ c (/ b (* -1 (/ b c)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.056487922
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 a) (pow -1 (- 0 (+ c (/ b (- 0 (/ b c)))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.001284937
    },
    "speedup": 43.96162769069612,
    "weight_simple_diff": -1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a (* (- (- -1 a) b) a)) (pow -1 (- (* a a) 0)))",
    "input_weight_simple": 17,
    "input_weight_complex": 32,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (* a (- (- -1 a) b))) (pow -1 (* a a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.09724185799999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a (* a (- -1 (+ a b)))) (pow -1 (* a a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.002185718
    },
    "speedup": 44.48966335089887,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (/ a c) (+ -1 (/ a (pow (* (/ (/ b 0) -1) (- -1 -1)) (+ 0 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ a c) (+ -1 (/ a (pow 0 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.049001205
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ a c) (+ -1 (/ a (pow 0 0)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.001090333
    },
    "speedup": 44.94150410929505,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (/ (+ a -1) (* (pow a 1) (/ (/ (pow (pow 0 b) a) (+ b c)) (- e e)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ a -1) (* a (/ (/ (pow (pow 0 b) a) (+ b c)) 0))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.06228918199999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ a -1) (* a (/ (/ (pow (pow 0 b) a) (+ b c)) 0))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.001376043
    },
    "speedup": 45.26688628189671,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- a (pow a (+ (/ (- 1 a) (/ 0 (pow 0 a))) (- (pow a 0) a)))) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (- a (pow a (+ (- 1 a) (/ (- 1 a) 0)))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.08204469199999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow (- a (pow a (+ (/ (- 1 a) 0) (- 1 a)))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.0017994959999999998
    },
    "speedup": 45.59315052659189,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow -1 (* (+ a (/ (- (+ 0 (pow (+ 0 -1) a)) c) 1)) (/ a -1))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (* (* -1 a) (+ a (- (pow -1 a) c)))) d)",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.153391954
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow -1 (* (+ a (/ (- (pow -1 a) c) 1)) (/ a -1))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.0033457340000000004
    },
    "speedup": 45.84702609352686,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (+ (pow (/ (- 1 (pow a (/ a (/ (+ c -1) a)))) c) e) d) (+ -1 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (+ (pow (/ (- 1 (pow a (/ a (/ (+ c -1) a)))) c) e) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 10,
      "simplification_time": 0.04585149299999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow (/ (- 1 (pow a (/ a (/ (+ c -1) a)))) c) e) d) -1)",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 10,
      "simplification_time": 0.000988666
    },
    "speedup": 46.37713140737114,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ (- a (* a a)) (pow (* b c) (/ 0 (pow (+ (/ d d) -1) (pow 1 b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (+ a -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 8,
      "output_depth": 4,
      "simplification_time": 0.10333456899999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ (- a (* a a)) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.002221725
    },
    "speedup": 46.51096287794394,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow -1 a) (- b (/ (- a b) (pow b (* (pow (+ a 1) a) (+ b b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow -1 a) (- b (/ (- a b) (pow b (* b (* 2 (pow (+ a 1) a)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.21527408099999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow -1 a) (- b (/ (- a b) (pow b (* (pow (+ a 1) a) (+ b b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.004603329
    },
    "speedup": 46.76486972797295,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (+ (/ -1 (* a (* (- (+ (- (* 1 -1) -1) (/ -1 a)) a) d))) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10791)",
      "output_term": "(+ a (+ -1 (/ 1 (* d (* -1 (+ 1 (* a a)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 0.808769642
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (/ -1 (* (- (/ -1 a) a) (* a d)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.017292103
    },
    "speedup": 46.77104005221343,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- a -1) (* (/ (+ 0 (- (/ -1 0) 1)) (* a (* (pow a a) -1))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* -1 (* (+ a 1) (/ (+ -1 (/ -1 0)) (* -1 (* a (pow a a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.8414841879999999
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (- (/ -1 0) 1) (* a (- 0 (pow a a)))) (- -1 a))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.017983367
    },
    "speedup": 46.79236029604467,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (- -1 0) (/ a (pow (/ a (* b b)) (/ (* c (+ (- -1 d) e)) (pow b e)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (pow (/ a (* b b)) (/ (* c (+ e (- -1 d))) (pow b e)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.20963978700000002
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ a (pow (/ a (* b b)) (/ (* c (+ (- -1 d) e)) (pow b e)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 0.004472403
    },
    "speedup": 46.87408245634395,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- 0 (- (* (+ (+ (* (* (* b a) 0) -1) (pow -1 a)) b) (pow 0 b)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (* (+ b (pow -1 a)) (* -1 (pow 0 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.307265684
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- 1 (* (+ b (pow -1 a)) (pow 0 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.006511916
    },
    "speedup": 47.185142437341014,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (pow (+ a (- (pow (- (/ b (pow b a)) (- (pow 1 b) 1)) -1) b)) 1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* -1 (+ a (/ 1 (- (/ b (pow b a)) (+ (pow 1 b) -1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.09465153300000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ 1 (- (/ b (pow b a)) (- (pow 1 b) 1))) (- b a)) -1)",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.001995544
    },
    "speedup": 47.43144375668991,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (- (pow 0 -1) (* b (pow (pow (/ a (pow (pow b -1) 0)) b) (/ (+ a b) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow 0 -1) (* b (pow (pow a b) (/ (+ a b) 0)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.059644844999999995
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (pow 0 -1) (* b (pow (pow (/ a 1) b) (/ (+ a b) 0)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.001253587
    },
    "speedup": 47.579342319280585,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (pow (- (- (* (- a 1) (+ (* a 0) 1)) (+ (pow a 1) a)) c) 1) c) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(19179)",
      "output_term": "(+ 1 (* (/ 1 c) (+ a 1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.9862635609999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (- (- -1 a) c) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.020641358999999998
    },
    "speedup": 47.78094121612826,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (/ (pow (/ a (pow (- a -1) b)) (/ (- -1 (/ (/ 1 b) -1)) (* c -1))) -1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (* -1 (pow (/ a (pow (+ a 1) b)) (/ (+ -1 (/ 1 b)) (* -1 c)))) a)",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 7,
      "simplification_time": 0.07910433299999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (pow (/ a (pow (+ a 1) b)) (/ (- -1 (/ (/ 1 b) -1)) (- 0 c))) -1) a)",
      "output_weight_simple": 17,
      "output_weight_complex": 49,
      "output_depth": 8,
      "simplification_time": 0.001650173
    },
    "speedup": 47.93699387882361,
    "weight_simple_diff": -2,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ 1 a) (* a (- a (* 1 (* (pow (pow (/ a a) 0) (* 0 0)) (+ b c))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 a) (* a (- a (+ b c))))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.515116694
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (* a (- a (+ b c))) a))",
      "output_weight_simple": 9,
      "output_weight_complex": 13,
      "output_depth": 6,
      "simplification_time": 0.010707984
    },
    "speedup": 48.10585204460522,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ 1 (/ (+ a (/ (- (pow 1 (pow (/ -1 0) -1)) (pow 0 a)) 1)) -1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (* -1 (+ a (- (pow 1 (/ 1 (/ -1 0))) (pow 0 a))))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.047824373
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ 1 (/ (+ a (/ (- (pow 1 (/ 1 (/ -1 0))) (pow 0 a)) 1)) -1)) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 10,
      "simplification_time": 0.000989001
    },
    "speedup": 48.35624332027976,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (- 0 (/ (+ a a) (/ b a))) (/ (/ (- (pow (/ -1 b) a) 0) b) e)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (* (/ 1 (/ b a)) (* a -2)) (/ (/ (pow (/ -1 b) a) b) e)) 0)",
      "output_weight_simple": 17,
      "output_weight_complex": 49,
      "output_depth": 7,
      "simplification_time": 0.097833198
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (- 0 (/ (+ a a) (/ b a))) (/ (/ (pow (/ -1 b) a) b) e)) 0)",
      "output_weight_simple": 15,
      "output_weight_complex": 45,
      "output_depth": 7,
      "simplification_time": 0.002022897
    },
    "speedup": 48.36291615440628,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (pow a 1) (/ (pow b (- b (- (- (* -1 a) a) (/ b -1)))) 1)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15752)",
      "output_term": "(pow a (pow b (+ a a)))",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.110603175
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow b (+ a (+ (/ b -1) (+ a b)))) 1))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.022821183
    },
    "speedup": 48.6654515237006,
    "weight_simple_diff": -6,
    "weight_complex_diff": -14,
    "depth_diff": -3
  },
  {
    "base_term": "(+ (pow a (* b (pow -1 c))) (/ b (/ (/ (- 0 (* (pow -1 -1) e)) (pow 0 0)) e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10091)",
      "output_term": "(+ (pow a (* b (pow -1 c))) (/ b (/ 1 (pow 0 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 5,
      "simplification_time": 1.17373168
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow a (* b (pow -1 c))) (/ b (/ (/ e (pow 0 0)) e)))",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 6,
      "simplification_time": 0.023898432000000004
    },
    "speedup": 49.11333429741331,
    "weight_simple_diff": -1,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (+ 0 (/ (+ a -1) (+ (* a (- b a)) (pow d (+ (+ -1 0) b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (+ a -1) (+ (* a (- b a)) (pow d (+ -1 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.145897866
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (+ a -1) (+ (* a (- b a)) (pow d (+ -1 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.002950276
    },
    "speedup": 49.45227700730372,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (* a (- 1 (- (+ b -1) (* (/ (+ a a) b) (* c 1))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (+ (* (/ (+ a a) b) c) (+ 2 (* b -1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 1.7648769510000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (+ 2 (- (* (/ (+ a a) b) c) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 0.035392172000000006
    },
    "speedup": 49.86630803557351,
    "weight_simple_diff": 2,
    "weight_complex_diff": 3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow -1 (- (- 1 (* 0 (+ a (* (- (* (* -1 0) 1) -1) (pow -1 a))))) (- a -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13737)",
      "output_term": "(pow -1 (* -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.867727303
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (- 0 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.017221590999999998
    },
    "speedup": 50.386012709278724,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (* (* (* (/ (* 0 0) a) (- (/ (- (pow 0 -1) 1) -1) (pow b 1))) 0) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.161351049
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0031770020000000004
    },
    "speedup": 50.78720409996593,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- (+ (* -1 -1) (+ (pow a (* b a)) (pow (+ -1 -1) b))) b) b) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (- (+ (pow a (* a b)) (+ 1 (pow -2 b))) b)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.479370637
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (- 1 (- b (+ (pow a (* a b)) (pow -2 b))))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.009431979
    },
    "speedup": 50.823972042346576,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (- (+ 0 (/ 0 -1)) (/ a (/ 1 (/ b (* 0 a))))) (pow a a)) (pow b 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ b (/ (- 0 (/ a (/ 1 (/ b 0)))) (pow a a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.048102195
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- 0 (/ a (/ 1 (/ b 0)))) (pow a a)) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.0009452849999999999
    },
    "speedup": 50.88644694457228,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a b) (* 0 (- (/ b (/ (+ (* (* -1 a) d) (/ -1 a)) (/ d -1))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14563)",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.424730411
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.027767146
    },
    "speedup": 51.30993336513591,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (/ -1 a) (+ (* a (- a (pow (- (/ 1 c) 1) (- b -1)))) (- 0 1))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ -1 a) (+ -1 (* a (- a (pow (+ -1 (/ 1 c)) (+ 1 b)))))) 0)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.118508797
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ -1 a) (+ -1 (* a (- a (pow (- (/ 1 c) 1) (+ 1 b)))))) 0)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.002289277
    },
    "speedup": 51.766910251577244,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (+ b 1) (/ (+ -1 b) (* (pow (- 1 (pow c a)) (/ -1 c)) (+ -1 d)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* a (+ b (/ (+ b -1) (* (pow (- 1 (pow c a)) (/ -1 c)) (+ -1 d))))))",
      "output_weight_simple": 17,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.256656473
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ b (+ 1 (/ (+ b -1) (* (pow (- 1 (pow c a)) (/ -1 c)) (+ -1 d))))))",
      "output_weight_simple": 17,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.004937643
    },
    "speedup": 51.979552389672556,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ a -1) (+ (pow (/ -1 0) (- (* a a) b)) (* (/ 0 (+ (/ 0 -1) 0)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* a -1) (+ (pow (/ -1 0) (- (* a a) b)) (* a (/ 0 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.062716214
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a -1) (+ (pow (/ -1 0) (- (* a a) b)) (* a (/ 0 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 0.00120636
    },
    "speedup": 51.987975397062236,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (- a (/ b -1)) b) (* b (* b (* (pow (* a b) (/ 0 d)) (/ a c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(20020)",
      "output_term": "(pow a (* (/ a c) (* b b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 1.337554269
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (+ b (/ b -1))) (* b (* b (/ a c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.025565043
    },
    "speedup": 52.31965653255502,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(/ -1 (/ (- a (pow 1 (* (pow a (/ (* (pow 1 c) c) (pow d a))) e))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (- a (pow 1 (* (pow a (/ (* c (pow 1 c)) (pow d a))) e))) c))",
      "output_weight_simple": 16,
      "output_weight_complex": 46,
      "output_depth": 10,
      "simplification_time": 0.050802515000000006
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (- a (pow 1 (* (pow a (/ (* c (pow 1 c)) (pow d a))) e))) c))",
      "output_weight_simple": 16,
      "output_weight_complex": 46,
      "output_depth": 10,
      "simplification_time": 0.000968467
    },
    "speedup": 52.45662991098303,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ 1 (/ (pow a (+ (- -1 0) (* (- (/ a -1) 1) a))) 0)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (/ (pow a (+ -1 (* (* a -1) (+ 1 a)))) 0)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.058659583
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- (/ 1 (/ (pow a (+ -1 (* a (- (/ a -1) 1)))) 0)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.001108313
    },
    "speedup": 52.926910538809885,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ -1 (* (/ 0 (+ a -1)) (+ (+ (- -1 (/ (* a b) a)) (- -1 -1)) a))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14122)",
      "output_term": "(pow -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 1.106536171
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.020757797
    },
    "speedup": 53.3070137934194,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (+ 1 (* (/ 1 a) (+ (- (+ a (pow (+ b -1) b)) (* c c)) 1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.430336484
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008036627000000001
    },
    "speedup": 53.54690269935384,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (/ (- (+ a -1) (pow (- (pow (pow 1 a) 0) (pow 0 -1)) (/ b 0))) a) b) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (/ (- (+ a -1) (pow (- 1 (pow 0 -1)) (/ b 0))) a) b) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.153094172
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- (/ (- (+ a -1) (pow (- 1 (pow 0 -1)) (/ b 0))) a) b) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.002816506
    },
    "speedup": 54.35606102028542,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (+ a (* (- -1 (/ (+ (+ (pow (* a 0) 1) (+ a a)) a) (- b b))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.543064554
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009926768
    },
    "speedup": 54.70708633464587,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- a -1) a) (- (+ (- 1 b) (* (- b (* (/ b -1) 1)) (+ 1 a))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(23882)",
      "output_term": "(/ (+ 1 (/ 1 a)) (+ (* b (+ a (+ a 1))) 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.194116231
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a 1) a) (- (* (- b (/ b -1)) (+ a 1)) (- b 2)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.021797658999999997
    },
    "speedup": 54.781856666351196,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a (/ (/ (pow -1 (pow 1 (/ (+ (pow a a) c) (- d c)))) 1) 0)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (/ (pow -1 (pow 1 (/ (+ (pow a a) c) (- d c)))) 0)) b)",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 9,
      "simplification_time": 0.04737474
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (/ (/ (pow -1 (pow 1 (/ (+ (pow a a) c) (- d c)))) 1) 0)) b)",
      "output_weight_simple": 17,
      "output_weight_complex": 46,
      "output_depth": 10,
      "simplification_time": 0.00086367
    },
    "speedup": 54.852825732050434,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- a a) (pow (pow (+ 1 (pow (* (/ b (+ -1 a)) (- a c)) (/ d c))) b) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow (pow (+ 1 (pow (* (/ b (+ a -1)) (- a c)) (/ d c))) b) c))",
      "output_weight_simple": 17,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.069891996
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow (pow (+ 1 (pow (* (/ b (+ a -1)) (- a c)) (/ d c))) b) c))",
      "output_weight_simple": 17,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.001265265
    },
    "speedup": 55.239017913243465,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a a) (/ (/ a (* (- (/ (pow (* a a) 0) a) (/ 1 0)) (- b -1))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (/ a (* (- (/ 1 a) (/ 1 0)) (+ 1 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.10561667500000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (/ (/ a (* (- (/ 1 a) (/ 1 0)) (+ 1 b))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.0019116900000000002
    },
    "speedup": 55.24780429881414,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- 0 a) (pow (pow (* (+ (+ b 1) b) (/ (* a (pow a 1)) (* a b))) a) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(24204)",
      "output_term": "(+ (- 0 a) (pow (pow (+ a (+ a (/ (* a a) (* a b)))) a) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 1.301503826
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (pow (* (+ b (+ b 1)) (/ (* a a) (* a b))) a) a) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.023489906
    },
    "speedup": 55.406940581201134,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (+ b (pow (- 1 a) (+ (pow (/ (- -1 b) (/ d e)) -1) (/ (/ 1 -1) c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ b (pow (- 1 a) (+ (/ 1 (/ (- -1 b) (/ d e))) (/ -1 c)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.069645914
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ b (pow (- 1 a) (+ (/ 1 (/ (- -1 b) (/ d e))) (/ -1 c)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.001256224
    },
    "speedup": 55.44068096135721,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow a (pow a (/ a (- 1 (- (* (pow (+ b 1) -1) (+ -1 a)) a))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (pow a (/ a (- 1 (- (* (/ 1 (+ 1 b)) (+ a -1)) a))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 10,
      "simplification_time": 0.124013968
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (pow a (/ a (- a (- (/ (+ a -1) (+ 1 b)) 1))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.002222812
    },
    "speedup": 55.79147854159507,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ (pow a (+ b (/ (* (- a (- 1 (+ 1 -1))) (+ a -1)) -1))) -1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (pow a (+ b (+ -1 (* a (+ (* a -1) 2)))))) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 9,
      "simplification_time": 0.16504317799999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (pow a (+ b (/ (pow (+ a -1) 2) -1)))) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.002954224
    },
    "speedup": 55.866846251333676,
    "weight_simple_diff": 1,
    "weight_complex_diff": -4,
    "depth_diff": 1
  },
  {
    "base_term": "(- (* (* (/ -1 a) a) (- (* a -1) (pow (- (/ (/ -1 a) b) 0) (pow a 0)))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(18461)",
      "output_term": "(+ a (/ (/ -1 a) b))",
      "output_weight_simple": 6,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 2.0962922649999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (/ (/ -1 a) b)) (* (/ -1 a) (* -1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.037338673
    },
    "speedup": 56.14265576604716,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ -1 (pow a (+ 1 1))) (/ (* b -1) (+ 1 (pow (pow (* a -1) -1) (/ -1 b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 (+ 1 (pow (/ 1 (* -1 a)) (/ -1 b)))) (* b (/ 1 (* a a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.082545239
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 (pow a 2)) (/ (- 0 b) (+ 1 (pow (/ 1 (- 0 a)) (/ -1 b)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 7,
      "simplification_time": 0.001459124
    },
    "speedup": 56.57177799830583,
    "weight_simple_diff": -2,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* (* (* a (/ -1 a)) (* (- a (- (* (/ b b) b) (- 1 0))) 0)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10687)",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 1.151188334
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.020277234999999998
    },
    "speedup": 56.772451174925976,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (* (+ a b) (+ (/ a (pow (- (+ 0 (pow b c)) (- d 0)) (+ c b))) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* (+ a b) (+ (/ a (pow (- (pow b c) d) (+ b c))) 1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.172473169
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (* (+ a b) (+ (/ a (pow (- (pow b c) d) (+ b c))) 1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.003032533
    },
    "speedup": 56.874292546857696,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (* (* (+ a b) (/ -1 -1)) (* (* (/ (/ 0 0) b) a) 1)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14446)",
      "output_term": "(+ a (* a (* (/ 0 0) (* (+ a b) (pow b -2)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.259099385
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (* (/ (/ 0 0) b) (* a (+ a b))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.021972298
    },
    "speedup": 57.30394631458211,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow 1 -1) (* (* (pow a 0) (/ (* (- (+ a 1) a) (* a a)) (pow -1 -1))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(25137)",
      "output_term": "(pow 1 (* a a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.835989526
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- 0 (/ (* a a) -1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.014555997000000001
    },
    "speedup": 57.43265308449843,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (* (+ b 1) (pow (pow a c) (pow a (* (/ (+ d -1) c) e)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (+ b 1) (pow (pow a c) (pow a (* (/ (+ d -1) c) e)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.07738086799999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (+ b 1) (pow (pow a c) (pow a (* (/ (+ d -1) c) e)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.001344643
    },
    "speedup": 57.547518560688594,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a 1) (/ 1 (- (* -1 a) (/ (- a (pow (pow 1 a) b)) b))))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(- (+ a 1) (/ 1 (- (* a -1) (/ (- a (pow (pow 1 a) b)) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.176949152
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (/ 1 (- (* a -1) (/ (- a (pow (pow 1 a) b)) b))) 1))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.003065524
    },
    "speedup": 57.72231827250415,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (pow (- (/ 1 a) a) (- 0 (* a (- (pow (* (+ 0 0) 1) (- -1 -1)) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow (- (/ 1 a) a) (- 0 (* a (- (pow 0 0) b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.098658994
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow (- (/ 1 a) a) (* a (- b (pow 0 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.0017039310000000001
    },
    "speedup": 57.90081523254169,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (+ (/ (- 1 a) -1) (/ a (/ (- b (* 0 (- (+ 0 1) b))) -1))) (* a c))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (* a (+ (/ 1 (* -1 b)) (+ 1 c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.244274442
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- 1 a) -1) (+ (/ a (/ b -1)) (* a c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 5,
      "simplification_time": 0.004211219
    },
    "speedup": 58.00563732258996,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (- -1 (/ a (- (- (pow (+ a (- 0 a)) b) (pow (+ 1 a) b)) 0))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10159)",
      "output_term": "(+ 1 (/ a (- (pow 0 b) (pow (+ a 1) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.178652711
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ a (- (pow 0 b) (pow (+ a 1) b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.020001229
    },
    "speedup": 58.929014362067456,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (- 1 a) (+ 1 (/ (pow (+ (pow (* 0 0) b) 0) (- b 0)) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (- 1 a) (+ 1 (/ (pow (pow 0 b) b) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.130441619
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (- 1 a) (+ 1 (/ (pow (pow 0 b) b) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.002209734
    },
    "speedup": 59.03046203751221,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ (pow (* 0 a) (- (* a (+ a (* (- 1 a) -1))) (/ (* a a) a))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10425)",
      "output_term": "(pow a (+ (pow 0 (* a (+ (+ a a) -2))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.964709304
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ (pow 0 (- (* a (+ a (- a 1))) (/ (* a a) a))) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.016327173
    },
    "speedup": 59.086120052748875,
    "weight_simple_diff": -3,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- -1 a) (/ (* b (+ (* (/ (pow (+ b -1) 1) (* b 0)) (+ 0 1)) b)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -1 a) (/ (* b (+ b (/ (+ -1 b) 0))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.285947253
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -1 a) (/ (* b (+ b (/ (+ -1 b) 0))) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.00483531
    },
    "speedup": 59.137315497868805,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (+ (/ (pow -1 a) b) (/ 0 (+ (pow (- (* 1 b) -1) b) (pow b -1)))) b) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10512)",
      "output_term": "(* (pow -1 a) -1)",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.065737109
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* b (/ (pow -1 a) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.017981438
    },
    "speedup": 59.26873640473026,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (pow 0 (- 1 (+ (/ (/ (/ a (* (- -1 -1) 1)) (* a a)) a) a))) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (- 1 (+ a (/ (/ (/ a 0) (* a a)) a)))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.056779629
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 (- 1 (+ a (/ (/ (/ a 0) (* a a)) a)))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.000957088
    },
    "speedup": 59.32540059012337,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (* (- a b) (+ (pow (/ (* (* 0 0) b) (pow -1 a)) (* 1 b)) -1)) 0) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (pow 0 b)) (- a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 0.30809465
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (- a b) (+ -1 (pow 0 b))) 1)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.005185520999999999
    },
    "speedup": 59.41440599700591,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (- (+ -1 (* -1 1)) a) (+ a (/ (- b (pow 1 a)) a)))",
    "input_weight_simple": 17,
    "input_weight_complex": 30,
    "input_depth": 6,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (- -2 a) (+ a (/ (- b (pow 1 a)) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.18037989
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -2 (+ a (+ a (/ (- b (pow 1 a)) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.003019247
    },
    "speedup": 59.743336666393965,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* a (- a (* (+ -1 (* (pow a b) (+ c c))) (* c (/ (- c 0) -1))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10488)",
      "output_term": "(/ (* a (- a (* (+ 1 (* (pow a b) (* c -2))) (* c c)))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.80514983
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (- a (* c (* (+ -1 (* (pow a b) (+ c c))) (/ c -1))))) b)",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.013472361
    },
    "speedup": 59.763083100282124,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (+ (pow 0 (* 0 (+ a 0))) a) (- (pow -1 -1) -1)) b)",
    "input_weight_simple": 17,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (pow 0 0)) 0) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.207260842
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ a (pow 0 0)) 0) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.00345546
    },
    "speedup": 59.980680430391324,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- -1 (pow (/ 1 a) (/ (* (pow (- (/ 0 1) -1) a) (pow a a)) (- 1 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* a (- -1 (pow (/ 1 a) (* (pow a a) (* (pow 1 a) 0.5)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.060305230999999994
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (- -1 (pow (/ 1 a) (/ (* (pow 1 a) (pow a a)) 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.001005045
    },
    "speedup": 60.00251829520071,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a (* a (* a (+ c (- -1 (* (* b (- 1 c)) (* c c))))))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13944)",
      "output_term": "(/ (+ a (* a (* a (* (+ c -1) (+ 1 (* b (* c c))))))) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.891439892
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (* (+ c (- -1 (* (- 1 c) (* b (* c c))))) (* a a))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.014750356000000001
    },
    "speedup": 60.43514420940077,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (- a (- (/ (/ b (- (* (* -1 -1) -1) a)) c) (- -1 1))) 0) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.054651379
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 1 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.000902289
    },
    "speedup": 60.56970549347271,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- (pow (* 1 1) (+ (pow -1 a) (* (/ 1 a) a))) a) d) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- (pow 1 (+ 1 (pow -1 a))) a) d) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.086703216
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- (pow 1 (+ 1 (pow -1 a))) a) d) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.001426686
    },
    "speedup": 60.77245869098036,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ (+ (pow (- a b) a) (pow (/ (- c b) (pow c -1)) a)) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (+ (pow (- a b) a) (pow (/ (- c b) (/ 1 c)) a)) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.067070273
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (+ (pow (- a b) a) (pow (/ (- c b) (/ 1 c)) a)) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.001094499
    },
    "speedup": 61.279428304639836,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ 0 (+ (/ 1 b) (/ (/ (+ c (- d 0)) d) b))))",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10810)",
      "output_term": "(* a (+ (pow b -1) (/ (/ (+ c d) d) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.76778404
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (/ 1 b) (/ (/ (+ c d) d) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.012514258
    },
    "speedup": 61.35274180858345,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (* (+ a (/ b (/ (- (+ -1 (pow -1 b)) (/ -1 a)) (pow 0 -1)))) a) 1) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (/ b (/ (+ -1 (+ (pow -1 b) (/ 1 a))) (pow 0 -1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.199514299
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (+ a (/ b (/ (- (pow -1 b) (+ (/ -1 a) 1)) (pow 0 -1))))) 1)",
      "output_weight_simple": 15,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.0032517320000000002
    },
    "speedup": 61.356316879742856,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* -1 (+ (- (+ 0 a) (* (/ (- a (+ 1 -1)) -1) -1)) (+ 1 -1))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 30,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(36418)",
      "output_term": "(* -1 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 4.733881396
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ a (+ (/ a -1) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.077152861
    },
    "speedup": 61.3571724320113,
    "weight_simple_diff": -5,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(pow (* (+ (- a (pow 0 a)) 1) (* 0 (* (- (+ (+ 1 b) 1) (* b 0)) a))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(20846)",
      "output_term": "(pow 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 1.229476534
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 7,
      "output_depth": 2,
      "simplification_time": 0.01994552
    },
    "speedup": 61.64173879648161,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ 0 a) (- a (/ (/ (/ (* (+ 1 (+ a 1)) (* a a)) c) -1) (pow -1 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (* a (* a (+ a 2))) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.8790837819999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ (/ (* (+ a 2) (* a a)) c) -1) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.014257784
    },
    "speedup": 61.656410421142574,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (* (pow (/ (- a -1) b) (- c (- (* a (+ d (+ a c))) 1))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (pow (/ (+ a 1) b) (- c (+ -1 (* a (+ a (+ c d))))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.278567009
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (pow (/ (+ a 1) b) (- c (- (* a (+ a (+ c d))) 1)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.004500906
    },
    "speedup": 61.891318992220675,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* (+ -1 (pow a (* b (/ (/ (- a (/ 1 a)) 1) (* a -1))))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (+ -1 (pow a (* b (/ (- a (/ 1 a)) (* a -1))))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.103263093
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (+ -1 (pow a (* b (/ (/ (- a (/ 1 a)) 1) (* a -1))))) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 10,
      "simplification_time": 0.001654774
    },
    "speedup": 62.4031396432383,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (pow 1 (* -1 (* 1 0))) (* (* a (- (* (+ (/ a a) 1) (pow b a)) c)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (* a (+ c (* (pow b a) -2)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.21255453900000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (* a (* a (- (* 2 (pow b a)) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 0.0033686939999999998
    },
    "speedup": 63.097015935552484,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (/ (+ 0 a) (* (* (/ (+ (* (- -1 a) b) -1) b) (pow (pow 1 -1) b)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11738)",
      "output_term": "(pow -1 (/ a (* (* -1 (pow 1 b)) (+ a (+ 1 (/ 1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.7215320089999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ a (* (/ (+ -1 (* (- -1 a) b)) b) (pow 1 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.011412489999999999
    },
    "speedup": 63.223013470329434,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (/ (/ a (- (pow 0 a) (pow (/ (/ (/ b -1) c) (pow e d)) (pow e 1)))) 0) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 63,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ a (- (pow 0 a) (pow (/ (/ (* b -1) c) (pow e d)) e))) 0))",
      "output_weight_simple": 17,
      "output_weight_complex": 48,
      "output_depth": 9,
      "simplification_time": 0.057565667
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ a (- (pow 0 a) (pow (/ (/ (/ b -1) c) (pow e d)) e))) 0))",
      "output_weight_simple": 17,
      "output_weight_complex": 51,
      "output_depth": 9,
      "simplification_time": 0.000903676
    },
    "speedup": 63.701666305180176,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ a (* (+ (+ (/ (+ (- 0 1) a) (pow a a)) (- a b)) c) a)) c) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow (/ a (* a (+ (/ (+ a -1) (pow a a)) (+ (- a b) c)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.577290291
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ c (pow (/ a (* a (+ (- a b) (+ (/ (+ a -1) (pow a a)) c)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.009048868000000002
    },
    "speedup": 63.79696233827257,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* (pow a (* a 0)) -1) (/ b (pow d (* b (/ (- (+ c -1) d) (* e b))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ b (pow d (* b (/ (- (+ -1 c) d) (* b e))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.23384901800000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ b (pow d (* b (/ (- -1 (- d c)) (* b e))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.0036445030000000003
    },
    "speedup": 64.16485814389506,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- -1 0) (+ a (* (/ a 0) (pow (pow 1 (pow b -1)) (pow 1 b))))) (pow c c))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (* -1 (+ a (* (/ a 0) (pow (pow 1 (/ 1 b)) (pow 1 b))))) (pow c c))",
      "output_weight_simple": 16,
      "output_weight_complex": 45,
      "output_depth": 8,
      "simplification_time": 0.083766481
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (+ a (* (/ a 0) (pow (pow 1 (pow b -1)) (pow 1 b))))) (pow c c))",
      "output_weight_simple": 16,
      "output_weight_complex": 43,
      "output_depth": 8,
      "simplification_time": 0.001298158
    },
    "speedup": 64.52718467243587,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ 0 1) (- (* a (- (- (/ (- (pow a a) a) (+ 0 1)) (* d -1)) c)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (* a -1) (- (+ (- (pow a a) a) d) c)) 2)",
      "output_weight_simple": 12,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.4924949589999998
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (* a (+ (/ (- (pow a a) a) 1) (- d c))) 1))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.022886696
    },
    "speedup": 65.21233816362134,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ (* 1 (/ a (* (* a (+ (- (pow a -1) 0) c)) (+ a (* d 0))))) c) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10134)",
      "output_term": "(- (/ (/ a (+ a (* a (* a c)))) c) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 7,
      "simplification_time": 1.172542153
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (/ a (* a (* a (+ (/ 1 a) c)))) c) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.017977549000000002
    },
    "speedup": 65.22258139861,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- a (* (+ (- b -1) (* a (- 1 0))) (+ (/ a (/ (/ -1 (- 0 0)) c)) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (+ 1 (+ a b)) (/ a (/ (/ -1 0) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.6500459789999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (- a (- -1 b)) (/ a (/ (/ -1 0) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.009951375
    },
    "speedup": 65.32222722990541,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (- (/ b (pow (/ a (/ (+ (pow (/ b 0) b) (* a c)) (* c 1))) 1)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10596)",
      "output_term": "(* (- (/ b (/ a (/ (+ (pow (/ b 0) b) (* c a)) c))) d) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.693639088
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ b (/ a (/ (+ (pow (/ b 0) b) (* a c)) c))) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.010605415
    },
    "speedup": 65.4042381179803,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow b (- -1 (- 0 (/ (- 0 (+ b (* (pow b a) a))) (/ c (- 0 -1)))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (+ -1 (/ (- 0 (+ b (* a (pow b a)))) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.14114233799999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow b (+ -1 (/ (- 0 (+ b (* a (pow b a)))) (/ c 1)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.002157519
    },
    "speedup": 65.4188157786791,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- -1 (+ a (/ 1 (- (pow (pow a b) (pow a (- c -1))) -1)))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* b (- -1 (+ a (/ 1 (+ 1 (pow (pow a b) (pow a (+ 1 c))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.133226337
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* b (- -1 (+ a (/ 1 (+ 1 (pow (pow a b) (pow a (+ 1 c))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.002034907
    },
    "speedup": 65.47047948628611,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (/ (- (/ (+ a 1) (+ (+ (/ (- 1 a) 1) 0) (/ a 1))) -1) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (/ 1 a) -2) -2)",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 0.281886818
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (/ (+ 1 (/ (+ a 1) (+ (/ (- 1 a) 1) (/ a 1)))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.004263828
    },
    "speedup": 66.1112075815441,
    "weight_simple_diff": -6,
    "weight_complex_diff": -17,
    "depth_diff": -4
  },
  {
    "base_term": "(+ a (- (- (/ (/ (/ a 1) 1) -1) (* b (pow 1 0))) (/ 1 -1)))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15741)",
      "output_term": "(+ 1 (* -1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 1.7794894129999999
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ (/ (/ (/ a 1) 1) -1) (- a b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.026864054000000002
    },
    "speedup": 66.2405388628239,
    "weight_simple_diff": -5,
    "weight_complex_diff": -17,
    "depth_diff": -3
  },
  {
    "base_term": "(* 0 (+ -1 (/ (- -1 (/ (* 1 (- (* (pow 1 a) 0) (/ a a))) c)) (/ b -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.08855566
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001332793
    },
    "speedup": 66.44367129779343,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (+ a a) -1) (/ (- 1 a) (- (+ a (pow (pow (+ 0 1) a) 0)) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10539)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.8927412650000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (+ a a) (+ -1 (/ (- 1 a) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 0.013408152
    },
    "speedup": 66.58197677054974,
    "weight_simple_diff": -7,
    "weight_complex_diff": -11,
    "depth_diff": -4
  },
  {
    "base_term": "(- 1 (/ a (- b (/ (* (* (* -1 b) (- 0 -1)) (/ (pow a 1) 1)) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10746)",
      "output_term": "(- 1 (/ a (+ b b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.095674071
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ a (- b (/ (* b (- 0 (/ a 1))) a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.016439556
    },
    "speedup": 66.64864130150472,
    "weight_simple_diff": -5,
    "weight_complex_diff": -14,
    "depth_diff": -4
  },
  {
    "base_term": "(- (* 1 (pow 0 (/ 0 (+ (+ (/ (* (- a b) b) b) (* 1 -1)) (+ a -1))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10611)",
      "output_term": "(- (pow 0 0) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.1639874529999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 0 0) a)",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.017405135
    },
    "speedup": 66.87609449739976,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 a) (/ (* (* 0 a) (- (/ (pow (pow -1 -1) b) (* 1 -1)) (pow -1 a))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.182404968
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002726351
    },
    "speedup": 66.9044330682293,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (pow (pow -1 -1) (* (/ (/ (- (pow (pow a 1) 1) -1) (pow a a)) -1) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow -1 (* -1 (* (/ (+ 1 a) (pow a a)) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.11111216599999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow -1 (* (/ (/ (+ 1 a) (pow a a)) -1) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.0016601160000000001
    },
    "speedup": 66.93036269754643,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (+ -1 (+ a b)) (/ c b)) (* b (* (/ a (/ (/ d (+ c 1)) 0)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10134)",
      "output_term": "(+ (+ c (* (/ c b) (+ a -1))) (* b (/ a (/ (/ d (+ c 1)) 0))))",
      "output_weight_simple": 17,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.651395171
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (+ -1 (+ a b)) (/ c b)) (* b (/ a (/ (/ d (+ c 1)) 0))))",
      "output_weight_simple": 17,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.009713968
    },
    "speedup": 67.05757842727091,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* b (+ (* b a) (/ (/ b (pow (/ c 1) (- 1 d))) (pow (+ 0 -1) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (+ (* a b) (/ (/ b (pow c (- 1 d))) (pow -1 b)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.093140453
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (+ (* a b) (/ (/ b (pow (/ c 1) (- 1 d))) (pow -1 b)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.001380048
    },
    "speedup": 67.49073438025344,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (/ (- (* (- 1 (+ (pow (pow 1 1) a) a)) a) 1) 0) 1) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ (* a (- 1 (+ a (pow 1 a)))) -1) 0) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.06967007900000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (/ (- (* a (- 1 (+ a (pow 1 a)))) 1) 0) 1) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.001031164
    },
    "speedup": 67.56449895457949,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow (pow a (pow b (/ (- a (pow (+ (pow 0 0) b) 1)) b))) (pow 0 b)) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.06556242
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000966249
    },
    "speedup": 67.85251006728079,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (- a (+ 1 (/ (+ (+ (* a (+ a b)) b) (/ 1 -1)) -1))) 1) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10006)",
      "output_term": "(- (+ (* (+ a b) (+ a 1)) -3) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.017706161
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (/ (+ (* a (+ a b)) (+ b -1)) -1) (+ c 2)))",
      "output_weight_simple": 13,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.014964693000000001
    },
    "speedup": 68.00715263587432,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (/ (* a (/ -1 (/ 0 0))) (pow -1 (pow (- (/ (pow b 0) 0) (/ b b)) b))) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 62,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (* a (/ -1 (/ 0 0))) (pow -1 (pow (+ -1 (/ 1 0)) b))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 7,
      "simplification_time": 0.06080124
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (* a (/ -1 (/ 0 0))) (pow -1 (pow (- (/ 1 0) 1) b))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 7,
      "simplification_time": 0.000891758
    },
    "speedup": 68.18132273554036,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- -1 (* 1 (+ (* (* a (/ (/ (pow a 0) 0) b)) (+ c (/ e e))) d))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(22626)",
      "output_term": "(* -1 (+ (* (/ (/ 1 0) b) (+ a (* a c))) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 2.080482619
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ (* (/ (/ 1 0) b) (* a (+ 1 c))) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.030102289
    },
    "speedup": 69.11376802607934,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- a (* (pow (/ a (* (* a 1) (+ (- c 1) c))) d) (- (+ -1 c) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- a (* (pow (/ a (* a (+ -1 (+ c c)))) d) (- (+ -1 c) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.868410373
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (* (pow (/ a (* a (- c (- 1 c)))) d) (- c (- b -1))) (+ a 1))",
      "output_weight_simple": 16,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.012434109
    },
    "speedup": 69.84098120741905,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (+ a (/ (+ 1 (- (/ (pow a (/ (+ b c) d)) -1) -1)) d)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (/ (+ (* (pow a (/ (+ b c) d)) -1) 2) d)) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.240154138
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a (/ (+ (/ (pow a (/ (+ b c) d)) -1) 2) d)) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.003376039
    },
    "speedup": 71.13488262428248,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (pow (pow -1 -1) (+ (- (- a (/ (+ 1 b) -1)) (* b 1)) 0)) 0) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(20024)",
      "output_term": "(- (pow -1 (+ a 1)) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 1.9902747279999997
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (pow -1 (- (- a b) (/ (+ 1 b) -1))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.027902513999999996
    },
    "speedup": 71.32958442382647,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (pow (/ 1 a) (+ (/ a (pow (- 1 (* (- c b) d)) (pow -1 a))) b)) (+ b d))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (/ 1 a) (+ b (/ a (pow (- 1 (* d (- c b))) (pow -1 a))))) (+ b d))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.08345733600000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow (/ 1 a) (+ b (/ a (pow (- 1 (* (- c b) d)) (pow -1 a))))) (+ b d))",
      "output_weight_simple": 17,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.0011659370000000001
    },
    "speedup": 71.5796273726625,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a -1) (* (+ (* 1 a) (+ a (/ b (pow (* 0 -1) a)))) (pow a b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (+ a (/ b (pow 0 a)))) (* (+ a -1) (pow a b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.478885263
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (- a 1) (* (+ (/ b (pow 0 a)) (+ a a)) (pow a b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.020348098000000002
    },
    "speedup": 72.67928742037708,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (* 0 (+ a (- a (pow (/ (/ (/ a (* b 1)) (+ 0 a)) a) c)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10008)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.942054026
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.012908473
    },
    "speedup": 72.97950935017643,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (+ (+ (/ (+ a -1) -1) (* (+ (pow (/ (- 1 a) -1) (* -1 a)) 0) b)) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15853)",
      "output_term": "(+ (* (pow (+ a -1) (* a -1)) b) 2)",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 1.420965259
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ (* (pow (/ (- 1 a) -1) (- 0 a)) b) (+ (/ (+ a -1) -1) (+ a 1)))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 0.019401963
    },
    "speedup": 73.23822125627184,
    "weight_simple_diff": -6,
    "weight_complex_diff": -13,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ -1 a) (+ a (/ (+ (* (* 0 (pow a b)) (- (+ a d) 0)) b) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10752)",
      "output_term": "(+ -1 (/ -1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.890185629
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (+ a 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 3,
      "simplification_time": 0.012012872
    },
    "speedup": 74.10264830924694,
    "weight_simple_diff": -2,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- (- a (+ (+ -1 -1) 0)) a) (* (+ (+ (/ -1 (* a 1)) 0) -1) a)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10024)",
      "output_term": "(* -1 (/ 2 (+ -1 (* a -1))))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.199841129
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 2 (* a (+ -1 (/ -1 a)))) -1)",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.01601476
    },
    "speedup": 74.92095598060789,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (/ (+ (+ (* (+ -1 (pow (pow 0 a) 1)) (- 0 -1)) a) -1) a) 1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17793)",
      "output_term": "(/ (* (/ 1 a) (+ (pow 0 a) -2)) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 1.322411073
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ (+ a (+ (pow 0 a) -2)) a) 1) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.017574303
    },
    "speedup": 75.24685747138876,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(* (* a b) (- (* (pow (- (/ 1 (- b (/ b b))) 1) a) 1) (- 1 d)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (* a b) (+ (pow (+ (/ 1 (+ b -1)) -1) a) (+ d -1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.501337366
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (* a b) (- (pow (- (/ 1 (- b 1)) 1) a) (- 1 d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.006632681
    },
    "speedup": 75.58593063649526,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow a 0) (/ 0 (* 0 (pow (- (* (- (+ 1 a) a) (/ a 0)) (* b d)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12363)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.47885896699999997
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.006307026
    },
    "speedup": 75.9246857393643,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (/ -1 -1) (* a (+ a (/ (- (- b (* (+ c -1) c)) 1) (+ (/ b 0) 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10014)",
      "output_term": "(/ 1 (* a (+ a (/ (+ -1 (- b (* (+ -1 c) c))) (/ b 0)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 1.589218463
    },
    "Extended": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ a (/ (- c (+ 1 (- (pow c 2) b))) (/ b 0)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.020734737
    },
    "speedup": 76.64521922800371,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (/ -1 (- 0 (/ (/ a (/ (- (/ (+ -1 b) 0) (/ b a)) (+ 1 a))) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ 1 (/ a (/ (- (/ (+ -1 b) 0) (/ b a)) (+ 1 a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.08277749
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ -1 (- 0 (/ (/ a (/ (- (/ (+ -1 b) 0) (/ b a)) (+ 1 a))) -1))))",
      "output_weight_simple": 16,
      "output_weight_complex": 42,
      "output_depth": 10,
      "simplification_time": 0.00107504
    },
    "speedup": 76.99945118321179,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (* a (pow (/ (- b (- (pow (- (+ 1 -1) 0) b) (+ 1 c))) b) c)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (pow (/ (- b (- (pow 0 b) (+ 1 c))) b) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.54777618
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (pow (/ (- 1 (- (pow 0 b) (+ b c))) b) c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.007100014
    },
    "speedup": 77.1514225183218,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 0 (pow (pow (- (/ (- a 1) a) (* b (+ (pow b c) d))) c) 0)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.097159714
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001259123
    },
    "speedup": 77.16459313347464,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (/ 0 a) (+ (/ (* (* 1 a) (/ -1 0)) a) (* (/ (* 1 -1) 1) b))) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 7,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(10362)",
      "output_term": "(pow 0 (+ (/ -1 0) (* -1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.7403804269999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (/ (* a (/ -1 0)) a) b))",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.022354709
    },
    "speedup": 77.85296722046347,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(pow 0 (* (- (* a b) (/ b (pow (- (+ 1 (pow c 0)) b) (- 0 -1)))) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* c (- (* a b) (/ b (- 2 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.10478716399999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* c (- (* a b) (/ b (- 2 b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.001344696
    },
    "speedup": 77.92628519754649,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a (* (/ (* (pow a 1) (- 1 b)) b) b)) (- 1 (pow c a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 7,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11002)",
      "output_term": "(+ (- 1 (pow c a)) (* a b))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.7670431600000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (* b (/ (* a (- 1 b)) b))) (- 1 (pow c a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.009780118
    },
    "speedup": 78.42882468289237,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(- (* 0 (* 0 (+ 0 (/ (- a (- b (/ (pow -1 -1) b))) (pow (pow b a) 1))))) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.19842452500000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002523434
    },
    "speedup": 78.63273816553158,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (pow (* (pow 1 (* (* a (- (* b (+ 1 a)) (+ c c))) c)) -1) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.42607509600000004
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005385106000000001
    },
    "speedup": 79.12102305878473,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (/ (- (- a 1) (/ b (/ (* a (- (- -1 1) 1)) (+ -1 b)))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.16114867
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002033978
    },
    "speedup": 79.22832498679927,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (pow (pow (- a (/ (+ (- a (pow b (* 1 b))) -1) (/ (+ 1 1) 0))) -1) a) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ 1 (- a (/ (+ -1 (- a (pow b b))) (/ 2 0)))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.386281219
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (/ 1 (- a (/ (+ (- a (pow b b)) -1) (/ 2 0)))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.004859564
    },
    "speedup": 79.48886340420663,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (+ 1 (- (* (/ (pow a (+ 1 b)) (* (/ (pow 0 b) b) -1)) (- b c)) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (- (* (/ (pow a (+ 1 b)) (* (/ (pow 0 b) b) -1)) (- b c)) c)))",
      "output_weight_simple": 17,
      "output_weight_complex": 39,
      "output_depth": 9,
      "simplification_time": 0.20306901700000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ 1 (- (* (/ (pow a (+ 1 b)) (- 0 (/ (pow 0 b) b))) (- b c)) c)))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.002544644
    },
    "speedup": 79.80252522553253,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (pow 0 (pow (- 0 (+ a -1)) (* (/ (/ (- (* b a) b) a) b) (/ a c)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(19288)",
      "output_term": "(- a (pow 0 (pow (+ 1 (* a -1)) (* (+ a -1) (/ 1 c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.9892041659999999
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow 0 (pow (- 1 a) (* (/ (/ (- (* a b) b) a) b) (/ a c)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 0.012386010000000003
    },
    "speedup": 79.86463485819887,
    "weight_simple_diff": -2,
    "weight_complex_diff": -11,
    "depth_diff": -3
  },
  {
    "base_term": "(* (+ (- -1 (* 1 -1)) 0) (pow a (pow b (- b (/ (- (- 1 -1) d) (pow d 1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.07133262600000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.000891992
    },
    "speedup": 79.97002887918279,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (- (* a (* (pow a 0) (* (- a (/ (/ -1 -1) a)) a))) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(12340)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.5032157240000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.018746665
    },
    "speedup": 80.18576765520694,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* 0 (* a (- a (* a (- (pow (- (* c -1) 1) (/ d 1)) -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11198)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.86113699
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.010671106
    },
    "speedup": 80.69800731058243,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (* (- (- (/ (- (- (/ a 0) a) (- 1 -1)) (+ c c)) e) 0) b) 0) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (- (/ (+ (- (/ a 0) a) -2) (+ c c)) e) b))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.676769159
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* (- (/ (- (/ a 0) (+ a 2)) (+ c c)) e) b))",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.008283165
    },
    "speedup": 81.70417455163576,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (* a a) (* (+ (- b 0) -1) (+ a (- (* b (pow (pow b a) b)) (/ c -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(12325)",
      "output_term": "(* (* a a) (* (+ b -1) (+ a (+ (* b (pow (pow b a) b)) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 1.050507177
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (* a a) (* (+ b -1) (+ a (- (* b (pow (pow b a) b)) (/ c -1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.01285708
    },
    "speedup": 81.70651322073131,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(- (/ (- a (+ (/ -1 (* 1 (/ a -1))) (pow -1 1))) a) c)",
    "input_weight_simple": 17,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (+ (/ 1 (* a -1)) (+ a 1)) a) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.31553342700000003
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (- a (+ -1 (/ -1 (/ a -1)))) a) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.003854235
    },
    "speedup": 81.86668093668393,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(- 0 (* (- (+ a (/ 0 -1)) (- (pow (/ (+ b -1) b) (pow (pow b c) 0)) d)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10038)",
      "output_term": "(+ -1 (* b (* -1 (+ a (+ -1 d)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 1.1238787000000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* b (- (/ (+ -1 b) b) (+ a d)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.013629476000000001
    },
    "speedup": 82.45942103716973,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(+ (* 1 (- 0 (+ (pow (/ (* (/ (pow -1 -1) -1) (* a a)) a) a) b))) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "NodeLimit(18461)",
      "output_term": "(+ (- 0 (+ (pow a a) b)) c)",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 3.3614910940000002
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(- (- c b) (pow (/ (* a a) a) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.040567927000000004
    },
    "speedup": 82.86080513800964,
    "weight_simple_diff": 0,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow a a) (- a (+ (+ (/ (* (+ (/ a 1) b) (+ b b)) b) b) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11512)",
      "output_term": "(* (pow a a) (+ (* a -1) (* b -4)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.927823776
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow a a) (- a (+ b (+ b (/ (* b (* (+ (/ a 1) b) 2)) b)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 10,
      "simplification_time": 0.011155143999999999
    },
    "speedup": 83.17452253417797,
    "weight_simple_diff": -5,
    "weight_complex_diff": -13,
    "depth_diff": -6
  },
  {
    "base_term": "(pow 1 (* -1 (* (- -1 (+ (pow (pow 1 (* (* -1 a) -1)) (pow 1 a)) -1)) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10696)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.4547697880000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.01748762
    },
    "speedup": 83.18855213002114,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- a (+ -1 (/ b c))) (/ (/ (/ c (* (+ 1 (* a 1)) (/ e a))) d) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13623)",
      "output_term": "(/ (- a (+ -1 (/ b c))) (* -1 (/ (/ c (+ e (/ e a))) d)))",
      "output_weight_simple": 15,
      "output_weight_complex": 41,
      "output_depth": 7,
      "simplification_time": 1.341855263
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 (- (/ b c) a)) (/ (/ (/ c (* (/ e a) (+ a 1))) d) -1))",
      "output_weight_simple": 17,
      "output_weight_complex": 47,
      "output_depth": 7,
      "simplification_time": 0.01608946
    },
    "speedup": 83.39964566865514,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* a (* b (pow (/ a (pow (- (/ (+ c 0) 1) (- c a)) (+ c -1))) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(28502)",
      "output_term": "(pow a (* a (* b (/ a (pow a (+ c -1))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 1.63720098
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* b (* a (/ a (pow (+ (/ c 1) (- a c)) (+ c -1))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.019430334
    },
    "speedup": 84.26005337839277,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(- (+ (/ a b) 1) (+ (/ (* (* a b) (pow -1 (* c (pow a 1)))) b) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13033)",
      "output_term": "(- (+ (/ a b) 1) (+ b (* a (pow -1 (* a c)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 1.083369029
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a b) (+ (/ (* b (* a (pow -1 (* a c)))) b) (- b 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.012807701999999999
    },
    "speedup": 84.58730762161706,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(+ 1 (- a (/ (* a (- a (/ a (+ (+ (* 1 a) -1) (/ 0 0))))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10200)",
      "output_term": "(+ 1 (/ a (+ a (+ -1 (/ 0 0)))))",
      "output_weight_simple": 9,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.950148888
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (+ 1 a) (/ (* a (- a (/ a (+ a (+ -1 (/ 0 0)))))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.011185907
    },
    "speedup": 84.941604467121,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(* a (- (pow a (- 1 (/ (- 1 a) (* (* a (+ 1 b)) (/ a c))))) (- 0 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (pow a (- 1 (/ (- 1 a) (* a (* (+ 1 b) (/ a c))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.386369046
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ 1 (pow a (- 1 (/ (- 1 a) (* (+ 1 b) (* a (/ a c))))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.004520605
    },
    "speedup": 85.46843752108403,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ (- 1 (/ (/ (pow 1 a) (* (+ (* b 1) c) (/ c b))) 0)) c) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13242)",
      "output_term": "(- (+ c (- 1 (/ (/ (pow 1 a) (* (+ b c) (/ c b))) 0))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 1.287996618
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (+ (/ (/ (pow 1 a) (* (+ b c) (/ c b))) 0) (- a c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.01497214
    },
    "speedup": 86.02622056699977,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ a b) (pow (pow 0 (/ (* c (+ (* (pow a -1) a) a)) (/ (/ c 1) d))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14119)",
      "output_term": "(* (+ a b) (pow (pow 0 (/ (* c (+ a 1)) (/ c d))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 1.1808989479999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a b) (pow (pow 0 (/ (* c (+ a 1)) (/ (/ c 1) d))) a))",
      "output_weight_simple": 15,
      "output_weight_complex": 39,
      "output_depth": 7,
      "simplification_time": 0.013569823
    },
    "speedup": 87.02390208037347,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (* a (/ (- 0 (* b a)) (- (+ -1 (* 0 1)) (pow (+ (/ b b) b) 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.112775452
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001269793
    },
    "speedup": 88.81404449386632,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- (pow (* (/ (* (/ a (/ (* -1 0) a)) (* -1 c)) b) d) b) a) (pow -1 b))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (- (pow (* (/ (* -1 (* (/ a 0) c)) b) d) b) a) (pow -1 b))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.401069781
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (pow (* (/ (* (/ a 0) (* -1 c)) b) d) b) (+ a (pow -1 b)))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.004434738
    },
    "speedup": 90.43821326085104,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 2
  },
  {
    "base_term": "(pow 0 (- (* a (pow a (/ b 0))) (/ (/ a (pow -1 a)) (- (pow (pow 0 1) a) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (* a (pow a (/ b 0))) (/ (/ a (pow -1 a)) (+ -1 (pow 0 a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 41,
      "output_depth": 6,
      "simplification_time": 0.08322911899999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (* a (pow a (/ b 0))) (/ (/ a (pow -1 a)) (- (pow 0 a) 1))))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 6,
      "simplification_time": 0.000912621
    },
    "speedup": 91.19790033321608,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* a (+ (- (* (/ (- a (/ (+ b a) b)) 0) (* (- a 1) b)) a) -1)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (+ (- (* b (* (/ (- a (/ (+ a b) b)) 0) (+ a -1))) a) -1)) c)",
      "output_weight_simple": 16,
      "output_weight_complex": 33,
      "output_depth": 11,
      "simplification_time": 0.49506461799999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* a (- (* b (* (/ (- a (/ (+ a b) b)) 0) (- a 1))) (- a -1))) c)",
      "output_weight_simple": 17,
      "output_weight_complex": 34,
      "output_depth": 10,
      "simplification_time": 0.005420815000000001
    },
    "speedup": 91.3266027340907,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (pow (/ 1 (* (/ (/ a (+ (- (* a 0) b) 1)) (* 1 b)) b)) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10308)",
      "output_term": "(- a (pow (/ 1 (/ a (+ 1 (- 0 b)))) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.2109766020000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (pow (/ 1 (* b (/ (/ a (- 1 b)) b))) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.013136524
    },
    "speedup": 92.18394470257125,
    "weight_simple_diff": 0,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ (+ (- a -1) (/ (* (* (* (/ b c) c) a) a) (- (/ d -1) 0))) c) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14769)",
      "output_term": "(+ -1 (/ (+ (- a -1) (/ (* a (* a b)) (* -1 d))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 1.168643167
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (+ (+ a 1) (/ (* (/ b c) (* a (* a c))) (/ d -1))) c) 1)",
      "output_weight_simple": 16,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.012654403
    },
    "speedup": 92.35071516214553,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ (- a -1) 1) (- a (+ 0 (pow 0 (/ (- b 1) (+ (+ a -1) -1))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a 2) (- a (pow 0 (/ (+ -1 b) (+ a -2)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.539309823
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a 2) (- a (pow 0 (/ (- b 1) (+ a -2)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.00583325
    },
    "speedup": 92.45443329190417,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* 0 a) (* (pow (- a -1) a) (+ (* (+ (* c (/ c c)) (- c d)) e) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10075)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.658813541
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.017897122
    },
    "speedup": 92.68604980175024,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (* (/ a (pow 1 (* (- -1 (pow (* a -1) a)) -1))) -1) a) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15122)",
      "output_term": "(+ 1 (* -1 (/ 1 (pow 1 (+ 1 (pow (* a -1) a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 1.6314675639999998
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (/ a (pow 1 (+ 1 (pow (- 0 a) a))))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.017478676
    },
    "speedup": 93.34045462024697,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* 0 (pow (/ a 0) (pow a (/ (* (- (- c 1) 1) (* a a)) (- 1 d))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.225956643
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0024065550000000003
    },
    "speedup": 93.89215829266315,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a (+ (+ (/ (- (pow 1 (/ (* 1 -1) 0)) a) a) (pow 0 a)) (- 1 a))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10942)",
      "output_term": "(- (pow a (+ (* (pow 1 (/ -1 0)) (/ 1 a)) (+ (pow 0 a) (* a -1)))) b)",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 7,
      "simplification_time": 0.928355268
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a (+ (/ (- (pow 1 (/ -1 0)) a) a) (+ (pow 0 a) (- 1 a)))) b)",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.009871247
    },
    "speedup": 94.04640244540533,
    "weight_simple_diff": 0,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ a (* (* a -1) b)) (+ (+ 0 (* (/ b (- 1 (- b 0))) (/ -1 b))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(11734)",
      "output_term": "(* (/ -1 b) (+ a (* -1 (/ 1 (- 1 b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.7396794529999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (- 0 (* a b))) (+ a (* (/ b (- 1 b)) (/ -1 b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.0077904409999999995
    },
    "speedup": 94.94705793933873,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* (/ (* (* 1 a) b) b) (* (+ 0 1) (pow a (/ b -1)))) -1) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15474)",
      "output_term": "(* a (pow a (* b -1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.359548748
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (* (/ (* a b) b) (pow a (/ b -1))) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.01417791
    },
    "speedup": 95.89204248016809,
    "weight_simple_diff": -5,
    "weight_complex_diff": -17,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (- a (pow (- b (/ (+ (- 1 (* (* 0 a) c)) 1) (pow -1 a))) c)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (pow (- b (/ 2 (pow -1 a))) c)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.22423114600000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (pow (- b (/ 2 (pow -1 a))) c)) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.0023001140000000002
    },
    "speedup": 97.48697064580277,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow (+ (* a (- b (+ -1 b))) (+ b (- c (* (+ -1 0) 1)))) d) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(70739)",
      "output_term": "(pow (+ b (+ a (+ c 1))) d)",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 2.389415299
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ b (+ a (+ c 1))) d)",
      "output_weight_simple": 9,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.024470018
    },
    "speedup": 97.64665064815236,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (pow a b) (- (/ a 1) (/ (* (- c 1) (- (- 0 b) 0)) (/ (+ c 1) e))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a b) (+ a (* (/ 1 (/ (+ 1 c) e)) (* (+ c -1) b))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.517123717
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- (pow a b) (- (/ a 1) (/ (* b (- 1 c)) (/ (+ 1 c) e))))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 6,
      "simplification_time": 0.005210518999999999
    },
    "speedup": 99.2461052344306,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* 0 1) (pow a (+ (* (/ a (+ a c)) (- (pow (pow c -1) 1) (pow 1 c))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow a (+ a (* (/ a (+ a c)) (- (/ 1 c) (pow 1 c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.121232685
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow a (+ a (* (/ a (+ a c)) (- (/ 1 c) (pow 1 c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.001213905
    },
    "speedup": 99.86999394516046,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a -1) (- a (pow 1 (/ (/ (* c 1) (/ a (pow c 1))) (* e 0)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a -1) (- a (pow 1 (/ (/ c (/ a c)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.421698101
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a -1) (- a (pow 1 (/ (/ c (/ a c)) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.004178418
    },
    "speedup": 100.92290934032928,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (/ (- (pow (/ 1 -1) -1) a) (pow (* (pow (/ a 1) a) a) (/ a -1))) -1) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ b (* (/ (- -1 a) (pow (* a (pow a a)) (* -1 a))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.18938203200000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (/ (- -1 a) (pow (* a (pow (/ a 1) a)) (/ a -1)))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.001861203
    },
    "speedup": 101.7524858921891,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(- -1 (* a (+ (+ a (* c (+ 0 (/ (+ (- c 0) -1) (/ c b))))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (+ a (* c (/ (+ -1 c) (/ c b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.676520749
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (+ a (* c (/ (+ -1 c) (/ c b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.006646142000000001
    },
    "speedup": 101.79149783438271,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (/ (* (- a (/ b 0)) (- (+ b (/ (- c 1) 1)) (* -1 1))) 0) 1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(10394)",
      "output_term": "(+ -1 (/ (* (- a (/ b 0)) (+ b c)) 0))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.440188688
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (/ (* (- a (/ b 0)) (+ 1 (+ b (/ (- c 1) 1)))) 0) 1))",
      "output_weight_simple": 16,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.004323972
    },
    "speedup": 101.80192841211738,
    "weight_simple_diff": -5,
    "weight_complex_diff": -13,
    "depth_diff": -3
  },
  {
    "base_term": "(* a (pow a (+ -1 (* (pow -1 (* (- (/ (/ a c) -1) (* -1 a)) (* a c))) -1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(19868)",
      "output_term": "(* a (pow a (+ -1 (* -1 (pow -1 (* a (* a (+ -1 c))))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 9,
      "simplification_time": 1.307763235
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow a (- -1 (pow -1 (* a (* c (+ a (/ (/ a c) -1))))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 10,
      "simplification_time": 0.012845915
    },
    "speedup": 101.80382129260546,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 0 (+ (* (- (/ (* a (* b (pow (+ b 1) 1))) b) 1) 1) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10102)",
      "output_term": "(+ (+ a (* b a)) -1)",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 1.367179272
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* a (* b (+ b 1))) b) 1)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 6,
      "simplification_time": 0.013392630999999999
    },
    "speedup": 102.08444270584324,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(* a (+ (/ a 0) (/ (* 1 a) (- (- a (/ (- 1 a) a)) (pow a 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17050)",
      "output_term": "(* a (+ (/ a 0) (/ a (+ 1 (* -1 (/ 1 a))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.773656656
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (/ a 0) (/ a (- 0 (/ (- 1 a) a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.0074900539999999995
    },
    "speedup": 103.29119870163821,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (pow 1 (- a (* (+ a -1) (pow (/ (/ (+ 1 a) a) 1) (+ b b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 1 (- a (* (+ a -1) (pow (+ 1 (/ 1 a)) (+ b b))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 0.168180099
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 1 (- a (* (+ a -1) (pow (/ (/ (+ 1 a) a) 1) (+ b b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.0015844610000000001
    },
    "speedup": 106.14341343838693,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* (* (/ (- 1 a) (* (- (/ (/ b b) a) (+ b c)) (+ 1 a))) 1) d) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (/ (- 1 a) (* (- (/ 1 a) (+ b c)) (+ 1 a))) d) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.7110092100000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (* (/ (- 1 a) (* (- (/ 1 a) (+ b c)) (+ 1 a))) d) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.006656382
    },
    "speedup": 106.81616680052318,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (- (/ 0 (- a (* (+ 1 (/ -1 (- (/ 0 0) a))) (- (- a c) a)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(11203)",
      "output_term": "(* a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.6362483910000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.005955987000000001
    },
    "speedup": 106.82501338569072,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a (- -1 (+ a (pow a (* (* (/ (* a a) b) (* a b)) (pow -1 b)))))) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17200)",
      "output_term": "(* (/ a (- -1 (+ a (pow a (* a (* (* a a) (pow -1 b))))))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 1.3357587149999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a (- -1 (+ a (pow a (* (/ (* a a) b) (* (* a b) (pow -1 b))))))) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.01248037
    },
    "speedup": 107.02877518855611,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (+ (* a a) (pow b (- -1 (+ a (- (pow 1 c) c))))) a) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "NodeLimit(10019)",
      "output_term": "(/ (+ (* a a) (pow b (- -1 (+ (- (pow 1 c) c) a)))) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.331807674
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (+ (* a a) (pow b (- -1 (+ a (- (pow 1 c) c))))) a) 1)",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.012415064
    },
    "speedup": 107.27352464715446,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (* a (/ (* b (* -1 (pow 1 (* (- (pow a 1) a) (pow 0 1))))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10160)",
      "output_term": "(/ 1 (* b -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 1.1037658609999998
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (/ (- 0 b) a)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.010279177
    },
    "speedup": 107.37881651420146,
    "weight_simple_diff": -3,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(+ a (/ (- (/ (* a (/ a a)) 1) (- (/ 1 (* (- -1 -1) 0)) (pow 0 0))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (- a (- (/ 1 0) (pow 0 0))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.51029101
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (- (/ a 1) (- (/ 1 0) (pow 0 0))) b))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.004713514
    },
    "speedup": 108.2612696175295,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ (pow b (- a (+ (/ (- (pow (* a 0) c) (* a c)) -1) (pow -1 e)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow b (+ a (+ (- (pow 0 c) (* a c)) (* -1 (pow -1 e))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.145836317
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (pow b (- a (+ (/ (- (pow 0 c) (* a c)) -1) (pow -1 e)))) 1))",
      "output_weight_simple": 17,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.001341508
    },
    "speedup": 108.71073225057174,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(- (- (+ 0 -1) (/ (- 1 (/ (pow (+ (/ a -1) b) b) (- -1 1))) a)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (- -1 (/ (+ 1 (* (pow (+ (* -1 a) b) b) 0.5)) a)) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.172704482
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ (/ (- 1 (/ (pow (+ (/ a -1) b) b) -2)) a) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.0015872990000000001
    },
    "speedup": 108.80400101052163,
    "weight_simple_diff": 0,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (* (/ -1 a) (- 1 (- (/ (+ 0 (/ 1 b)) (* c b)) 0))) a) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10654)",
      "output_term": "(/ (+ -1 (/ (/ 1 b) (* b c))) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 1.004528691
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (* (/ -1 a) (- 1 (/ (/ 1 b) (* b c))))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.009214980000000001
    },
    "speedup": 109.01040382073535,
    "weight_simple_diff": -4,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(* a (- 0 (* (/ (+ (- 0 (/ 1 1)) (- 1 b)) 1) 1)))",
    "input_weight_simple": 17,
    "input_weight_complex": 29,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10961)",
      "output_term": "(* a b)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 1.374972971
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (/ (- 0 b) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.012580033000000001
    },
    "speedup": 109.29804166650437,
    "weight_simple_diff": -5,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(- a (+ (* a (/ (+ (pow (pow (+ a (* b a)) (/ b c)) c) b) e)) (* -1 -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (* a (/ (+ b (pow (pow (* a (+ b 1)) (/ b c)) c)) e)) 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.32565396199999996
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ (* a (/ (+ b (pow (pow (+ a (* a b)) (/ b c)) c)) e)) 1))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 10,
      "simplification_time": 0.0029640070000000003
    },
    "speedup": 109.86949828391091,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (/ (+ -1 (+ (* 0 (/ 0 (pow -1 a))) (+ (* (* 0 a) b) (+ 0 1)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(16869)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.800224493
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.0071981020000000005
    },
    "speedup": 111.17159676259102,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 0 (+ (* (- (- (- a b) (+ b b)) (/ (* a -1) -1)) 0) d)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 35,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13414)",
      "output_term": "(* b (- 0 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.864223917
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* b (- 0 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.007696886
    },
    "speedup": 112.28228104196944,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (pow 1 (* (pow -1 a) (/ (+ a (+ b (+ (- -1 1) b))) b))))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14912)",
      "output_term": "(pow a (pow 1 (* (pow -1 a) (/ (+ b (+ -2 (+ a b))) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 1.0165022
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow 1 (* (pow -1 a) (/ (+ b (+ -2 (+ a b))) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.0089923
    },
    "speedup": 113.04140208845345,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ b (* b (/ (/ a (/ 0 (/ (+ (- 0 0) a) (+ b e)))) a))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10782)",
      "output_term": "(* b (+ a (/ a 0)))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.079628782
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ b (* b (/ (/ a 0) a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.009441402
    },
    "speedup": 114.35047273699392,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (pow a (+ (- (- a b) (pow a b)) (/ (- (/ (/ a -1) a) a) (pow 1 b)))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11878)",
      "output_term": "(/ 1 (pow a (+ (- (- a b) (pow a b)) (/ (- -1 a) (pow 1 b)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 1.04294233
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (pow a (+ (- a (+ b (pow a b))) (/ (- (/ (/ a -1) a) a) (pow 1 b)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 42,
      "output_depth": 8,
      "simplification_time": 0.009077481
    },
    "speedup": 114.89336413923643,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (pow a 1) (/ -1 (* b (* (* a 1) (/ c (* (pow 1 0) a))))))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13923)",
      "output_term": "(pow a (/ -1 (* b c)))",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 1.727840896
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ -1 (* a (* (/ c a) b))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.014844320000000001
    },
    "speedup": 116.39744333186026,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (- (- 0 a) (/ -1 (* (pow (- 0 b) a) (- (+ b (pow 1 0)) (* b 1))))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12536)",
      "output_term": "(/ (+ (- 0 a) (/ 1 (pow (- 0 b) a))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.132149254
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (- 0 a) (/ -1 (pow (- 0 b) a))) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.009698169
    },
    "speedup": 116.73845382566545,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (* (/ (/ -1 a) a) 1) (+ b (* (+ 1 a) (pow (+ -1 b) (- b 1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10373)",
      "output_term": "(* -1 (* (pow a -2) (+ b (* (pow (+ -1 b) (+ -1 b)) (+ a 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.82113584
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (/ -1 a) a) (+ b (* (+ a 1) (pow (+ -1 b) (+ -1 b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.006997392
    },
    "speedup": 117.34884082526747,
    "weight_simple_diff": 1,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (pow a (* (* a b) (- (* (- a (pow 0 (pow 1 a))) (pow c 1)) b))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (* b (- (* (- a (pow 0 (pow 1 a))) c) b))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.440305919
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow a (* (* a b) (- (* (- a (pow 0 (pow 1 a))) c) b))) 1)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.0037351579999999997
    },
    "speedup": 117.88147087753718,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ 0 (* 1 (- a (* (/ (* (/ (* a 1) b) (+ 1 b)) (* c c)) 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(14703)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.038328882
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.008755038
    },
    "speedup": 118.5978726762808,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (* 1 -1) (/ a (/ a (+ -1 (/ (- c b) 1))))) c)",
    "input_weight_simple": 17,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -1 (/ a (/ a (+ -1 (- c b))))) c)",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.106298009
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- -1 (/ a (/ a (+ -1 (/ (- c b) 1))))) c)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.00089289
    },
    "speedup": 119.04938906248249,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (+ 0 a) a) (/ (- (+ b (/ c b)) e) (- 0 (pow (* (pow 0 c) e) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (/ (- (+ b (/ c b)) e) (- 0 (pow (* e (pow 0 c)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.31973778799999997
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (* a a) (/ (- (/ c b) (- e b)) (- 0 (pow (* e (pow 0 c)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.002681854
    },
    "speedup": 119.22266760233778,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ a 0) (pow (* 0 -1) (+ (/ (* (- (- 1 b) a) (+ -1 -1)) (- -1 a)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (pow 0 (+ a (/ (+ -2 (* 2 (+ a b))) (- -1 a)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.249368516
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ a 0) (pow 0 (+ a (/ (* (- 1 (+ a b)) -2) (- -1 a)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.002087134
    },
    "speedup": 119.47891989685378,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a (* (pow (- a (* -1 (* (/ 1 (pow -1 -1)) -1))) (- 1 -1)) b)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (pow (+ a 1) 2) b))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.5809008200000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (pow (- a -1) 2) b))",
      "output_weight_simple": 8,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 0.00483339
    },
    "speedup": 120.1849674865881,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 -1) (/ (pow (* -1 (/ (- (pow (* -1 a) b) (+ a a)) (pow -1 e))) -1) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (/ 1 (* -1 (/ (+ (pow (* -1 a) b) (* a -2)) (pow -1 e)))) d))",
      "output_weight_simple": 18,
      "output_weight_complex": 46,
      "output_depth": 9,
      "simplification_time": 0.18986114
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ (/ 1 (- 0 (/ (- (pow (- 0 a) b) (+ a a)) (pow -1 e)))) d))",
      "output_weight_simple": 17,
      "output_weight_complex": 42,
      "output_depth": 9,
      "simplification_time": 0.00155565
    },
    "speedup": 122.04618005335391,
    "weight_simple_diff": 1,
    "weight_complex_diff": 4,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ a (/ 0 (+ (- (* (/ (* -1 (/ b c)) b) (pow -1 0)) 1) b))) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14889)",
      "output_term": "(+ a d)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 1.442154228
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a d)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.011749691
    },
    "speedup": 122.73975783703588,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- a (* (/ 1 (+ a (/ 1 0))) (- b (- (/ (- 0 1) c) -1)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- a (* (/ 1 (+ a (/ 1 0))) (+ (pow c -1) (+ b -1)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.40627681299999996
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- a (* (/ 1 (+ a (/ 1 0))) (- b (+ 1 (/ -1 c))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.003308208
    },
    "speedup": 122.80872696033622,
    "weight_simple_diff": 0,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ a (- (+ 1 1) (/ (/ (+ a (* (- -1 a) a)) (pow 1 a)) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(31227)",
      "output_term": "(* a (+ a (- 2 (* a (* a (/ 1 (pow 1 a)))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 8,
      "simplification_time": 1.2297487619999998
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ a (- 2 (/ (/ (- 0 (* a a)) (pow 1 a)) -1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.009839619
    },
    "speedup": 124.97930682072139,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (/ (/ b (* (/ (* -1 a) (+ (+ (pow 0 -1) 0) (+ b a))) d)) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14687)",
      "output_term": "(- a (/ 1 (* (/ (* a -1) (+ a (+ b (pow 0 -1)))) d)))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.769581829
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (/ b (* (/ (- 0 a) (+ a (+ b (pow 0 -1)))) d)) b))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.014096014999999998
    },
    "speedup": 125.53773736761775,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(* (* (* a a) (/ (- (- (- (pow -1 (- 1 0)) (pow 0 b)) b) 1) b)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10259)",
      "output_term": "(* (* a a) (* a (/ (+ (* -1 (+ b (pow 0 b))) -2) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 8,
      "simplification_time": 1.100420805
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (* a a) (/ (- -1 (+ (pow 0 b) (+ 1 b))) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.00870893
    },
    "speedup": 126.3554541143401,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(* a (* (+ 1 (- 1 (* b (- (pow 1 (- b (pow -1 a))) (pow -1 -1))))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (- 1 (+ b (* b (pow 1 (- b (pow -1 a))))))) (* a d))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.630373998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (- 1 (* b (+ 1 (pow 1 (- b (pow -1 a))))))) (* a d))",
      "output_weight_simple": 14,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.004966669
    },
    "speedup": 126.92087956737203,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (pow a a) (/ (* (* (- -1 c) 1) a) -1)) (* c 1))",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10043)",
      "output_term": "(/ (+ a (+ (pow a a) (* a c))) c)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.8813221929999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow a a) (/ (* a (- -1 c)) -1)) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 0.0069415729999999995
    },
    "speedup": 126.96289342487647,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow 0 0) (- -1 (+ a (* (* (- -1 -1) (* -1 (/ a b))) (/ (/ 1 a) -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10048)",
      "output_term": "(/ (pow 0 0) (- -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.7568874130000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 0 0) (- -1 a))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 3,
      "simplification_time": 0.005947776
    },
    "speedup": 127.25553433754062,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (pow a (* (/ (+ (* (pow b (* -1 (- b c))) c) d) a) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11745)",
      "output_term": "(/ -1 (pow a (+ (* c (pow b (+ c (* -1 b)))) d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.810737931
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (pow a (* a (/ (+ (* c (pow b (- c b))) d) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.006366175
    },
    "speedup": 127.35087097040217,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (* (+ a (+ 0 (- b c))) (+ a (/ (* (* (pow d 1) a) a) (/ -1 -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* a (* (+ a (- b c)) (+ 1 (* a d)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 2.169181746
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* (+ a (- b c)) (+ a (/ (* d (* a a)) 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.017015138
    },
    "speedup": 127.4854042323959,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (pow 1 a) (+ (- 1 (+ b (/ (- (* (+ b 1) 1) (/ c d)) (/ e 1)))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11166)",
      "output_term": "(* (pow 1 a) (+ 1 (- 1 (+ b (/ (- (+ 1 b) (/ c d)) e)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 1.274989051
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 1 a) (- (- 1 (/ (- (+ 1 b) (/ c d)) (/ e 1))) (- b 1)))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.009960420000000001
    },
    "speedup": 128.00555107113954,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 1
  },
  {
    "base_term": "(pow 1 (pow (- a (- (* (/ (/ b b) b) (pow (+ (- b d) -1) (pow b 0))) a)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.415844149
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0032132320000000003
    },
    "speedup": 129.41616073784897,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- 1 a) (- (- (- (/ (* (* 1 1) a) (+ (pow a b) 1)) b) b) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* (- 1 a) (+ (/ a (+ 1 (pow a b))) (* b -2)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.308238804
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (- 1 a) (- (/ a (+ 1 (pow a b))) (+ b b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.010080361
    },
    "speedup": 129.78094772597925,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- -1 (/ a (pow (+ 1 (/ (* (- (pow -1 a) a) (+ 1 1)) (pow b b))) -1))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(* b (- -1 (/ a (/ 1 (+ 1 (/ (* (- (pow -1 a) a) 2) (pow b b)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 10,
      "simplification_time": 0.166377647
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* b (- -1 (/ a (/ 1 (+ 1 (/ (* (- (pow -1 a) a) 2) (pow b b)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 10,
      "simplification_time": 0.001279332
    },
    "speedup": 130.05040677478559,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- -1 1) (* (+ a (/ (+ 1 (- 0 (pow (- a b) b))) (+ a (+ c c)))) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "Saturated",
      "output_term": "(- -2 (* b (+ a (/ (* -1 (+ -1 (pow (- a b) b))) (+ c (+ a c))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.6410411220000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -2 (* b (+ a (/ (- 1 (pow (- a b) b)) (+ a (+ c c))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 25,
      "output_depth": 8,
      "simplification_time": 0.004889966999999999
    },
    "speedup": 131.093138665353,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(* (- (/ (/ (* (/ -1 -1) (+ a (- (- a a) 0))) 1) a) 1) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11104)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.284821338
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (- (/ (/ a 1) a) 1) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 0.009739434000000002
    },
    "speedup": 131.91950764284658,
    "weight_simple_diff": -6,
    "weight_complex_diff": -17,
    "depth_diff": -4
  },
  {
    "base_term": "(/ -1 (pow (/ (- (/ (/ (pow (+ (pow 0 a) b) 1) (pow c a)) -1) -1) c) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (+ 1 (* -1 (/ (+ (pow 0 a) b) (pow c a)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.20035145000000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (+ 1 (/ (/ (+ (pow 0 a) b) (pow c a)) -1)) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.001492656
    },
    "speedup": 134.2247979440675,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (+ a (pow (+ 0 (* a (- (+ -1 (/ (- 1 a) 1)) (* a 0)))) (* a 0))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(22497)",
      "output_term": "(pow 1 (+ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.1204554500000001
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 0.008332899
    },
    "speedup": 134.46166214183086,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (+ a (+ (/ 1 b) b)) (/ (- (+ (pow (pow c a) d) c) (/ c 0)) a)) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11749)",
      "output_term": "(/ (- (+ b (+ a (/ 1 b))) (/ (- (+ c (pow (pow c a) d)) (/ c 0)) a)) e)",
      "output_weight_simple": 18,
      "output_weight_complex": 45,
      "output_depth": 8,
      "simplification_time": 1.297963685
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (- (/ (- (+ c (pow (pow c a) d)) (/ c 0)) a) (+ b (/ 1 b)))) e)",
      "output_weight_simple": 18,
      "output_weight_complex": 45,
      "output_depth": 9,
      "simplification_time": 0.009522905
    },
    "speedup": 136.29913193505553,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (/ 1 (- (- a (* (pow a b) (+ (+ (+ c c) 0) (/ b c)))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11019)",
      "output_term": "(* a (/ 1 (* (pow a b) (+ (* c -2) (* (/ b c) -1)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 1.355823562
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ 1 (- 0 (* (pow a b) (+ (+ c c) (/ b c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.009916029
    },
    "speedup": 136.73049584667413,
    "weight_simple_diff": 1,
    "weight_complex_diff": 3,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (- (* (+ a 0) (* (/ (pow (/ 0 0) a) (+ a 0)) 1)) a) a) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12603)",
      "output_term": "(* (pow (- (pow (/ 0 0) a) a) a) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.47103282
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (pow (- (* a (/ (pow (/ 0 0) a) a)) a) a) b)",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.010748833
    },
    "speedup": 136.85511906269267,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ a a) (/ (pow (* -1 a) (- (+ (/ (+ a -1) a) b) (+ a 1))) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16383)",
      "output_term": "(/ (+ a a) (* -1 (pow (* a -1) (+ b (* -1 (+ a (/ 1 a)))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 1.483432544
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a a) (/ (pow (- 0 a) (- (/ (+ a -1) a) (+ 1 (- a b)))) -1))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.010779638000000001
    },
    "speedup": 137.61431914503993,
    "weight_simple_diff": -2,
    "weight_complex_diff": -3,
    "depth_diff": 1
  },
  {
    "base_term": "(pow (* (* a a) (- (- 1 (/ (/ (/ a 0) b) (pow (pow 0 -1) -1))) 1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11159)",
      "output_term": "(pow (* (/ (/ (/ a 0) b) (/ 1 (pow 0 -1))) (* (* a a) -1)) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 41,
      "output_depth": 6,
      "simplification_time": 1.016597552
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 0 (* (* a a) (/ (/ (/ a 0) b) (/ 1 (pow 0 -1))))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 7,
      "simplification_time": 0.0073785710000000004
    },
    "speedup": 137.7770237624602,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 0 (* (* (- a 1) -1) (+ (pow a (/ (/ (+ (* a b) c) a) 0)) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14070)",
      "output_term": "(pow 0 (* (+ 1 (* a -1)) (pow a (/ (+ b (* c (pow a -1))) 0))))",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 1.085160844
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (* (- 1 a) (pow a (/ (/ (+ (* a b) c) a) 0))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.007844212
    },
    "speedup": 138.33905100984012,
    "weight_simple_diff": 2,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 1 (/ (* (* a (+ 1 (pow (pow a -1) (+ 1 1)))) 1) (* 1 -1))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13293)",
      "output_term": "(/ (* -1 (+ a (/ 1 a))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.264477396
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (* a (+ 1 (pow (/ 1 a) 2))) -1) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.009092859
    },
    "speedup": 139.0626860044789,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ (pow 1 a) (- (* (+ 1 a) (* (pow (- c c) e) (pow d 0))) d)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(16254)",
      "output_term": "(/ (+ (pow 1 a) (- (* (+ 1 a) (pow 0 e)) d)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.520895529
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow 1 a) (- (* (+ a 1) (pow 0 e)) d)) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.010917531
    },
    "speedup": 139.30764464969232,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (+ a 1) (/ (* (pow -1 (+ a 0)) a) (/ (+ (* (/ -1 a) a) 0) (- 0 a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13648)",
      "output_term": "(- (+ a 1) (/ (* a (pow -1 a)) (/ 1 a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 1.351467769
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (- (/ (* a (pow -1 a)) (/ (* a (/ -1 a)) (- 0 a))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.009687028
    },
    "speedup": 139.5131477889813,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(* (* 0 0) (* (/ (/ a (+ (- 0 (- a 0)) (pow (+ -1 a) b))) b) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13897)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.339809066
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.009526131
    },
    "speedup": 140.64566884499067,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ 1 a) (- 0 (pow (+ (+ a (* (- 1 (- a -1)) (* 0 1))) a) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14214)",
      "output_term": "(/ 1 (+ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 2.371132139
    },
    "Extended": {
      "iterations": 9,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 a))",
      "output_weight_simple": 4,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.016732276
    },
    "speedup": 141.71007811489602,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* (- a -1) (- -1 (* (- -1 (* 1 (- (pow 0 a) -1))) (- (+ -1 0) 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 34,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10073)",
      "output_term": "(pow 1 (* (+ 1 a) (+ (* (pow 0 a) -2) -5)))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.714509115
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* (+ 1 a) (- -1 (* (- -1 (+ 1 (pow 0 a))) -2))))",
      "output_weight_simple": 13,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 0.0050358830000000005
    },
    "speedup": 141.8835812905105,
    "weight_simple_diff": -2,
    "weight_complex_diff": -2,
    "depth_diff": -2
  },
  {
    "base_term": "(pow a (pow a (* (- a (+ (/ -1 (+ (/ b (pow b b)) (+ 0 -1))) 1)) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (* a (+ a (+ -1 (/ 1 (+ -1 (/ b (pow b b)))))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 10,
      "simplification_time": 0.16921255600000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (pow a (* a (- a (+ (/ -1 (+ -1 (/ b (pow b b)))) 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 10,
      "simplification_time": 0.001189278
    },
    "speedup": 142.28175077652156,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ (+ a a) 1) (/ (/ (+ (/ 1 (* a -1)) (pow (+ 1 0) -1)) -1) 0)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13144)",
      "output_term": "(* (/ (+ -1 (* -1 (/ 1 (* a -1)))) 0) (+ (/ 1 a) 2))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.331031249
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (+ (+ a a) 1) (/ (/ (+ 1 (/ 1 (- 0 a))) -1) 0)) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.009322090000000002
    },
    "speedup": 142.78249287445195,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow 1 -1) (+ (+ (- (/ a -1) (+ 1 0)) (/ (pow 0 (* 1 0)) (- b 0))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14718)",
      "output_term": "(pow 1 (+ -1 (/ (pow 0 0) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.485443904
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (- (/ a -1) 1) (+ a (/ (pow 0 0) b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 0.010379286
    },
    "speedup": 143.11619354163668,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ a -1) (/ (+ b -1) (+ c (* (* 0 a) (- (/ 1 1) a)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a -1) (/ (+ -1 b) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.7412957050000001
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a -1) (/ (+ -1 b) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.005159147
    },
    "speedup": 143.68571102936204,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (- (/ (* (/ (* a a) (+ (pow 0 0) b)) (pow (+ 1 b) 1)) b) b) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(15904)",
      "output_term": "(+ a (+ (- (* (+ 1 (/ 1 b)) (/ (* a a) (+ (pow 0 0) b))) b) -1))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.5859179
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* (/ (* a a) (+ (pow 0 0) b)) (+ b 1)) b) (+ 1 (- b a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.01103403
    },
    "speedup": 143.72970709704433,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 1
  },
  {
    "base_term": "(- 0 (- a (/ (- -1 a) (- 0 (+ (* (+ (* -1 -1) b) (/ -1 b)) (pow -1 0))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(33324)",
      "output_term": "(+ (/ (- -1 a) (/ 1 b)) (* a -1))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 1.3891370040000002
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (- -1 a) (- -1 (* (+ b 1) (/ -1 b)))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.009603889
    },
    "speedup": 144.64317569684533,
    "weight_simple_diff": -2,
    "weight_complex_diff": -2,
    "depth_diff": -2
  },
  {
    "base_term": "(* 1 (pow (pow (pow (+ (* (- (* (/ a a) b) b) (pow b c)) c) b) c) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(29876)",
      "output_term": "(pow (pow (pow c b) c) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 3.7036242560000003
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow (pow c b) c) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 18,
      "output_depth": 4,
      "simplification_time": 0.025157472
    },
    "speedup": 147.21766384158155,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- (pow 1 (+ 1 1)) (+ (* (pow (+ (pow (* -1 a) 1) a) -1) a) -1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10435)",
      "output_term": "(pow (+ 2 (* -1 (* a (/ 1 0)))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.742412928
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (- 1 (+ -1 (/ a 0))) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.005019078000000001
    },
    "speedup": 147.91818895821103,
    "weight_simple_diff": 2,
    "weight_complex_diff": 4,
    "depth_diff": 1
  },
  {
    "base_term": "(- a (- (* b (+ a (* (* b (* (+ c a) (pow c e))) (pow (+ c a) e)))) e))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (* b (+ a (* (pow c e) (* (pow (+ a c) e) (* b (+ a c)))))) e))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 2.0367516639999996
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- a (- (* b (+ a (* b (* (+ a c) (* (pow c e) (pow (+ a c) e)))))) e))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 10,
      "simplification_time": 0.013763749999999998
    },
    "speedup": 147.97941433112342,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ (* 1 (+ a (+ (/ (/ (* (/ a -1) b) a) a) 1))) a) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(21509)",
      "output_term": "(+ (/ 1 a) (* -1 (* b (pow a -2))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 0.829066794
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (+ 1 (+ a (/ (/ (* (/ a -1) b) a) a))) a) 1)",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.005546861
    },
    "speedup": 149.46594010558405,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -4
  },
  {
    "base_term": "(* (pow -1 (pow (/ (pow a (* (* (* (+ a 0) a) (+ 0 1)) (/ b a))) a) 0)) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16189)",
      "output_term": "(* b -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 2.031614342
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 b)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.01338487
    },
    "speedup": 151.7843910325614,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- 0 (/ (+ 0 (- (* a (* (- -1 a) b)) (* (* 1 1) 1))) a))",
    "input_weight_simple": 19,
    "input_weight_complex": 31,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10676)",
      "output_term": "(+ b (+ (/ 1 a) (* a b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 4,
      "simplification_time": 1.011458647
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (- (* (- -1 a) (* a b)) 1) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 0.006659212
    },
    "speedup": 151.8886389260471,
    "weight_simple_diff": -4,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (/ -1 a) (* a (/ (- (pow (* (+ (* a 1) a) (* 0 a)) (* a 1)) a) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(22178)",
      "output_term": "(/ (/ -1 a) (- (pow 0 a) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 2.560997066
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 a) (* a (/ (- (pow 0 a) a) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.016773474
    },
    "speedup": 152.68137453219293,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (pow a (- 0 (+ (/ -1 (/ 0 (+ (+ (/ b -1) b) (+ 0 c)))) 1))) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(21163)",
      "output_term": "(pow (pow a (+ -1 (/ 1 0))) b)",
      "output_weight_simple": 9,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 1.677554256
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow a (- -1 (/ -1 0))) b)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.010969639000000002
    },
    "speedup": 152.9270248546921,
    "weight_simple_diff": 1,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (* (/ (/ (+ (* (* (- a b) b) 0) 1) 0) b) 1) b) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12800)",
      "output_term": "(pow (/ 1 0) b)",
      "output_weight_simple": 5,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 1.3893781029999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (* b (/ (/ 1 0) b)) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.009051919
    },
    "speedup": 153.48989567847434,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ -1 (+ 0 (/ (+ a -1) (/ (- 1 (* (- (/ 1 a) a) (pow b -1))) b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (+ -1 a) (/ (- 1 (* (- (/ 1 a) a) (/ 1 b))) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 36,
      "output_depth": 8,
      "simplification_time": 0.370083353
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (+ -1 a) (/ (- 1 (/ (- (/ 1 a) a) b)) b)))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.002400273
    },
    "speedup": 154.1838586694097,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(* 1 (/ (* a (+ b (/ (+ (/ (* (/ -1 a) b) -1) a) (- (+ a 0) c)))) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18340)",
      "output_term": "(/ (+ (* a b) (* (/ 1 (- a c)) (+ b (* a a)))) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 1.12944402
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (+ b (/ (+ a (/ (* b (/ -1 a)) -1)) (- a c)))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.007230982
    },
    "speedup": 156.19510876945895,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(- -1 (* (/ a (/ (* (/ (+ -1 (* (pow a a) 1)) a) (* (+ 1 a) 1)) a)) 0))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11878)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.3832971559999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.008691693
    },
    "speedup": 159.1516354753901,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ (pow (* -1 (/ (+ (+ 1 a) b) (* (- (pow 0 a) a) (- a c)))) 0) c) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 c) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.697866103
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 c) a)",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.004375238
    },
    "speedup": 159.5035751197992,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ (+ a a) (pow (/ (- (* a (+ (/ 1 a) b)) (- -1 -1)) (* b 0)) a)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(16461)",
      "output_term": "(+ (pow (/ (+ 1 (* a b)) 0) a) (+ a (+ a d)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 6,
      "simplification_time": 1.6863698079999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ (pow (/ (* a (+ (/ 1 a) b)) 0) a) (+ a (+ a d)))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.010546639
    },
    "speedup": 159.8964189444618,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (- -1 (- 1 a)) (+ (pow (+ b (/ b (+ 0 d))) a) d)) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10021)",
      "output_term": "(/ (* (+ a -2) (+ d (pow (+ b (/ b d)) a))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.748764215
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (- a 2) (+ d (pow (+ b (/ b d)) a))) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.004677792
    },
    "speedup": 160.06787283402085,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 1 (* (/ (/ a (* (+ b a) b)) a) (/ (- a 0) (- b -1))))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10321)",
      "output_term": "(pow 1 (* (/ a (* b (+ a b))) (/ 1 (+ 1 b))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.4504271850000001
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (* (/ (/ a (* b (+ a b))) a) (/ a (+ 1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.009048435
    },
    "speedup": 160.29591691822952,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ a (- (* (+ 1 (+ a b)) (/ (- (- (pow a -1) 1) b) -1)) 1)) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(13649)",
      "output_term": "(- (/ a (+ (+ a b) (* (+ a (+ 1 b)) (+ b (* -1 (/ 1 a)))))) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.6217791340000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a (- (* (+ 1 (+ a b)) (/ (- (/ 1 a) (+ 1 b)) -1)) 1)) d)",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.003876941
    },
    "speedup": 160.37879709802138,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (- a (+ a (/ a (pow 1 (/ (pow 0 (+ d a)) c)))))) c)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10094)",
      "output_term": "(- (* (/ a (pow 1 (/ (pow 0 (+ a d)) c))) (* a -1)) c)",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.761417048
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (+ c (* a (/ a (pow 1 (/ (pow 0 (+ a d)) c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 9,
      "simplification_time": 0.004716644
    },
    "speedup": 161.43195204047623,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (+ (+ 1 a) 1) (- (pow b (+ (+ (* 0 (- a b)) (pow a d)) c)) c)) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (+ a 2) (- (pow b (+ (pow a d) c)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.921937437
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (+ a 2) (- (pow b (+ (pow a d) c)) c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.0056619109999999995
    },
    "speedup": 162.83149576176666,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (pow a (pow (pow (* (- 1 (- (pow a b) -1)) (- b 0)) a) c)) 1) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16385)",
      "output_term": "(/ (pow a (pow (pow (* b (* (pow a b) -1)) a) c)) 0)",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.8158398840000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (pow a (pow (pow (* (- 0 (pow a b)) b) a) c)) 1) 0)",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.004976505
    },
    "speedup": 163.93832297968154,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* 1 (- 1 (/ 1 (+ a (pow (/ (/ a (- (+ b 0) b)) a) a)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10611)",
      "output_term": "(- 1 (/ 1 (+ a (pow (pow 0 -1) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.192028175
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (/ 1 (+ a (pow (/ (/ a 0) a) a))))",
      "output_weight_simple": 9,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.00721425
    },
    "speedup": 165.2324462002287,
    "weight_simple_diff": 0,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (+ -1 (/ (* (- -1 a) (pow (/ (* (/ a a) -1) (* 0 a)) 0)) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11400)",
      "output_term": "(+ -1 (* a -2))",
      "output_weight_simple": 5,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 0.880309209
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -1 (/ (- -1 a) a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 5,
      "simplification_time": 0.005319807
    },
    "speedup": 165.477659057932,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(/ 1 (/ (/ 1 a) (* (- (/ a (- (/ b b) (* c 1))) (/ (/ 0 a) e)) e)))",
    "input_weight_simple": 23,
    "input_weight_complex": 61,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10100)",
      "output_term": "(/ 1 (/ (/ 1 a) (* (/ a (- 1 c)) e)))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.886766865
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (/ (/ 1 a) (* e (/ a (- 1 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.00532935
    },
    "speedup": 166.3930620056855,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- 1 (+ (+ (* (/ 1 (* (* a 0) a)) 1) b) 1)) 0) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11018)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.295468639
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.00773712
    },
    "speedup": 167.43551075852514,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 1 a) (+ (- (* b (- (/ (* (+ b c) a) b) (pow a c))) 0) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10973)",
      "output_term": "(pow (/ 1 a) (+ (* a (+ b c)) (* b (* (pow a c) -1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.116587921
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 a) (* b (- (/ (* a (+ b c)) b) (pow a c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.006653124999999999
    },
    "speedup": 167.82909099107565,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (+ a (/ (* a (pow -1 (/ (+ a (- (+ a 0) 1)) (- 0 a)))) a)) (- d b))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(17054)",
      "output_term": "(pow (+ a (pow -1 (/ (+ a (+ a -1)) (* a -1)))) (- d b))",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.830490874
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ a (/ (* a (pow -1 (/ (+ a (- a 1)) (- 0 a)))) a)) (- d b))",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.010870585
    },
    "speedup": 168.38936211804608,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (/ (- (/ (- a a) -1) b) (/ c (+ (/ 1 (/ (+ b c) c)) (pow -1 b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* b (/ 1 (/ c (+ (/ 1 (/ (+ b c) c)) (pow -1 b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.18661378900000003
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (- 0 b) (/ c (+ (/ 1 (/ (+ b c) c)) (pow -1 b)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.001107965
    },
    "speedup": 168.42931771310467,
    "weight_simple_diff": -1,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(* (+ 1 1) (* (* (+ -1 a) (* (+ (+ (+ -1 0) 1) b) (- a -1))) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 28,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10015)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.9915786740000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0057531679999999995
    },
    "speedup": 172.35350575543774,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- (- (* (/ (/ 1 a) -1) (* a (/ (pow (+ 1 0) a) (- 0 1)))) b) b) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10281)",
      "output_term": "(* a (+ (pow 1 a) (* b -2)))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 0.772153324
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (* a (* (/ (/ 1 a) -1) (/ (pow 1 a) -1))) (+ b b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.004475156
    },
    "speedup": 172.54221394740205,
    "weight_simple_diff": -5,
    "weight_complex_diff": -18,
    "depth_diff": -3
  },
  {
    "base_term": "(pow a (* (* (+ (/ a (pow (- a (pow (/ 0 -1) -1)) (+ a a))) -1) (- a 1)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (+ -1 (/ a (pow (- a (pow 0 -1)) (+ a a)))) (* a (+ a -1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.846612185
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* a (* (+ -1 (/ a (pow (- a (pow 0 -1)) (+ a a)))) (- a 1))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.004894789
    },
    "speedup": 172.96193666366415,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (+ 0 0) (+ (+ a 0) (* (/ b c) (+ c (+ (* 0 b) 1)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 30,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10309)",
      "output_term": "(+ (/ b c) (+ a b))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 1.003875589
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (* (/ b c) (+ c 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.005776374
    },
    "speedup": 173.78992236306027,
    "weight_simple_diff": -2,
    "weight_complex_diff": -3,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 0 (/ (* (/ (- (+ a -1) a) -1) -1) (/ b (* (/ (* b (pow 1 b)) 1) d))))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10191)",
      "output_term": "(pow 0 (/ -1 (/ b (* b (* (pow 1 b) d)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.638180747
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ -1 (/ b (* (/ (* b (pow 1 b)) 1) d))))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.0036647829999999996
    },
    "speedup": 174.13875446377045,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- -1 a) (pow (* a (/ b (+ (* c (- (/ b 0) -1)) (- 1 c)))) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(30540)",
      "output_term": "(+ (- -1 a) (pow (* a (/ b (+ 1 (* c (/ b 0))))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 2.037340644
    },
    "Extended": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(+ (- -1 a) (pow (* a (/ b (+ 1 (* c (/ b 0))))) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.011690789
    },
    "speedup": 174.2688747525937,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (pow (* (* a a) (+ -1 (pow (- (pow b c) -1) (pow 0 1)))) 0)) (+ c b))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11553)",
      "output_term": "(* (+ a 1) (+ b c))",
      "output_weight_simple": 7,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.7606078540000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a 1) (+ b c))",
      "output_weight_simple": 7,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.004355554
    },
    "speedup": 174.62941660234267,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ 1 a) (+ (/ a (* (* a 1) (/ (* (+ a 0) -1) 0))) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13438)",
      "output_term": "(+ (/ 1 (* a (/ (* a -1) 0))) (* (/ 1 a) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.497344786
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ 1 a) (+ -1 (/ a (* a (/ (- 0 a) 0)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.008539306
    },
    "speedup": 175.34736265452955,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 0 (pow (* (* 0 (/ (* (- 1 (+ a a)) (pow (pow 0 1) b)) b)) -1) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.45005345099999994
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0025652089999999997
    },
    "speedup": 175.4451395578294,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (/ (/ a (pow (+ (pow a a) 1) a)) (- 1 (/ (/ (- -1 1) b) -1))) b) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (/ (/ a (pow (+ (pow a a) 1) a)) (+ 1 (/ -2 b)))) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.18214045599999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (/ (/ a (pow (+ (pow a a) 1) a)) (- 1 (/ (/ -2 b) -1)))) d)",
      "output_weight_simple": 16,
      "output_weight_complex": 46,
      "output_depth": 8,
      "simplification_time": 0.0010380250000000001
    },
    "speedup": 175.4682748488716,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (* a b) 1) (+ (/ (- (- (/ (pow (+ 1 0) b) -1) a) a) b) (* 1 c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10235)",
      "output_term": "(* a (+ (* (pow 1 b) -1) (+ (* a -2) (* b c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.891870244
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ (* a b) 1) (+ (/ (- (/ (pow 1 b) -1) (+ a a)) b) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.005077567999999999
    },
    "speedup": 175.64909893870455,
    "weight_simple_diff": -1,
    "weight_complex_diff": -11,
    "depth_diff": -2
  },
  {
    "base_term": "(pow a (* (+ a c) (+ (/ (/ d (pow 0 (/ (pow b -1) c))) (- (/ c e) 0)) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (+ a c) (+ a (/ (/ d (pow 0 (/ (/ 1 b) c))) (/ c e)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 49,
      "output_depth": 9,
      "simplification_time": 0.35533614799999996
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (+ a c) (+ a (/ (/ d (pow 0 (/ (/ 1 b) c))) (/ c e)))))",
      "output_weight_simple": 17,
      "output_weight_complex": 49,
      "output_depth": 9,
      "simplification_time": 0.002007936
    },
    "speedup": 176.96587341429205,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ -1 (/ -1 (+ a (pow (* 0 (* -1 (/ (* (* a a) 1) a))) 0))))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(10465)",
      "output_term": "(+ -1 (/ -1 (+ a 1)))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 4,
      "simplification_time": 1.193579854
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -1 (+ a (pow 0 0))))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.006738335
    },
    "speedup": 177.13275668247422,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 1 (- (- -1 (* a (/ (* (+ (/ (* 1 a) b) (+ 1 a)) (/ d e)) -1))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (+ (* (+ (/ a b) (+ 1 a)) (* a (/ d e))) -2))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 1.871081474
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- -1 (+ 1 (* a (/ (* (+ 1 (+ a (/ a b))) (/ d e)) -1)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 10,
      "simplification_time": 0.010562389
    },
    "speedup": 177.14566979118075,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -4
  },
  {
    "base_term": "(* (+ a (/ (pow a -1) (- a (- 1 (+ (pow (- 0 0) a) a))))) (* a (+ 0 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10463)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.287087385
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.007204931999999999
    },
    "speedup": 178.63976856408917,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ a b) (+ -1 (+ b (* (- -1 (- (- 1 1) (* 1 -1))) (pow (+ -1 0) a)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11583)",
      "output_term": "(+ a (* (/ a b) (+ -1 (* -2 (pow -1 a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.898293921
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ a b) (+ b (+ -1 (* -2 (pow -1 a)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 0.004906777
    },
    "speedup": 183.07209009090897,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (* (* (/ (* a a) a) 1) (- (* b 1) (pow -1 (* (pow 1 a) a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10355)",
      "output_term": "(/ -1 (* a (- b (pow -1 (* a (pow 1 a))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 1.3979055040000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (* (/ (* a a) a) (- b (pow -1 (* a (pow 1 a))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.007619839
    },
    "speedup": 183.45604205023233,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": 0
  },
  {
    "base_term": "(- (- -1 (+ a -1)) (* (* (/ 0 (pow (- a (/ (/ 1 a) 1)) -1)) 1) (- a a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13835)",
      "output_term": "(* -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 2.3527635169999996
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.012627686
    },
    "speedup": 186.31786670970433,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow b (+ (+ b (* (pow (- (+ a (/ 0 -1)) -1) c) (/ (/ c -1) c))) b)))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16856)",
      "output_term": "(+ a (pow b (+ b (+ b (* -1 (pow (+ a 1) c))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 1.724140461
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow b (+ b (+ b (* (pow (- a -1) c) (/ (/ c -1) c))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.009249855999999999
    },
    "speedup": 186.39646509091602,
    "weight_simple_diff": -1,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ -1 (/ (/ (- (- 1 (/ 0 (pow -1 a))) a) (pow -1 (* (- a 1) 1))) a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(10819)",
      "output_term": "(pow 0 (+ -1 (/ (/ (- 1 a) (pow -1 (+ -1 a))) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.4226964930000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ -1 (/ (/ (- 1 a) (pow -1 (- a 1))) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 0.007626447000000001
    },
    "speedup": 186.547745365568,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ -1 (pow (+ -1 a) a)) (/ -1 (* a (+ 1 (/ (* (* a b) -1) b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10462)",
      "output_term": "(* (/ -1 (+ a (* -1 (* a a)))) (+ -1 (pow (+ -1 a) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 6,
      "simplification_time": 1.0199467709999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 (pow (+ -1 a) a)) (/ -1 (* a (+ 1 (/ (- 0 (* a b)) b)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.005457444
    },
    "speedup": 186.89092751112057,
    "weight_simple_diff": -5,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (/ -1 (- (+ a (/ (* (/ (* a b) (pow a a)) c) (pow (* c 1) 1))) b)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10596)",
      "output_term": "(/ (/ -1 (- (+ a (/ (* a b) (pow a a))) b)) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.17498275
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ -1 (- a (- b (/ (* (/ (* a b) (pow a a)) c) c)))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 9,
      "simplification_time": 0.006231921
    },
    "speedup": 188.54262594150345,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ a (- 0 (/ (+ (- (/ (* b a) (- b (+ d 1))) -1) e) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10510)",
      "output_term": "(/ a (- 0 (/ (+ 1 (+ (/ (* a b) (- b (+ d 1))) e)) a)))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 1.032126394
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- 0 (/ (+ (/ (* a b) (- b (+ d 1))) (+ 1 e)) a)))",
      "output_weight_simple": 15,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.005449713
    },
    "speedup": 189.3909631571424,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 1
  },
  {
    "base_term": "(pow a (- 1 (+ a (- (/ (+ (* (+ -1 (/ 1 -1)) (/ a 1)) (/ a -1)) 1) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10202)",
      "output_term": "(pow a (+ a (+ a 2)))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.8377513679999999
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 1 (+ (/ (+ (* -2 (/ a 1)) (/ a -1)) 1) (- a 1))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.0043920009999999995
    },
    "speedup": 190.74480356448007,
    "weight_simple_diff": -8,
    "weight_complex_diff": -21,
    "depth_diff": -4
  },
  {
    "base_term": "(pow 0 (/ a (- (/ a 1) (* (+ 0 (+ a b)) (/ (pow (/ 0 a) a) b)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11345)",
      "output_term": "(pow 0 (/ a (- a (* (+ a b) (/ (pow 0 a) b)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.786908068
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ a (- (/ a 1) (* (+ a b) (/ (pow 0 a) b)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.003976175
    },
    "speedup": 197.90579338183053,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (+ 1 0) (+ a (* (+ (- (/ (+ (+ b b) b) b) (- -1 0)) 1) b)))",
    "input_weight_simple": 21,
    "input_weight_complex": 32,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(12077)",
      "output_term": "(+ 1 (+ a (* b 5)))",
      "output_weight_simple": 7,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 1.371239295
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (+ a (* b (+ (/ (* b 3) b) 2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 19,
      "output_depth": 7,
      "simplification_time": 0.0068795209999999996
    },
    "speedup": 199.3219142728106,
    "weight_simple_diff": -4,
    "weight_complex_diff": -9,
    "depth_diff": -3
  },
  {
    "base_term": "(- -1 (+ (+ a 0) (/ 0 (* (* (- (- (pow 1 a) 1) (pow b b)) (- -1 a)) a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11376)",
      "output_term": "(- -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.0429752479999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.00517566
    },
    "speedup": 201.51541020855308,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (/ 1 a)) (/ (* b (- (- 0 c) 1)) (+ (- -1 (* (pow 1 1) 1)) 1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (pow a -1)) (+ b (* b c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 0.7925853810000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a (/ 1 a)) (/ (* b (- -1 c)) -1))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 0.003906704
    },
    "speedup": 202.87827821099322,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- a (* a (* a (- (- (/ 0 0) (pow (* a a) 0)) a)))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (* (* a a) (- (+ (/ 0 0) -1) a))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.6133334349999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (* a (* a (- (/ 0 0) (+ a 1))))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.0029674059999999997
    },
    "speedup": 206.69009734427982,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (+ (* -1 -1) (/ (* a (* (+ (pow a -1) a) -1)) (pow (pow 1 d) d))) a) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11143)",
      "output_term": "(/ 1 (+ a (* a (/ (+ -1 (* -1 (* a a))) (pow (pow 1 d) d)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 1.0598242450000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (+ 1 (/ (* a (- 0 (+ a (/ 1 a)))) (pow (pow 1 d) d)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.005087099
    },
    "speedup": 208.3356830680905,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(pow a (pow a (* (+ a (pow c (- (* (* d (/ a c)) (* c d)) (pow 0 1)))) 0)))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(17560)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 1.449033976
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.006952633000000001
    },
    "speedup": 208.41513941552788,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (+ (* (+ 1 a) (* a (+ (- 1 (pow (pow c 1) d)) b))) e) d)",
    "input_weight_simple": 19,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10314)",
      "output_term": "(pow (+ (* (+ (- 1 (pow c d)) b) (+ a (* a a))) e) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.436872889
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (+ (* (+ 1 a) (* a (+ (- 1 (pow c d)) b))) e) d)",
      "output_weight_simple": 14,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.006853702999999999
    },
    "speedup": 209.6491325929939,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (/ (- -1 a) a) (- (pow (/ 1 b) b) (- (* (* b c) a) 0)))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11364)",
      "output_term": "(/ (/ (- -1 a) a) (- (pow (/ 1 b) b) (* a (* b c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 5,
      "simplification_time": 1.193874731
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- -1 a) a) (- (pow (/ 1 b) b) (* a (* b c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 5,
      "simplification_time": 0.005682852
    },
    "speedup": 210.0837275016136,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (* (/ 1 0) (- b a)) (+ (pow -1 -1) (- (pow (- 1 0) -1) (* b 1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15436)",
      "output_term": "(+ a (pow (* (/ 1 0) (- b a)) (* b -1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 2.548161727
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (* (/ 1 0) (- b a)) (- 0 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.011954522999999998
    },
    "speedup": 213.1546132790075,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ (+ (- (pow (/ (+ a (* 1 1)) a) 1) 0) a) 0) a)",
    "input_weight_simple": 17,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "NodeLimit(10111)",
      "output_term": "(pow (/ (+ a (+ 1 (pow a -1))) 0) a)",
      "output_weight_simple": 9,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.485579441
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ (+ a (/ (+ a 1) a)) 0) a)",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 0.0069660830000000005
    },
    "speedup": 213.2589348992827,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- -1 1) (/ (- (/ (- (/ (+ (+ 1 a) b) (* a b)) (+ 1 -1)) a) -1) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11754)",
      "output_term": "(/ -2 (/ (+ 1 (/ (/ (+ (+ 1 a) b) (* a b)) a)) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.819757112
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -2 (/ (+ 1 (/ (/ (+ 1 (+ a b)) (* a b)) a)) d))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.0038255819999999997
    },
    "speedup": 214.28298021059283,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (* (pow (/ (+ (* (/ a -1) (* (pow a a) a)) (/ (- d 1) d)) a) -1) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(27897)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.4165135850000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006571713999999999
    },
    "speedup": 215.54705286931238,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ -1 a) (- (+ 0 (* a b)) (pow b (* (- a 1) (+ 1 c)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 35,
    "input_depth": 6,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14151)",
      "output_term": "(* (/ -1 a) (- (* a b) (pow b (* (+ -1 a) (+ 1 c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.034225285
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 a) (- (* a b) (pow b (* (- a 1) (+ 1 c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.004790798000000001
    },
    "speedup": 215.87745611482677,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (* 1 (- (pow (- (/ 1 0) b) b) (pow 0 (* (/ (* b c) c) (pow 1 -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10817)",
      "output_term": "(+ a (- (pow (- (/ 1 0) b) b) (pow 0 b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.263900407
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (- (pow (- (/ 1 0) b) b) (pow 0 (/ (* b c) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 6,
      "simplification_time": 0.00574319
    },
    "speedup": 220.06940515636782,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (/ (- -1 (- (+ a (* (- (/ (+ a -1) b) b) (/ a -1))) -1)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (* (* a -1) (+ -1 (- (/ (+ a -1) b) b))) 2))",
      "output_weight_simple": 12,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 1.43798608
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (- -1 (+ a (+ (* (- (/ (+ a -1) b) b) (/ a -1)) 1))) -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 33,
      "output_depth": 10,
      "simplification_time": 0.006533359999999999
    },
    "speedup": 220.09901184076801,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (- a a) (- (/ (* (* (pow (pow b 0) (- 0 0)) (* 0 b)) c) c) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10510)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.919982522
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004171486
    },
    "speedup": 220.5407190627033,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (* (pow (/ 1 (+ -1 a)) -1) (+ (/ (* (/ b (+ 1 a)) (* c a)) b) 1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10674)",
      "output_term": "(* (/ 1 (/ 1 (+ -1 a))) (+ 1 (* c (* a (/ 1 (+ 1 a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.061160153
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ 1 (/ (* (/ b (+ 1 a)) (* a c)) b)) (/ 1 (+ -1 a)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.0047473920000000005
    },
    "speedup": 223.52486438870017,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* 1 (- a (* b (+ b (* (+ (/ b 0) b) (- (/ c 1) d)))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11145)",
      "output_term": "(/ a (- a (* b (+ b (* (+ b (/ b 0)) (- c d))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.246963038
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (- a (* b (+ b (* (+ b (/ b 0)) (- (/ c 1) d))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.005566805
    },
    "speedup": 223.99976970632167,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (+ b b) (/ (pow -1 (/ (* (- b 1) (/ 0 b)) (* 0 b))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11478)",
      "output_term": "(+ 1 (* b (+ a a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 9,
      "output_depth": 4,
      "simplification_time": 0.6544223760000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ (+ b b) (/ (pow -1 (/ 0 0)) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.0028790409999999997
    },
    "speedup": 227.30568130151678,
    "weight_simple_diff": -4,
    "weight_complex_diff": -15,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (* a (* (/ (/ (/ (/ a a) -1) (+ (- (pow b 0) c) 0)) e) e)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14635)",
      "output_term": "(/ 1 (* a (/ -1 (- 1 c))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.477525416
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (* e (/ (/ -1 (- 1 c)) e))))",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.006453788
    },
    "speedup": 228.93925489960313,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (pow (+ 1 0) a) (pow (* (* b (- (- (/ (pow a c) -1) (+ b a)) 1)) d) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 a) (pow (* b (* (* -1 d) (+ 1 (+ a (+ b (pow a c)))))) b))",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 1.1041827510000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 1 a) (pow (* (- (/ (pow a c) -1) (+ b (+ 1 a))) (* b d)) b))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.0048123540000000005
    },
    "speedup": 229.44753253813,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 2
  },
  {
    "base_term": "(pow (* 0 (- 1 (+ 0 (/ (pow (+ a -1) (pow (* -1 a) 0)) a)))) (- b -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(11794)",
      "output_term": "(pow 0 (+ 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.6292798319999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ 1 b))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.002742539
    },
    "speedup": 229.45155273999748,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (* (- -1 (pow (pow a a) (/ b (/ b 0)))) (- 1 a)))",
    "input_weight_simple": 17,
    "input_weight_complex": 41,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (+ -1 a) (+ (pow (pow a a) (/ b (/ b 0))) 1)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.21474642300000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow a (* (- -1 (pow (pow a a) (/ b (/ b 0)))) (- 1 a)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 7,
      "simplification_time": 0.000929889
    },
    "speedup": 230.93769578949747,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ 1 (/ (+ a (/ (- 1 (/ (+ (+ (pow b a) b) (* 0 b)) (pow 0 a))) -1)) d))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ (/ (+ b (pow b a)) (pow 0 a)) (+ a -1)) d))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.992150414
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (+ a (/ (- 1 (/ (+ b (pow b a)) (pow 0 a))) -1)) d))",
      "output_weight_simple": 15,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.004272876
    },
    "speedup": 232.1973335991964,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(/ a (+ (* (/ a (* a 1)) d) (/ 1 (* (* (- (- c 0) 0) (/ -1 b)) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10396)",
      "output_term": "(/ a (+ d (/ 1 (* c (* c (/ -1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 1.371844039
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ d (/ 1 (* c (* c (/ -1 b))))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.005859683
    },
    "speedup": 234.11574295059987,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (* (- b c) (/ (/ (* 1 (/ d (pow (- c e) e))) (/ 0 (+ d c))) d)))",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10030)",
      "output_term": "(- a (* (- b c) (* (/ 1 (pow (- c e) e)) (/ 1 0))))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 1.086934866
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (* (- b c) (/ (/ (/ d (pow (- c e) e)) 0) d)))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0046329119999999994
    },
    "speedup": 234.6115933132337,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* (+ -1 a) (/ (- a (+ (* (pow (- a (+ a b)) (* -1 b)) b) b)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(22584)",
      "output_term": "(* -1 (* (+ -1 a) (- a (+ b (* b (pow (* -1 b) (* -1 b)))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 8,
      "simplification_time": 1.073626662
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (+ -1 a) (/ (- a (+ b (* b (pow (- 0 b) (- 0 b))))) -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.004575679000000001
    },
    "speedup": 234.63767060582697,
    "weight_simple_diff": -1,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (- 1 1) 0) (* (- 0 (/ (/ (/ (/ (- -1 a) 0) 0) (+ 0 a)) a)) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11426)",
      "output_term": "(* -1 (/ (/ (/ (- -1 a) 0) 0) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 1.023303207
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (* a (/ (/ (/ (/ (- -1 a) 0) 0) a) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.004261026
    },
    "speedup": 240.15418047202718,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(- 1 (* (* -1 (+ (* a a) 0)) (- (/ 1 (* a (* a (/ -1 a)))) 0)))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(25059)",
      "output_term": "(- 1 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 3.375879124
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (* a (/ 1 (* a (* a (/ -1 a)))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 23,
      "output_depth": 8,
      "simplification_time": 0.01357717
    },
    "speedup": 248.64379867085702,
    "weight_simple_diff": -7,
    "weight_complex_diff": -19,
    "depth_diff": -6
  },
  {
    "base_term": "(* (- a (pow a (pow a (+ (+ 1 b) (* 1 1))))) (+ a (+ (pow e b) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (- a (pow a (pow a (+ b 2)))) (+ (pow e b) (+ a c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.1293673690000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- a (pow a (pow a (+ b 2)))) (+ (pow e b) (+ a c)))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 0.004508807
    },
    "speedup": 250.48030864927244,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a a) (- (pow c 0) (/ (- d c) (- (/ (+ 0 -1) a) (/ 0 e)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10504)",
      "output_term": "(* (* a -2) (+ -1 (/ (- d c) (/ -1 a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 2.159440668
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a a) (- 1 (/ (- d c) (/ -1 a))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 5,
      "simplification_time": 0.008576545
    },
    "speedup": 251.78445026522917,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ a (/ (+ (/ (/ (+ 1 0) (+ (pow 1 a) 1)) (- (+ -1 a) b)) a) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12606)",
      "output_term": "(+ a (/ (/ 1 (+ 1 (pow 1 a))) (- (+ a -1) b)))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.8783744499999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ (+ a (/ (/ 1 (+ 1 (pow 1 a))) (- a (+ 1 b)))) -1))",
      "output_weight_simple": 14,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.003473518
    },
    "speedup": 252.87747177357363,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (* -1 (/ (/ (* 1 a) (- 1 a)) (- -1 (pow (pow (pow 0 b) 1) (pow b b))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11885)",
      "output_term": "(* -1 (* (/ 1 (- 1 a)) (/ 1 (- -1 (pow (pow 0 b) (pow b b))))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 1.1631073969999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (/ (/ a (- 1 a)) (- -1 (pow (pow 0 b) (pow b b))))) a)",
      "output_weight_simple": 14,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.004551482
    },
    "speedup": 255.54476476013744,
    "weight_simple_diff": 0,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (pow (+ -1 1) (/ -1 (pow (/ (+ (- 1 a) -1) (* a b)) (pow d 0)))) c) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11311)",
      "output_term": "(- (* (pow 0 (/ -1 (/ (* -1 a) (* a b)))) c) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 7,
      "simplification_time": 0.858166118
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (* (pow 0 (/ -1 (/ (- 0 a) (* a b)))) c) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.003350306
    },
    "speedup": 256.145593268197,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (- (pow (* (+ (+ 0 -1) (pow a -1)) (- (- b a) -1)) b) a) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13195)",
      "output_term": "(+ a (pow (- (pow (* (+ (/ 1 a) -1) (+ (- b a) 1)) b) a) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.9636334790000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (- (pow (* (+ -1 (/ 1 a)) (- (- b a) -1)) b) a) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.003760031
    },
    "speedup": 256.2833867593113,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (+ (* 0 a) 0) a) (- (+ (/ a b) (/ (- (- c b) c) (+ 0 a))) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 7,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14058)",
      "output_term": "(* (pow 0 a) (+ (/ a b) (+ 1 (/ (* b -1) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.356076634
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 a) (+ (/ (- 0 b) a) (+ (/ a b) 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 5,
      "simplification_time": 0.0051973819999999995
    },
    "speedup": 260.9153289098242,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(- -1 (+ (* (/ 1 a) (* (pow 0 (/ (* (pow a -1) -1) b)) (+ (pow 0 0) a))) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(18457)",
      "output_term": "(+ (* (pow 0 (/ (* -1 (pow a -1)) b)) (+ -1 (* -1 (pow a -1)))) -2)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.342090628
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ 1 (* (pow 0 (/ (/ -1 a) b)) (/ (+ a (pow 0 0)) a))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.0050892129999999995
    },
    "speedup": 263.7128035317052,
    "weight_simple_diff": -2,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (* (/ (+ (pow (- a (/ (pow a 1) a)) a) (+ (* a a) a)) a) -1) 1) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 56,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(17088)",
      "output_term": "(+ -1 (* (+ a (pow (- a 1) a)) (* -1 (pow a -2))))",
      "output_weight_simple": 11,
      "output_weight_complex": 20,
      "output_depth": 6,
      "simplification_time": 1.419296763
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- 0 (/ (+ (pow (- a 1) a) (+ a (* a a))) a)) 1) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.005281485
    },
    "speedup": 268.73062462546045,
    "weight_simple_diff": -1,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(* (+ (/ a (+ (/ (pow (* -1 (- (- -1 0) 0)) 0) 0) b)) 1) (- (+ -1 a) 1))",
    "input_weight_simple": 23,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (/ a (+ (/ 1 0) b))) (+ a -2))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.6792549749999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (+ 1 (/ a (+ (/ 1 0) b))) (- a 2))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 0.002495937
    },
    "speedup": 272.14427888203903,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* (/ (* (/ a (/ (- a (+ (- 0 b) b)) (- -1 c))) 0) c) d))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(16653)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.592907305
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.0057173680000000004
    },
    "speedup": 278.6084969517442,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ a a) (/ (/ (pow b (* (+ (/ (+ b b) b) (+ c b)) b)) a) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 55,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10060)",
      "output_term": "(pow 1 (/ (/ (pow b (* b (+ b (+ 2 c)))) a) c))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.113655851
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ (/ (pow b (* b (+ (/ (+ b b) b) (+ b c)))) a) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.003974684
    },
    "speedup": 280.1872679689757,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (/ (/ (/ (/ (* (/ a c) c) (* (* (- d 1) c) (+ a 0))) 0) a) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(15817)",
      "output_term": "(/ a (/ (/ (/ (/ a (* a (* c (+ d -1)))) 0) a) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 38,
      "output_depth": 9,
      "simplification_time": 1.2262301469999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ (/ (/ (/ (* c (/ a c)) (* a (* c (- d 1)))) 0) a) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 45,
      "output_depth": 9,
      "simplification_time": 0.0042625449999999995
    },
    "speedup": 287.6755898178201,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (+ (/ a (+ (/ (- (- 1 (+ b b)) (/ (+ b 0) -1)) -1) 1)) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(51097)",
      "output_term": "(pow -1 (+ 1 (/ a b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 2.524250596
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (+ 1 (/ a (+ 1 (/ (- 1 (+ (+ b b) (/ b -1))) -1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.008524602999999999
    },
    "speedup": 296.11356634437993,
    "weight_simple_diff": -6,
    "weight_complex_diff": -14,
    "depth_diff": -5
  },
  {
    "base_term": "(/ (- (* a (/ (- b (- a -1)) (/ (+ (/ (+ a b) -1) (/ b 1)) a))) c) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12091)",
      "output_term": "(- (+ (* (+ (* b -1) a) a) a) c)",
      "output_weight_simple": 9,
      "output_weight_complex": 14,
      "output_depth": 6,
      "simplification_time": 0.6551661259999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (* a (/ (- b (+ a 1)) (/ (+ (/ (+ a b) -1) (/ b 1)) a))) c) 1)",
      "output_weight_simple": 16,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.002208104
    },
    "speedup": 296.7098134870459,
    "weight_simple_diff": -7,
    "weight_complex_diff": -26,
    "depth_diff": -3
  },
  {
    "base_term": "(+ 1 (/ (* (+ 0 (/ a (/ (* (/ (* -1 -1) b) (- a 1)) (pow -1 b)))) 1) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13991)",
      "output_term": "(+ 1 (/ 1 (/ (* (/ 1 b) (+ a -1)) (pow -1 b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 6,
      "simplification_time": 1.598485084
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ a (/ (* (/ 1 b) (- a 1)) (pow -1 b))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.0053512460000000005
    },
    "speedup": 298.7126893437528,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ 0 (/ a (pow (pow a (* (+ (/ (- (- 1 a) 1) (- b a)) c) b)) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10961)",
      "output_term": "(/ a (/ 1 (pow a (* b (+ (/ (* a -1) (- b a)) c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.805673262
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a (/ 1 (pow a (* b (+ (/ (- 0 a) (- b a)) c)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 0.002676758
    },
    "speedup": 300.98845767902816,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (pow 0 0) (* a (- (- 1 (+ a (/ a (+ b 1)))) (/ 1 (+ -1 a))))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(* (pow 0 0) (* a (+ a (+ (/ a (+ 1 b)) (+ -1 (/ 1 (+ a -1)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.730383109
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* (pow 0 0) (* a (- (- 1 (+ a (/ a (+ 1 b)))) (/ 1 (+ a -1))))) -1)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.005670832
    },
    "speedup": 305.1374311564864,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* a (* (/ (+ (pow (* (/ (/ a 1) a) (* a a)) (* b 0)) c) e) 0)) d)",
    "input_weight_simple": 23,
    "input_weight_complex": 52,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11511)",
      "output_term": "(- 0 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.595712252
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 d)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.0051333410000000005
    },
    "speedup": 310.8525718435615,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ -1 (/ a (* (/ (* (+ 0 a) b) a) (+ (* (pow 1 1) c) (* a a))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(18791)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.019257822
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.006462481
    },
    "speedup": 312.45860869842403,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (- a -1) (- (/ (- (/ (pow 0 (+ (/ -1 1) b)) 0) (+ 0 (pow 0 c))) 1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a 1) (- (- (/ (pow 0 (+ -1 b)) 0) (pow 0 c)) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.8139309650000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (+ a 1) (- (/ (- (/ (pow 0 (+ -1 b)) 0) (pow 0 c)) 1) c))",
      "output_weight_simple": 15,
      "output_weight_complex": 33,
      "output_depth": 8,
      "simplification_time": 0.0025367289999999997
    },
    "speedup": 320.8584618222917,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (* (- a a) 0) (pow a (- 1 (* (/ (pow (+ -1 (+ b a)) a) (pow b 1)) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13603)",
      "output_term": "(pow a (- 1 (pow (+ -1 (+ a b)) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 1.647518174
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 1 (* b (/ (pow (+ -1 (+ a b)) a) b))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 0.005096514
    },
    "speedup": 323.2637394893843,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(+ 1 (pow (- a (* a (/ (/ (* (pow (* -1 1) 1) (+ c a)) c) 1))) (- -1 c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(12312)",
      "output_term": "(+ 1 (pow (* a (+ (* a (/ 1 c)) 2)) (- -1 c)))",
      "output_weight_simple": 12,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 0.834569426
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (pow (- a (* a (/ (/ (- 0 (+ a c)) c) 1))) (- -1 c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.0025796200000000004
    },
    "speedup": 323.5241725525464,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(pow (+ (+ (/ (- a (/ a (* (pow (+ a 0) a) a))) a) 0) c) (- -1 -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(17657)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.6702507370000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.005116461
    },
    "speedup": 326.44649045502354,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (/ (/ 0 (* 0 1)) (- (- 1 a) (* (+ (/ b (pow -1 -1)) c) (- d -1)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (/ 0 0) (+ (- 1 a) (* (+ 1 d) (+ b (* -1 c))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.7557822120000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (/ (/ 0 0) (- (- 1 a) (* (+ (/ b -1) c) (+ 1 d)))))",
      "output_weight_simple": 16,
      "output_weight_complex": 37,
      "output_depth": 7,
      "simplification_time": 0.002265925
    },
    "speedup": 333.54246588038006,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a (+ (* (+ (pow (pow -1 (* 0 (+ b b))) (pow 0 c)) c) c) 1)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14274)",
      "output_term": "(+ (* (/ 1 c) (+ a 1)) (+ c (pow 1 (pow 0 c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 5,
      "simplification_time": 1.634428615
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (* c (+ c (pow 1 (pow 0 c)))) (+ a 1)) c)",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 0.004884092
    },
    "speedup": 334.64328988888826,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (pow (/ (/ (/ a (+ (+ b (pow (- a -1) b)) (/ -1 -1))) a) 0) 1) d)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10071)",
      "output_term": "(+ (/ (/ 1 (+ (pow (+ a 1) b) (+ b 1))) 0) d)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.248788069
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (/ (/ a (+ (pow (+ a 1) b) (+ b 1))) a) 0) d)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.003661097
    },
    "speedup": 341.0966901450576,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(- -1 (+ (/ (- (* -1 -1) (* a (/ (+ (* 0 a) a) (pow b 0)))) -1) c))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10639)",
      "output_term": "(* -1 (+ (* a a) c))",
      "output_weight_simple": 6,
      "output_weight_complex": 10,
      "output_depth": 4,
      "simplification_time": 0.985515498
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (+ (/ (- 1 (* a (/ a 1))) -1) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 0.002864532
    },
    "speedup": 344.04066632874066,
    "weight_simple_diff": -4,
    "weight_complex_diff": -11,
    "depth_diff": -3
  },
  {
    "base_term": "(+ (* 0 (/ a (/ (* -1 (+ (* (- (pow a b) a) (- -1 a)) (pow -1 a))) -1))) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.5633607359999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001630969
    },
    "speedup": 345.4147417884705,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- (/ (* (/ a 0) (- (- 1 (* -1 (- -1 -1))) (+ -1 a))) b) (/ 1 b)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 42,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (* (/ 1 b) (+ 1 (* (/ a 0) (+ a -2))))) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 0.7674324260000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ (* (/ a 0) (- 1 (+ a -1))) b) (- (/ 1 b) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 0.002219638
    },
    "speedup": 345.7466604914856,
    "weight_simple_diff": 1,
    "weight_complex_diff": -1,
    "depth_diff": 1
  },
  {
    "base_term": "(/ (- 0 (+ (/ 1 (- (/ (* a (* (pow a b) a)) (* a a)) c)) a)) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14253)",
      "output_term": "(+ a (/ 1 (- (pow a b) c)))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.215497374
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 0 (+ a (/ 1 (- (/ (pow a (+ b 2)) (* a a)) c)))) -1)",
      "output_weight_simple": 16,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.0035098729999999997
    },
    "speedup": 346.3080783834629,
    "weight_simple_diff": -8,
    "weight_complex_diff": -17,
    "depth_diff": -4
  },
  {
    "base_term": "(- -1 (* (/ 1 a) (pow 1 (pow 1 (/ (* (/ (* a -1) b) (* -1 -1)) a)))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13248)",
      "output_term": "(- -1 (* (/ 1 a) (pow 1 (pow 1 (* -1 (/ 1 b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 7,
      "simplification_time": 1.4113159839999998
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* (/ 1 a) (pow 1 (pow 1 (/ (/ (- 0 a) b) a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.004066158
    },
    "speedup": 347.08832858929725,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (- a (/ -1 (/ (+ (/ -1 a) (+ (/ (- 1 0) a) a)) 0))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10342)",
      "output_term": "(+ a (+ b (/ 1 (/ a 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 18,
      "output_depth": 5,
      "simplification_time": 1.308140732
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (- a (/ -1 (/ (+ (/ -1 a) (+ a (/ 1 a))) 0))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.0037308289999999997
    },
    "speedup": 350.6300428135409,
    "weight_simple_diff": -5,
    "weight_complex_diff": -13,
    "depth_diff": -3
  },
  {
    "base_term": "(+ (- (pow a 0) (/ (+ (+ -1 (/ (+ a (- a b)) (pow c a))) a) 1)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "Saturated",
      "output_term": "(+ (* -1 (+ a (/ (+ a (- a b)) (pow c a)))) (+ b 2))",
      "output_weight_simple": 13,
      "output_weight_complex": 24,
      "output_depth": 7,
      "simplification_time": 1.9302471429999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ b (- 1 (/ (+ a (+ -1 (/ (+ a (- a b)) (pow c a)))) 1)))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 0.005386897
    },
    "speedup": 358.3226378748285,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(* 1 (pow a (- (/ -1 (- -1 (- a 1))) (+ (/ (/ (- 0 a) 0) a) -1))))",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(10057)",
      "output_term": "(pow a (- (/ -1 (- 0 a)) (+ -1 (/ (/ (- 0 a) 0) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 7,
      "simplification_time": 1.7968308780000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (- 1 (- (/ (/ (- 0 a) 0) a) (/ -1 (- 0 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.004990181999999999
    },
    "speedup": 360.0732153656922,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (* a (/ (- (- a (pow (+ (/ (- 0 a) a) (+ a a)) (/ 0 -1))) b) c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10620)",
      "output_term": "(- -1 (* a (/ (- (+ -1 a) b) c)))",
      "output_weight_simple": 9,
      "output_weight_complex": 17,
      "output_depth": 6,
      "simplification_time": 1.08080266
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (* a (/ (- a (+ 1 b)) c)))",
      "output_weight_simple": 10,
      "output_weight_complex": 18,
      "output_depth": 6,
      "simplification_time": 0.002982906
    },
    "speedup": 362.3321217631397,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(* (+ a (/ 0 (pow (+ (/ (/ (+ (pow -1 a) a) (/ a 0)) (/ a 1)) -1) a))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15943)",
      "output_term": "(* a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.945246793
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(* a a)",
      "output_weight_simple": 2,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.005323668
    },
    "speedup": 365.3959625205779,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- -1 0) (pow (+ (/ (+ (+ (/ (- a 1) a) -1) a) 0) (- (- 0 0) -1)) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 37,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(36886)",
      "output_term": "(+ -1 (/ 1 (+ 1 (/ (+ a (* -1 (pow a -1))) 0))))",
      "output_weight_simple": 11,
      "output_weight_complex": 24,
      "output_depth": 8,
      "simplification_time": 1.683249333
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ 1 (+ 1 (/ (+ a (+ -1 (/ (+ -1 a) a))) 0))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 9,
      "simplification_time": 0.004596793
    },
    "speedup": 366.17905853058863,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- (- a (* (* 0 (/ (* (- 0 a) (/ 1 a)) b)) 0)) b) (/ b 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13393)",
      "output_term": "(* b (- a b))",
      "output_weight_simple": 4,
      "output_weight_complex": 7,
      "output_depth": 3,
      "simplification_time": 1.2495486439999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* (- a b) (/ b 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 3,
      "simplification_time": 0.003382259
    },
    "speedup": 369.4420338596187,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(/ -1 (- -1 (- (/ (+ 1 (/ (- 1 (- -1 1)) (pow (* a 0) a))) -1) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 40,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10126)",
      "output_term": "(/ -1 (+ a (/ 3 (pow 0 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.85664163
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ -1 (- -1 (- (/ (+ 1 (/ 3 (pow 0 a))) -1) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.0022750179999999997
    },
    "speedup": 376.542792188897,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(/ 1 (* a (/ (+ (/ a -1) (* b (- (pow (+ 1 1) 1) a))) (/ c b))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (/ (+ (* a -1) (* b (- 2 a))) (/ c b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 0.44823832100000005
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (* a (/ (+ (/ a -1) (* b (- 2 a))) (/ c b))))",
      "output_weight_simple": 14,
      "output_weight_complex": 35,
      "output_depth": 7,
      "simplification_time": 0.001187773
    },
    "speedup": 377.37709225584354,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ (+ (pow a (+ (+ (* 0 1) b) (+ -1 1))) 1) a))",
    "input_weight_simple": 17,
    "input_weight_complex": 25,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16471)",
      "output_term": "(+ -1 (* -1 (pow a b)))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.551994185
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a b))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.004061542
    },
    "speedup": 382.1194474906329,
    "weight_simple_diff": 1,
    "weight_complex_diff": 2,
    "depth_diff": 1
  },
  {
    "base_term": "(+ 1 (- -1 (pow -1 (/ (/ (pow (+ -1 (* (* a a) 0)) (* a 1)) (+ a 1)) 1))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13907)",
      "output_term": "(* -1 (pow -1 (/ (pow -1 a) (+ 1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 2.985419181
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (pow -1 (/ (/ (pow -1 a) (+ 1 a)) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 0.007736389
    },
    "speedup": 385.8931060731305,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ (+ (- 1 a) a) (/ (/ (/ a (pow (/ (/ c -1) -1) 1)) (+ 1 c)) -1)) c)",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 9,
    "Baseline": {
      "iterations": 7,
      "stop_reason": "NodeLimit(16054)",
      "output_term": "(* c (/ 1 (* -1 (/ (/ a c) (+ 1 c)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.736880444
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* c (/ 1 (/ (/ (/ a (/ (/ c -1) -1)) (+ 1 c)) -1)))",
      "output_weight_simple": 12,
      "output_weight_complex": 39,
      "output_depth": 8,
      "simplification_time": 0.001893585
    },
    "speedup": 389.14569137376986,
    "weight_simple_diff": -2,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(- (pow (* (+ (* (pow (+ a (* -1 a)) 0) (+ (pow 0 0) -1)) b) b) c) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(46344)",
      "output_term": "(pow (* b b) c)",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 2.077938899
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "(pow (* b b) c)",
      "output_weight_simple": 4,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.005323588000000001
    },
    "speedup": 390.32676814960126,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (/ -1 (* a a)) (- (* a (- -1 (/ (/ (+ a -1) 1) (- -1 a)))) -1)) 0)",
    "input_weight_simple": 23,
    "input_weight_complex": 43,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12262)",
      "output_term": "(* (* (+ -1 a) (/ 1 (* a a))) (+ 1 (* a (/ 1 (- -1 a)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.2947476889999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* (/ -1 (* a a)) (+ 1 (* a (- -1 (/ (/ (+ -1 a) 1) (- -1 a))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.0033146580000000003
    },
    "speedup": 390.6127537139577,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(* (pow (- -1 a) (- (/ (+ (+ (- b (+ -1 b)) 1) c) (- (+ -1 0) b)) -1)) 1)",
    "input_weight_simple": 23,
    "input_weight_complex": 36,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(54317)",
      "output_term": "(pow (- -1 a) (+ 1 (/ (+ c 2) (- -1 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 2.424949821
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (- -1 a) (+ 1 (/ (+ 2 c) (- -1 b))))",
      "output_weight_simple": 12,
      "output_weight_complex": 22,
      "output_depth": 5,
      "simplification_time": 0.00616265
    },
    "speedup": 393.4914072679772,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (- (pow 1 (/ (/ a (+ (+ 0 (* (+ a c) b)) (+ 0 1))) a)) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 39,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10016)",
      "output_term": "(- a (+ 1 (pow 1 (/ 1 (+ 1 (* (+ a c) b))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 22,
      "output_depth": 8,
      "simplification_time": 1.338855605
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (pow 1 (/ (/ a (+ 1 (* (+ a c) b))) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 9,
      "simplification_time": 0.0033883760000000002
    },
    "speedup": 395.131946690686,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (* (- -1 -1) (+ 1 (* a (+ (- a (/ (- a 1) 1)) (/ 1 a))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(26331)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.922291738
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.002318625
    },
    "speedup": 397.7752926842417,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(pow 1 (* (+ 0 a) (pow (* (- 1 (* (+ (/ a a) b) (/ a b))) b) -1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14446)",
      "output_term": "(pow 1 (* a (/ 1 (+ b (* (+ 1 b) (* a -1))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.132381421
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (/ a (* b (- 1 (* (+ 1 b) (/ a b))))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.002817471
    },
    "speedup": 401.91413540724994,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* a (/ b (+ 0 (pow 1 (+ 1 (* c (* (pow c c) d))))))) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(15779)",
      "output_term": "(* a (/ 1 (pow 1 (+ 1 (* c (* (pow c c) d))))))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.8966910209999999
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (/ b (pow 1 (+ 1 (* c (* (pow c c) d)))))) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 0.004672523
    },
    "speedup": 405.92438410683053,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(+ -1 (- (/ (/ a (/ a (* (* 1 0) (- a (+ a -1))))) a) 0))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10995)",
      "output_term": "(+ -1 (/ 1 (/ a 0)))",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 1.3317804610000001
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ (/ a (/ a 0)) a))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.00325815
    },
    "speedup": 408.7535751883738,
    "weight_simple_diff": 0,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(* a (/ (pow (+ b (- c (* (/ (pow d (pow c 0)) (- -1 d)) (- 1 b)))) 1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10988)",
      "output_term": "(* a (/ (+ b (+ c (* (/ d (- -1 d)) (+ b -1)))) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 1.0226015469999998
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (+ b (- c (* (/ d (- -1 d)) (- 1 b)))) c))",
      "output_weight_simple": 14,
      "output_weight_complex": 28,
      "output_depth": 8,
      "simplification_time": 0.002404084
    },
    "speedup": 425.36015671665376,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (- (pow a -1) (+ a (- (pow (+ (/ (- a -1) a) a) 0) -1))) 1)",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(10765)",
      "output_term": "(- (/ 1 a) (+ a 2))",
      "output_weight_simple": 6,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 0.960182251
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ 1 a) (- a -2)) 1)",
      "output_weight_simple": 7,
      "output_weight_complex": 16,
      "output_depth": 4,
      "simplification_time": 0.0022497710000000002
    },
    "speedup": 426.79110496134933,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 1 (- (/ (* (* (/ a (* (+ (* 0 a) 0) 1)) b) b) b) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10190)",
      "output_term": "(/ 1 (+ 1 (* (/ a 0) b)))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 1.076807832
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ 1 (+ 1 (/ (* (/ a 0) (* b b)) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.002515548
    },
    "speedup": 428.0609362254269,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(- (* (/ -1 a) (* a (/ a (+ (pow a (pow (pow 0 -1) -1)) (pow b a))))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10500)",
      "output_term": "(* -1 (/ a (+ (pow a (/ 1 (pow 0 -1))) (pow b a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 1.70462709
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(* a (* (/ -1 a) (/ a (+ (pow a (pow (pow 0 -1) -1)) (pow b a)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.003963181
    },
    "speedup": 430.11588166172584,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (+ (/ (- a (+ (pow a (pow (/ (/ 0 0) -1) b)) a)) 1) (pow -1 (pow -1 a))))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12281)",
      "output_term": "(/ a (+ (* -1 (pow a (pow (* (/ 0 0) -1) b))) (pow -1 (pow -1 a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 1.310422454
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (+ (/ (- 0 (pow a (pow (/ (/ 0 0) -1) b))) 1) (pow -1 (pow -1 a))))",
      "output_weight_simple": 15,
      "output_weight_complex": 45,
      "output_depth": 9,
      "simplification_time": 0.003003276
    },
    "speedup": 436.3310112024336,
    "weight_simple_diff": -2,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(* (- (- (/ 1 1) 0) a) (- (/ (pow a (+ (/ b (- -1 0)) (+ -1 -1))) c) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "Saturated",
      "output_term": "(* (- 1 a) (- (/ (pow a (+ (* b -1) -2)) c) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.453129675
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* (- 1 a) (- (/ (pow a (+ (/ b -1) -2)) c) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 7,
      "simplification_time": 0.001029124
    },
    "speedup": 440.3061973095565,
    "weight_simple_diff": 0,
    "weight_complex_diff": -3,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (+ a (/ (+ (* a a) (pow (/ (+ a a) a) (pow (+ -1 -1) 0))) a)))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(10868)",
      "output_term": "(pow 0 (* 2 (+ a (/ 1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.9560699970000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (+ a (/ (+ (* a a) (/ (+ a a) a)) a)))",
      "output_weight_simple": 9,
      "output_weight_complex": 22,
      "output_depth": 7,
      "simplification_time": 0.0021563370000000004
    },
    "speedup": 443.37689192366497,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(- (* (pow (/ (- (/ (pow 1 1) (/ (/ 0 a) -1)) (* (+ 1 b) a)) a) a) a) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11501)",
      "output_term": "(+ 1 (* a (pow (/ (- (/ 1 0) (+ a (* a b))) a) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.979994797
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (* a (pow (/ (- (/ 1 0) (* a (+ 1 b))) a) a)))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 8,
      "simplification_time": 0.002185981
    },
    "speedup": 448.30892720476527,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ -1 (/ (* (/ a 1) (/ (/ (- (/ b 1) 1) (- a -1)) -1)) b)) c)",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10308)",
      "output_term": "(/ (+ -1 (* (* a (/ 1 (+ a 1))) (+ -1 (/ 1 b)))) c)",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.865607289
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ -1 (/ (* (/ a 1) (/ (/ (- (/ b 1) 1) (- a -1)) -1)) b)) c)",
      "output_weight_simple": 15,
      "output_weight_complex": 43,
      "output_depth": 9,
      "simplification_time": 0.0018388190000000002
    },
    "speedup": 470.74088803737607,
    "weight_simple_diff": -2,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(+ (/ -1 (/ 1 (- (pow 0 a) (- (* (+ b a) (+ c -1)) (* -1 -1))))) -1)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -1 (/ 1 (- (pow 0 a) (+ -1 (* (+ a b) (+ -1 c)))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.760969675
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ -1 (/ -1 (/ 1 (- (pow 0 a) (- (* (+ a b) (+ -1 c)) 1)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.00160798
    },
    "speedup": 473.2457337777833,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (* (pow (- a -1) b) b) (* c (/ (/ b c) (pow (pow (- 0 -1) -1) (* 1 0)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 49,
    "input_depth": 7,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12298)",
      "output_term": "(+ b (* b (pow (+ a 1) b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 1.040838395
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ (* b (pow (+ a 1) b)) (* c (/ (/ b c) 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 27,
      "output_depth": 5,
      "simplification_time": 0.002136222
    },
    "speedup": 487.2332533790963,
    "weight_simple_diff": -4,
    "weight_complex_diff": -14,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* a (- -1 (pow 1 (/ (pow (* (+ (/ a c) d) c) (+ b -1)) c)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14242)",
      "output_term": "(* a (- -1 (pow 1 (/ (pow (+ a (* c d)) (+ -1 b)) c))))",
      "output_weight_simple": 14,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.1463447740000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(* a (- -1 (pow 1 (/ (pow (* c (+ (/ a c) d)) (+ -1 b)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.0023218049999999997
    },
    "speedup": 493.7299962744504,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* a (pow (+ (+ 0 (/ a -1)) (/ (pow (pow (/ -1 0) b) 0) 1)) -1)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10152)",
      "output_term": "(/ 1 (+ (* a -1) 1))",
      "output_weight_simple": 6,
      "output_weight_complex": 12,
      "output_depth": 4,
      "simplification_time": 1.394516173
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ a (+ (/ a -1) 1)) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.0028207959999999995
    },
    "speedup": 494.36973570580795,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (* (/ -1 (+ (/ a a) (- (/ (/ (+ a b) 1) (pow b 0)) 0))) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13413)",
      "output_term": "(/ -1 (+ a (+ b 1)))",
      "output_weight_simple": 7,
      "output_weight_complex": 13,
      "output_depth": 4,
      "simplification_time": 1.548772265
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (/ -1 (+ 1 (/ (/ (+ a b) 1) 1)))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 0.003119424
    },
    "speedup": 496.49302723836195,
    "weight_simple_diff": -4,
    "weight_complex_diff": -17,
    "depth_diff": -4
  },
  {
    "base_term": "(/ a (pow (/ (/ 0 (- (* (* 0 (- (- b 1) 1)) (/ a 1)) b)) -1) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13508)",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 1.018026659
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ a 0)",
      "output_weight_simple": 3,
      "output_weight_complex": 8,
      "output_depth": 2,
      "simplification_time": 0.001969242
    },
    "speedup": 516.9637144647535,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- a (+ 1 (pow (- a 1) (* (- (/ -1 0) (- 1 (/ -1 1))) (* (/ -1 b) b)))))",
    "input_weight_simple": 23,
    "input_weight_complex": 44,
    "input_depth": 8,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(20158)",
      "output_term": "(- a (+ 1 (pow (+ a -1) (+ (* -1 (/ -1 0)) 2))))",
      "output_weight_simple": 12,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 1.9691085270000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- a (+ 1 (pow (- a 1) (* (- (/ -1 0) 2) (* b (/ -1 b))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.0038026580000000004
    },
    "speedup": 517.8242500377368,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (/ (- (/ (/ -1 (- (* 1 (pow (* a 1) -1)) -1)) a) c) -1) (/ c -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 10,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(31979)",
      "output_term": "(* -1 (/ (/ -1 (+ 1 (/ 1 a))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 22,
      "output_depth": 6,
      "simplification_time": 3.3708475709999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ (/ (- (/ (/ -1 (+ 1 (/ 1 a))) a) c) -1) (/ c -1))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.0065014370000000005
    },
    "speedup": 518.4773106314803,
    "weight_simple_diff": -4,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(- (pow (/ a a) (- 0 (/ (/ (/ (pow b (- b 0)) b) (/ b b)) (/ 1 b)))) b)",
    "input_weight_simple": 23,
    "input_weight_complex": 62,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16351)",
      "output_term": "(- (pow 1 (- 0 (pow b b))) b)",
      "output_weight_simple": 7,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 1.9776250960000001
    },
    "Extended": {
      "iterations": 6,
      "stop_reason": "Saturated",
      "output_term": "(- (pow 1 (- 0 (/ (/ (/ (pow b b) b) 1) (/ 1 b)))) b)",
      "output_weight_simple": 11,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 0.00371974
    },
    "speedup": 531.6568082715459,
    "weight_simple_diff": -4,
    "weight_complex_diff": -20,
    "depth_diff": -3
  },
  {
    "base_term": "(/ (- (pow (pow (+ (/ (/ (+ a (- a b)) a) (* -1 a)) b) c) d) -1) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 49,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(17961)",
      "output_term": "(/ (+ (pow (pow (+ b (* (+ b (* a -2)) (pow a -2))) c) d) 1) b)",
      "output_weight_simple": 15,
      "output_weight_complex": 34,
      "output_depth": 9,
      "simplification_time": 1.297558872
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ (pow (pow (+ b (/ (/ (+ a (- a b)) a) (- 0 a))) c) d) 1) b)",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 10,
      "simplification_time": 0.002382437
    },
    "speedup": 544.6351244544977,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(+ (pow a 1) (/ (/ (/ (* (/ (/ a a) 0) b) (+ (pow b b) 0)) (/ 1 -1)) b))",
    "input_weight_simple": 23,
    "input_weight_complex": 61,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(12694)",
      "output_term": "(+ a (* (/ 1 0) (* -1 (/ 1 (pow b b)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 1.093002077
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ a (/ (/ (/ (* (/ 1 0) b) (pow b b)) -1) b))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.0019950759999999997
    },
    "speedup": 547.8498448179419,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(- 1 (pow (/ a a) (/ (/ (- (- (/ (+ 0 1) c) -1) (* a c)) c) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14121)",
      "output_term": "(- 1 (pow 1 (+ (/ 1 c) (+ (* a -1) (pow c -2)))))",
      "output_weight_simple": 12,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 1.604605085
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- 1 (pow 1 (/ (/ (- 1 (- (* a c) (/ 1 c))) c) 1)))",
      "output_weight_simple": 11,
      "output_weight_complex": 29,
      "output_depth": 8,
      "simplification_time": 0.002845536
    },
    "speedup": 563.9025775811657,
    "weight_simple_diff": 1,
    "weight_complex_diff": -4,
    "depth_diff": -2
  },
  {
    "base_term": "(* a (* (- a a) (/ (/ 0 c) (/ e (pow (- -1 (+ b -1)) (* 0 b))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14146)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.4094798969999998
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004155076
    },
    "speedup": 579.8882853165621,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (pow -1 b) (- a (- (/ 1 b) (* (/ (* b b) b) (/ 1 0))))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10323)",
      "output_term": "(+ a (pow (pow -1 b) (- a (- (/ 1 b) (* b (/ 1 0))))))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.790040369
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow (pow -1 b) (- a (- (/ 1 b) (* (/ (* b b) b) (/ 1 0))))))",
      "output_weight_simple": 15,
      "output_weight_complex": 37,
      "output_depth": 8,
      "simplification_time": 0.0013572789999999999
    },
    "speedup": 582.0766172614474,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow 1 (- a (+ (* (/ (+ (/ (+ b b) c) (pow d c)) (- 1 c)) d) 1))) e)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (- a (+ 1 (* d (/ (+ (/ (+ b b) c) (pow d c)) (- 1 c)))))) e)",
      "output_weight_simple": 17,
      "output_weight_complex": 41,
      "output_depth": 10,
      "simplification_time": 0.881372894
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (pow 1 (- a (+ 1 (* d (/ (+ (/ (+ b b) c) (pow d c)) (- 1 c)))))) e)",
      "output_weight_simple": 17,
      "output_weight_complex": 41,
      "output_depth": 10,
      "simplification_time": 0.001503354
    },
    "speedup": 586.2710273162542,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (/ 0 (/ (- a (/ (- (* (+ a -1) b) -1) b)) c)) 0)",
    "input_weight_simple": 17,
    "input_weight_complex": 38,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(18509)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.131657486
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 0)",
      "output_weight_simple": 2,
      "output_weight_complex": 5,
      "output_depth": 2,
      "simplification_time": 0.001929366
    },
    "speedup": 586.5437071037843,
    "weight_simple_diff": -1,
    "weight_complex_diff": -4,
    "depth_diff": -1
  },
  {
    "base_term": "(/ 0 (- (pow (/ a -1) (+ 1 (/ (+ (/ 0 (* 1 0)) (+ -1 a)) 1))) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(20576)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.4355361479999997
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.004082954999999999
    },
    "speedup": 596.5131009281268,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 1 (pow (* (/ (- (/ a 1) (- (/ (* b c) c) (pow -1 0))) c) b) 0))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(10610)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.7705538000000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0012239669999999999
    },
    "speedup": 629.5543915808189,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow -1 (/ a (/ (- (* b a) (* (- (/ (* c d) a) d) (+ c 0))) c)))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(19870)",
      "output_term": "(pow -1 (/ a (/ (- (* a b) (* c (- (/ (* c d) a) d))) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 1.544169751
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow -1 (/ a (/ (- (* a b) (* c (- (/ (* c d) a) d))) c)))",
      "output_weight_simple": 14,
      "output_weight_complex": 36,
      "output_depth": 9,
      "simplification_time": 0.002407369
    },
    "speedup": 641.4345914564822,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ (- a (/ (/ (/ (+ a a) (* (/ (* b b) b) (+ 1 1))) a) b)) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(20172)",
      "output_term": "(+ 1 (- a (/ (* 2 (/ 1 (+ b b))) b)))",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 1.60582206
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (- a (/ (/ (/ (+ a a) (* (/ (* b b) b) 2)) a) b)))",
      "output_weight_simple": 13,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.00240603
    },
    "speedup": 667.4156431964689,
    "weight_simple_diff": -3,
    "weight_complex_diff": -12,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ 0 1) (* (/ 0 a) (* a (+ (pow b 1) (pow (/ 0 1) a)))))",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 7,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16739)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.6777640850000002
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002360279
    },
    "speedup": 710.8329502571519,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* 0 (+ (pow -1 (- (+ 0 -1) (* (- -1 (pow a -1)) (- (* a b) c)))) (pow 1 a)))",
    "input_weight_simple": 23,
    "input_weight_complex": 40,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10302)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.01836191
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001420296
    },
    "speedup": 717.0068140725597,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow a (/ (pow (/ 0 (/ (+ -1 (* b (- (/ a b) 1))) a)) 1) 1))",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(26449)",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.284391084
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0017815090000000001
    },
    "speedup": 720.9568315400033,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (/ (- a (* 0 (pow (pow -1 -1) (/ (+ (/ a -1) 1) (/ c c))))) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 51,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(24846)",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 4.10218006
    },
    "Extended": {
      "iterations": 7,
      "stop_reason": "Saturated",
      "output_term": "a",
      "output_weight_simple": 1,
      "output_weight_complex": 2,
      "output_depth": 1,
      "simplification_time": 0.005585127
    },
    "speedup": 734.4828613565995,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (/ (/ a (/ a (+ (* 0 (/ (- (+ a c) 1) (/ -1 a))) 1))) (pow a c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(11281)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.260197642
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0016965440000000001
    },
    "speedup": 742.8028049965105,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* a (+ (pow (+ a (/ (- (/ (- (/ -1 1) b) 1) (/ a 1)) 1)) -1) -1))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11304)",
      "output_term": "(* a (+ -1 (/ 1 (- -1 b))))",
      "output_weight_simple": 8,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.9918531509999999
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (+ -1 (/ 1 (+ a (/ (- (/ (- -1 b) 1) (/ a 1)) 1)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 9,
      "simplification_time": 0.001329578
    },
    "speedup": 745.9909467515256,
    "weight_simple_diff": -5,
    "weight_complex_diff": -17,
    "depth_diff": -4
  },
  {
    "base_term": "(* a (pow (+ (* (+ (/ 1 -1) a) (+ (/ (pow (+ b a) c) a) -1)) b) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 45,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(10834)",
      "output_term": "(* a (pow (+ b (* (+ a -1) (+ -1 (/ (pow (+ a b) c) a)))) a))",
      "output_weight_simple": 13,
      "output_weight_complex": 28,
      "output_depth": 9,
      "simplification_time": 1.255175917
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (pow (+ b (* (- a 1) (+ -1 (/ (pow (+ a b) c) a)))) a))",
      "output_weight_simple": 14,
      "output_weight_complex": 29,
      "output_depth": 9,
      "simplification_time": 0.0016810689999999999
    },
    "speedup": 746.6534193420973,
    "weight_simple_diff": -1,
    "weight_complex_diff": -1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ a (* b (- 1 (* (+ -1 (/ b c)) (- (pow (+ (* -1 -1) 0) d) (/ c e))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 8,
      "stop_reason": "NodeLimit(10005)",
      "output_term": "(/ a (* b (- 1 (* (+ -1 (/ b c)) (- (pow 1 d) (/ c e))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.9667074600000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (* b (- 1 (* (+ -1 (/ b c)) (- (pow 1 d) (/ c e))))))",
      "output_weight_simple": 16,
      "output_weight_complex": 38,
      "output_depth": 7,
      "simplification_time": 0.001272745
    },
    "speedup": 759.5452820478572,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow a 1) (+ -1 (- (pow a (pow a a)) (/ (pow c (- 1 (- a 0))) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(15065)",
      "output_term": "(pow a (+ -1 (- (pow a (pow a a)) (pow c (* a -1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 2.463610901
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow a (+ -1 (- (pow a (pow a a)) (/ (pow c (- 1 a)) c))))",
      "output_weight_simple": 12,
      "output_weight_complex": 30,
      "output_depth": 7,
      "simplification_time": 0.003225904
    },
    "speedup": 763.6962851343376,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ a (pow 0 (+ -1 (/ (+ (/ (* (/ (+ 0 -1) b) a) 1) a) a))))",
    "input_weight_simple": 19,
    "input_weight_complex": 44,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(13488)",
      "output_term": "(/ a (pow 0 (/ -1 b)))",
      "output_weight_simple": 7,
      "output_weight_complex": 20,
      "output_depth": 4,
      "simplification_time": 0.850792251
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ a (pow 0 (+ -1 (/ (+ a (/ (* a (/ -1 b)) 1)) a))))",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.001102712
    },
    "speedup": 771.5452910642125,
    "weight_simple_diff": -6,
    "weight_complex_diff": -15,
    "depth_diff": -5
  },
  {
    "base_term": "(- a (/ (+ a (/ (- 1 (* b b)) (pow (pow (- (+ 1 1) 0) c) (/ d d)))) a))",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 9,
    "Baseline": {
      "iterations": 17,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (+ a (/ (- 1 (* b b)) (pow 2 c))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.254918046
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (+ a (/ (- 1 (* b b)) (pow 2 c))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.001620438
    },
    "speedup": 774.4313858351877,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (pow (/ a 0) (* (* 0 a) (+ -1 (/ (/ (* -1 1) a) a)))) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(18618)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.0390001460000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002630322
    },
    "speedup": 775.190317383195,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- -1 (- (/ (+ (/ a -1) (pow (pow (/ -1 a) (pow a a)) (/ b a))) a) b))",
    "input_weight_simple": 21,
    "input_weight_complex": 54,
    "input_depth": 8,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(17631)",
      "output_term": "(+ b (* (/ -1 a) (pow (pow (/ -1 a) (pow a a)) (/ b a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 6,
      "simplification_time": 1.7109317000000002
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (- (/ (+ (/ a -1) (pow (pow (/ -1 a) (pow a a)) (/ b a))) a) b))",
      "output_weight_simple": 13,
      "output_weight_complex": 40,
      "output_depth": 8,
      "simplification_time": 0.002206065
    },
    "speedup": 775.5581544514781,
    "weight_simple_diff": -3,
    "weight_complex_diff": -10,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ (/ (pow (- (/ 1 (/ (* (/ a 0) a) a)) (- 1 (- 0 0))) 1) 0) a) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 51,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(11672)",
      "output_term": "(+ 1 (/ (/ (+ (/ 1 (/ a 0)) -1) 0) a))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 1.2293457079999999
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(+ 1 (/ (/ (- (/ 1 (/ (* a (/ a 0)) a)) 1) 0) a))",
      "output_weight_simple": 11,
      "output_weight_complex": 33,
      "output_depth": 9,
      "simplification_time": 0.001579801
    },
    "speedup": 778.1649131757733,
    "weight_simple_diff": -1,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ a b) (pow (- (+ (/ (- -1 -1) (- (* 0 b) d)) (/ (- 1 c) 1)) 1) c))",
    "input_weight_simple": 23,
    "input_weight_complex": 45,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(14694)",
      "output_term": "(- (/ a b) (pow (* -1 c) c))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 4,
      "simplification_time": 2.357713341
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(- (/ a b) (pow (- (/ (- 1 c) 1) 1) c))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.0029981210000000003
    },
    "speedup": 786.3969936503563,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(* (- a (/ (* (- -1 a) a) (- (* 0 0) (/ (+ (* a a) 0) -1)))) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(15685)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.861581648
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.002354291
    },
    "speedup": 790.7185849157984,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (+ a -1) (pow (* a a) (/ (* (+ (- a (+ -1 -1)) 1) a) a)))",
    "input_weight_simple": 19,
    "input_weight_complex": 38,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16639)",
      "output_term": "(/ (+ a -1) (pow (* a a) (+ a 3)))",
      "output_weight_simple": 8,
      "output_weight_complex": 17,
      "output_depth": 4,
      "simplification_time": 1.888022786
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (+ a -1) (pow (* a a) (/ (* a (- a -3)) a)))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.0023328010000000002
    },
    "speedup": 809.3372670879342,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (+ 0 (/ (* (- a a) (/ (- c (+ c 1)) (/ (pow b c) b))) c)) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 50,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(55137)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.696408965
    },
    "Extended": {
      "iterations": 5,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.0031649499999999997
    },
    "speedup": 851.9594195800881,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(+ a (pow (/ 0 a) (+ (/ (* 0 (- a (+ (pow b b) a))) 1) d)))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(34349)",
      "output_term": "(+ a (pow 0 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 2.472364055
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(+ a (pow 0 d))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.002893799
    },
    "speedup": 854.3661999330292,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (+ a (+ b a)) a) (/ b (pow c (/ (* (- (- 0 1) 0) (* 0 1)) b))))",
    "input_weight_simple": 23,
    "input_weight_complex": 48,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13168)",
      "output_term": "(/ (* a (+ a (+ a b))) b)",
      "output_weight_simple": 6,
      "output_weight_complex": 13,
      "output_depth": 5,
      "simplification_time": 2.125114658
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (* a (+ a (+ a b))) (/ b 1))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 5,
      "simplification_time": 0.002470772
    },
    "speedup": 860.101481642175,
    "weight_simple_diff": -2,
    "weight_complex_diff": -6,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (pow (- -1 0) (- (* (/ (- 0 1) -1) (/ (/ (+ a -1) 1) a)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 42,
    "input_depth": 8,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "NodeLimit(20065)",
      "output_term": "(pow 0 (pow -1 (* -1 (/ 1 a))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 3.969702655
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (pow -1 (- (/ (/ (+ -1 a) 1) a) 1)))",
      "output_weight_simple": 10,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.004590182999999999
    },
    "speedup": 864.8244863004373,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(* (/ (+ (* (/ -1 a) 0) (pow (* (- (/ (- a c) c) 1) a) 0)) -1) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 44,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14245)",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.1242524760000001
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "-1",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001292205
    },
    "speedup": 870.0264091223917,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow 0 (- a (pow a (/ 0 (* (/ (/ c (- (/ b 1) -1)) b) (pow (+ 0 c) -1))))))",
    "input_weight_simple": 23,
    "input_weight_complex": 55,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(16834)",
      "output_term": "(pow 0 (+ a -1))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 2.03339316
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- a 1))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 0.002319678
    },
    "speedup": 876.5842328116231,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (- a 0) (/ (pow -1 (/ a -1)) (* (/ (- (* a b) -1) a) b)))",
    "input_weight_simple": 19,
    "input_weight_complex": 45,
    "input_depth": 7,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(16459)",
      "output_term": "(pow a (/ (pow -1 (* a -1)) (* b (+ b (pow a -1)))))",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 6,
      "simplification_time": 1.6372744240000001
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow a (/ (pow -1 (/ a -1)) (* b (/ (+ (* a b) 1) a))))",
      "output_weight_simple": 12,
      "output_weight_complex": 34,
      "output_depth": 7,
      "simplification_time": 0.001866393
    },
    "speedup": 877.2399082079712,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (- (pow (* a (/ b a)) -1) (pow b (/ -1 (* (/ (+ a c) 0) a)))) 1)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10003)",
      "output_term": "(- (/ 1 b) (pow b (/ -1 (* a (/ (+ a c) 0)))))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 7,
      "simplification_time": 1.083316865
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (- (/ 1 (* a (/ b a))) (pow b (/ -1 (* a (/ (+ a c) 0))))) 1)",
      "output_weight_simple": 16,
      "output_weight_complex": 44,
      "output_depth": 8,
      "simplification_time": 0.001178384
    },
    "speedup": 919.3241464582004,
    "weight_simple_diff": -3,
    "weight_complex_diff": -12,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (pow (/ (pow a (/ (pow (+ -1 (- (+ 0 1) a)) 0) a)) 1) -1) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 43,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(14021)",
      "output_term": "(pow (/ 1 (pow a (/ 1 a))) a)",
      "output_weight_simple": 6,
      "output_weight_complex": 21,
      "output_depth": 5,
      "simplification_time": 2.439734294
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(pow (/ 1 (/ (pow a (/ 1 a)) 1)) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 26,
      "output_depth": 6,
      "simplification_time": 0.002562468
    },
    "speedup": 952.1033214853804,
    "weight_simple_diff": -1,
    "weight_complex_diff": -5,
    "depth_diff": -1
  },
  {
    "base_term": "(/ (pow (/ (- a (- (/ (/ (pow (+ b 0) 1) (pow b a)) (+ b 0)) d)) 0) -1) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(14076)",
      "output_term": "(* -1 (/ 1 (/ (- a (- (/ 1 (pow b a)) d)) 0)))",
      "output_weight_simple": 13,
      "output_weight_complex": 32,
      "output_depth": 8,
      "simplification_time": 1.819017343
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ 1 (/ (- a (- (/ (/ b (pow b a)) b) d)) 0)) -1)",
      "output_weight_simple": 14,
      "output_weight_complex": 40,
      "output_depth": 9,
      "simplification_time": 0.0018975910000000001
    },
    "speedup": 958.5929438957078,
    "weight_simple_diff": -1,
    "weight_complex_diff": -8,
    "depth_diff": -1
  },
  {
    "base_term": "(- (/ -1 (* a (pow (pow 0 (+ a (+ (/ (+ a b) -1) a))) 1))) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 40,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(43915)",
      "output_term": "(- (/ -1 (* a (pow 0 (+ a (* -1 b))))) a)",
      "output_weight_simple": 10,
      "output_weight_complex": 21,
      "output_depth": 7,
      "simplification_time": 2.6607355690000003
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- (/ -1 (* a (pow 0 (+ a (+ a (/ (+ a b) -1)))))) a)",
      "output_weight_simple": 12,
      "output_weight_complex": 26,
      "output_depth": 9,
      "simplification_time": 0.002753531
    },
    "speedup": 966.2994783788525,
    "weight_simple_diff": -2,
    "weight_complex_diff": -5,
    "depth_diff": -2
  },
  {
    "base_term": "(- -1 (pow (pow (+ -1 a) (- (pow a (- c (* (/ b c) c))) b)) c))",
    "input_weight_simple": 19,
    "input_weight_complex": 41,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(14222)",
      "output_term": "(- -1 (pow (pow (+ -1 a) (- (pow a (- c b)) b)) c))",
      "output_weight_simple": 11,
      "output_weight_complex": 23,
      "output_depth": 7,
      "simplification_time": 1.3383702629999998
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow (pow (+ -1 a) (- (pow a (- c (* c (/ b c)))) b)) c))",
      "output_weight_simple": 13,
      "output_weight_complex": 30,
      "output_depth": 9,
      "simplification_time": 0.001377318
    },
    "speedup": 971.7220445822968,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ 1 -1) (pow a (/ a (* (/ (pow (- 1 (- a -1)) (/ 1 1)) 1) c))))",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(36318)",
      "output_term": "(- -1 (pow a (/ a (* -1 (* a c)))))",
      "output_weight_simple": 8,
      "output_weight_complex": 19,
      "output_depth": 6,
      "simplification_time": 1.894658036
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- -1 (pow a (/ a (* (/ (- 0 a) 1) c))))",
      "output_weight_simple": 11,
      "output_weight_complex": 25,
      "output_depth": 7,
      "simplification_time": 0.00187437
    },
    "speedup": 1010.8239227046955,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -1
  },
  {
    "base_term": "(pow (- a (pow (/ 1 (/ (/ (* -1 (/ (- a b) c)) (- a 1)) a)) c)) (/ a b))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(12632)",
      "output_term": "(pow (- a (pow (/ 1 (/ (/ (* -1 (/ (- a b) c)) (+ a -1)) a)) c)) (/ a b))",
      "output_weight_simple": 16,
      "output_weight_complex": 46,
      "output_depth": 10,
      "simplification_time": 1.049168566
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (- a (pow (/ 1 (/ (/ (- 0 (/ (- a b) c)) (- a 1)) a)) c)) (/ a b))",
      "output_weight_simple": 16,
      "output_weight_complex": 45,
      "output_depth": 10,
      "simplification_time": 0.0010072229999999998
    },
    "speedup": 1041.6447658562208,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  },
  {
    "base_term": "(/ 0 (pow (pow (pow a -1) (* (- -1 a) (/ a (/ (* a b) b)))) d))",
    "input_weight_simple": 19,
    "input_weight_complex": 49,
    "input_depth": 8,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(21721)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 1.129345286
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001038487
    },
    "speedup": 1087.491019146123,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* (- (pow (pow (/ (+ (/ 1 a) (/ a b)) (+ b -1)) 1) a) a) b) b)",
    "input_weight_simple": 21,
    "input_weight_complex": 52,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10748)",
      "output_term": "(- (pow (/ (+ (/ 1 a) (/ a b)) (+ b -1)) a) a)",
      "output_weight_simple": 11,
      "output_weight_complex": 28,
      "output_depth": 6,
      "simplification_time": 1.320760564
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (* b (- (pow (/ (+ (/ 1 a) (/ a b)) (+ b -1)) a) a)) b)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 8,
      "simplification_time": 0.0012005050000000001
    },
    "speedup": 1100.1708147821123,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(pow 0 (pow (pow (/ (/ (- a (+ (pow (/ 1 a) a) (pow b a))) (* a c)) a) 1) -1))",
    "input_weight_simple": 23,
    "input_weight_complex": 59,
    "input_depth": 10,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(15772)",
      "output_term": "(pow 0 (/ 1 (/ (/ (- a (+ (pow (pow a -1) a) (pow b a))) (* a c)) a)))",
      "output_weight_simple": 16,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 1.20557811
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (/ 1 (/ (/ (- a (+ (pow (/ 1 a) a) (pow b a))) (* a c)) a)))",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.001088927
    },
    "speedup": 1107.124821039427,
    "weight_simple_diff": 1,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(* (/ (/ a (pow (+ -1 a) (pow (pow (- (/ a a) a) 1) 1))) b) b)",
    "input_weight_simple": 19,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 10,
      "stop_reason": "NodeLimit(11363)",
      "output_term": "(/ a (pow (+ a -1) (- 1 a)))",
      "output_weight_simple": 7,
      "output_weight_complex": 15,
      "output_depth": 4,
      "simplification_time": 1.2540806610000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* b (/ (/ a (pow (+ a -1) (- 1 a))) b))",
      "output_weight_simple": 10,
      "output_weight_complex": 24,
      "output_depth": 6,
      "simplification_time": 0.00109658
    },
    "speedup": 1143.628974630214,
    "weight_simple_diff": -3,
    "weight_complex_diff": -9,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ 0 (/ (pow a (- (+ 1 -1) (/ (/ (* a a) a) (+ b a)))) 0)) a)",
    "input_weight_simple": 21,
    "input_weight_complex": 48,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10156)",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 1.222450459
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- 0 a)",
      "output_weight_simple": 3,
      "output_weight_complex": 4,
      "output_depth": 2,
      "simplification_time": 0.001056337
    },
    "speedup": 1157.2542275807814,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (* 0 1) (* (pow (/ (* a a) a) (/ 1 (/ 0 (- (pow b -1) -1)))) (/ 0 c)))",
    "input_weight_simple": 23,
    "input_weight_complex": 57,
    "input_depth": 8,
    "Baseline": {
      "iterations": 15,
      "stop_reason": "NodeLimit(10388)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.195912203
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001793225
    },
    "speedup": 1224.5603329197395,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- a (/ a -1)) 1) (/ (pow b (- 1 (+ a 1))) (pow (pow (- 0 a) -1) -1)))",
    "input_weight_simple": 23,
    "input_weight_complex": 53,
    "input_depth": 6,
    "Baseline": {
      "iterations": 9,
      "stop_reason": "NodeLimit(14214)",
      "output_term": "(/ (+ a a) (/ (pow b (- 0 a)) (/ 1 (/ 1 (- 0 a)))))",
      "output_weight_simple": 11,
      "output_weight_complex": 32,
      "output_depth": 6,
      "simplification_time": 1.260457213
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- a (/ a -1)) 1) (/ (pow b (- 0 a)) (/ 1 (/ 1 (- 0 a)))))",
      "output_weight_simple": 14,
      "output_weight_complex": 43,
      "output_depth": 6,
      "simplification_time": 0.001009011
    },
    "speedup": 1249.200665800472,
    "weight_simple_diff": -3,
    "weight_complex_diff": -11,
    "depth_diff": 0
  },
  {
    "base_term": "(pow (pow (- a a) 0) (/ b (+ b (pow (- (/ (/ (* c a) -1) c) (/ -1 a)) c))))",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 9,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(13322)",
      "output_term": "(pow (pow 0 0) (/ b (+ b (pow (* -1 (+ a (/ -1 a))) c))))",
      "output_weight_simple": 13,
      "output_weight_complex": 34,
      "output_depth": 8,
      "simplification_time": 1.340163264
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow (pow 0 0) (/ b (+ b (pow (- (/ (/ (* a c) -1) c) (/ -1 a)) c))))",
      "output_weight_simple": 15,
      "output_weight_complex": 44,
      "output_depth": 9,
      "simplification_time": 0.001037127
    },
    "speedup": 1292.188192959975,
    "weight_simple_diff": -2,
    "weight_complex_diff": -10,
    "depth_diff": -1
  },
  {
    "base_term": "(* (/ (/ 1 (/ 1 (* (pow (+ 1 (pow (pow -1 a) -1)) a) a))) a) a)",
    "input_weight_simple": 19,
    "input_weight_complex": 47,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13223)",
      "output_term": "(/ 1 (/ 1 (* a (pow (+ 1 (/ 1 (pow -1 a))) a))))",
      "output_weight_simple": 10,
      "output_weight_complex": 30,
      "output_depth": 8,
      "simplification_time": 1.472747852
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (/ (/ 1 (/ 1 (* a (pow (+ 1 (/ 1 (pow -1 a))) a)))) a))",
      "output_weight_simple": 12,
      "output_weight_complex": 37,
      "output_depth": 10,
      "simplification_time": 0.0010988550000000001
    },
    "speedup": 1340.2567690914632,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(- a (/ (* (pow 0 (/ 0 (/ (pow 0 (- 0 a)) (+ a (- a b))))) a) a))",
    "input_weight_simple": 21,
    "input_weight_complex": 47,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13964)",
      "output_term": "(- a (pow 0 0))",
      "output_weight_simple": 4,
      "output_weight_complex": 8,
      "output_depth": 3,
      "simplification_time": 1.66954535
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(- a (/ (* a (pow 0 0)) a))",
      "output_weight_simple": 6,
      "output_weight_complex": 15,
      "output_depth": 5,
      "simplification_time": 0.001223495
    },
    "speedup": 1364.5706357606691,
    "weight_simple_diff": -2,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(/ (- 1 (pow (pow a (/ (+ (pow -1 (pow (* -1 -1) 0)) a) (/ (* a a) a))) 1)) -1)",
    "input_weight_simple": 23,
    "input_weight_complex": 54,
    "input_depth": 10,
    "Baseline": {
      "iterations": 14,
      "stop_reason": "NodeLimit(21212)",
      "output_term": "(+ -1 (pow a (/ (+ a -1) a)))",
      "output_weight_simple": 6,
      "output_weight_complex": 14,
      "output_depth": 5,
      "simplification_time": 2.995475472
    },
    "Extended": {
      "iterations": 4,
      "stop_reason": "Saturated",
      "output_term": "(/ (- 1 (pow a (/ (- a 1) (/ (* a a) a)))) -1)",
      "output_weight_simple": 10,
      "output_weight_complex": 27,
      "output_depth": 7,
      "simplification_time": 0.002161777
    },
    "speedup": 1385.6542427826735,
    "weight_simple_diff": -4,
    "weight_complex_diff": -13,
    "depth_diff": -2
  },
  {
    "base_term": "(pow 0 (- (- (/ (/ (* 0 a) 0) a) (/ (* 1 0) (* (/ 0 -1) a))) 1))",
    "input_weight_simple": 21,
    "input_weight_complex": 46,
    "input_depth": 7,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(19928)",
      "output_term": "(pow 0 -1)",
      "output_weight_simple": 3,
      "output_weight_complex": 6,
      "output_depth": 2,
      "simplification_time": 1.92352325
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(pow 0 (- (/ (/ 0 0) a) (+ 1 (/ 0 0))))",
      "output_weight_simple": 8,
      "output_weight_complex": 20,
      "output_depth": 5,
      "simplification_time": 0.001379594
    },
    "speedup": 1394.2676251128955,
    "weight_simple_diff": -5,
    "weight_complex_diff": -14,
    "depth_diff": -3
  },
  {
    "base_term": "(pow 1 (- -1 (/ (- -1 (- (/ (- -1 (+ (pow 1 -1) 0)) (+ 0 -1)) a)) 1)))",
    "input_weight_simple": 21,
    "input_weight_complex": 36,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(10548)",
      "output_term": "(pow 1 (- 2 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 9,
      "output_depth": 3,
      "simplification_time": 1.697967163
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(pow 1 (- -1 (/ (- a 3) 1)))",
      "output_weight_simple": 8,
      "output_weight_complex": 16,
      "output_depth": 5,
      "simplification_time": 0.0011706849999999999
    },
    "speedup": 1450.4048168380052,
    "weight_simple_diff": -3,
    "weight_complex_diff": -7,
    "depth_diff": -2
  },
  {
    "base_term": "(* (- (/ (pow a a) a) (pow a (pow (pow c b) (/ (/ 1 (- c 1)) (- a a))))) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 58,
    "input_depth": 8,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(15890)",
      "output_term": "(+ (pow a a) (* (pow a (pow (pow c b) (/ (/ 1 (- c 1)) 0))) (* a -1)))",
      "output_weight_simple": 16,
      "output_weight_complex": 41,
      "output_depth": 8,
      "simplification_time": 1.5327519660000002
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(* a (- (/ (pow a a) a) (pow a (pow (pow c b) (/ (/ 1 (- c 1)) 0)))))",
      "output_weight_simple": 15,
      "output_weight_complex": 43,
      "output_depth": 8,
      "simplification_time": 0.000946795
    },
    "speedup": 1618.8847279506126,
    "weight_simple_diff": 1,
    "weight_complex_diff": -2,
    "depth_diff": 0
  },
  {
    "base_term": "(/ (/ (- a (pow (pow (+ a (pow 0 (pow (+ 1 0) b))) (- (- 1 1) b)) b)) b) a)",
    "input_weight_simple": 23,
    "input_weight_complex": 50,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(13036)",
      "output_term": "(/ (/ (- a (pow (pow (+ a (pow 0 (pow 1 b))) (- 0 b)) b)) b) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 1.423294833
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "(/ (/ (- a (pow (pow (+ a (pow 0 (pow 1 b))) (- 0 b)) b)) b) a)",
      "output_weight_simple": 13,
      "output_weight_complex": 35,
      "output_depth": 9,
      "simplification_time": 0.000859123
    },
    "speedup": 1656.6834236774012,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- (* (/ 0 (- a (+ (pow (pow (/ (+ 1 -1) -1) a) (+ a b)) a))) 0) 0)",
    "input_weight_simple": 21,
    "input_weight_complex": 41,
    "input_depth": 10,
    "Baseline": {
      "iterations": 12,
      "stop_reason": "NodeLimit(31497)",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 2.518087904
    },
    "Extended": {
      "iterations": 2,
      "stop_reason": "Saturated",
      "output_term": "0",
      "output_weight_simple": 1,
      "output_weight_complex": 1,
      "output_depth": 1,
      "simplification_time": 0.001421275
    },
    "speedup": 1771.7105444055514,
    "weight_simple_diff": 0,
    "weight_complex_diff": 0,
    "depth_diff": 0
  },
  {
    "base_term": "(- 1 (- (/ -1 (/ (pow -1 (/ -1 (- a (+ (/ a 1) a)))) a)) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 42,
    "input_depth": 10,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(43288)",
      "output_term": "(/ 1 (/ (pow -1 (/ -1 (* -1 a))) a))",
      "output_weight_simple": 8,
      "output_weight_complex": 25,
      "output_depth": 6,
      "simplification_time": 3.497402936
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ -1 (/ (pow -1 (/ -1 (- 0 (/ a 1)))) a)))",
      "output_weight_simple": 11,
      "output_weight_complex": 31,
      "output_depth": 8,
      "simplification_time": 0.001888719
    },
    "speedup": 1851.7328072624884,
    "weight_simple_diff": -3,
    "weight_complex_diff": -6,
    "depth_diff": -2
  },
  {
    "base_term": "(- (/ (pow (+ (- a (/ a (pow (/ a a) (/ a a)))) b) 1) a) 0)",
    "input_weight_simple": 19,
    "input_weight_complex": 49,
    "input_depth": 9,
    "Baseline": {
      "iterations": 11,
      "stop_reason": "NodeLimit(25474)",
      "output_term": "(/ b a)",
      "output_weight_simple": 3,
      "output_weight_complex": 9,
      "output_depth": 2,
      "simplification_time": 3.819769453
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(/ (- a (- (/ a 1) b)) a)",
      "output_weight_simple": 7,
      "output_weight_complex": 17,
      "output_depth": 5,
      "simplification_time": 0.001830754
    },
    "speedup": 2086.446050643615,
    "weight_simple_diff": -4,
    "weight_complex_diff": -8,
    "depth_diff": -3
  },
  {
    "base_term": "(- 1 (- (pow (/ (+ (+ 1 (- 0 (/ 1 -1))) (- a a)) a) 1) -1))",
    "input_weight_simple": 19,
    "input_weight_complex": 33,
    "input_depth": 9,
    "Baseline": {
      "iterations": 13,
      "stop_reason": "NodeLimit(18725)",
      "output_term": "(* -1 (/ 2 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 11,
      "output_depth": 3,
      "simplification_time": 5.758741182
    },
    "Extended": {
      "iterations": 3,
      "stop_reason": "Saturated",
      "output_term": "(- 0 (/ 2 a))",
      "output_weight_simple": 5,
      "output_weight_complex": 10,
      "output_depth": 3,
      "simplification_time": 0.001791051
    },
    "speedup": 3215.2859868311953,
    "weight_simple_diff": 0,
    "weight_complex_diff": 1,
    "depth_diff": 0
  }
]