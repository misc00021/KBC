Here is the input problem:
  Axiom 1 (bvshr_zero): shr(X, zero) = X.
  Axiom 2 (bvshr_zero_shift): shr(X, zero) = X.
  Axiom 3 (bvshr_allzeros): shr(zero, X) = zero.
  Axiom 4 (bvsub_self): sub(X, X) = zero.
  Axiom 5 (bvsub_zero): sub(X, zero) = X.
  Axiom 6 (bvsub_id): sub(zero, X) = neg(X).
  Axiom 7 (bvnot_self): not(X) = sub(neg(X), one).
  Axiom 8 (bvshl_zero): shl(X, zero) = X.
  Axiom 9 (bvshl_zero_shift): shl(X, zero) = X.
  Axiom 10 (bvshl_allzeros): shl(zero, X) = zero.
  Axiom 11 (bvmul_comm): mul(X, Y) = mul(Y, X).
  Axiom 12 (bvmul_id): mul(X, one) = X.
  Axiom 13 (bvmul_zero): mul(X, zero) = zero.
  Axiom 14 (bvxor_self): xor(X, X) = zero.
  Axiom 15 (bvxor_comm): xor(X, Y) = xor(Y, X).
  Axiom 16 (bvxor_id): xor(X, zero) = X.
  Axiom 17 (bvxor_zero): xor(X, zero) = X.
  Axiom 18 (bvxor_allzeros): xor(X, zero) = X.
  Axiom 19 (bvsub_add): sub(X, neg(Y)) = add(X, Y).
  Axiom 20 (bvadd_comm): add(X, Y) = add(Y, X).
  Axiom 21 (bvadd_id): add(X, zero) = X.
  Axiom 22 (bvadd_neg): add(X, neg(X)) = zero.
  Axiom 23 (bvsub_def): sub(X, Y) = add(X, neg(Y)).
  Axiom 24 (bvadd_sub): add(X, neg(Y)) = sub(X, Y).
  Axiom 25 (bvor_self): or(X, X) = X.
  Axiom 26 (bvor_comm): or(X, Y) = or(Y, X).
  Axiom 27 (bvor_id): or(X, zero) = X.
  Axiom 28 (bvor_allzeros): or(X, zero) = X.
  Axiom 29 (bvand_self): and(X, X) = X.
  Axiom 30 (bvand_comm): and(X, Y) = and(Y, X).
  Axiom 31 (bvand_id): and(X, allones) = X.
  Axiom 32 (bvand_allones): and(X, allones) = X.
  Axiom 33 (bvand_zero): and(X, zero) = zero.
  Axiom 34 (bvor_neg): or(X, not(X)) = allones.
  Axiom 35 (bvshl_def): shl(X, Y) = mul(X, shl(one, Y)).
  Axiom 36 (bvmul_assoc): mul(mul(X, Y), Z) = mul(X, mul(Y, Z)).
  Axiom 37 (bvxor_assoc): xor(xor(X, Y), Z) = xor(X, xor(Y, Z)).
  Axiom 38 (bvadd_assoc): add(add(X, Y), Z) = add(X, add(Y, Z)).
  Axiom 39 (bvor_absorb): or(X, and(X, Y)) = X.
  Axiom 40 (bvor_assoc): or(or(X, Y), Z) = or(X, or(Y, Z)).
  Axiom 41 (bvand_absorb): and(X, or(X, Y)) = X.
  Axiom 42 (bvand_assoc): and(and(X, Y), Z) = and(X, and(Y, Z)).
  Axiom 43 (bvand_or): and(X, or(Y, Z)) = or(and(X, Y), and(X, Z)).
  Axiom 44 (bvshr_and): shr(and(X, Y), Z) = and(shr(X, Z), shr(Y, Z)).
  Axiom 45 (bvshl_and): shl(and(X, Y), Z) = and(shl(X, Z), shl(Y, Z)).
  Axiom 46 (bvor_and): or(X, and(Y, Z)) = and(or(X, Y), or(X, Z)).
  Axiom 47 (bvor_and_not): or(and(X, Y), and(X, not(Y))) = X.
  Goal 1 (goal): true = false.

1. shr(X, zero) -> X
2. shr(zero, X) -> zero
3. sub(X, X) -> zero
4. sub(X, zero) -> X
5. sub(zero, X) -> neg(X)
6. sub(neg(X), one) -> not(X)
7. shl(X, zero) -> X
8. shl(zero, X) -> zero
9. mul(X, Y) <-> mul(Y, X)
10. mul(X, one) -> X
11. mul(X, zero) -> zero
12. xor(X, X) -> zero
13. xor(X, Y) <-> xor(Y, X)
14. xor(X, zero) -> X
15. add(X, Y) -> sub(X, neg(Y))
16. sub(X, neg(Y)) <-> sub(Y, neg(X))
17. sub(X, neg(zero)) -> X
18. sub(X, neg(neg(X))) -> zero
19. sub(X, neg(neg(Y))) -> sub(X, Y)
20. or(X, X) -> X
21. or(X, Y) <-> or(Y, X)
22. or(X, zero) -> X
23. and(X, X) -> X
24. and(X, Y) <-> and(Y, X)
25. and(X, allones) -> X
26. and(X, zero) -> zero
27. or(X, not(X)) -> allones
28. mul(X, shl(one, Y)) -> shl(X, Y)
29. mul(mul(X, Y), Z) -> mul(X, mul(Y, Z))
30. xor(xor(X, Y), Z) -> xor(X, xor(Y, Z))
31. sub(sub(X, neg(Y)), neg(Z)) -> sub(X, neg(sub(Y, neg(Z))))
32. or(X, and(X, Y)) -> X
33. or(or(X, Y), Z) -> or(X, or(Y, Z))
34. and(X, or(X, Y)) -> X
35. and(and(X, Y), Z) -> and(X, and(Y, Z))
36. or(and(X, Y), and(X, Z)) -> and(X, or(Y, Z))
37. and(shr(X, Y), shr(Z, Y)) -> shr(and(X, Z), Y)
38. and(shl(X, Y), shl(Z, Y)) -> shl(and(X, Z), Y)
39. and(or(X, Y), or(X, Z)) -> or(X, and(Y, Z))
40. neg(zero) -> zero
41. mul(one, X) -> X
42. xor(zero, X) -> X
43. neg(neg(X)) -> X
44. or(zero, X) -> X
45. not(zero) -> allones
46. and(allones, X) -> X
47. neg(one) -> allones
48. mul(zero, X) -> zero
49. and(zero, X) -> zero
50. neg(allones) -> one
51. or(X, allones) -> allones
52. not(allones) -> zero
53. sub(X, one) -> not(neg(X))
54. or(allones, X) -> allones
55. or(X, and(Y, X)) -> X
56. and(X, or(Y, X)) -> X
57. or(X, or(X, Y)) -> or(X, Y)
58. and(X, and(X, Y)) -> and(X, Y)
59. xor(X, xor(X, Y)) -> Y
60. xor(X, xor(Y, X)) -> Y
61. sub(neg(X), neg(Y)) = sub(Y, X)
62. sub(allones, X) -> not(X)
63. sub(neg(X), Y) <-> sub(neg(Y), X)
64. mul(shl(one, X), Y) -> shl(Y, X)
65. mul(X, mul(Y, Z)) <-> mul(Y, mul(X, Z))
66. mul(X, shl(Y, Z)) -> shl(mul(X, Y), Z)
67. xor(X, xor(Y, Z)) <-> xor(Y, xor(X, Z))
68. or(X, or(Y, Z)) <-> or(Y, or(X, Z))
69. and(X, and(Y, Z)) <-> and(Y, and(X, Z))
70. sub(one, neg(X)) = sub(X, allones)
71. or(X, or(Y, X)) -> or(X, Y)
72. and(X, and(Y, X)) -> and(X, Y)
73. or(X, and(Y, not(X))) -> or(X, Y)
74. or(X, or(Y, not(X))) -> allones
75. mul(shl(X, Y), Z) -> shl(mul(X, Z), Y)
76. shl(shl(X, Y), Z) <-> shl(shl(X, Z), Y)
77. or(X, or(not(X), Y)) -> allones
78. or(X, and(not(X), Y)) -> or(X, Y)
79. sub(sub(X, neg(Y)), Z) -> sub(X, neg(sub(Y, Z)))
80. sub(neg(X), neg(not(neg(Y)))) -> not(neg(sub(Y, X)))
81. not(neg(sub(one, X))) -> neg(X)
82. or(X, or(Y, and(X, Z))) -> or(X, Y)
83. and(X, and(Y, or(X, Z))) -> and(X, Y)
84. or(X, and(Y, and(X, Z))) -> X
85. and(X, or(Y, or(X, Z))) -> X
86. not(neg(sub(X, allones))) -> X
87. sub(X, neg(sub(Y, Z))) <-> sub(Y, neg(sub(X, Z)))
88. sub(X, neg(sub(Y, X))) -> Y
89. sub(X, neg(not(X))) -> allones
90. not(not(X)) -> X
91. sub(one, neg(not(neg(X)))) -> X
92. sub(X, neg(not(Y))) -> not(neg(sub(X, Y)))
93. neg(sub(X, allones)) -> not(X)
94. sub(X, allones) -> neg(not(X))
95. neg(sub(one, X)) -> not(neg(X))
96. or(and(X, Y), and(Y, Z)) -> and(Y, or(X, Z))
97. or(and(X, Y), and(Z, X)) -> and(X, or(Y, Z))
98. and(or(X, Y), or(Y, Z)) -> or(Y, and(X, Z))
99. or(not(X), and(X, Y)) -> or(Y, not(X))
100. and(or(X, Y), or(Z, X)) -> or(X, and(Y, Z))

Gave up on reaching the given resource limit.
Here is the final rewrite system:
  neg(zero) -> zero
  neg(one) -> allones
  neg(allones) -> one
  neg(neg(X)) -> X
  not(zero) -> allones
  not(allones) -> zero
  add(X, Y) -> sub(X, neg(Y))
  sub(X, X) -> zero
  sub(X, zero) -> X
  sub(X, one) -> not(neg(X))
  sub(X, allones) -> neg(not(X))
  sub(zero, X) -> neg(X)
  sub(allones, X) -> not(X)
  mul(X, Y) <-> mul(Y, X)
  mul(X, zero) -> zero
  mul(X, one) -> X
  mul(zero, X) -> zero
  mul(one, X) -> X
  and(X, X) -> X
  and(X, Y) <-> and(Y, X)
  and(X, zero) -> zero
  and(X, allones) -> X
  and(zero, X) -> zero
  and(allones, X) -> X
  or(X, X) -> X
  or(X, Y) <-> or(Y, X)
  or(X, zero) -> X
  or(X, allones) -> allones
  or(zero, X) -> X
  or(allones, X) -> allones
  not(not(X)) -> X
  xor(X, X) -> zero
  xor(X, Y) <-> xor(Y, X)
  xor(X, zero) -> X
  xor(zero, X) -> X
  shl(X, zero) -> X
  shl(zero, X) -> zero
  shr(X, zero) -> X
  shr(zero, X) -> zero
  neg(sub(one, X)) -> not(neg(X))
  sub(X, neg(Y)) <-> sub(Y, neg(X))
  sub(one, neg(X)) -> neg(not(X))
  sub(neg(X), Y) <-> sub(neg(Y), X)
  sub(neg(X), neg(Y)) = sub(Y, X)
  or(X, not(X)) -> allones
  sub(X, neg(not(X))) -> allones
  sub(X, neg(not(Y))) -> not(neg(sub(X, Y)))
  mul(X, shl(Y, Z)) -> shl(mul(X, Y), Z)
  mul(X, mul(Y, Z)) <-> mul(Y, mul(X, Z))
  mul(mul(X, Y), Z) -> mul(X, mul(Y, Z))
  mul(shl(X, Y), Z) -> shl(mul(X, Z), Y)
  and(X, and(Y, X)) -> and(X, Y)
  and(X, or(X, Y)) -> X
  and(X, or(Y, X)) -> X
  and(X, and(Y, Z)) <-> and(Y, and(X, Z))
  and(and(X, Y), Z) -> and(X, and(Y, Z))
  or(X, and(X, Y)) -> X
  or(X, and(Y, X)) -> X
  or(X, or(Y, X)) -> or(X, Y)
  or(X, or(Y, Z)) <-> or(Y, or(X, Z))
  or(or(X, Y), Z) -> or(X, or(Y, Z))
  xor(X, xor(Y, X)) -> Y
  xor(X, xor(Y, Z)) <-> xor(Y, xor(X, Z))
  xor(xor(X, Y), Z) -> xor(X, xor(Y, Z))
  shl(shl(X, Y), Z) <-> shl(shl(X, Z), Y)
  sub(X, neg(sub(Y, X))) -> Y
  sub(X, neg(sub(Y, Z))) <-> sub(Y, neg(sub(X, Z)))
  sub(sub(X, neg(Y)), Z) -> sub(X, neg(sub(Y, Z)))
  or(X, and(Y, not(X))) -> or(X, Y)
  or(X, and(not(X), Y)) -> or(X, Y)
  or(X, or(Y, not(X))) -> allones
  or(X, or(not(X), Y)) -> allones
  or(not(X), and(X, Y)) -> or(Y, not(X))
  and(X, and(Y, or(X, Z))) -> and(X, Y)
  and(X, or(Y, or(X, Z))) -> X
  and(or(X, Y), or(X, Z)) -> or(X, and(Y, Z))
  and(or(X, Y), or(Z, X)) -> or(X, and(Y, Z))
  and(or(X, Y), or(Y, Z)) -> or(Y, and(X, Z))
  and(shl(X, Y), shl(Z, Y)) -> shl(and(X, Z), Y)
  and(shr(X, Y), shr(Z, Y)) -> shr(and(X, Z), Y)
  or(X, and(Y, and(X, Z))) -> X
  or(X, or(Y, and(X, Z))) -> or(X, Y)
  or(and(X, Y), and(X, Z)) -> and(X, or(Y, Z))
  or(and(X, Y), and(Z, X)) -> and(X, or(Y, Z))
  or(and(X, Y), and(Y, Z)) -> and(Y, or(X, Z))

RESULT: GaveUp (couldn't solve the problem).

Execution time: 0.0499043 seconds

