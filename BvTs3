Here is the input problem:
  Axiom 1 (bvshl_zero): shl(X, zero) = X.
  Axiom 2 (bvshl_zero_shift): shl(X, zero) = X.
  Axiom 3 (bvshl_allzeros): shl(zero, X) = zero.
  Axiom 4 (bvshr_zero): shr(X, zero) = X.
  Axiom 5 (bvshr_zero_shift): shr(X, zero) = X.
  Axiom 6 (bvshr_allzeros): shr(zero, X) = zero.
  Axiom 7 (bvsub_self): sub(X, X) = zero.
  Axiom 8 (bvsub_zero): sub(X, zero) = X.
  Axiom 9 (bvsub_id): sub(zero, X) = neg(X).
  Axiom 10 (bvnot_self): not(X) = sub(neg(X), one).
  Axiom 11 (bvxor_self): xor(X, X) = zero.
  Axiom 12 (bvxor_comm): xor(X, Y) = xor(Y, X).
  Axiom 13 (bvxor_id): xor(X, zero) = X.
  Axiom 14 (bvxor_zero): xor(X, zero) = X.
  Axiom 15 (bvxor_allzeros): xor(X, zero) = X.
  Axiom 16 (bvsub_add): sub(X, neg(Y)) = add(X, Y).
  Axiom 17 (bvadd_comm): add(X, Y) = add(Y, X).
  Axiom 18 (bvadd_id): add(X, zero) = X.
  Axiom 19 (bvadd_neg): add(X, neg(X)) = zero.
  Axiom 20 (bvsub_def): sub(X, Y) = add(X, neg(Y)).
  Axiom 21 (bvadd_sub): add(X, neg(Y)) = sub(X, Y).
  Axiom 22 (bvor_self): or(X, X) = X.
  Axiom 23 (bvor_comm): or(X, Y) = or(Y, X).
  Axiom 24 (bvor_id): or(X, zero) = X.
  Axiom 25 (bvor_allzeros): or(X, zero) = X.
  Axiom 26 (bvand_self): and(X, X) = X.
  Axiom 27 (bvand_comm): and(X, Y) = and(Y, X).
  Axiom 28 (bvand_id): and(X, allones) = X.
  Axiom 29 (bvand_allones): and(X, allones) = X.
  Axiom 30 (bvand_zero): and(X, zero) = zero.
  Axiom 31 (bvor_neg): or(X, not(X)) = allones.
  Axiom 32 (bvxor_assoc): xor(xor(X, Y), Z) = xor(X, xor(Y, Z)).
  Axiom 33 (bvadd_assoc): add(add(X, Y), Z) = add(X, add(Y, Z)).
  Axiom 34 (bvor_absorb): or(X, and(X, Y)) = X.
  Axiom 35 (bvor_assoc): or(or(X, Y), Z) = or(X, or(Y, Z)).
  Axiom 36 (bvand_absorb): and(X, or(X, Y)) = X.
  Axiom 37 (bvand_assoc): and(and(X, Y), Z) = and(X, and(Y, Z)).
  Axiom 38 (bvand_or): and(X, or(Y, Z)) = or(and(X, Y), and(X, Z)).
  Axiom 39 (bvshl_and): shl(and(X, Y), Z) = and(shl(X, Z), shl(Y, Z)).
  Axiom 40 (bvshr_and): shr(and(X, Y), Z) = and(shr(X, Z), shr(Y, Z)).
  Axiom 41 (bvor_and): or(X, and(Y, Z)) = and(or(X, Y), or(X, Z)).
  Axiom 42 (bvor_and_not): or(and(X, Y), and(X, not(Y))) = X.
  Goal 1 (goal): true = false.

1. shl(X, zero) -> X
2. shl(zero, X) -> zero
3. shr(X, zero) -> X
4. shr(zero, X) -> zero
5. sub(X, X) -> zero
6. sub(X, zero) -> X
7. sub(zero, X) -> neg(X)
8. sub(neg(X), one) -> not(X)
9. xor(X, X) -> zero
10. xor(X, Y) <-> xor(Y, X)
11. xor(X, zero) -> X
12. add(X, Y) -> sub(X, neg(Y))
13. sub(X, neg(Y)) <-> sub(Y, neg(X))
14. sub(X, neg(zero)) -> X
15. sub(X, neg(neg(X))) -> zero
16. sub(X, neg(neg(Y))) -> sub(X, Y)
17. or(X, X) -> X
18. or(X, Y) <-> or(Y, X)
19. or(X, zero) -> X
20. and(X, X) -> X
21. and(X, Y) <-> and(Y, X)
22. and(X, allones) -> X
23. and(X, zero) -> zero
24. or(X, not(X)) -> allones
25. xor(xor(X, Y), Z) -> xor(X, xor(Y, Z))
26. sub(sub(X, neg(Y)), neg(Z)) -> sub(X, neg(sub(Y, neg(Z))))
27. or(X, and(X, Y)) -> X
28. or(or(X, Y), Z) -> or(X, or(Y, Z))
29. and(X, or(X, Y)) -> X
30. and(and(X, Y), Z) -> and(X, and(Y, Z))
31. or(and(X, Y), and(X, Z)) -> and(X, or(Y, Z))
32. and(shl(X, Y), shl(Z, Y)) -> shl(and(X, Z), Y)
33. and(shr(X, Y), shr(Z, Y)) -> shr(and(X, Z), Y)
34. and(or(X, Y), or(X, Z)) -> or(X, and(Y, Z))
35. neg(zero) -> zero
36. xor(zero, X) -> X
37. neg(neg(X)) -> X
38. or(zero, X) -> X
39. not(zero) -> allones
40. and(allones, X) -> X
41. neg(one) -> allones
42. and(zero, X) -> zero
43. neg(allones) -> one
44. or(X, allones) -> allones
45. not(allones) -> zero
46. sub(X, one) -> not(neg(X))
47. or(allones, X) -> allones
48. sub(neg(X), neg(Y)) = sub(Y, X)
49. sub(allones, X) -> not(X)
50. sub(neg(X), Y) <-> sub(neg(Y), X)
51. sub(one, neg(X)) = sub(X, allones)

Gave up on reaching the given resource limit.
Here is the final rewrite system:
  neg(zero) -> zero
  neg(allones) -> one
  neg(one) -> allones
  neg(neg(X)) -> X
  not(zero) -> allones
  not(allones) -> zero
  add(X, Y) -> sub(X, neg(Y))
  sub(X, X) -> zero
  sub(X, zero) -> X
  sub(X, one) -> not(neg(X))
  sub(zero, X) -> neg(X)
  sub(allones, X) -> not(X)
  and(X, X) -> X
  and(X, Y) <-> and(Y, X)
  and(X, zero) -> zero
  and(X, allones) -> X
  and(zero, X) -> zero
  and(allones, X) -> X
  or(X, X) -> X
  or(X, Y) <-> or(Y, X)
  or(X, zero) -> X
  or(X, allones) -> allones
  or(zero, X) -> X
  or(allones, X) -> allones
  xor(X, X) -> zero
  xor(X, Y) <-> xor(Y, X)
  xor(X, zero) -> X
  xor(zero, X) -> X
  shl(X, zero) -> X
  shl(zero, X) -> zero
  shr(X, zero) -> X
  shr(zero, X) -> zero
  sub(X, neg(Y)) <-> sub(Y, neg(X))
  sub(one, neg(X)) = sub(X, allones)
  sub(neg(X), Y) <-> sub(neg(Y), X)
  sub(neg(X), neg(Y)) = sub(Y, X)
  or(X, not(X)) -> allones
  and(X, or(X, Y)) -> X
  and(and(X, Y), Z) -> and(X, and(Y, Z))
  or(X, and(X, Y)) -> X
  or(or(X, Y), Z) -> or(X, or(Y, Z))
  xor(xor(X, Y), Z) -> xor(X, xor(Y, Z))
  sub(sub(X, neg(Y)), neg(Z)) -> sub(X, neg(sub(Y, neg(Z))))
  and(or(X, Y), or(X, Z)) -> or(X, and(Y, Z))
  and(shl(X, Y), shl(Z, Y)) -> shl(and(X, Z), Y)
  and(shr(X, Y), shr(Z, Y)) -> shr(and(X, Z), Y)
  or(and(X, Y), and(X, Z)) -> and(X, or(Y, Z))

RESULT: GaveUp (couldn't solve the problem).
