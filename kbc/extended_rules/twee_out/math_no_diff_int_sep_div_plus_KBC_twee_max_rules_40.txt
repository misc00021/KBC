Here is the input problem:
  Axiom 1 (cancel_sub): X - X = 0.
  Axiom 2 (comm_add): X + Y = Y + X.
  Axiom 3 (zero_add): X + 0 = X.
  Axiom 4 (add_zero): X = X + 0.
  Axiom 5 (pow1): pow(X, 1) = X.
  Axiom 6 (guarded_rule_1): pow(X, 1) = X.
  Axiom 7 (guarded_rule_12): pow(1, 2) = 1.
  Axiom 8 (guarded_rule_11): X / 1 = X.
  Axiom 9 (pow2): pow(X, 2) = X * X.
  Axiom 10 (guarded_rule_3): X * X = pow(X, 2).
  Axiom 11 (comm_mul): X * Y = Y * X.
  Axiom 12 (guarded_rule_4): X * Y = Y * X.
  Axiom 13 (zero_mul): X * 0 = 0.
  Axiom 14 (one_mul): X * 1 = X.
  Axiom 15 (mul_one): X = X * 1.
  Axiom 16 (guarded_rule_5): X * 1 = X.
  Axiom 17 (guarded_rule_10): 1 * X = X.
  Axiom 18 (assoc_add): X + (Y + Z) = (X + Y) + Z.
  Axiom 19 (ifeq_axiom): ifeq(X, X, Y, Z) = Y.
  Axiom 20 (guarded_rule_18): pow(X, Y + Z) = pow(X, Z + Y).
  Axiom 21 (guarded_rule_28): pow(X, 1 + 1) = pow(X, 2).
  Axiom 22 (guarded_rule_27): pow(1, X + 2) = pow(1, X).
  Axiom 23 (guarded_rule_29): pow(1, X + 1) = pow(1, X).
  Axiom 24 (guarded_rule_24): pow(1, 2 + 2) = 1.
  Axiom 25 (guarded_rule_22): pow(1, 2 + 1) = 1.
  Axiom 26 (guarded_rule_14): X * (Y * Z) = Y * (X * Z).
  Axiom 27 (assoc_mul): X * (Y * Z) = (X * Y) * Z.
  Axiom 28 (guarded_rule_8): (X * Y) * Z = X * (Y * Z).
  Axiom 29 (sub_canon): X - Y = X + (neg(1) * Y).
  Axiom 30 (distribute): X * (Y + Z) = (X * Y) + (X * Z).
  Axiom 31 (factor): (X * Y) + (X * Z) = X * (Y + Z).
  Axiom 32 (pow0): ifeq(is_not_zero(X), true2, pow(X, 0), 1) = 1.
  Axiom 33 (cancel_div): ifeq(is_not_zero(X), true2, X / X, 1) = 1.
  Axiom 34 (guarded_rule_0): ifeq(is_not_zero(X), true2, X / X, 1) = 1.
  Axiom 35 (guarded_rule_2): ifeq(is_not_zero(X), true2, pow(X, -1), 1 / X) = 1 / X.
  Axiom 36 (guarded_rule_20): ifeq(is_not_zero(X), true2, pow(X, 2) / X, X) = X.
  Axiom 37 (guarded_rule_17): ifeq(is_not_zero(X), true2, (X * Y) / X, Y) = Y.
  Axiom 38 (guarded_rule_25): ifeq(is_not_zero(X), true2, (Y * X) / X, Y) = Y.
  Axiom 39 (guarded_rule_15): ifeq(is_not_zero(X), true2, X * (Y / X), Y) = Y.
  Axiom 40 (recip_mul_div): ifeq(is_not_zero(X), true2, X * (1 / X), 1) = 1.
  Axiom 41 (guarded_rule_6): ifeq(is_not_zero(X), true2, X * (1 / X), 1) = 1.
  Axiom 42 (pow_recip): ifeq(is_not_zero(X), true2, pow(X, neg(1)), 1 / X) = 1 / X.
  Axiom 43 (guarded_rule_7): ifeq(is_not_zero(X), true2, Y * (1 / X), Y / X) = Y / X.
  Axiom 44 (guarded_rule_13): ifeq(is_not_zero(X), true2, (1 / X) * Y, Y / X) = Y / X.
  Axiom 45 (div_canon): ifeq(is_not_zero(X), true2, Y * pow(X, neg(1)), Y / X) = Y / X.
  Axiom 46 (guarded_rule_21): ifeq(is_not_zero(X), true2, X * pow(X, Y), pow(X, Y + 1)) = pow(X, Y + 1).
  Axiom 47 (guarded_rule_16): ifeq(is_not_zero(X), true2, Y * (Z / X), (Y * Z) / X) = (Y * Z) / X.
  Axiom 48 (guarded_rule_30): ifeq(is_not_zero(X), true2, (Y / X) * Z, (Y * Z) / X) = (Y * Z) / X.
  Axiom 49 (guarded_rule_35): ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, Y / (Y / X), X), X) = X.
  Axiom 50 (pow_mul): ifeq(is_not_zero(X), true2, pow(X, Y) * pow(X, Z), pow(X, Y + Z)) = pow(X, Y + Z).
  Axiom 51 (guarded_rule_9): ifeq(is_not_zero(X), true2, pow(X, Y) * pow(X, Z), pow(X, Y + Z)) = pow(X, Y + Z).
  Axiom 52 (guarded_rule_33): ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, (X / Y) / X, 1 / Y), 1 / Y) = 1 / Y.
  Axiom 53 (guarded_rule_31): ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, (Z / Y) / X, (Z / X) / Y), (Z / X) / Y) = (Z / X) / Y.
  Goal 1 (goal): true = false.

1. X - X -> 0
2. X + Y <-> Y + X
3. X + 0 -> X
4. pow(X, 1) -> X
5. pow(1, 2) -> 1
6. X / 1 -> X
7. X * X -> pow(X, 2)
8. X * Y <-> Y * X
9. X * 0 -> 0
10. X * 1 -> X
11. 1 * X -> X
12. (X + Y) + Z -> X + (Y + Z)
13. ifeq(X, X, Y, Z) -> Y
14. pow(X, 1 + 1) -> pow(X, 2)
15. pow(1, X + 2) -> pow(1, X)
16. pow(1, X + 1) -> pow(1, X)
17. X * (Y * Z) <-> Y * (X * Z)
18. (X * Y) * Z -> X * (Y * Z)
19. X + (neg(1) * Y) -> X - Y
20. (X * Y) + (X * Z) -> X * (Y + Z)
21. ifeq(is_not_zero(X), true2, pow(X, 0), 1) -> 1
22. ifeq(is_not_zero(X), true2, X / X, 1) -> 1
23. ifeq(is_not_zero(X), true2, pow(X, -1), 1 / X) -> 1 / X
24. ifeq(is_not_zero(X), true2, pow(X, 2) / X, X) -> X
25. ifeq(is_not_zero(X), true2, (X * Y) / X, Y) -> Y
26. ifeq(is_not_zero(X), true2, (Y * X) / X, Y) -> Y
27. ifeq(is_not_zero(X), true2, X * (Y / X), Y) -> Y
28. ifeq(is_not_zero(X), true2, pow(X, neg(1)), 1 / X) -> 1 / X
29. ifeq(is_not_zero(X), true2, Y * (1 / X), Y / X) -> Y / X
30. ifeq(is_not_zero(X), true2, (1 / X) * Y, Y / X) -> Y / X
31. ifeq(is_not_zero(X), true2, Y * pow(X, neg(1)), Y / X) -> Y / X
32. ifeq(is_not_zero(X), true2, X * pow(X, Y), pow(X, Y + 1)) -> pow(X, Y + 1)
33. ifeq(is_not_zero(X), true2, Y * (Z / X), (Y * Z) / X) -> (Y * Z) / X
34. ifeq(is_not_zero(X), true2, (Y / X) * Z, (Y * Z) / X) -> (Y * Z) / X
35. ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, Y / (Y / X), X), X) -> X
36. ifeq(is_not_zero(X), true2, pow(X, Y) * pow(X, Z), pow(X, Y + Z)) -> pow(X, Y + Z)
37. ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, (X / Y) / X, 1 / Y), 1 / Y) -> 1 / Y
38. ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, (Z / Y) / X, (Z / X) / Y), (Z / X) / Y) -> (Z / X) / Y
39. 0 + X -> X
40. X - 0 -> X

Gave up on reaching the given resource limit.
Here is the final rewrite system:
  X + Y <-> Y + X
  X + 0 -> X
  0 + X -> X
  X * X -> pow(X, 2)
  X * Y <-> Y * X
  X * 1 -> X
  X * 0 -> 0
  1 * X -> X
  X - X -> 0
  X - 0 -> X
  pow(X, 1) -> X
  pow(1, 2) -> 1
  X / 1 -> X
  ifeq(X, X, Y, Z) -> Y
  (X + Y) + Z -> X + (Y + Z)
  X * (Y * Z) <-> Y * (X * Z)
  (X * Y) * Z -> X * (Y * Z)
  pow(X, 1 + 1) -> pow(X, 2)
  pow(1, X + 1) -> pow(1, X)
  pow(1, X + 2) -> pow(1, X)
  X + (neg(1) * Y) -> X - Y
  (X * Y) + (X * Z) -> X * (Y + Z)
  ifeq(is_not_zero(X), true2, pow(X, 0), 1) -> 1
  ifeq(is_not_zero(X), true2, X / X, 1) -> 1
  ifeq(is_not_zero(X), true2, pow(X, -1), 1 / X) -> 1 / X
  ifeq(is_not_zero(X), true2, X * (Y / X), Y) -> Y
  ifeq(is_not_zero(X), true2, (X * Y) / X, Y) -> Y
  ifeq(is_not_zero(X), true2, (Y * X) / X, Y) -> Y
  ifeq(is_not_zero(X), true2, pow(X, 2) / X, X) -> X
  ifeq(is_not_zero(X), true2, pow(X, neg(1)), 1 / X) -> 1 / X
  ifeq(is_not_zero(X), true2, Y * (1 / X), Y / X) -> Y / X
  ifeq(is_not_zero(X), true2, (1 / X) * Y, Y / X) -> Y / X
  ifeq(is_not_zero(X), true2, Y * pow(X, neg(1)), Y / X) -> Y / X
  ifeq(is_not_zero(X), true2, X * pow(X, Y), pow(X, Y + 1)) -> pow(X, Y + 1)
  ifeq(is_not_zero(X), true2, Y * (Z / X), (Y * Z) / X) -> (Y * Z) / X
  ifeq(is_not_zero(X), true2, (Y / X) * Z, (Y * Z) / X) -> (Y * Z) / X
  ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, Y / (Y / X), X), X) -> X
  ifeq(is_not_zero(X), true2, pow(X, Y) * pow(X, Z), pow(X, Y + Z)) -> pow(X, Y + Z)
  ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, (X / Y) / X, 1 / Y), 1 / Y) -> 1 / Y
  ifeq(is_not_zero(X), true2, ifeq(is_not_zero(Y), true2, (Z / Y) / X, (Z / X) / Y), (Z / X) / Y) -> (Z / X) / Y

RESULT: GaveUp (couldn't solve the problem).
