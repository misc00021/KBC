Here is the input problem:
  Axiom 1 (sub_cancel): minus(X, X) = 0.
  Axiom 2 (pow_one): pow(X, 1) = X.
  Axiom 3 (comm_add): plus(X, Y) = plus(Y, X).
  Axiom 4 (add_zero_right): plus(X, 0) = X.
  Axiom 5 (add_zero_left): X = plus(X, 0).
  Axiom 6 (pow_two): pow(X, 2) = times(X, X).
  Axiom 7 (comm_mul): times(X, Y) = times(Y, X).
  Axiom 8 (mul_zero_right): times(X, 0) = 0.
  Axiom 9 (mul_one_right): times(X, 1) = X.
  Axiom 10 (mul_one_left): X = times(X, 1).
  Axiom 11 (ifeq_axiom): ifeq(X, X, Y, Z) = Y.
  Axiom 12 (sub_to_add): minus(X, Y) = plus(X, times(-1, Y)).
  Axiom 13 (assoc_add): plus(X, plus(Y, Z)) = plus(plus(X, Y), Z).
  Axiom 14 (assoc_mul): times(X, times(Y, Z)) = times(times(X, Y), Z).
  Axiom 15 (distribute): times(X, plus(Y, Z)) = plus(times(X, Y), times(X, Z)).
  Axiom 16 (factor): plus(times(X, Y), times(X, Z)) = times(X, plus(Y, Z)).
  Axiom 17 (pow_mul_merge): times(pow(X, Y), pow(X, Z)) = pow(X, plus(Y, Z)).
  Axiom 18 (cancel_div): ifeq(neq(X, 0), true2, div(X, X), 1) = 1.
  Axiom 19 (pow_zero): ifeq(neq(X, 0), true2, pow(X, 0), 1) = 1.
  Axiom 20 (pow_minus_one): ifeq(neq(X, 0), true2, pow(X, -1), div(1, X)) = div(1, X).
  Axiom 21 (recip_mul_div): ifeq(neq(X, 0), true2, times(X, div(1, X)), 1) = 1.
  Axiom 22 (div_to_mul): ifeq(neq(X, 0), true2, times(Y, pow(X, -1)), div(Y, X)) = div(Y, X).
  Goal 1 (goal): true = false.

1. minus(X, X) -> 0
2. pow(X, 1) -> X
3. plus(X, Y) <-> plus(Y, X)
4. plus(X, 0) -> X
5. times(X, X) -> pow(X, 2)
6. times(X, Y) <-> times(Y, X)
7. times(X, 0) -> 0
8. times(X, 1) -> X
9. ifeq(X, X, Y, Z) -> Y
10. plus(X, times(-1, Y)) -> minus(X, Y)
11. plus(plus(X, Y), Z) -> plus(X, plus(Y, Z))
12. times(times(X, Y), Z) -> times(X, times(Y, Z))
13. plus(times(X, Y), times(X, Z)) -> times(X, plus(Y, Z))
14. times(pow(X, Y), pow(X, Z)) -> pow(X, plus(Y, Z))
15. ifeq(neq(X, 0), true2, div(X, X), 1) -> 1
16. ifeq(neq(X, 0), true2, pow(X, 0), 1) -> 1
17. ifeq(neq(X, 0), true2, pow(X, -1), div(1, X)) -> div(1, X)
18. ifeq(neq(X, 0), true2, times(X, div(1, X)), 1) -> 1
19. ifeq(neq(X, 0), true2, times(Y, pow(X, -1)), div(Y, X)) -> div(Y, X)
20. plus(0, X) -> X
21. times(1, X) -> X
22. minus(X, 0) -> X
23. times(0, X) -> 0
24. pow(0, 2) -> 0
25. pow(1, 2) -> 1
26. plus(X, -1) -> minus(X, 1)
27. minus(0, 1) -> -1
28. times(X, -1) -> minus(0, X)
29. plus(-1, X) -> minus(X, 1)
30. times(-1, X) -> minus(0, X)
31. pow(-1, 2) -> minus(0, -1)
32. plus(X, minus(0, Y)) -> minus(X, Y)
33. pow(0, plus(X, 2)) -> 0
34. plus(X, plus(Y, Z)) <-> plus(Y, plus(X, Z))
35. plus(X, minus(Y, Z)) -> minus(plus(X, Y), Z)
36. minus(plus(X, Y), X) -> Y
37. times(X, times(Y, Z)) <-> times(Y, times(X, Z))
38. times(X, times(X, Y)) = times(pow(X, 2), Y)
39. times(X, plus(Y, 1)) = plus(X, times(X, Y))
40. times(X, pow(X, Y)) -> pow(X, plus(Y, 1))
41. pow(0, plus(X, 1)) -> 0
42. pow(0, 0) -> 0
43. pow(0, X) -> 0
44. pow(1, plus(2, 1)) -> 1
45. pow(X, plus(Y, Y)) = pow(pow(X, Y), 2)
46. pow(1, plus(2, 2)) -> 1
47. minus(minus(0, X), Y) -> minus(0, plus(X, Y))
48. minus(plus(X, Y), Y) -> X
49. plus(minus(0, X), Y) -> minus(Y, X)
50. minus(minus(X, 1), X) -> -1
51. times(X, plus(1, 1)) = plus(X, X)
52. pow(1, plus(X, 2)) -> pow(1, X)
53. pow(1, 0) -> 1
54. minus(0, plus(X, 1)) -> minus(-1, X)
55. pow(X, plus(1, 1)) -> pow(X, 2)
56. pow(1, plus(X, 1)) -> pow(1, X)
57. pow(1, -1) -> 1
58. minus(minus(X, 1), -1) -> X
59. minus(0, -1) -> 1
60. plus(X, 1) -> minus(X, -1)
61. plus(1, X) -> minus(X, -1)
62. plus(minus(X, Y), Z) -> minus(plus(X, Z), Y)
63. minus(minus(X, Y), Z) -> minus(X, plus(Y, Z))
64. minus(X, plus(X, Y)) -> minus(0, Y)
65. times(X, times(Y, X)) = times(Y, pow(X, 2))
66. minus(0, minus(0, X)) -> X
67. times(X, pow(Y, 2)) = times(Y, times(Y, X))
68. plus(X, times(X, Y)) = times(X, minus(Y, -1))
69. times(X, minus(Y, -1)) = plus(X, times(Y, X))
70. times(X, minus(X, -1)) -> plus(X, pow(X, 2))
71. minus(X, minus(0, Y)) -> plus(X, Y)
72. minus(X, minus(X, -1)) -> -1
73. plus(X, X) = times(X, minus(1, -1))
74. minus(X, minus(X, 1)) -> 1
75. minus(0, minus(X, -1)) -> minus(-1, X)
76. pow(1, plus(2, X)) -> pow(1, X)
77. pow(1, minus(X, -1)) -> pow(1, X)
78. pow(1, minus(2, 1)) -> 1
79. pow(1, minus(-1, 1)) -> 1
80. minus(X, plus(Y, X)) -> minus(0, Y)
81. times(minus(X, -1), Y) = plus(Y, times(Y, X))
82. plus(X, times(Y, X)) = times(minus(Y, -1), X)
83. times(X, minus(0, Y)) -> minus(0, times(X, Y))
84. times(minus(0, X), Y) -> minus(0, times(X, Y))
85. minus(X, minus(X, Y)) -> Y
86. minus(0, minus(X, Y)) -> minus(Y, X)
87. pow(1, minus(0, X)) -> pow(1, minus(2, X))
88. pow(1, minus(1, X)) -> pow(1, minus(2, X))
89. times(minus(1, -1), X) = plus(X, X)
90. pow(1, minus(X, 1)) -> pow(1, X)
91. minus(-1, minus(X, 1)) -> minus(0, X)
92. pow(X, minus(1, -1)) -> pow(X, 2)
93. pow(minus(0, X), 2) -> pow(X, 2)
94. minus(plus(X, Y), Z) -> minus(X, minus(Z, Y))
95. plus(times(X, Y), times(Y, Z)) -> times(Y, plus(X, Z))
96. times(X, minus(Y, 1)) = minus(times(X, Y), X)
97. plus(times(X, Y), times(Z, X)) -> times(X, plus(Y, Z))
98. times(X, plus(Y, Y)) = times(Y, plus(X, X))
99. times(X, plus(Y, Y)) = times(plus(X, X), Y)
100. minus(0, plus(X, X)) = times(X, minus(-1, 1))

Gave up on reaching the given resource limit.
Here is the final rewrite system:
  plus(X, X) = times(X, minus(1, -1))
  plus(X, Y) <-> plus(Y, X)
  plus(X, -1) -> minus(X, 1)
  plus(X, 0) -> X
  plus(X, 1) -> minus(X, -1)
  plus(-1, X) -> minus(X, 1)
  plus(0, X) -> X
  plus(1, X) -> minus(X, -1)
  times(X, X) -> pow(X, 2)
  times(X, Y) <-> times(Y, X)
  times(X, -1) -> minus(0, X)
  times(X, 0) -> 0
  times(X, 1) -> X
  times(-1, X) -> minus(0, X)
  times(0, X) -> 0
  times(1, X) -> X
  minus(X, X) -> 0
  minus(X, 0) -> X
  minus(0, -1) -> 1
  minus(0, 1) -> -1
  pow(X, 1) -> X
  pow(-1, 2) -> 1
  pow(0, X) -> 0
  pow(1, -1) -> 1
  pow(1, 0) -> 1
  pow(1, 2) -> 1
  ifeq(X, X, Y, Z) -> Y
  plus(X, plus(Y, Z)) <-> plus(Y, plus(X, Z))
  plus(X, times(X, Y)) = times(X, minus(Y, -1))
  plus(X, minus(Y, Z)) -> minus(X, minus(Z, Y))
  plus(X, times(Y, X)) = times(minus(Y, -1), X)
  plus(plus(X, Y), Z) -> plus(X, plus(Y, Z))
  plus(minus(X, Y), Z) -> minus(X, minus(Y, Z))
  times(X, plus(Y, Y)) = times(plus(X, X), Y)
  times(X, times(X, Y)) = times(pow(X, 2), Y)
  times(X, times(Y, Z)) <-> times(Y, times(X, Z))
  times(X, minus(X, -1)) -> plus(X, pow(X, 2))
  times(X, minus(Y, -1)) = plus(X, times(Y, X))
  times(X, minus(Y, 1)) = minus(times(X, Y), X)
  times(X, minus(0, Y)) -> minus(0, times(X, Y))
  times(X, pow(X, Y)) -> pow(X, minus(Y, -1))
  times(X, plus(Y, Y)) = times(Y, plus(X, X))
  times(X, pow(Y, 2)) = times(Y, times(Y, X))
  times(times(X, Y), Z) -> times(X, times(Y, Z))
  times(minus(0, X), Y) -> minus(0, times(X, Y))
  times(minus(1, -1), X) = plus(X, X)
  minus(X, plus(Y, X)) -> minus(0, Y)
  minus(X, minus(X, Y)) -> Y
  minus(X, minus(0, Y)) -> plus(X, Y)
  minus(-1, minus(X, 1)) -> minus(0, X)
  minus(0, plus(X, X)) = times(X, minus(-1, 1))
  minus(0, minus(X, Y)) -> minus(Y, X)
  minus(plus(X, Y), Z) -> minus(X, minus(Z, Y))
  minus(minus(X, Y), Z) -> minus(X, plus(Y, Z))
  pow(X, plus(Y, Y)) = pow(pow(X, Y), 2)
  pow(X, minus(1, -1)) -> pow(X, 2)
  pow(1, plus(X, 2)) -> pow(1, X)
  pow(1, plus(2, X)) -> pow(1, X)
  pow(1, minus(X, -1)) -> pow(1, X)
  pow(1, minus(X, 1)) -> pow(1, X)
  pow(1, minus(0, X)) -> pow(1, minus(2, X))
  pow(1, minus(1, X)) -> pow(1, minus(2, X))
  pow(minus(0, X), 2) -> pow(X, 2)
  plus(times(X, Y), times(X, Z)) -> times(X, plus(Y, Z))
  plus(times(X, Y), times(Z, X)) -> times(X, plus(Y, Z))
  plus(times(X, Y), times(Y, Z)) -> times(Y, plus(X, Z))
  times(pow(X, Y), pow(X, Z)) -> pow(X, plus(Y, Z))
  ifeq(neq(X, 0), true2, pow(X, 0), 1) -> 1
  ifeq(neq(X, 0), true2, div(X, X), 1) -> 1
  ifeq(neq(X, 0), true2, pow(X, -1), div(1, X)) -> div(1, X)
  ifeq(neq(X, 0), true2, times(X, div(1, X)), 1) -> 1
  ifeq(neq(X, 0), true2, times(Y, pow(X, -1)), div(Y, X)) -> div(Y, X)

RESULT: GaveUp (couldn't solve the problem).
